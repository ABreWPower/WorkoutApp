# Tables that need to be created
# user, workout, exercise, equipment, musclegroup, workoutlog, workoutlogexercise

type User {
  id: ID!
  name: String!
  email: String
  avatar: String
}

type Workout {
  id: ID!
  name: String!
  picture: String
  description: String
  user: User
  duration: Int
  difficulty: Int
  equipment: [Equipment]
  exercises: [Exercise]
}

type Exercise {
  id: ID!
  name: String!
  video: String
  picture: String
  instructions: String
  difficulty: Int
  musclegroups: [MuscleGroup]
  reps: Int
  duration: Int
  equipment: [Equipment]
}

type Equipment {
  id: ID!
  name: String!
  icon: String
}

type MuscleGroup {
  id: ID!
  name: String!
  picture: String
}

type WorkoutLog {
  id: ID!
  user: User!
  workout: Workout!
  totalduration: Int
  starteddatetime: Int
  wlexercises: [WorkoutLogExercise]
}

type WorkoutLogExercise {
  id: ID!
  workoutlog: WorkoutLog
  exercise: Exercise!
  sets: Int
  reps: Int
  duration: Int
  rest: Int
  weight: Int
  actualduration: Int
}


type Query {
  users: [User]
  workouts: [Workout]
  equipment: [Equipment]
  musclegroups: [MuscleGroup]
  exercises: [Exercise]
  workoutlogs: [WorkoutLog]
  workoutlogexercises: [WorkoutLogExercise]
}


type Mutation {
  setupdb(idk: String): User

#   addUser(name: String!, email: String, avatar: String): User
#   updateUser(id: ID!, name: String, email: String, avatar: String): User

#   addWorkout(name: String!, picture: String, description: String, user: Int, exercises: [Exercise]): Workout # Need to do voodoo magic to calculate duration, difficulty, and equipment needed
#   updateWorkout(id: ID!, name: String, picture: String, description: String, user: Int, exercises: [Exercise]): Workout # Need to do voodoo magic to calculate duration, difficulty, and equipment needed

#   addExercise(name: String!, video: String, picture: String, instructions: String, difficulty: String, musclegroups: [MuscleGroup], reps: Int, duration: Int, equipment: [Equipment]): Exercise
#   updateExercise(id: ID!, name: String, video: String, picture: String, instructions: String, difficulty: String, musclegroups: [MuscleGroup], reps: Int, duration: Int, equipment: [Equipment]): Exercise

#   addEquipment(name: String!, icon: String): Equipment
#   updateEquipment(id: ID!, name: String, icon: String): Equipment

#   addMuscleGroup(name: String!, picture: String): MuscleGroup
#   updateMuscleGroup(id: ID!, name: String, picture: String): MuscleGroup

#   addWorkoutLog(user: Int, workout: Workout!, totalduration: Int, starteddatetime: Int, wlexercises: [WorkoutLogExercise]): WorkoutLog
#   updateWorkoutLog(id: ID!, user: Int, workout: Workout, totalduration: Int, starteddatetime: Int, wlexercises: [WorkoutLogExercise]): WorkoutLog
  
#   addWorkoutLogExercise(workoutlog: Int, exercise: Exercise!, sets: Int, reps: Int, duration: Int, rest: Int, weight: Int, actualduration: Int): WorkoutLogExercise
#   updateWorkoutLogExercise(id: ID!, workoutlog: Int, exercise: Exercise!, sets: Int, reps: Int, duration: Int, rest: Int, weight: Int, actualduration: Int): WorkoutLogExercise
}
