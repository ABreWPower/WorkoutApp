# Tables that need to be created
# user, workout, exercise, equipment, musclegroup, workoutlog, workoutlogexercise

type User {
  id: ID!
  name: String!
  email: String
  avatar: String
}

type Workout {
  id: ID!
  name: String!
  picture: String
  description: String
  user: User
  duration_calculated: Int
  difficulty: Int
  equipment: [Equipment]
  exercises: [Exercise]
}

type Exercise {
  id: ID!
  name: String!
  video: String
  picture: String
  instructions: String
  difficulty: Int
  musclegroups: [MuscleGroup]
  reps: Int
  duration: Int
  duration_calculated: Int
  equipment: [Equipment]
  sets: Int
  rest: Int
}

input WorkoutExerciseInput {
  id: Int!
  reps: Int
  sets: Int
  duration: Int
  rest: Int
  sort: Int
}

type Equipment {
  id: ID!
  name: String!
  icon: String
}

type MuscleGroup {
  id: ID!
  name: String!
  picture: String
}

type WorkoutLog {
  id: ID!
  workout: Workout
  user: User
  exerciselogs: [ExerciseLog]
  span: Int
  actualspan: Int
  datestarted: String
  datecompleted: String
  completed: Boolean
}

type ExerciseLog {
  id: ID!
  workoutlog: WorkoutLog
  exercise: Exercise
  sets: Int
  reps: Int
  duration: Int
  rest: Int
  weight: Int
  span: Int
  actualspan: Int
  datestarted: String
  datecompleted: String
  completed: Boolean
}

input ExerciseLogInput {
  exerciseid: Int!
  sets: Int
  reps: Int
  duration: Int
  rest: Int
  weight: Int
}

type Query {
  users: [User]
  workouts(id: ID): [Workout]
  equipment: [Equipment]
  musclegroups: [MuscleGroup]
  exercises(id: ID): [Exercise]
  workoutlogs(id: ID): [WorkoutLog]
}


type Mutation {
  addUser(name: String!, email: String, avatar: String): User

  addWorkout(name: String!, picture: String, description: String, user: Int, exercises: [WorkoutExerciseInput]): Workout
  updateWorkout(id: Int!, name: String!, picture: String, description: String, user: Int, exercises: [WorkoutExerciseInput]): Workout

  addExercise(name: String!, video: String, picture: String, instructions: String, difficulty: Int, musclegroups: [Int], reps: Int, duration: Int, equipment: [Int]): Exercise
  updateExercise(id: Int!, name: String!, video: String, picture: String, instructions: String, difficulty: Int, musclegroups: [Int], reps: Int, duration: Int, equipment: [Int]): Exercise

  startWorkoutLog(workoutid: Int!, exerciselogs: [ExerciseLogInput]!): WorkoutLog
  endWorkoutLog(id: Int!): WorkoutLog

  startExerciseLog(id: Int!): ExerciseLog  
  endExerciseLog(id: Int!, span: Int): ExerciseLog
}
