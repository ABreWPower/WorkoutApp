{"version":3,"sources":["webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue-onsenui/dist/vue-onsenui.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/onsenui/js/onsenui.js"],"names":["global","emptyObject","Object","freeze","isUndef","v","undefined","isDef","isTrue","isPrimitive","value","isObject","obj","_toString","prototype","toString","isPlainObject","call","isRegExp","isValidArrayIndex","val","n","parseFloat","String","Math","floor","isFinite","isPromise","then","catch","Array","isArray","JSON","stringify","toNumber","isNaN","makeMap","str","expectsLowerCase","map","create","list","split","i","length","toLowerCase","isBuiltInTag","isReservedAttribute","remove","arr","item","index","indexOf","splice","hasOwnProperty","hasOwn","key","cached","fn","cache","camelizeRE","camelize","replace","_","c","toUpperCase","capitalize","charAt","slice","hyphenateRE","hyphenate","bind","Function","ctx","boundFn","a","l","arguments","apply","_length","toArray","start","ret","extend","to","_from","toObject","res","noop","b","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","e","Date","getTime","keysA","keys","keysB","looseIndexOf","once","called","this","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","silent","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","async","_lifecycleHooks","unicodeRegExp","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","bailRE","RegExp","_isServer","hasProto","inBrowser","window","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","test","isIE9","isEdge","isIOS","isFF","match","nativeWatch","watch","supportsPassive","opts","get","addEventListener","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","set","has","add","clear","warn","uid","Dep","id","subs","addSub","sub","push","removeSub","depend","target","addDep","notify","update","targetStack","pushTarget","popTarget","pop","VNode","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","parent","raw","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","defineProperties","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","forEach","method","original","args","len","inserted","result","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","src","vmCount","__proto__","copyAugment","walk","observe","asRootData","isExtensible","_isVue","defineReactive$$1","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","del","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","hooks","dedupeHooks","mergeAssets","hook","type","key$1","props","methods","inject","computed","provide","defaultStrat","mergeOptions","options","normalizeProps","normalized","normalizeInject","dirs","directives","def$$1","normalizeDirectives","_base","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","default","$options","_props","getType","getPropDefaultValue","prevShouldObserve","functionTypeCheckRE","isSameType","expectedTypes","handleError","err","info","cur","$parent","errorCaptured","globalHandleError","invokeWithErrorHandling","handler","_handled","logError","console","error","timerFunc","isUsingMicroTask","callbacks","pending","flushCallbacks","copies","Promise","p","resolve","setTimeout","MutationObserver","setImmediate","counter","observer","textNode","document","createTextNode","characterData","nextTick","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","name","passive","once$$1","capture","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","checkProp","hash","altKey","preserve","normalizeChildren","normalizeArrayChildren","nestedIndex","lastIndex","last","isTextNode","shift","_isVList","resolveInject","provideKey","source","_provided","provideDefault","resolveSlots","slots","attrs","slot","name$1","isWhitespace","normalizeScopedSlots","normalSlots","prevSlots","hasNormalSlots","isStable","$stable","$key","_normalized","$hasNormal","normalizeScopedSlot","key$2","proxyNormalSlot","proxy","renderList","render","iterator","next","done","renderSlot","fallbackRender","bindObject","nodes","scopedSlotFn","$scopedSlots","$slots","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","loop","domProps","camelizedKey","hyphenatedKey","$event","renderStatic","isInFor","_staticTrees","tree","markStatic","staticRenderFns","_renderProxy","markOnce","markStaticNode","bindObjectListeners","existing","ours","resolveScopedSlots","hasDynamicKeys","contentHashKey","bindDynamicKeys","baseObj","values","prependModifier","symbol","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","_d","_p","FunctionalRenderContext","contextVm","this$1","_original","isCompiled","_compiled","needNormalization","listeners","injections","scopedSlots","_scopeId","_c","d","createElement","cloneAndMarkFunctionalResult","renderContext","clone","mergeProps","componentVNodeHooks","init","hydrating","_isDestroyed","keepAlive","mountedNode","prepatch","_isComponent","_parentVnode","inlineTemplate","createComponentInstanceForVnode","activeInstance","$mount","oldVnode","parentVnode","renderChildren","newScopedSlots","oldScopedSlots","hasDynamicScopedSlot","needsForceUpdate","_renderChildren","$vnode","_vnode","$attrs","$listeners","propKeys","_propKeys","oldListeners","_parentListeners","updateComponentListeners","$forceUpdate","updateChildComponent","insert","_isMounted","callHook","_inactive","activatedChildren","activateChildComponent","destroy","deactivateChildComponent","direct","_directInactive","isInInactiveTree","$children","$destroy","hooksToMerge","createComponent","baseCtor","cid","factory","errorComp","resolved","owner","currentRenderingInstance","owners","loading","loadingComp","sync","timerLoading","timerTimeout","$on","forceRender","renderCompleted","clearTimeout","ensureCtor","reject","reason","component","delay","timeout","resolveAsyncComponent","createAsyncPlaceholder","resolveConstructorOptions","model","callback","transformModel","extractPropsFromVNodeData","functional","vnodes","createFunctionalComponent","nativeOn","abstract","toMerge","_merged","mergeHook$1","installComponentHooks","f1","f2","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","is","simpleNormalizeChildren","pre","applyNS","force","style","class","registerDeepBindings","_createElement","comp","base","__esModule","toStringTag","getFirstComponentChild","remove$1","$off","_target","onceHandler","setActiveInstance","prevActiveInstance","handlers","j","_hasHookEvent","$emit","queue","waiting","flushing","currentFlushTimestamp","getNow","now","createEvent","timeStamp","flushSchedulerQueue","watcher","sort","before","run","activatedQueue","updatedQueue","callActivatedHooks","_watcher","callUpdatedHooks","emit","uid$2","Watcher","expOrFn","isRenderWatcher","_watchers","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","path","segments","parsePath","cleanupDeps","tmp","queueWatcher","oldValue","evaluate","teardown","_isBeingDestroyed","sharedPropertyDefinition","sourceKey","initState","propsOptions","isRoot","initProps","initMethods","_data","getData","initData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","initComputed","createWatcher","initWatch","shouldCache","createComputedGetter","createGetterInvoker","$watch","uid$3","super","superOptions","modifiedOptions","modified","latest","sealed","sealedOptions","resolveModifiedOptions","extendOptions","components","Vue","_init","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","constructor","Comp","initProps$1","initComputed$1","mixin","use","getComponentName","matches","pattern","pruneCache","keepAliveInstance","filter","entry","pruneCacheEntry","current","_uid","vnodeComponentOptions","_componentTag","initInternalComponent","_self","$root","$refs","initLifecycle","_events","initEvents","parentData","initRender","initInjections","initProvide","el","initMixin","dataDef","propsDef","$set","$delete","immediate","stateMixin","hookRE","$once","i$1","cbs","eventsMixin","_update","prevEl","$el","prevVnode","restoreActiveInstance","__patch__","__vue__","lifecycleMixin","$nextTick","_render","ref","renderMixin","patternTypes","builtInComponents","KeepAlive","include","exclude","Number","cacheVNode","vnodeToCache","keyToCache","parseInt","created","destroyed","mounted","updated","configDef","util","defineReactive","delete","observable","plugin","installedPlugins","_installedPlugins","unshift","install","initUse","initMixin$1","definition","initAssetRegisters","initGlobalAPI","ssrContext","version","acceptValue","attr","isEnumeratedAttr","isValidContentEditableValue","convertEnumeratedValue","isFalsyAttrValue","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","genClassForVnode","parentNode","childNode","mergeClassData","staticClass","dynamicClass","stringifyClass","renderClass","stringified","stringifyArray","stringifyObject","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","isTextInputType","query","selected","querySelector","nodeOps","tagName","multiple","setAttribute","createElementNS","namespace","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","typeA","typeB","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldArg","arg","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","join","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","removeAttribute","isInPre","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","chr","index$1","expressionPos","expressionEndPos","klass","validDivisionCharRE","parseFilters","exp","prev","filters","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","lastFilterIndex","trim","pushFilter","wrapFilter","baseWarn","msg","range","pluckModuleFunction","modules","m","addProp","dynamic","rangeSetItem","plain","addAttr","dynamicAttrs","addRawAttr","attrsMap","attrsList","addDirective","isDynamicArg","prependModifierMarker","addHandler","important","events","right","middle","native","nativeEvents","newHandler","getRawBindingAttr","rawAttrsMap","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","getAndRemoveAttrByRegex","end","genComponentModel","number","valueExpression","assignment","genAssignmentCode","lastIndexOf","eof","isStringStart","parseString","parseBracket","parseModel","inBracket","stringQuote","target$1","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","createOnceHandler$1","remove$2","useMicrotaskFix","add$1","attachedTimestamp","_wrapper","currentTarget","ownerDocument","updateDOMListeners","change","normalizeEvents","svgContainer","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","innerHTML","firstChild","checkVal","composing","notInFocus","activeElement","isNotInFocusAndDirty","_vModifiers","isDirtyWithModifiers","parseStyleText","cssText","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","checkChild","styleData","getStyle","whitespaceRE","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","patch","backend","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","isReactivated","initComponent","innerNode","activate","reactivateComponent","setScope","createChildren","invokeCreateHooks","pendingInsert","isPatchable","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","childElm","createRmCb","findIdxInOld","oldCh","patchVnode","removeOnly","hydrate","newCh","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","updateChildren","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","childrenMatch","fullInvoke","isInitialPatch","isRealElement","hasAttribute","oldElm","patchable","i$2","createPatchFunction","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","initEvent","dispatchEvent","locateNode","platformDirectives","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","h","rawChild","isNotTextNode","isVShowDirective","Transition","hasParentTransition","_leaving","oldRawChild","oldChild","isSameChild","delayedLeave","moveClass","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","platformComponents","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","cloneNode","HTMLUnknownElement","HTMLElement","mountComponent","defaultTagRE","regexEscapeRE","buildRegex","delimiters","open","close","parseText","tagRE","tokenValue","tokens","rawTokens","exec","@binding","klass$1","staticKeys","transformNode","classBinding","genData","decoder","style$1","styleBinding","he","html","isUnaryTag","canBeLeftOpenTag","isNonPhrasingTag","attribute","dynamicArgAttribute","ncname","qnameCapture","startTagOpen","startTagClose","endTag","doctype","comment","conditionalComment","isPlainTextElement","reCache","decodingMap","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","&#39;","encodedAttr","encodedAttrWithNewLines","isIgnoreNewlineTag","shouldIgnoreFirstNewline","decodeAttr","shouldDecodeNewlines","re","warn$2","transforms","preTransforms","postTransforms","platformIsPreTag","platformMustUseProp","platformGetTagNamespace","onRE","dirRE","forAliasRE","forIteratorRE","stripParensRE","dynamicArgRE","argRE","bindRE","modifierRE","slotRE","lineBreakRE","whitespaceRE$1","decodeHTMLCached","emptySlotScopeToken","createASTElement","makeAttrsMap","parse","template","isPreTag","root","currentParent","stack","preserveWhitespace","whitespaceOption","whitespace","inPre","closeElement","element","trimEndingWhitespace","processed","processElement","if","elseif","else","addIfCondition","block","forbidden","findPrevElement","slotScope","slotTarget","lastNode","lastTag","expectHTML","isUnaryTag$$1","canBeLeftOpenTag$$1","endTagLength","stackedTag","reStackedTag","rest$1","all","chars","parseEndTag","textEnd","commentEnd","shouldKeepComment","substring","advance","conditionalEnd","doctypeMatch","endTagMatch","curIndex","startTagMatch","parseStartTag","handleStartTag","rest","unarySlash","unary","shouldDecodeNewlinesForHref","lowerCasedTag","lowerCasedTagName","parseHTML","comments","outputSourceRange","start$1","ieNSBug","ieNSPrefix","guardIESVGBug","processPre","processRawAttrs","processFor","processIf","processOnce","end$1","processKey","for","checkInFor","slotTargetDynamic","slotBinding","getSlotName","slotBinding$1","ref$1","dynamic$1","slotContainer","processSlotContent","slotName","processSlotOutlet","processComponent","syncGen","isDynamic","hasBindings","parseModifiers","camel","argMatch","processAttrs","inMatch","alias","iteratorMatch","iterator1","iterator2","parseFor","condition","ifConditions","cloneASTElement","modules$1","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","branch1","branch2","isStaticKey","isPlatformReservedTag","baseOptions","_warn","code","genSelect","valueBinding","trueValueBinding","falseValueBinding","genCheckboxModel","genRadioModel","needCompositionGuard","genDefaultModel","reduce","genStaticKeys","genStaticKeysCached","optimize","markStatic$1","static","isDirectChildOfTemplateFor","l$1","markStaticRoots","staticInFor","staticRoot","fnExpRE","fnInvokeRE","simplePathRE","esc","tab","space","up","down","keyNames","genGuard","modifierCode","stop","prevent","self","ctrl","alt","meta","genHandlers","prefix","staticHandlers","dynamicHandlers","handlerCode","genHandler","isMethodPath","isFunctionExpression","isFunctionInvocation","genModifierCode","keyModifier","genFilterCode","genKeyFilter","keyVal","keyCode","keyName","baseDirectives","wrapListeners","wrapData","cloak","CodegenState","dataGenFns","maybeComponent","onceId","generate","ast","state","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genChildren","genProps","bind$$1","genSlot","componentName","genData$2","genComponent","originalPreState","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","needRuntime","hasRuntime","gen","genDirectives","containsSlotChild","needsKey","generatedSlots","genScopedSlot","inlineRenderFns","genInlineTemplate","isLegacySyntax","reverseProxy","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","needsNormalization","getNormalizationType","genNode","transformSpecialNewlines","staticProps","dynamicProps","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","baseCompile","div","finalOptions","tips","tip","compileToFunctions","getShouldDecode","href","idToTemplate","mount","documentElement","outerHTML","container","getOuterHTML","__webpack_exports__","g","eval","module","exports","ons","ons__default","_interopDefaultLegacy","_props2","eventToHandler","string","_typeof","_extends","assign","toConsumableArray","arr2","_setupDBB","dbb","_callback","callParentHandler","runDefault","preventDefault","_isDBBSetup","deriveDBB","activated","deactivated","onDeviceBackButton","deriveEvents","unrecognizedListeners","_this","k","$ons","elements","r","_this2","_handlers","beforeDestroy","_this3","_toggleVisibility","visible","normalizedOptions","_teleport","_unmount","hide","hidable","hasOptions","selfProvider","dialogCancel","_this4","portal","modifier","normalizedModifier","acc","modelInput","_updateValue","_onModelEvent","modelCheckbox","checked","_event$target","newValue","included","modelRadio","_event$target2","VOnsToolbar","script","scope","moduleIdentifier","createInjector","createInjectorSSR","__file","__vue_normalize__$K","_h","VOnsBottomToolbar","__vue_normalize__$J","VOnsToolbarButton","__vue_normalize__$I","VOnsAlertDialogButton","__vue_normalize__$H","VOnsButton","__vue_normalize__$G","VOnsIcon","__vue_normalize__$F","VOnsCard","__vue_normalize__$E","VOnsList","__vue_normalize__$D","VOnsListItem","__vue_normalize__$C","expansion","onExpansion","expanded","action","VOnsListTitle","__vue_normalize__$B","VOnsListHeader","__vue_normalize__$A","VOnsRipple","__vue_normalize__$z","VOnsRow","__vue_normalize__$y","VOnsCol","__vue_normalize__$x","VOnsProgressBar","__vue_normalize__$w","VOnsProgressCircular","__vue_normalize__$v","VOnsCarouselItem","__vue_normalize__$u","VOnsSplitterMask","__vue_normalize__$t","VOnsSplitterContent","__vue_normalize__$s","VOnsSplitter","__vue_normalize__$r","VOnsSwitch","__vue_normalize__$q","VOnsCheckbox","__vue_normalize__$p","VOnsInput","__vue_normalize__$o","VOnsSearchInput","__vue_normalize__$n","VOnsRange","__vue_normalize__$m","VOnsRadio","__vue_normalize__$l","VOnsFab","__vue_normalize__$k","VOnsSpeedDialItem","__vue_normalize__$j","VOnsDialog","__vue_normalize__$i","VOnsActionSheet","__vue_normalize__$h","VOnsActionSheetButton","__vue_normalize__$g","VOnsModal","__vue_normalize__$f","VOnsToast","__vue_normalize__$e","VOnsPopover","__vue_normalize__$d","validator","Event","normalizedTarget","VOnsAlertDialog","__vue_normalize__$c","_vm","title","footer","click","VOnsSpeedDial","__vue_normalize__$b","onClick","toggleItems","_shouldUpdate","isOpen","_updateToggle","VOnsCarousel","__vue_normalize__$a","initial-index","onSwipe","postchange","activeIndex","getActiveIndex","setActiveIndex","VOnsTab","__vue_normalize__$9","page","tabbar","setActiveTab","setActive","VOnsTabbar","__vue_normalize__$8","prechange","detail","canceled","tabs","_tabKey","tabbarStyle","label","icon","getActiveTabIndex","VOnsBackButton","__vue_normalize__$7","pageStack","popPage","VOnsNavigator","__vue_normalize__$6","postpop","_checkSwipe","onsNavigatorProps","required","isReady","_ready","_findScrollPage","nextPage","_contentElement","_ons","_util","getTopPage","_eachPage","_reattachPage","pageElement","position","restoreScroll","_isShown","_redetachPage","_destroy","_animate","_ref","lastLength","currentLength","lastTopPage","currentTopPage","pushedOptions","onsNavigatorOptions","isReattached","parentElement","visibility","_pushPage","leavePage","_canceled","_popPage","_replacePage","lastChild","after","propWasMutated","scrollElement","scrollValue","scrollTop","_pageStackUpdate","_pageStackUpdate2","updateBackButton","VOnsSplitterSide","__vue_normalize__$5","VOnsLazyRepeat","__vue_normalize__$4","renderItem","calculateItemHeight","provider","_setup","delegate","_internal","LazyRepeatDelegate","createItemContent","destroyItem","countItems","LazyRepeatProvider","refresh","_lazyRepeatProvider","VOnsSelect","__vue_normalize__$3","selectedValue","$$selectedVal","modelProp","modelEvent","VOnsSegment","__vue_normalize__$2","active-index","getActiveButtonIndex","setActiveButton","VOnsPullHook","__vue_normalize__$1","onAction","onPull","VOnsPage","__vue_normalize__","onInfiniteScroll","infiniteScroll","t","setup","__webpack_require__","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","browser","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","classCallCheck","instance","Constructor","TypeError","createClass","descriptor","protoProps","object","receiver","desc","getPrototypeOf","inherits","subClass","superClass","setPrototypeOf","objectWithoutProperties","possibleConstructorReturn","ReferenceError","NativeHTMLElement","Platform","_selectedPlatform","_ignorePlatformSelect","readyState","cordova","phonegap","PhoneGap","isIPhone","screen","width","height","isIPadOS","forceActualPlatform","_getSelectedPlatform","device","ver","maxTouchPoints","ua","standalone","lte9","webkit","messageHandlers","indexedDB","opera","InstallTrigger","safari","pushNotification","chrome","documentMode","isAndroid","isWP","isIPad","isIPod","createCommonjsModule","customElements","forcePolyfill","_global","__g","_core","core","__e","_isObject","it","_anObject","_fails","_descriptors","document$1","_domCreate","_ie8DomDefine","_toPrimitive","S","valueOf","dP","_objectDp","f","O","P","Attributes","_propertyDesc","bitmap","_hide","_has","px","random","_shared","store","copyright","_functionToString","_redefine","SRC","TPL","inspectSource","safe","isFunction","_aFunction","_ctx","that","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","IS_BIND","B","expProto","U","W","R","_export","_objectPie","propertyIsEnumerable","_cof","_iobject","_defined","_toIobject","gOPD","_objectGopd","check","proto","_setProto","buggy","_wks","_Symbol","USE_SYMBOL","TAG","ARG","_classof","T","tryGet","callee","IS_INCLUDES","ceil","_toInteger","_iterators","min","_toLength","min$1","shared","_sharedKey","arrayIndexOf","$this","fromIndex","_toAbsoluteIndex","IE_PROTO$1","_enumBugKeys","_objectKeys","names","_objectKeysInternal","_objectDps","Properties","document$2","_html","IE_PROTO","Empty","_createDict","iframeDocument","iframe","contentWindow","write","lt","_objectCreate","TAG$1","_setToStringTag","stat","IteratorPrototype","TO_STRING","_iterCreate","NAME","_toObject","IE_PROTO$2","ObjectProto","_objectGpo","ITERATOR","BUGGY","returnThis","_iterDefine","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","entries","$at","iterated","point","UNSCOPABLES","ArrayProto","_addToUnscopables","_iterStep","es6_array_iterator","Arguments","ITERATOR$1","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","_redefineAll","_anInstance","forbiddenField","_iterCall","ITERATOR$2","ArrayProto$1","_isArrayIter","ITERATOR$3","core_getIteratorMethod","getIteratorMethod","_forOf","BREAK","RETURN","iterable","step","iterFn","SPECIES","_meta","META","setDesc","FREEZE","preventExtensions","setMeta","w","KEY","NEED","fastKey","getWeak","onFreeze","_validateCollection","TYPE","dP$1","SIZE","getEntry","_collectionStrong","getConstructor","wrapper","IS_MAP","ADDER","C","callbackfn","setStrong","_setSpecies","ITERATOR$4","SAFE_CLOSING","_iterDetect","skipClosing","iter","setPrototypeOf$2","_collection","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","_inheritIfRequired","_collectionToJson","toJSON","_setCollectionOf","COLLECTION","of","A","_setCollectionFrom","mapping","mapFn","nextItem","Map","_isArray","SPECIES$1","_arraySpeciesCreate","_arrayMethods","$create","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","_objectGops","getOwnPropertySymbols","$assign","_objectAssign","K","aLen","getSymbols","isEnum","arrayFind","arrayFindIndex","id$1","uncaughtFrozenStore","UncaughtFrozenStore","findUncaughtFrozen","_collectionWeak","ufstore","InternalMap","each","NATIVE_WEAK_MAP","IS_IE11","ActiveXObject","$WeakMap","WeakMap","_createProperty","arrayLike","mapfn","reservedTagList","isValidCustomElementName","localName","reserved","validForm","isConnected","nativeValue","__CE_isImportDocument","Document","ShadowRoot","host","nextSiblingOrAncestorSibling","nextNode","walkDeepDescendantElements","visitedImports","Node","ELEMENT_NODE","importNode","import","shadowRoot","__CE_shadowRoot","_child","setPropertyUnchecked","destination","CustomElementState","custom","failed","CustomElementInternals","_localNameToDefinition","_constructorToDefinition","_patches","_hasPatches","listener","__CE_patched","__CE_state","connectedCallback","upgradeElement","disconnectedCallback","__CE_hasRegistry","__CE_documentLoadHandled","patchAndUpgradeTree","localNameToDefinition","constructionStack","__CE_definition","attributeChangedCallback","observedAttributes","__CE_isConnectedCallbackCalled","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","_handleMutations","childList","subtree","disconnect","mutations","addedNodes","Deferred","_promise","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","_flushPending","_unflushedLocalNames","_documentConstructionObserver","SyntaxError","adoptedCallback","getCallback","callbackValue","setDefinition","_flush","deferred","prior","toPromise","outer","inner","flush","define","whenDefined","polyfillWrapFlushCallback","Native","Document_createElement","Document_createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","Node_appendChild","Node_insertBefore","Node_removeChild","Node_replaceChild","replaceChild","Node_textContent","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","Element_removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","Element_removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","AlreadyConstructedMarker$1","AlreadyConstructedMarker","PatchParentNode","builtIn","_len","_key","connectedBefore","prepend","disconnectTree","connectTree","_len2","_key2","append","_i2","priorCustomElements","constructorToDefinition","_element","PatchHTMLElement","patchTree","PatchDocument","patch_textContent","baseDescriptor","assignedValue","TEXT_NODE","removedNodes","childNodesLength","refNode","DocumentFragment","insertedNodes","_nativeResult","nodeWasConnected","nativeResult","_nativeResult2","nodeToInsert","nodeToRemove","_nativeResult3","nodeToInsertWasConnected","thisIsConnected","addPatch","parts","PatchNode","patch_innerHTML","htmlString","removedElements","rawDiv","content","patch_insertAdjacentElement","baseMethod","where","wasConnected","insertedElement","_len3","_key3","replaceWith","_i3","PatchChildNode","PatchElement","customElements$1","JsMutationObserver","registrationsTable","setImmediateQueue","sentinel","func","postMessage","currentRecord","recordWithOldValue","isScheduled","scheduledObservers","uidCounter","ShadowDOMPolyfill","wrapIfNeeded","attributes","attributeOldValue","attributeFilter","characterDataOldValue","registration","registrations","removeListeners","Registration","nodes_","addListeners","records_","takeRecords","copyOfRecords","enqueue","record","records","recordToReplaceLast","selectRecord","dispatchCallbacks","addListeners_","removeListeners_","addTransientObserver","transientObservedNodes","removeTransientObservers","handleEvent","attrName","relatedNode","namespaceURI","getRecord","attributeName","attributeNamespace","attrChange","MutationEvent","ADDITION","prevValue","forEachAncestorAndObserverEnqueueRecord","getRecordWithOldValue","changedNode","previousSibling","_isPolyfilled","observers","o1","o2","uid_","anyNonEmpty","removeTransientObserversFor","callback_","MutationRecord","lastRecord","newRecord","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","attachTo","handle","addFromSetImmediateArguments","partiallyApplied","runIfPresent","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","onreadystatechange","attachEvent","clearImmediate","task","Viewport","ensureViewportElement","viewportElement","head","MicroEvent","fct","_fct","destObject","onsElements","OLink","util$1","styler","clearlist","_loop","autoStyleEnabled","modifiersMap","quiet","light","outline","cta","large--quiet","large--cta","noborder","tappable","platforms","android","elementName","hasModifier","newModifier","ios","removeModifier","addModifier","unlocked","getPlatform","mobileOS","getMobileOS","mapModifier","autoStyle","isEnabled","enable","disable","prepare","restoreModifier","ModifierUtil","makeDict","token","added","dict","diff","scheme","selector","targetElements","querySelectorAll","targetElement","findParent","applyDiffToClassList","applyDiffToElement","modifierToken","startsWith","substr","endsWith","unwrap","isObjectString","isArrayString","isQuotedString","originalString","processToken","parseObject","parseArray","nextToken","limit","nestedObject","isValidKey","readingKey","previousToken","errorPrefix","globals","fabOffset","_runOnActualPlatform","actualMobileOS","isWKWebView","opt","isGD","prepareQuery","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","findChild","until","isAttached","contains","hasAnyComponentAsParent","nodeName","getAllChildNodes","childEl","isPageControl","propagateAction","className","throw","createFragment","dst","arrayFrom","parseJSONObjectSafely","jsonString","failSafe","findFromPath","topPage","findToolbarPage","_canAnimateToolbar","triggerElementEvent","eventName","CustomEvent","bubbles","cancelable","modifierName","forceAutoStyle","newModifiers","toggleModifier","restoreClass","defaultClass","updateParentPosition","_parentUpdated","getPropertyValue","toggleAttribute","bindListeners","listenerNames","boundName","updateRipple","hasRipple","rippleElement","animationOptionsParse","isInteger","defer","promise","_console","internal$1","warningsDisabled","message","throwAbstract","throwMember","throwPageLoader","throwAnimator","iosPreventScroll","gd","clean","iosPageScrollFix","toggle","isValidGesture","gesture","distance","deltaTime","checkMissingImport","elementNames","error$1","pageAttributeExpression","_variables","defineVariable","overwrite","getVariable","removeVariable","getAllVariables","_parsePart","part","inInterpolation","currentIndex","_replaceToken","variable","rv","_replaceTokens","_parseExpression","getIOSDevice","isWebView","autoStatusBarFill","animationsDisabled","nullElement","isEnabledAutoStatusBarFill","normalizePageHTML","waitDOMContentLoaded","wrappedCallback","onReady","shouldFillStatusBar","isIOS7above","isIPhoneX","templateStore","_storage","templateId","getTemplateHTMLAsync","local","getElementById","xhr","XMLHttpRequest","onload","responseText","status","fragment","onerror","send","getPageHTMLAsync","pages","getPage","AnimatorFactory","_animators","animators","_baseClass","baseClass","_baseClassName","baseClassName","_animation","defaultAnimation","_animationOptions","defaultAnimationOptions","defaultAnimator","animator","animation","Animator","animationOpts","animationOptions","util$3","_domContentLoaded","_onDOMContentLoaded","addBackButtonListener","removeBackButtonListener","HandlerRepository","_store","_genId","dataset","deviceBackButtonHandlerId","deviceBackButtonDispatcher","DeviceBackButtonDispatcher","_isEnabled","_boundCallback","_dispatchDeviceBackButtonEvent","setListener","_captureTree","_findHandlerLeafElement","createTree","arrayOf","childElement","subTree","find","leftZ","zIndex","rightZ","dbbDispatcher","util$4","buildTransitionValue","timing","onceOnTransitionEnd","stopPropagation","_transitionEndEvents","vendorPrefix","_cssPropertyDict","z","upper","hasCssProperty","forceLayoutAtOnce","batchImmediate","concreateCallbacks","batchAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","transitionPropertyName","Event$1","Utils","Detection","PointerEvent","Animit","defaults","transitionQueue","lastStyleAttributeDict","play","startAnimation","saveStyle","wait","restoreStyle","build","seconds","transitionName","transitionValue","timeoutId","clearTransition","_dequeueTransition","_currentTransition","runAll","prefixed","createActualCssProps","GestureDetector","Instance","behavior","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","DOCUMENT","HAS_POINTEREVENTS","pointerEnabled","msPointerEnabled","HAS_TOUCHEVENTS","IS_MOBILE","NO_MOUSEEVENTS","CALCULATE_INTERVAL","EVENT_TYPES","DIRECTION_DOWN","DIRECTION_LEFT","DIRECTION_UP","DIRECTION_RIGHT","POINTER_MOUSE","POINTER_TOUCH","POINTER_PEN","EVENT_START","EVENT_MOVE","EVENT_END","EVENT_RELEASE","EVENT_TOUCH","READY","plugins","gestures","utils","dest","merge","inStr","inArray","hasParent","getCenter","touches","pageX","pageY","clientX","clientY","touch","getVelocity","deltaX","deltaY","x","abs","y","getAngle","touch1","touch2","atan2","PI","getDirection","getDistance","sqrt","getScale","getRotation","isVertical","direction","setPrefixedCss","prefixes","toCamelCase","toggleBehavior","falseFn","userSelect","onselectstart","ondragstart","preventMouseEvents","started","shouldDetect","types","onTouch","eventType","onTouchHandler","ev","triggerType","srcType","isPointer","isMouse","button","buttons","matchType","updatePointer","doDetect","reset","touchList","getTouchList","touchListLength","triggerChange","changedLength","changedTouches","evData","collectEventData","determineEventTypes","identifiers","identifier","pointerType","center","srcEvent","preventManipulation","stopDetect","pointers","touchlist","pointer","pointerEvent","pointerId","pt","MSPOINTER_TYPE_MOUSE","MSPOINTER_TYPE_TOUCH","MSPOINTER_TYPE_PEN","detection","previous","stopped","startDetect","inst","eventData","startEvent","lastEvent","lastCalcEvent","futureCalcEvent","lastCalcData","detect","extendEventData","instOptions","enabled","getCalculatedData","recalc","calcEv","calcData","velocity","angle","velocityX","velocityY","interimAngle","interimDirection","startEv","lastEv","scale","rotation","register","listenerOptions","eventStartHandler","eventHandlers","dispose","eh","triggered","Drag","dragMaxTouches","dragMinDistance","startCenter","dragDistanceCorrection","factor","dragLockToAxis","dragLockMinDistance","lastDirection","dragBlockVertical","dragBlockHorizontal","Gesture","timer","Hold","holdTimeout","holdThreshold","Release","Infinity","Swipe","swipeMinTouches","swipeMaxTouches","swipeVelocityX","swipeVelocityY","hasMoved","Tap","sincePrev","didDoubleTap","tapMaxDistance","tapMaxTime","doubleTapInterval","doubleTapDistance","tapAlways","Touch","preventMouse","Transform","transformMinScale","transformMinRotation","scaleThreshold","rotationThreshold","readyMap","queueMap","setContentReady","consumeQueue","contentReady","addCallback","isContentReady","changes","ToastQueue$1","ToastQueue","_setAttributes","_normalizeArguments","defaults$$1","messageHTML","buttonLabels","buttonLabel","param","primaryButtonIndex","notification","_createAlertDialog","inputString","isPrompt","inputType","defaultValue","_destroyDialog","dialog","onDialogCancel","maskColor","input","submitOnEnter","onkeypress","resolveValue","buttonElement","onclick","autofocus","strLength","focus","includes","setSelectionRange","alert","confirm","prompt","toast","originalHide","finish","_toast","orientation","_isPortrait","isPortrait","isLandscape","_onOrientationChange","_onResize","innerHeight","innerWidth","_installIsPortraitImplementation","nIter","interval","setInterval","clearInterval","softwareKeyboard","_visible","onShow","onHide","noPluginError","Keyboard","onshow","onhide","isVisible","generateId","DoorLock","_lockList","_waitList","_log","log","unlock","_unlock","_tryToFreeWaitList","isLocked","loadPage","unloadPage","unlockDeviceReady","PageLoader","loader","unloader","_loader","_unloader","_ref2","_ref2$params","defaultPageLoader","instantPageLoader","_ref3","ons$1","animit","_autoStyle","_readyLock","select","location","search","lock","readyError","ready","waitUnlock","setDefaultDeviceBackButtonListener","_defaultDeviceBackButtonHandler","disableDeviceBackButtonHandler","enableDeviceBackButtonHandler","fireDeviceBackButtonEvent","enableAutoStatusBarFill","disableAutoStatusBarFill","mockStatusBar","mock","disableAnimations","enableAnimations","_disableWarnings","_enableWarnings","disableAutoStyling","enableAutoStyling","disableIconAutoPrefix","Icon","setAutoPrefix","forcePlatformStyling","newPlatform","_platformUpdate","_updatePosition","preload","templates","link","createPopover","createDialog","createAlertDialog","openActionSheet","instanceOf","checkOptions","actionSheet","createDocumentFragment","buttonOptions","destructive","resolveLoadingPlaceholder","_resolveLoadingPlaceholder","_setupLoadingPlaceHolders","getCS","currentScript","scripts","getScriptPage","BaseElement","_getElementClass","_BaseElement","getElementClass","TemplateElement","Template","IfElement","_isAllowedPlatform","conditionalOrientation","currentOrientation","If","BaseAnimator","properties","extendedAnimator","newAnimator","iPhoneXPatch","isIPhoneXPortraitPatchActive","isIPhoneXLandscapePatchActive","getSafeAreaLengths","bottom","getSafeAreaDOMRect","safeAreaRect","ActionSheetAnimator","_BaseAnimator","_ref$timing","_ref$delay","_ref$duration","MDActionSheetAnimator","_ActionSheetAnimator","_ref2$timing","_ref2$delay","_ref2$duration","maskTiming","maskDuration","_mask","opacity","_sheet","IOSActionSheetAnimator","_ActionSheetAnimator2","_ref3$timing","_ref3$delay","_ref3$duration","liftAmount","clientHeight","BaseDialogElement","_doorLock","_cancel","_selfCamelName","_defaultDBB","_animatorFactory","_updateAnimatorFactory","shouldShow","_running","_setVisible","_util$triggerElementE","parseAnimationOptionsString","_toggleStyle","backgroundColor","_this5","_backButtonHandler","onModifierChanged","_scheme","_updateMask","createHandler",".action-sheet",".action-sheet-mask",".action-sheet-title","_animatorDict","none","ActionSheetElement","_BaseDialogElement","_compile","sheet","_title","mask","initModifier","_updateTitle","ActionSheet","BaseButtonElement","_defaultClassName","_icon","_updateRipple","_rippleOpt","_updateIcon","ActionSheetButtonElement","_BaseButtonElement","",".action-sheet-icon","ActionSheetButton","AlertDialogAnimator","AndroidAlertDialogAnimator","_AlertDialogAnimator","_dialog","IOSAlertDialogAnimator","_AlertDialogAnimator2","scheme$1",".alert-dialog",".alert-dialog-container",".alert-dialog-title",".alert-dialog-content",".alert-dialog-footer",".alert-dialog-footer--rowfooter",".alert-dialog-button--rowfooter",".alert-dialog-button--primal",".alert-dialog-button","ons-alert-dialog-button",".alert-dialog-mask",".text-input","_animatorDict$1","fade","AlertDialogElement","AlertDialog","AlertDialogButtonElement","AlertDialogButton","scheme$2",".back-button__icon",".back-button__label","BackButtonElement","_options","_boundOnClick","_onClick","size","background","BackButton","defaultClassName$1","scheme$3","BottomToolbarElement","BottomToolbar","ButtonElement","Button","scheme$4",".card__title",".card__content","CardElement","Card","scheme$5","CarouselItemElement","CarouselItem","directionMap","vertical","axis","t3d","horizontal","Swiper","FALSE","getElement","scrollHook","itemSize","getAutoScrollRatio","ratio","shouldBlock","onDragStart","onDrag","onDragEnd","onResize","_shouldFixScroll","swipeable","autoRefresh","initialized","_gestureDetector","_mutationObserver","updateSwipeable","updateAutoRefresh","_scroll","_offset","_lastActiveIndex","_updateLayout","_setupInitialIndex","setupResize","itemNumSize","_reset","round","targetSize","getInitialIndex","itemCount","_scrollTo","_setSwiping","scroll","maxScroll","_changeTo","count","shouldUpdate","shouldWatch","newSize","pointerEvents","isFirst","isOverScrollable","isLast","_ignoreDrag","consumed","consume","_canConsumeGesture","startX","distFromEdge","getBubbleWidth","_started","toggleBlocker","_continued","_getDelta","throttle","normalizedScroll","_normalizeScroll","_startMomentumScroll","_killOverScroll","_getVelocity","matchesDirection","dM","nextScroll","_getAutoScroll","swipe","killOverScroll","overScrollHook","_this6","lastActiveIndex","preChangeHook","postChangeHook","_this7","toFixed","_getTransform","offset","isAutoScrollable","lastScroll","scrollRatio","_targetSize","_itemNumSize","refreshHook","nextElementSibling","isCentered","_calculateItemSize","CarouselElement","_swiper","autoScrollRatio","overscrollable","centered","autoScroll","_onOverScroll","_onChange","_onRefresh","_onSwipe","updateItemSize","waitForAction","carousel","waitToReturn","itemSizeAttr","Carousel","ColElement","_updateWidth","flex","maxWidth","Col","DialogAnimator","AndroidDialogAnimator","_DialogAnimator","IOSDialogAnimator","_DialogAnimator2","bodyHeight","scheme$6",".dialog",".dialog-container",".dialog-mask","_animatorDict$2","slide","_DialogAnimator3","SlideDialogAnimator","_ref4","_ref4$timing","_ref4$delay","_ref4$duration","DialogElement","Dialog","defaultClassName$3","scheme$7",".fab__icon","FabElement","_show","_manuallyHidden","_toggle","translate","Fab","GestureDetectorElement","autoPrefix","IconElement","_cleanClassAttribute","_buildClassAndStyle2","_buildClassAndStyle","_parseAttr","md","lastIcon","lastModifier","_prefixIcon2","_prefixIcon","iconName","_prefixIcon3","removeProperty","fontSize","userDelegate","templateElement","_userDelegate","_templateElement","loadItemElement","updateItemContent","itemHeight","wrapperElement","_wrapperElement","_delegate","_insertIndex","_pageContent","_findPageContentElement","lastScrollTop","padding","_topPositions","_renderedItems","_unknownItemHeight","_addEventListeners","pageContent","_itemHeight","staticItemHeight","_getItemHeight","forceScrollDown","firstItemIndex","_firstItemRendered","_calculateRenderedHeight","forceFirstIndex","_removeAllElements","_ref$forceScrollDown","forceLastIndex","_checkItemHeight","isScrollUp","keep","_countItems","_calculateStartIndex","hasRenderFunction","_renderElement","_j","_removeElement","updateItem","lastItemIndex","_lastItemRendered","_recalculateTopPositions","_arguments","callNow","_debounce","_boundOnChange","_boundDoubleFireOnTouchend","_parentElement","_removeEventListeners","paddingTop","LazyRepeatElement","LazyRepeat","scheme$8","ListHeaderElement","ListHeader","scheme$9","ListTitleElement","ListTitle","ListItemAnimator","listItem","scheme$10",".list-item",".list-item__left",".list-item__center",".list-item__right",".list-item__label",".list-item__title",".list-item__subtitle",".list-item__thumbnail",".list-item__icon","_animatorDict$3","_ListItemAnimator","SlideListItemAnimator","_animateExpansion","shouldOpen","_animit","oldHeight","expandableContent","oldDisplay","_animit2","computedStyle","expansionOpenTransition","paddingBottom","iconOpenTransition","reverse","expandChevron","ListItemElement","toggleExpansion","_shouldIgnoreTap","showExpansion","hideExpansion","topContent","centerContent","_top","chevron","_expanding","_setupListeners","_originalBackgroundColor","tapped","_onTouch","_onRelease","_onDrag","touchStyle","boxShadow","ListItem","scheme$11","ListElement","List","INPUT_ATTRIBUTES","BaseInputElement","_boundDelegateEvent","_delegateEvent","_template","_setInputId","_updateBoundAttributes","_input","blur","toISOString","scheme$12",".text-input__label","InputElement","_BaseInputElement","_boundOnInput","_boundOnFocusin","_updateLabel","_updateLabelClass","_helper","innerText","Input","BaseCheckboxElement","scheme$13",".checkbox",".checkbox__input",".checkbox__checkmark","CheckboxElement","_BaseCheckboxElement","Checkbox","scheme$14",".radio-button",".radio-button__input",".radio-button__checkmark","RadioElement","Radio","scheme$15",".search-input","SearchInputElement","SearchInput","ModalAnimator","modal","FadeModalAnimator","_ModalAnimator","LiftModalAnimator","scheme$16","modal__content","_animatorDict$4","lift","ModalElement","Modal","SwipeReveal","elementHandler","getThreshold","getSide","handleGesture","gestureDetector","ignoreSwipe","_width","offsetWidth","_startDistance","_distance","isInitialState","delta","swipeMid","swipeMax","swipeMin","NavigatorAnimator","enterPage","IOSSwipeNavigatorAnimator","_NavigatorAnimator","_ref$durationRestore","durationRestore","_ref$durationSwipe","durationSwipe","_ref$timingSwipe","timingSwipe","optSwipe","optRestore","swipeShadow","isDragStart","unblock","backgroundMask","decomp","_decompose","_calculateDelta","shouldAnimateToolbar","_shouldAnimateToolbar","toolbar","_saveStyle","overflowElement","isSwiping","_dragStartSetup","swipeRatio","bottomToolbar","toolbarCenter","backButtonLabel","other","_savedStyle","save","restore","_restoreStyle","translate3d","IOSSlideNavigatorAnimator","_IOSSwipeNavigatorAni","_getToolbarElement","_getToolbarLeftItemsElement","_getToolbarRightItemsElement","excludeBackButton","_getToolbarCenterItemsElement","backButtonIcon","_getToolbarBackButtonIconElement","_getToolbarBackButtonLabelElement","_getContentElement","_getBackgroundElement","_getBottomToolbarElement","toolbars","enterToolbar","leaveToolbar","isMaterial","isTransparent","decomposition","pageRect","labelRect","enterPageTarget","leavePageTarget","enterPageDecomposition","leavePageDecomposition","popSwipe","IOSLiftNavigatorAnimator","IOSFadeNavigatorAnimator","MDSlideNavigatorAnimator","blackMaskOpacity","MDLiftNavigatorAnimator","maskClear","MDFadeNavigatorAnimator","_ref$timingPop","timingPop","NoneNavigatorAnimator","_animatorDict$5","slide-ios","slide-md","lift-ios","lift-md","fade-ios","fade-md","rewritables","navigatorElement","verifyPageElement","NavigatorElement","_isRunning","_initialized","_pageLoader","_pageMap","_page","_onDeviceBackButton","swipeAnimator","_swipe","previousElementSibling","area","isBB","animatorFactory","loaded","_getPageTarget","pushPage","_updateLastPageBackButton","_preparePageAndOptions","times","_removePages","unload","_emitPrePopEvent","_preparePageAndOption2","pageHTML","load","_emitPrePushEvent","pageLength","resolvedValue","_this8","_preparePageAndOption3","_normalizeIndex","_this9","_this10","_preparePageAndOption4","insertPage","newPage","_lastIndexOfPage","pageName","isCanceled","currentPage","cancel","_emitPreEvent","templateHTML","_this11","pageLoader","lastElementChild","Navigator","scheme$18",".toolbar__left",".toolbar__center",".toolbar__right","ToolbarElement","siblingBackground","siblingContent","setVisibility","_ensureToolbarItemElements","_ensureToolbarElement","Toolbar","defaultClassName$9","scheme$17",".page__content",".page__background","PageElement","_deriveHooks","_backgroundElement","_elementShouldBeMoved","_tryToFillStatusBar","onInit","backButton","overLimit","scrollHeight","_infiniteScrollLimit","_onInfiniteScroll","_loadingContent","onDestroy","_boundOnScroll","_onScroll","Page","PopoverAnimator","popover","_ref2$restore","animations","in","MDFadePopoverAnimator","_PopoverAnimator","_animateAll","_popover","IOSFadePopoverAnimator","_MDFadePopoverAnimato","scheme$19",".popover",".popover-mask",".popover__content",".popover__arrow","_animatorDict$6","positions","PopoverElement","_currentTarget","_positionPopover","_clearStyles","radius","_radius","contentElement","_content","margin","_margin","safeAreaLengths","targetRect","isMD","cover","parentDimensions","maxPositions","targetDistance","targetCenterDistanceFrom","_calculateDirections2","_calculateDirections","primaryDirection","primary","secondaryDirection","secondary","_currentDirection","sizeName","contentSize","targetAndArrowLength","primaryOffset","secondaryOffset","_arrow","arrow","Popover","scheme$20",".progress-bar",".progress-bar__primary",".progress-bar__secondary","INDET","ProgressBarElement","_isCompiled","_primary","_secondary","_updateDeterminate","barElement","ProgressBar","scheme$21",".progress-circular",".progress-circular__background",".progress-circular__primary",".progress-circular__secondary","template$1","INDET$1","ProgressCircularElement","per","ProgressCircular","STATE_INITIAL","throwType","PullHookElement","_onDragStart","_onDragEnd","_setState","lineHeight","_pageElement","disabled","tapY","maxY","_startScroll","_currentTranslation","th","thresholdHeight","_finish","_translateTo","animate","noEvent","lastState","pullHook","marginTop","_onPull","_dragLockDisabled","scrollToggle","gdToggle","_setStyle","_onAction","PullHook","scheme$22",".range__input",".range__focus-ring","RangeElement","_onMouseDown","_onMouseUp","_onTouchStart","_onTouchEnd","_onInput","_onDragstart","_onDragend","_updateDisabled","focusRing","_focusRing","backgroundSize","_ratio","Range","AnimatorCSS","_queue","_index","final","stopNext","speed","newDuration","remaining","speedUpTime","milliseconds","transitionProperty","_onStopAnimations","stopAnimations","scheme$23",".ripple__wave",".ripple__background","RippleElement","_onTap","_onHold","_animator","_wave","getElementsByClassName","_background","_getEffectSize","_center","_minR","_calculateCoords2","_calculateCoords","stopAll","ripple","_updateParent","_rippleAnimation","_holding","_parentNode","pn","Ripple","RowElement","Row","scheme$24",".segment__item",".segment__input",".segment__button","generateId$1","SegmentElement","_segmentId","_tabbar","_onTabbarPreChange","_setChecked","firstElementChild","_postChange","segmentItem","Segment","scheme$25",".select-input","INPUT_ATTRIBUTES$1","SelectElement","_deriveGetters","_select","sel","Select","scheme$26","SpeedDialItemElement","SpeedDialItem","scheme$27","SpeedDialElement","_itemShown","_updateDirection","inline","_fab","transitionDelay","_i4","_getTranslate","hideItems","totalDelay","showItems","SpeedDial","rewritables$1","SplitterContentElement","oldContent","SplitterContent","SplitterMaskElement","_sides","side","SplitterMask","SplitterAnimator$1","SplitterAnimator","sideElement","splitter","_side","_oppositeSide","clearMask","OverlaySplitterAnimator","_SplitterAnimator","minus","_animatorDict$7","overlay","PushSplitterAnimator","slidingElements","_slidingElements","_getSlidingElements","reveal","RevealSplitterAnimator","_setStyles","_unsetStyles","_generateBehindPageStyle","behindDistance","_getMaxWidth","menuStyle","SplitterElement","_onModeChange","_layout","_getSide","Splitter","CLOSED_STATE","rewritables$2","splitterSideElement","CollapseDetection","changeTarget","_orientation","_updateMode","_match","_queryResult","matchMedia","SplitterSideElement","_state","_lock","_collapseDetection","_animationOpt","closed","_mode","_isOtherSideOpen","deactivate","updateOptions","FINAL_STATE","_emitEvent","_updateAnimation","SplitterSide","scheme$28",".switch__input",".switch__handle",".switch__toggle","locations","material","SwitchElement","_lastTimeStamp","_locations","_startX","switch","isInteractive","_emitChangeEvent","defaultElementClass","_handle","_getPosition","previousValue","Switch","scheme$30",".tabbar__content",".tabbar__border",".tabbar","rewritables$3","tabbarElement","lerp","x0","x1","TabbarElement","_loadInactive","_getAutoScrollRatio","_onPreChange","_onPostChange","_tabbarBorder","_tabbarElement","_tabsRect","tabItem","_normalizeEvent","_event","prevTab","_autogrow","cs","filled","nextIndex","prevIndex","nextTab","setTabbarVisibility","isActive","isTop","_targetElement","Tabbar","scheme$29",".tabbar__button","TabElement","_button","_updateButtonContent","iconWrapper","fix","_hasLoaded","_loadedPage","pageTarget","parentTarget","dummyPage","_loadPageElement","Tab","ToastAnimator","FadeToastAnimator","_ToastAnimator","AscendToastAnimator","messageDelay","ascension","_getFabs","fab","LiftToastAnimator","FallToastAnimator","fallAmount","cleanUp","correctTop","scheme$31",".toast",".toast__message",".toast__button","_animatorDict$8","ascend","fall","ToastElement","Toast","ToolbarButtonElement","ToolbarButton","_onsLoaded","app","exitApp","_superSecretOns"],"mappings":"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","file":"static/js/vendor.a81c1fa435bfd6fea0e5.js","sourcesContent":["/*!\n * Vue.js v2.6.14\n * (c) 2014-2021 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\nfunction isPromise (val) {\n  return (\n    isDef(val) &&\n    typeof val.then === 'function' &&\n    typeof val.catch === 'function'\n  )\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured',\n  'serverPrefetch'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * unicode letters used for parsing html tags, component names and property paths.\n * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname\n * skipping \\u10000-\\uEFFFF due to it freezing up PhantomJS\n */\nvar unicodeRegExp = /a-zA-Z\\u00B7\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u203F-\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD/;\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = new RegExp((\"[^\" + (unicodeRegExp.source) + \".$_\\\\d]\"));\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\nvar isPhantomJS = UA && /phantomjs/.test(UA);\nvar isFF = UA && UA.match(/firefox\\/(\\d+)/);\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm;\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// The current target watcher being evaluated.\n// This is globally unique because only one watcher\n// can be evaluated at a time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n\n  var keys = hasSymbol\n    ? Reflect.ownKeys(from)\n    : Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    // in case the object is already observed...\n    if (key === '__ob__') { continue }\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  var res = childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal;\n  return res\n    ? dedupeHooks(res)\n    : res\n}\n\nfunction dedupeHooks (hooks) {\n  var res = [];\n  for (var i = 0; i < hooks.length; i++) {\n    if (res.indexOf(hooks[i]) === -1) {\n      res.push(hooks[i]);\n    }\n  }\n  return res\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!new RegExp((\"^[a-zA-Z][\\\\-\\\\.0-9_\" + (unicodeRegExp.source) + \"]*$\")).test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'should conform to valid custom element name in html5 specification.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def$$1 = dirs[key];\n      if (typeof def$$1 === 'function') {\n        dirs[key] = { bind: def$$1, update: def$$1 };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n\n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i], vm);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  var haveExpectedTypes = expectedTypes.some(function (t) { return t; });\n  if (!valid && haveExpectedTypes) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;\n\nfunction assertType (value, type, vm) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    try {\n      valid = value instanceof type;\n    } catch (e) {\n      warn('Invalid prop type: \"' + String(type) + '\" is not a constructor', vm);\n      valid = false;\n    }\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\nvar functionTypeCheckRE = /^\\s*function (\\w+)/;\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(functionTypeCheckRE);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  // check if we need to specify expected value\n  if (\n    expectedTypes.length === 1 &&\n    isExplicable(expectedType) &&\n    isExplicable(typeof value) &&\n    !isBoolean(expectedType, receivedType)\n  ) {\n    message += \" with value \" + (styleValue(value, expectedType));\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + (styleValue(value, receivedType)) + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nvar EXPLICABLE_TYPES = ['string', 'number', 'boolean'];\nfunction isExplicable (value) {\n  return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.\n  // See: https://github.com/vuejs/vuex/issues/1505\n  pushTarget();\n  try {\n    if (vm) {\n      var cur = vm;\n      while ((cur = cur.$parent)) {\n        var hooks = cur.$options.errorCaptured;\n        if (hooks) {\n          for (var i = 0; i < hooks.length; i++) {\n            try {\n              var capture = hooks[i].call(cur, err, vm, info) === false;\n              if (capture) { return }\n            } catch (e) {\n              globalHandleError(e, cur, 'errorCaptured hook');\n            }\n          }\n        }\n      }\n    }\n    globalHandleError(err, vm, info);\n  } finally {\n    popTarget();\n  }\n}\n\nfunction invokeWithErrorHandling (\n  handler,\n  context,\n  args,\n  vm,\n  info\n) {\n  var res;\n  try {\n    res = args ? handler.apply(context, args) : handler.call(context);\n    if (res && !res._isVue && isPromise(res) && !res._handled) {\n      res.catch(function (e) { return handleError(e, vm, info + \" (Promise/async)\"); });\n      // issue #9511\n      // avoid catch triggering multiple times when nested calls\n      res._handled = true;\n    }\n  } catch (e) {\n    handleError(e, vm, info);\n  }\n  return res\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      // if the user intentionally throws the original error in the handler,\n      // do not log it twice\n      if (e !== err) {\n        logError(e, null, 'config.errorHandler');\n      }\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar isUsingMicroTask = false;\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using microtasks.\n// In 2.5 we used (macro) tasks (in combination with microtasks).\n// However, it has subtle problems when state is changed right before repaint\n// (e.g. #6813, out-in transitions).\n// Also, using (macro) tasks in event handler would cause some weird behaviors\n// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).\n// So we now use microtasks everywhere, again.\n// A major drawback of this tradeoff is that there are some scenarios\n// where microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690, which have workarounds)\n// or even between bubbling of the same event (#6566).\nvar timerFunc;\n\n// The nextTick behavior leverages the microtask queue, which can be accessed\n// via either native Promise.then or MutationObserver.\n// MutationObserver has wider support, however it is seriously bugged in\n// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n// completely stops working after triggering a few times... so, if native\n// Promise is available, we will use it:\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  timerFunc = function () {\n    p.then(flushCallbacks);\n    // In problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n  isUsingMicroTask = true;\n} else if (!isIE && typeof MutationObserver !== 'undefined' && (\n  isNative(MutationObserver) ||\n  // PhantomJS and iOS 7.x\n  MutationObserver.toString() === '[object MutationObserverConstructor]'\n)) {\n  // Use MutationObserver where native Promise is not available,\n  // e.g. PhantomJS, iOS7, Android 4.4\n  // (#6466 MutationObserver is unreliable in IE11)\n  var counter = 1;\n  var observer = new MutationObserver(flushCallbacks);\n  var textNode = document.createTextNode(String(counter));\n  observer.observe(textNode, {\n    characterData: true\n  });\n  timerFunc = function () {\n    counter = (counter + 1) % 2;\n    textNode.data = String(counter);\n  };\n  isUsingMicroTask = true;\n} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  // Fallback to setImmediate.\n  // Technically it leverages the (macro) task queue,\n  // but it is still a better choice than setTimeout.\n  timerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else {\n  // Fallback to setTimeout.\n  timerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    timerFunc();\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      // perf.clearMeasures(name)\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals. ' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns, vm) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, \"v-on handler\");\n      }\n    } else {\n      // return handler return value for single handlers\n      return invokeWithErrorHandling(fns, null, arguments, vm, \"v-on handler\")\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur, vm);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject)\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      // #6574 in case the inject object is observed...\n      if (key === '__ob__') { continue }\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  if (!children || !children.length) {\n    return {}\n  }\n  var slots = {};\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction normalizeScopedSlots (\n  slots,\n  normalSlots,\n  prevSlots\n) {\n  var res;\n  var hasNormalSlots = Object.keys(normalSlots).length > 0;\n  var isStable = slots ? !!slots.$stable : !hasNormalSlots;\n  var key = slots && slots.$key;\n  if (!slots) {\n    res = {};\n  } else if (slots._normalized) {\n    // fast path 1: child component re-render only, parent did not change\n    return slots._normalized\n  } else if (\n    isStable &&\n    prevSlots &&\n    prevSlots !== emptyObject &&\n    key === prevSlots.$key &&\n    !hasNormalSlots &&\n    !prevSlots.$hasNormal\n  ) {\n    // fast path 2: stable scoped slots w/ no normal slots to proxy,\n    // only need to normalize once\n    return prevSlots\n  } else {\n    res = {};\n    for (var key$1 in slots) {\n      if (slots[key$1] && key$1[0] !== '$') {\n        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);\n      }\n    }\n  }\n  // expose normal slots on scopedSlots\n  for (var key$2 in normalSlots) {\n    if (!(key$2 in res)) {\n      res[key$2] = proxyNormalSlot(normalSlots, key$2);\n    }\n  }\n  // avoriaz seems to mock a non-extensible $scopedSlots object\n  // and when that is passed down this would cause an error\n  if (slots && Object.isExtensible(slots)) {\n    (slots)._normalized = res;\n  }\n  def(res, '$stable', isStable);\n  def(res, '$key', key);\n  def(res, '$hasNormal', hasNormalSlots);\n  return res\n}\n\nfunction normalizeScopedSlot(normalSlots, key, fn) {\n  var normalized = function () {\n    var res = arguments.length ? fn.apply(null, arguments) : fn({});\n    res = res && typeof res === 'object' && !Array.isArray(res)\n      ? [res] // single vnode\n      : normalizeChildren(res);\n    var vnode = res && res[0];\n    return res && (\n      !vnode ||\n      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391\n    ) ? undefined\n      : res\n  };\n  // this is a slot using the new v-slot syntax without scope. although it is\n  // compiled as a scoped slot, render fn users would expect it to be present\n  // on this.$slots because the usage is semantically a normal slot.\n  if (fn.proxy) {\n    Object.defineProperty(normalSlots, key, {\n      get: normalized,\n      enumerable: true,\n      configurable: true\n    });\n  }\n  return normalized\n}\n\nfunction proxyNormalSlot(slots, key) {\n  return function () { return slots[key]; }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    if (hasSymbol && val[Symbol.iterator]) {\n      ret = [];\n      var iterator = val[Symbol.iterator]();\n      var result = iterator.next();\n      while (!result.done) {\n        ret.push(render(result.value, ret.length));\n        result = iterator.next();\n      }\n    } else {\n      keys = Object.keys(val);\n      ret = new Array(keys.length);\n      for (i = 0, l = keys.length; i < l; i++) {\n        key = keys[i];\n        ret[i] = render(val[key], key, i);\n      }\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallbackRender,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn('slot v-bind without argument expects an Object', this);\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes =\n      scopedSlotFn(props) ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  } else {\n    nodes =\n      this.$slots[name] ||\n      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n  return eventKeyCode === undefined\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        var hyphenatedKey = hyphenate(key);\n        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res,\n  // the following are added in 2.6\n  hasDynamicKeys,\n  contentHashKey\n) {\n  res = res || { $stable: !hasDynamicKeys };\n  for (var i = 0; i < fns.length; i++) {\n    var slot = fns[i];\n    if (Array.isArray(slot)) {\n      resolveScopedSlots(slot, res, hasDynamicKeys);\n    } else if (slot) {\n      // marker for reverse proxying v-slot without scope on this.$slots\n      if (slot.proxy) {\n        slot.fn.proxy = true;\n      }\n      res[slot.key] = slot.fn;\n    }\n  }\n  if (contentHashKey) {\n    (res).$key = contentHashKey;\n  }\n  return res\n}\n\n/*  */\n\nfunction bindDynamicKeys (baseObj, values) {\n  for (var i = 0; i < values.length; i += 2) {\n    var key = values[i];\n    if (typeof key === 'string' && key) {\n      baseObj[values[i]] = values[i + 1];\n    } else if (process.env.NODE_ENV !== 'production' && key !== '' && key !== null) {\n      // null is a special value for explicitly removing a binding\n      warn(\n        (\"Invalid value for dynamic directive argument (expected string or null): \" + key),\n        this\n      );\n    }\n  }\n  return baseObj\n}\n\n// helper to dynamically append modifier runtime markers to event names.\n// ensure only append when value is already string, otherwise it will be cast\n// to string and cause the type check to miss.\nfunction prependModifier (value, symbol) {\n  return typeof value === 'string' ? symbol + value : value\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n  target._d = bindDynamicKeys;\n  target._p = prependModifier;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var this$1 = this;\n\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () {\n    if (!this$1.$slots) {\n      normalizeScopedSlots(\n        data.scopedSlots,\n        this$1.$slots = resolveSlots(children, parent)\n      );\n    }\n    return this$1.$slots\n  };\n\n  Object.defineProperty(this, 'scopedSlots', ({\n    enumerable: true,\n    get: function get () {\n      return normalizeScopedSlots(data.scopedSlots, this.slots())\n    }\n  }));\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  // we know it's MountedComponentVNode but flow doesn't\n  vnode,\n  // activeInstance in lifecycle state\n  parent\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      if (process.env.NODE_ENV !== 'production' && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {\n        warn(\n          (\"The .native modifier for v-on is only valid on components but it was used on <\" + tag + \">.\"),\n          context\n        );\n      }\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nvar currentRenderingInstance = null;\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = normalizeScopedSlots(\n        _parentVnode.data.scopedSlots,\n        vm.$slots,\n        vm.$scopedSlots\n      );\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      // There's no need to maintain a stack because all render fns are called\n      // separately from one another. Nested component's render fns are called\n      // when parent component is patched.\n      currentRenderingInstance = vm;\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    } finally {\n      currentRenderingInstance = null;\n    }\n    // if the returned array contains only a single node, allow it\n    if (Array.isArray(vnode) && vnode.length === 1) {\n      vnode = vnode[0];\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  var owner = currentRenderingInstance;\n  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {\n    // already pending\n    factory.owners.push(owner);\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (owner && !isDef(factory.owners)) {\n    var owners = factory.owners = [owner];\n    var sync = true;\n    var timerLoading = null;\n    var timerTimeout = null\n\n    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = owners.length; i < l; i++) {\n        (owners[i]).$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        owners.length = 0;\n        if (timerLoading !== null) {\n          clearTimeout(timerLoading);\n          timerLoading = null;\n        }\n        if (timerTimeout !== null) {\n          clearTimeout(timerTimeout);\n          timerTimeout = null;\n        }\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      } else {\n        owners.length = 0;\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (isPromise(res)) {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isPromise(res.component)) {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            timerLoading = setTimeout(function () {\n              timerLoading = null;\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          timerTimeout = setTimeout(function () {\n            timerTimeout = null;\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        vm.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      var info = \"event handler for \\\"\" + event + \"\\\"\";\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        invokeWithErrorHandling(cbs[i], vm, args, vm, info);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren.\n\n  // check if there are dynamic scopedSlots (hand-written or compiled but with\n  // dynamic slot names). Static scoped slots compiled from template has the\n  // \"$stable\" marker.\n  var newScopedSlots = parentVnode.data.scopedSlots;\n  var oldScopedSlots = vm.$scopedSlots;\n  var hasDynamicScopedSlot = !!(\n    (newScopedSlots && !newScopedSlots.$stable) ||\n    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||\n    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||\n    (!newScopedSlots && vm.$scopedSlots.$key)\n  );\n\n  // Any static slot children from the parent may have changed during parent's\n  // update. Dynamic scoped slots may also have changed. In such cases, a forced\n  // update is necessary to ensure correctness.\n  var needsForceUpdate = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    hasDynamicScopedSlot\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (needsForceUpdate) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  var info = hook + \" hook\";\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      invokeWithErrorHandling(handlers[i], vm, null, vm, info);\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n// Async edge case #6566 requires saving the timestamp when event listeners are\n// attached. However, calling performance.now() has a perf overhead especially\n// if the page has thousands of event listeners. Instead, we take a timestamp\n// every time the scheduler flushes and use that for all event listeners\n// attached during that flush.\nvar currentFlushTimestamp = 0;\n\n// Async edge case fix requires storing an event listener's attach timestamp.\nvar getNow = Date.now;\n\n// Determine what event timestamp the browser is using. Annoyingly, the\n// timestamp can either be hi-res (relative to page load) or low-res\n// (relative to UNIX epoch), so in order to compare time we have to use the\n// same timestamp type when saving the flush timestamp.\n// All IE versions use low-res event timestamps, and have problematic clock\n// implementations (#9632)\nif (inBrowser && !isIE) {\n  var performance = window.performance;\n  if (\n    performance &&\n    typeof performance.now === 'function' &&\n    getNow() > document.createEvent('Event').timeStamp\n  ) {\n    // if the event timestamp, although evaluated AFTER the Date.now(), is\n    // smaller than it, it means the event is using a hi-res timestamp,\n    // and we need to use the hi-res version for event listener timestamps as\n    // well.\n    getNow = function () { return performance.now(); };\n  }\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  currentFlushTimestamp = getNow();\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        var info = \"callback for watcher \\\"\" + (this.expression) + \"\\\"\";\n        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      } else if (vm.$options.methods && key in vm.$options.methods) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a method.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      var info = \"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\";\n      pushTarget();\n      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);\n      popTarget();\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = latest[key];\n    }\n  }\n  return modified\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var entry = cache[key];\n    if (entry) {\n      var name = entry.name;\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var entry = cache[key];\n  if (entry && (!current || entry.tag !== current.tag)) {\n    entry.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  methods: {\n    cacheVNode: function cacheVNode() {\n      var ref = this;\n      var cache = ref.cache;\n      var keys = ref.keys;\n      var vnodeToCache = ref.vnodeToCache;\n      var keyToCache = ref.keyToCache;\n      if (vnodeToCache) {\n        var tag = vnodeToCache.tag;\n        var componentInstance = vnodeToCache.componentInstance;\n        var componentOptions = vnodeToCache.componentOptions;\n        cache[keyToCache] = {\n          name: getComponentName(componentOptions),\n          tag: tag,\n          componentInstance: componentInstance,\n        };\n        keys.push(keyToCache);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n        this.vnodeToCache = null;\n      }\n    }\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.cacheVNode();\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  updated: function updated () {\n    this.cacheVNode();\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        // delay setting the cache until update\n        this.vnodeToCache = vnode;\n        this.keyToCache = key;\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  // 2.6 explicit observable API\n  Vue.observable = function (obj) {\n    observe(obj);\n    return obj\n  };\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.6.14';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');\n\nvar convertEnumeratedValue = function (key, value) {\n  return isFalsyAttrValue(value) || value === 'false'\n    ? 'false'\n    // allow arbitrary string value for contenteditable\n    : key === 'contenteditable' && isValidContentEditableValue(value)\n      ? value\n      : 'true'\n};\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.asyncFactory === b.asyncFactory && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes([oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      dir.oldArg = oldDir.arg;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur, vnode.data.pre);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value, isInPre) {\n  if (isInPre || el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, convertEnumeratedValue(key, value));\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && value !== '' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\n\n\n/* eslint-disable no-unused-vars */\nfunction baseWarn (msg, range) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n/* eslint-enable no-unused-vars */\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value, range, dynamic) {\n  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value, range, dynamic) {\n  var attrs = dynamic\n    ? (el.dynamicAttrs || (el.dynamicAttrs = []))\n    : (el.attrs || (el.attrs = []));\n  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value, range) {\n  el.attrsMap[name] = value;\n  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  isDynamicArg,\n  modifiers,\n  range\n) {\n  (el.directives || (el.directives = [])).push(rangeSetItem({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    isDynamicArg: isDynamicArg,\n    modifiers: modifiers\n  }, range));\n  el.plain = false;\n}\n\nfunction prependModifierMarker (symbol, name, dynamic) {\n  return dynamic\n    ? (\"_p(\" + name + \",\\\"\" + symbol + \"\\\")\")\n    : symbol + name // mark the event as captured\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn,\n  range,\n  dynamic\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.',\n      range\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (modifiers.right) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'contextmenu':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'contextmenu';\n      delete modifiers.right;\n    }\n  } else if (modifiers.middle) {\n    if (dynamic) {\n      name = \"(\" + name + \")==='click'?'mouseup':(\" + name + \")\";\n    } else if (name === 'click') {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = prependModifierMarker('!', name, dynamic);\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = prependModifierMarker('~', name, dynamic);\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = prependModifierMarker('&', name, dynamic);\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getRawBindingAttr (\n  el,\n  name\n) {\n  return el.rawAttrsMap[':' + name] ||\n    el.rawAttrsMap['v-bind:' + name] ||\n    el.rawAttrsMap[name]\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\nfunction getAndRemoveAttrByRegex (\n  el,\n  name\n) {\n  var list = el.attrsList;\n  for (var i = 0, l = list.length; i < l; i++) {\n    var attr = list[i];\n    if (name.test(attr.name)) {\n      list.splice(i, 1);\n      return attr\n    }\n  }\n}\n\nfunction rangeSetItem (\n  item,\n  range\n) {\n  if (range) {\n    if (range.start != null) {\n      item.start = range.start;\n    }\n    if (range.end != null) {\n      item.end = range.end;\n    }\n  }\n  return item\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.',\n      el.rawAttrsMap['v-model']\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally',\n        el.rawAttrsMap[binding]\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\n// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp\n// implementation and does not fire microtasks in between event propagation, so\n// safe to exclude.\nvar useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);\n\nfunction add$1 (\n  name,\n  handler,\n  capture,\n  passive\n) {\n  // async edge case #6566: inner click event triggers patch, event handler\n  // attached to outer element during patch, and triggered again. This\n  // happens because browsers fire microtask ticks between event propagation.\n  // the solution is simple: we save the timestamp when a handler is attached,\n  // and the handler would only fire if the event passed to it was fired\n  // AFTER it was attached.\n  if (useMicrotaskFix) {\n    var attachedTimestamp = currentFlushTimestamp;\n    var original = handler;\n    handler = original._wrapper = function (e) {\n      if (\n        // no bubbling, should always fire.\n        // this is just a safety net in case event.timeStamp is unreliable in\n        // certain weird environments...\n        e.target === e.currentTarget ||\n        // event is fired after handler attachment\n        e.timeStamp >= attachedTimestamp ||\n        // bail for environments that have buggy event.timeStamp implementations\n        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState\n        // #9681 QtWebEngine event.timeStamp is negative value\n        e.timeStamp <= 0 ||\n        // #9448 bail if event is fired in another document in a multi-page\n        // electron/nw.js app, since event.timeStamp will be using a different\n        // starting reference\n        e.target.ownerDocument !== document\n      ) {\n        return original.apply(this, arguments)\n      }\n    };\n  }\n  target$1.addEventListener(\n    name,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  name,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    name,\n    handler._wrapper || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nvar svgContainer;\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (!(key in props)) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value' && elm.tagName !== 'PROGRESS') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {\n      // IE doesn't support innerHTML for SVG elements\n      svgContainer = svgContainer || document.createElement('div');\n      svgContainer.innerHTML = \"<svg>\" + cur + \"</svg>\";\n      var svg = svgContainer.firstChild;\n      while (elm.firstChild) {\n        elm.removeChild(elm.firstChild);\n      }\n      while (svg.firstChild) {\n        elm.appendChild(svg.firstChild);\n      }\n    } else if (\n      // skip the update if old and new VDOM state is the same.\n      // `value` is handled separately because the DOM value may be temporarily\n      // out of sync with VDOM state due to focus, composition and modifiers.\n      // This  #4521 by skipping the unnecessary `checked` update.\n      cur !== oldProps[key]\n    ) {\n      // some property updates can throw\n      // e.g. `value` on <progress> w/ non-finite value\n      try {\n        elm[key] = cur;\n      } catch (e) {}\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    context = transitionNode.context;\n    transitionNode = transitionNode.parent;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test'\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.',\n        el.rawAttrsMap['class']\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.',\n          el.rawAttrsMap['style']\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar dynamicArgAttribute = /^\\s*((?:v-[\\w-]+:|@|:|#)\\[[^=]+?\\][^\\s\"'<>\\/=]*)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\nvar ncname = \"[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z\" + (unicodeRegExp.source) + \"]*\";\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being passed as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t',\n  '&#39;': \"'\"\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n      }\n\n      if (text) {\n        advance(text.length);\n      }\n\n      if (options.chars && text) {\n        options.chars(text, index - text.length, index);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"), { start: index + html.length });\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {\n        attr.start = index;\n        advance(attr[0].length);\n        attr.end = index;\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        attrs[i].start = args.start + args[0].match(/^\\s*/).length;\n        attrs[i].end = args.end;\n      }\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\"),\n            { start: stack[i].start, end: stack[i].end }\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:|^#/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar dynamicArgRE = /^\\[.*\\]$/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^\\.|^v-bind:/;\nvar modifierRE = /\\.[^.\\]]+(?=[^\\]]*$)/g;\n\nvar slotRE = /^v-slot(:|$)|^#/;\n\nvar lineBreakRE = /[\\r\\n]/;\nvar whitespaceRE$1 = /[ \\f\\t\\r\\n]+/g;\n\nvar invalidAttributeRE = /[\\s\"'<>\\/=]/;\n\nvar decodeHTMLCached = cached(he.decode);\n\nvar emptySlotScopeToken = \"_empty_\";\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\nvar maybeComponent;\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    rawAttrsMap: {},\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  var isReservedTag = options.isReservedTag || no;\n  maybeComponent = function (el) { return !!(\n    el.component ||\n    el.attrsMap[':is'] ||\n    el.attrsMap['v-bind:is'] ||\n    !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))\n  ); };\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var whitespaceOption = options.whitespace;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg, range) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg, range);\n    }\n  }\n\n  function closeElement (element) {\n    trimEndingWhitespace(element);\n    if (!inVPre && !element.processed) {\n      element = processElement(element, options);\n    }\n    // tree management\n    if (!stack.length && element !== root) {\n      // allow root elements with v-if, v-else-if and v-else\n      if (root.if && (element.elseif || element.else)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(element);\n        }\n        addIfCondition(root, {\n          exp: element.elseif,\n          block: element\n        });\n      } else if (process.env.NODE_ENV !== 'production') {\n        warnOnce(\n          \"Component template should contain exactly one root element. \" +\n          \"If you are using v-if on multiple elements, \" +\n          \"use v-else-if to chain them instead.\",\n          { start: element.start }\n        );\n      }\n    }\n    if (currentParent && !element.forbidden) {\n      if (element.elseif || element.else) {\n        processIfConditions(element, currentParent);\n      } else {\n        if (element.slotScope) {\n          // scoped slot\n          // keep it in the children list so that v-else(-if) conditions can\n          // find it as the prev node.\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        }\n        currentParent.children.push(element);\n        element.parent = currentParent;\n      }\n    }\n\n    // final children cleanup\n    // filter out scoped slots\n    element.children = element.children.filter(function (c) { return !(c).slotScope; });\n    // remove trailing whitespace node again\n    trimEndingWhitespace(element);\n\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  function trimEndingWhitespace (el) {\n    // remove trailing whitespace node\n    if (!inPre) {\n      var lastNode;\n      while (\n        (lastNode = el.children[el.children.length - 1]) &&\n        lastNode.type === 3 &&\n        lastNode.text === ' '\n      ) {\n        el.children.pop();\n      }\n    }\n  }\n\n  function checkRootConstraints (el) {\n    if (el.tag === 'slot' || el.tag === 'template') {\n      warnOnce(\n        \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n        'contain multiple nodes.',\n        { start: el.start }\n      );\n    }\n    if (el.attrsMap.hasOwnProperty('v-for')) {\n      warnOnce(\n        'Cannot use v-for on stateful component root element because ' +\n        'it renders multiple elements.',\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    outputSourceRange: options.outputSourceRange,\n    start: function start (tag, attrs, unary, start$1, end) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (options.outputSourceRange) {\n          element.start = start$1;\n          element.end = end;\n          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {\n            cumulated[attr.name] = attr;\n            return cumulated\n          }, {});\n        }\n        attrs.forEach(function (attr) {\n          if (invalidAttributeRE.test(attr.name)) {\n            warn$2(\n              \"Invalid dynamic argument expression: attribute names cannot contain \" +\n              \"spaces, quotes, <, >, / or =.\",\n              {\n                start: attr.start + attr.name.indexOf(\"[\"),\n                end: attr.start + attr.name.length\n              }\n            );\n          }\n        });\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.',\n          { start: element.start }\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n      }\n\n      if (!root) {\n        root = element;\n        if (process.env.NODE_ENV !== 'production') {\n          checkRootConstraints(root);\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end (tag, start, end$1) {\n      var element = stack[stack.length - 1];\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n        element.end = end$1;\n      }\n      closeElement(element);\n    },\n\n    chars: function chars (text, start, end) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.',\n              { start: start }\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\"),\n              { start: start }\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      if (inPre || text.trim()) {\n        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);\n      } else if (!children.length) {\n        // remove the whitespace-only node right after an opening tag\n        text = '';\n      } else if (whitespaceOption) {\n        if (whitespaceOption === 'condense') {\n          // in condense mode, remove the whitespace node if it contains\n          // line break, otherwise condense to a single space\n          text = lineBreakRE.test(text) ? '' : ' ';\n        } else {\n          text = ' ';\n        }\n      } else {\n        text = preserveWhitespace ? ' ' : '';\n      }\n      if (text) {\n        if (!inPre && whitespaceOption === 'condense') {\n          // condense consecutive whitespaces into single space\n          text = text.replace(whitespaceRE$1, ' ');\n        }\n        var res;\n        var child;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          child = {\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          };\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          child = {\n            type: 3,\n            text: text\n          };\n        }\n        if (child) {\n          if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n            child.start = start;\n            child.end = end;\n          }\n          children.push(child);\n        }\n      }\n    },\n    comment: function comment (text, start, end) {\n      // adding anything as a sibling to the root node is forbidden\n      // comments should still be allowed, but ignored\n      if (currentParent) {\n        var child = {\n          type: 3,\n          text: text,\n          isComment: true\n        };\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          child.start = start;\n          child.end = end;\n        }\n        currentParent.children.push(child);\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var list = el.attrsList;\n  var len = list.length;\n  if (len) {\n    var attrs = el.attrs = new Array(len);\n    for (var i = 0; i < len; i++) {\n      attrs[i] = {\n        name: list[i].name,\n        value: JSON.stringify(list[i].value)\n      };\n      if (list[i].start != null) {\n        attrs[i].start = list[i].start;\n        attrs[i].end = list[i].end;\n      }\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (\n  element,\n  options\n) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = (\n    !element.key &&\n    !element.scopedSlots &&\n    !element.attrsList.length\n  );\n\n  processRef(element);\n  processSlotContent(element);\n  processSlotOutlet(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n  return element\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\n          \"<template> cannot be keyed. Place the key on real elements instead.\",\n          getRawBindingAttr(el, 'key')\n        );\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\",\n            getRawBindingAttr(el, 'key'),\n            true /* tip */\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp),\n        el.rawAttrsMap['v-for']\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\",\n      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\",\n          children[i]\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\n// handle content being passed to a component as slot,\n// e.g. <template slot=\"xxx\">, <div slot-scope=\"xxx\">\nfunction processSlotContent (el) {\n  var slotScope;\n  if (el.tag === 'template') {\n    slotScope = getAndRemoveAttr(el, 'scope');\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && slotScope) {\n      warn$2(\n        \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n        \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n        \"can also be used on plain elements in addition to <template> to \" +\n        \"denote scoped slots.\",\n        el.rawAttrsMap['scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n      warn$2(\n        \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n        \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n        \"scoped slot to make it clearer.\",\n        el.rawAttrsMap['slot-scope'],\n        true\n      );\n    }\n    el.slotScope = slotScope;\n  }\n\n  // slot=\"xxx\"\n  var slotTarget = getBindingAttr(el, 'slot');\n  if (slotTarget) {\n    el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);\n    // preserve slot as an attribute for native shadow DOM compat\n    // only for non-scoped slots.\n    if (el.tag !== 'template' && !el.slotScope) {\n      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));\n    }\n  }\n\n  // 2.6 v-slot syntax\n  {\n    if (el.tag === 'template') {\n      // v-slot on <template>\n      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.slotTarget || el.slotScope) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.parent && !maybeComponent(el.parent)) {\n            warn$2(\n              \"<template v-slot> can only appear at the root level inside \" +\n              \"the receiving component\",\n              el\n            );\n          }\n        }\n        var ref = getSlotName(slotBinding);\n        var name = ref.name;\n        var dynamic = ref.dynamic;\n        el.slotTarget = name;\n        el.slotTargetDynamic = dynamic;\n        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf\n      }\n    } else {\n      // v-slot on component, denotes default slot\n      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);\n      if (slotBinding$1) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!maybeComponent(el)) {\n            warn$2(\n              \"v-slot can only be used on components or <template>.\",\n              slotBinding$1\n            );\n          }\n          if (el.slotScope || el.slotTarget) {\n            warn$2(\n              \"Unexpected mixed usage of different slot syntaxes.\",\n              el\n            );\n          }\n          if (el.scopedSlots) {\n            warn$2(\n              \"To avoid scope ambiguity, the default slot should also use \" +\n              \"<template> syntax when there are other named slots.\",\n              slotBinding$1\n            );\n          }\n        }\n        // add the component's children to its default slot\n        var slots = el.scopedSlots || (el.scopedSlots = {});\n        var ref$1 = getSlotName(slotBinding$1);\n        var name$1 = ref$1.name;\n        var dynamic$1 = ref$1.dynamic;\n        var slotContainer = slots[name$1] = createASTElement('template', [], el);\n        slotContainer.slotTarget = name$1;\n        slotContainer.slotTargetDynamic = dynamic$1;\n        slotContainer.children = el.children.filter(function (c) {\n          if (!c.slotScope) {\n            c.parent = slotContainer;\n            return true\n          }\n        });\n        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;\n        // remove children as they are returned from scopedSlots now\n        el.children = [];\n        // mark el non-plain so data gets generated\n        el.plain = false;\n      }\n    }\n  }\n}\n\nfunction getSlotName (binding) {\n  var name = binding.name.replace(slotRE, '');\n  if (!name) {\n    if (binding.name[0] !== '#') {\n      name = 'default';\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        \"v-slot shorthand syntax requires a slot name.\",\n        binding\n      );\n    }\n  }\n  return dynamicArgRE.test(name)\n    // dynamic [name]\n    ? { name: name.slice(1, -1), dynamic: true }\n    // static name\n    : { name: (\"\\\"\" + name + \"\\\"\"), dynamic: false }\n}\n\n// handle <slot/> outlets\nfunction processSlotOutlet (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\",\n        getRawBindingAttr(el, 'key')\n      );\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name.replace(dirRE, ''));\n      // support .foo shorthand syntax for the .prop modifier\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop && !isDynamic) {\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel && !isDynamic) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            syncGen = genAssignmentCode(value, \"$event\");\n            if (!isDynamic) {\n              addHandler(\n                el,\n                (\"update:\" + (camelize(name))),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i]\n              );\n              if (hyphenate(name) !== camelize(name)) {\n                addHandler(\n                  el,\n                  (\"update:\" + (hyphenate(name))),\n                  syncGen,\n                  null,\n                  false,\n                  warn$2,\n                  list[i]\n                );\n              }\n            } else {\n              // handler w/ dynamic event name\n              addHandler(\n                el,\n                (\"\\\"update:\\\"+(\" + name + \")\"),\n                syncGen,\n                null,\n                false,\n                warn$2,\n                list[i],\n                true // dynamic\n              );\n            }\n          }\n        }\n        if ((modifiers && modifiers.prop) || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value, list[i], isDynamic);\n        } else {\n          addAttr(el, name, value, list[i], isDynamic);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        isDynamic = dynamicArgRE.test(name);\n        if (isDynamic) {\n          name = name.slice(1, -1);\n        }\n        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        isDynamic = false;\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n          if (dynamicArgRE.test(arg)) {\n            arg = arg.slice(1, -1);\n            isDynamic = true;\n          }\n        }\n        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.',\n            list[i]\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value), list[i]);\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true', list[i]);\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\",\n        el.rawAttrsMap['v-model']\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"), dir);\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function(?:\\s+[\\w$]+)?\\s*\\(/;\nvar fnInvokeRE = /\\([^)]*?\\);*$/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var prefix = isNative ? 'nativeOn:' : 'on:';\n  var staticHandlers = \"\";\n  var dynamicHandlers = \"\";\n  for (var name in events) {\n    var handlerCode = genHandler(events[name]);\n    if (events[name] && events[name].dynamic) {\n      dynamicHandlers += name + \",\" + handlerCode + \",\";\n    } else {\n      staticHandlers += \"\\\"\" + name + \"\\\":\" + handlerCode + \",\";\n    }\n  }\n  staticHandlers = \"{\" + (staticHandlers.slice(0, -1)) + \"}\";\n  if (dynamicHandlers) {\n    return prefix + \"_d(\" + staticHandlers + \",[\" + (dynamicHandlers.slice(0, -1)) + \"])\"\n  } else {\n    return prefix + staticHandlers\n  }\n}\n\nfunction genHandler (handler) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (isFunctionInvocation ? (\"return \" + (handler.value)) : handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \".apply(null, arguments)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \").apply(null, arguments)\")\n        : isFunctionInvocation\n          ? (\"return \" + (handler.value))\n          : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\n    // make sure the key filters only apply to KeyboardEvents\n    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake\n    // key events that do not have keyCode property...\n    \"if(!$event.type.indexOf('key')&&\" +\n    (keys.map(genFilterCode).join('&&')) + \")return null;\"\n  )\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  // fix #11483, Root level <script> tags should not be rendered.\n  var code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \",\n        el.rawAttrsMap['v-once']\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      el.rawAttrsMap['v-for'],\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:\" + (genProps(el.attrs)) + \",\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:\" + (genProps(el.props)) + \",\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el, el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind dynamic argument wrap\n  // v-bind with dynamic arguments must be applied using the same v-bind object\n  // merge helper so that class/style/mustUseProp attrs are handled correctly.\n  if (el.dynamicAttrs) {\n    data = \"_b(\" + data + \",\\\"\" + (el.tag) + \"\\\",\" + (genProps(el.dynamicAttrs)) + \")\";\n  }\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\" + (dir.isDynamicArg ? dir.arg : (\"\\\"\" + (dir.arg) + \"\\\"\"))) : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn(\n      'Inline-template components must have exactly one child element.',\n      { start: el.start }\n    );\n  }\n  if (ast && ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  el,\n  slots,\n  state\n) {\n  // by default scoped slots are considered \"stable\", this allows child\n  // components with only scoped slots to skip forced updates from parent.\n  // but in some cases we have to bail-out of this optimization\n  // for example if the slot contains dynamic names, has v-if or v-for on them...\n  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {\n    var slot = slots[key];\n    return (\n      slot.slotTargetDynamic ||\n      slot.if ||\n      slot.for ||\n      containsSlotChild(slot) // is passing down slot from parent which may be dynamic\n    )\n  });\n\n  // #9534: if a component with scoped slots is inside a conditional branch,\n  // it's possible for the same component to be reused but with different\n  // compiled slot content. To avoid that, we generate a unique key based on\n  // the generated code of all the slot contents.\n  var needsKey = !!el.if;\n\n  // OR when it is inside another scoped slot or v-for (the reactivity may be\n  // disconnected due to the intermediate scope variable)\n  // #9438, #9506\n  // TODO: this can be further optimized by properly analyzing in-scope bindings\n  // and skip force updating ones that do not actually use scope variables.\n  if (!needsForceUpdate) {\n    var parent = el.parent;\n    while (parent) {\n      if (\n        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||\n        parent.for\n      ) {\n        needsForceUpdate = true;\n        break\n      }\n      if (parent.if) {\n        needsKey = true;\n      }\n      parent = parent.parent;\n    }\n  }\n\n  var generatedSlots = Object.keys(slots)\n    .map(function (key) { return genScopedSlot(slots[key], state); })\n    .join(',');\n\n  return (\"scopedSlots:_u([\" + generatedSlots + \"]\" + (needsForceUpdate ? \",null,true\" : \"\") + (!needsForceUpdate && needsKey ? (\",null,false,\" + (hash(generatedSlots))) : \"\") + \")\")\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n  return hash >>> 0\n}\n\nfunction containsSlotChild (el) {\n  if (el.type === 1) {\n    if (el.tag === 'slot') {\n      return true\n    }\n    return el.children.some(containsSlotChild)\n  }\n  return false\n}\n\nfunction genScopedSlot (\n  el,\n  state\n) {\n  var isLegacySyntax = el.attrsMap['slot-scope'];\n  if (el.if && !el.ifProcessed && !isLegacySyntax) {\n    return genIf(el, state, genScopedSlot, \"null\")\n  }\n  if (el.for && !el.forProcessed) {\n    return genFor(el, state, genScopedSlot)\n  }\n  var slotScope = el.slotScope === emptySlotScopeToken\n    ? \"\"\n    : String(el.slotScope);\n  var fn = \"function(\" + slotScope + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if && isLegacySyntax\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  // reverse proxy v-slot without scope on this.$slots\n  var reverseProxy = slotScope ? \"\" : \",proxy:true\";\n  return (\"{key:\" + (el.slotTarget || \"\\\"default\\\"\") + \",fn:\" + fn + reverseProxy + \"}\")\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",function(){return \" + children + \"}\") : '');\n  var attrs = el.attrs || el.dynamicAttrs\n    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({\n        // slot props are camelized\n        name: camelize(attr.name),\n        value: attr.value,\n        dynamic: attr.dynamic\n      }); }))\n    : null;\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var staticProps = \"\";\n  var dynamicProps = \"\";\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    var value = transformSpecialNewlines(prop.value);\n    if (prop.dynamic) {\n      dynamicProps += (prop.name) + \",\" + value + \",\";\n    } else {\n      staticProps += \"\\\"\" + (prop.name) + \"\\\":\" + value + \",\";\n    }\n  }\n  staticProps = \"{\" + (staticProps.slice(0, -1)) + \"}\";\n  if (dynamicProps) {\n    return (\"_d(\" + staticProps + \",[\" + (dynamicProps.slice(0, -1)) + \"])\")\n  } else {\n    return staticProps\n  }\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast, warn) {\n  if (ast) {\n    checkNode(ast, warn);\n  }\n}\n\nfunction checkNode (node, warn) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          var range = node.rawAttrsMap[name];\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (name === 'v-slot' || name[0] === '#') {\n            checkFunctionParameterExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), warn, range);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], warn);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, warn, node);\n  }\n}\n\nfunction checkEvent (exp, text, warn, range) {\n  var stripped = exp.replace(stripStringRE, '');\n  var keywordMatch = stripped.match(unaryOperatorsRE);\n  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {\n    warn(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim()),\n      range\n    );\n  }\n  checkExpression(exp, text, warn, range);\n}\n\nfunction checkFor (node, text, warn, range) {\n  checkExpression(node.for || '', text, warn, range);\n  checkIdentifier(node.alias, 'v-for alias', text, warn, range);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  warn,\n  range\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      warn((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())), range);\n    }\n  }\n}\n\nfunction checkExpression (exp, text, warn, range) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      warn(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim()),\n        range\n      );\n    } else {\n      warn(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\",\n        range\n      );\n    }\n  }\n}\n\nfunction checkFunctionParameterExpression (exp, text, warn, range) {\n  try {\n    new Function(exp, '');\n  } catch (e) {\n    warn(\n      \"invalid function parameter expression: \" + (e.message) + \" in\\n\\n\" +\n      \"    \" + exp + \"\\n\\n\" +\n      \"  Raw expression: \" + (text.trim()) + \"\\n\",\n      range\n    );\n  }\n}\n\n/*  */\n\nvar range = 2;\n\nfunction generateCodeFrame (\n  source,\n  start,\n  end\n) {\n  if ( start === void 0 ) start = 0;\n  if ( end === void 0 ) end = source.length;\n\n  var lines = source.split(/\\r?\\n/);\n  var count = 0;\n  var res = [];\n  for (var i = 0; i < lines.length; i++) {\n    count += lines[i].length + 1;\n    if (count >= start) {\n      for (var j = i - range; j <= i + range || end > count; j++) {\n        if (j < 0 || j >= lines.length) { continue }\n        res.push((\"\" + (j + 1) + (repeat$1(\" \", 3 - String(j + 1).length)) + \"|  \" + (lines[j])));\n        var lineLength = lines[j].length;\n        if (j === i) {\n          // push underline\n          var pad = start - (count - lineLength) + 1;\n          var length = end > count ? lineLength - pad : end - start;\n          res.push(\"   |  \" + repeat$1(\" \", pad) + repeat$1(\"^\", length));\n        } else if (j > i) {\n          if (end > count) {\n            var length$1 = Math.min(end - count, lineLength);\n            res.push(\"   |  \" + repeat$1(\"^\", length$1));\n          }\n          count += lineLength + 1;\n        }\n      }\n      break\n    }\n  }\n  return res.join('\\n')\n}\n\nfunction repeat$1 (str, n) {\n  var result = '';\n  if (n > 0) {\n    while (true) { // eslint-disable-line\n      if (n & 1) { result += str; }\n      n >>>= 1;\n      if (n <= 0) { break }\n      str += str;\n    }\n  }\n  return result\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        if (options.outputSourceRange) {\n          compiled.errors.forEach(function (e) {\n            warn$$1(\n              \"Error compiling template:\\n\\n\" + (e.msg) + \"\\n\\n\" +\n              generateCodeFrame(template, e.start, e.end),\n              vm\n            );\n          });\n        } else {\n          warn$$1(\n            \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n            compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n            vm\n          );\n        }\n      }\n      if (compiled.tips && compiled.tips.length) {\n        if (options.outputSourceRange) {\n          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });\n        } else {\n          compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n        }\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      var warn = function (msg, range, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        if (process.env.NODE_ENV !== 'production' && options.outputSourceRange) {\n          // $flow-disable-line\n          var leadingSpaceLength = template.match(/^\\s*/)[0].length;\n\n          warn = function (msg, range, tip) {\n            var data = { msg: msg };\n            if (range) {\n              if (range.start != null) {\n                data.start = range.start + leadingSpaceLength;\n              }\n              if (range.end != null) {\n                data.end = range.end + leadingSpaceLength;\n              }\n            }\n            (tip ? tips : errors).push(data);\n          };\n        }\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      finalOptions.warn = warn;\n\n      var compiled = baseCompile(template.trim(), finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        detectErrors(compiled.ast, warn);\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        outputSourceRange: process.env.NODE_ENV !== 'production',\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 7+uW\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = DuR2\n// module chunks = 0","/* vue-onsenui v2.6.3 - 2021-06-28 */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('onsenui')) :\n  typeof define === 'function' && define.amd ? define(['onsenui'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.VueOnsen = factory(global.ons));\n}(this, (function (ons) { 'use strict';\n\n  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\n  var ons__default = /*#__PURE__*/_interopDefaultLegacy(ons);\n\n  function setup (ons) {\n    return Object.keys(ons).filter(function (k) {\n      return [/^is/, /^disable/, /^enable/, /^mock/, /^open/, /^set/, /animit/, /elements/, /GestureDetector/, /notification/, /orientation/, /platform/, /ready/].some(function (t) {\n        return k.match(t);\n      });\n    }).reduce(function (r, k) {\n      r[k] = ons[k];\n      return r;\n    }, { _ons: ons });\n  }\n\n  var capitalize = function capitalize(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  var camelize = function camelize(string) {\n    return string.toLowerCase().replace(/-([a-z])/g, function (m, l) {\n      return l.toUpperCase();\n    });\n  };\n\n  var eventToHandler = function eventToHandler(name) {\n    return '_on' + capitalize(name);\n  };\n\n  var handlerToProp = function handlerToProp(name) {\n    return name.slice(2).charAt(0).toLowerCase() + name.slice(2).slice(1);\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  /* Private */\n  var _setupDBB = function _setupDBB(component) {\n    var dbb = 'onDeviceBackButton';\n    // Call original handler or parent handler by default\n    var handler = component[dbb] || component.$el[dbb] && component.$el[dbb]._callback || function (e) {\n      return e.callParentHandler();\n    };\n\n    component.$el[dbb] = function (event) {\n      var runDefault = true;\n\n      component.$emit(handlerToProp(dbb), _extends({}, event, {\n        preventDefault: function preventDefault() {\n          return runDefault = false;\n        }\n      }));\n\n      runDefault && handler(event);\n    };\n\n    component._isDBBSetup = true;\n  };\n\n  /* Public */\n  // Device Back Button Handler\n  var deriveDBB = {\n    mounted: function mounted() {\n      _setupDBB(this);\n    },\n\n\n    // Core destroys deviceBackButton handlers on disconnectedCallback.\n    // This fixes the behavior for <keep-alive> component.\n    activated: function activated() {\n      this._isDBBSetup === false && _setupDBB(this);\n    },\n    deactivated: function deactivated() {\n      this._isDBBSetup === true && (this._isDBBSetup = false);\n    },\n    destroyed: function destroyed() {\n      this.$el.onDeviceBackButton && this.$el.onDeviceBackButton.destroy();\n    }\n  };\n\n  var deriveEvents = {\n    computed: {\n      unrecognizedListeners: function unrecognizedListeners() {\n        var _this = this;\n\n        var name = camelize('-' + this.$options._componentTag.slice(6));\n        return Object.keys(this.$listeners || {}).filter(function (k) {\n          return (_this.$ons.elements[name].events || []).indexOf(k) === -1;\n        }).reduce(function (r, k) {\n          r[k] = _this.$listeners[k];\n          return r;\n        }, {});\n      }\n    },\n\n    mounted: function mounted() {\n      var _this2 = this;\n\n      this._handlers = {};\n\n      (this.$el.constructor.events || []).forEach(function (key) {\n        _this2._handlers[eventToHandler(key)] = function (event) {\n          // Filter events from different components with the same name\n          if (event.target === _this2.$el || !/^ons-/i.test(event.target.tagName)) {\n            _this2.$emit(key, event);\n          }\n        };\n        _this2.$el.addEventListener(key, _this2._handlers[eventToHandler(key)]);\n      });\n    },\n    beforeDestroy: function beforeDestroy() {\n      var _this3 = this;\n\n      Object.keys(this._handlers).forEach(function (key) {\n        _this3.$el.removeEventListener(key, _this3._handlers[key]);\n      });\n      this._handlers = null;\n    }\n  };\n\n  /* Private */\n  var _toggleVisibility = function _toggleVisibility() {\n    if (typeof this.visible === 'boolean' && this.visible !== this.$el.visible) {\n      this.$el[this.visible ? 'show' : 'hide'].call(this.$el, this.normalizedOptions || this.options);\n    }\n  };\n  var _teleport = function _teleport() {\n    if (!this._isDestroyed && (!this.$el.parentNode || this.$el.parentNode !== document.body)) {\n      document.body.appendChild(this.$el);\n    }\n  };\n  var _unmount = function _unmount() {\n    var _this = this;\n\n    if (this.$el.visible === true) {\n      this.$el.hide().then(function () {\n        return _this.$el.remove();\n      });\n    } else {\n      this.$el.remove();\n    }\n  };\n\n  /* Public */\n  // Components that can be shown or hidden\n  var hidable = {\n    props: {\n      visible: {\n        type: Boolean,\n        default: undefined // Avoid casting to false\n      }\n    },\n\n    watch: {\n      visible: function visible() {\n        _toggleVisibility.call(this);\n      }\n    },\n\n    mounted: function mounted() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        return _toggleVisibility.call(_this2);\n      });\n    },\n    activated: function activated() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        return _toggleVisibility.call(_this3);\n      });\n    }\n  };\n\n  // Components with 'options' property\n  var hasOptions = {\n    props: {\n      options: {\n        type: Object,\n        default: function _default() {\n          return {};\n        }\n      }\n    }\n  };\n\n  // Provides itself to its descendants\n  var selfProvider = {\n    provide: function provide() {\n      return defineProperty({}, this.$options._componentTag.slice(6), this);\n    }\n  };\n\n  // Common event for Dialogs\n  var dialogCancel = {\n    mounted: function mounted() {\n      var _this4 = this;\n\n      this.$on('dialog-cancel', function () {\n        return _this4.$emit('update:visible', false);\n      });\n    }\n  };\n\n  // Moves the element to a global position\n  var portal = {\n    mounted: function mounted() {\n      _teleport.call(this);\n    },\n    updated: function updated() {\n      _teleport.call(this);\n    },\n    activated: function activated() {\n      _teleport.call(this);\n    },\n    deactivated: function deactivated() {\n      _unmount.call(this);\n    },\n    beforeDestroy: function beforeDestroy() {\n      _unmount.call(this);\n    }\n  };\n\n  var modifier = {\n    props: {\n      modifier: {\n        type: [String, Array, Object]\n      }\n    },\n\n    computed: {\n      normalizedModifier: function normalizedModifier() {\n        var modifier = this.modifier;\n\n        if (typeof modifier === 'string') {\n          return modifier;\n        }\n\n        if (Array.isArray(modifier)) {\n          return modifier.join(' ');\n        }\n\n        if ((typeof modifier === 'undefined' ? 'undefined' : _typeof(modifier)) === 'object') {\n          return Object.keys(modifier).reduce(function (acc, key) {\n            return acc + (modifier[key] ? ' ' + key : '');\n          }, '').trim();\n        }\n\n        return false;\n      }\n    }\n  };\n\n  var _props, _props2;\n\n  /* Private */\n  var model = {\n    prop: 'modelProp',\n    event: 'modelEvent'\n  };\n\n  /* Public */\n\n  // Generic input\n  var modelInput = {\n    model: model,\n    props: (_props = {}, defineProperty(_props, model.prop, [Number, String]), defineProperty(_props, model.event, {\n      type: String,\n      default: 'input'\n    }), _props),\n\n    methods: {\n      _updateValue: function _updateValue() {\n        if (this[model.prop] !== undefined && this.$el.value !== this[model.prop]) {\n          this.$el.value = this[model.prop];\n        }\n      },\n      _onModelEvent: function _onModelEvent(event) {\n        this.$emit(model.event, event.target.value);\n      }\n    },\n\n    watch: defineProperty({}, model.prop, function () {\n      this._updateValue();\n    }),\n\n    mounted: function mounted() {\n      this._updateValue();\n      this.$el.addEventListener(this[model.event], this._onModelEvent);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$el.removeEventListener(this[model.event], this._onModelEvent);\n    }\n  };\n\n  // Checkable inputs\n  var modelCheckbox = {\n    mixins: [modelInput],\n\n    props: (_props2 = {}, defineProperty(_props2, model.prop, [Array, Boolean]), defineProperty(_props2, model.event, {\n      type: String,\n      default: 'change'\n    }), _props2),\n\n    methods: {\n      _updateValue: function _updateValue() {\n        if (this[model.prop] instanceof Array) {\n          this.$el.checked = this[model.prop].indexOf(this.$el.value) >= 0;\n        } else {\n          this.$el.checked = this[model.prop];\n        }\n      },\n      _onModelEvent: function _onModelEvent(event) {\n        var _event$target = event.target,\n            value = _event$target.value,\n            checked = _event$target.checked;\n\n        var newValue = void 0;\n\n        if (this[model.prop] instanceof Array) {\n          // Is Array\n          var index = this[model.prop].indexOf(value);\n          var included = index >= 0;\n\n          if (included && !checked) {\n            newValue = [].concat(toConsumableArray(this[model.prop].slice(0, index)), toConsumableArray(this[model.prop].slice(index + 1, this[model.prop].length)));\n          }\n\n          if (!included && checked) {\n            newValue = [].concat(toConsumableArray(this[model.prop]), [value]);\n          }\n        } else {\n          // Is Boolean\n          newValue = checked;\n        }\n\n        // Emit if value changed\n        newValue !== undefined && this.$emit(model.event, newValue);\n      }\n    }\n  };\n\n  // Radio input\n  var modelRadio = {\n    mixins: [modelInput],\n    props: defineProperty({}, model.event, {\n      type: String,\n      default: 'change'\n    }),\n\n    methods: {\n      _updateValue: function _updateValue() {\n        this.$el.checked = this[model.prop] === this.$el.value;\n      },\n      _onModelEvent: function _onModelEvent(event) {\n        var _event$target2 = event.target,\n            value = _event$target2.value,\n            checked = _event$target2.checked;\n\n        checked && this.$emit(model.event, value);\n      }\n    }\n  };\n\n  //\n\n  var script$K = {\n    name: 'v-ons-toolbar',\n    mixins: [deriveEvents, hidable, modifier]\n  };\n\n  /* script */\n  var __vue_script__$K = script$K;\n\n  /* template */\n  var __vue_render__$K = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-toolbar', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$K = [];\n\n  /* style */\n  var __vue_inject_styles__$K = undefined;\n  /* scoped */\n  var __vue_scope_id__$K = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$K = false;\n  /* component normalizer */\n  function __vue_normalize__$K(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsToolbar.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsToolbar = __vue_normalize__$K({ render: __vue_render__$K, staticRenderFns: __vue_staticRenderFns__$K }, __vue_inject_styles__$K, __vue_script__$K, __vue_scope_id__$K, __vue_is_functional_template__$K);\n\n  //\n\n  var script$J = {\n    name: 'v-ons-bottom-toolbar',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$J = script$J;\n\n  /* template */\n  var __vue_render__$J = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-bottom-toolbar', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$J = [];\n\n  /* style */\n  var __vue_inject_styles__$J = undefined;\n  /* scoped */\n  var __vue_scope_id__$J = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$J = false;\n  /* component normalizer */\n  function __vue_normalize__$J(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsBottomToolbar.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsBottomToolbar = __vue_normalize__$J({ render: __vue_render__$J, staticRenderFns: __vue_staticRenderFns__$J }, __vue_inject_styles__$J, __vue_script__$J, __vue_scope_id__$J, __vue_is_functional_template__$J);\n\n  //\n\n  var script$I = {\n    name: 'v-ons-toolbar-button',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$I = script$I;\n\n  /* template */\n  var __vue_render__$I = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-toolbar-button', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$I = [];\n\n  /* style */\n  var __vue_inject_styles__$I = undefined;\n  /* scoped */\n  var __vue_scope_id__$I = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$I = false;\n  /* component normalizer */\n  function __vue_normalize__$I(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsToolbarButton.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsToolbarButton = __vue_normalize__$I({ render: __vue_render__$I, staticRenderFns: __vue_staticRenderFns__$I }, __vue_inject_styles__$I, __vue_script__$I, __vue_scope_id__$I, __vue_is_functional_template__$I);\n\n  //\n\n  var script$H = {\n    name: 'v-ons-alert-dialog-button',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$H = script$H;\n\n  /* template */\n  var __vue_render__$H = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-alert-dialog-button', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$H = [];\n\n  /* style */\n  var __vue_inject_styles__$H = undefined;\n  /* scoped */\n  var __vue_scope_id__$H = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$H = false;\n  /* component normalizer */\n  function __vue_normalize__$H(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsAlertDialogButton.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsAlertDialogButton = __vue_normalize__$H({ render: __vue_render__$H, staticRenderFns: __vue_staticRenderFns__$H }, __vue_inject_styles__$H, __vue_script__$H, __vue_scope_id__$H, __vue_is_functional_template__$H);\n\n  //\n\n  var script$G = {\n    name: 'v-ons-button',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$G = script$G;\n\n  /* template */\n  var __vue_render__$G = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-button', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$G = [];\n\n  /* style */\n  var __vue_inject_styles__$G = undefined;\n  /* scoped */\n  var __vue_scope_id__$G = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$G = false;\n  /* component normalizer */\n  function __vue_normalize__$G(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsButton.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsButton = __vue_normalize__$G({ render: __vue_render__$G, staticRenderFns: __vue_staticRenderFns__$G }, __vue_inject_styles__$G, __vue_script__$G, __vue_scope_id__$G, __vue_is_functional_template__$G);\n\n  //\n\n  var script$F = {\n    name: 'v-ons-icon',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$F = script$F;\n\n  /* template */\n  var __vue_render__$F = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-icon', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$F = [];\n\n  /* style */\n  var __vue_inject_styles__$F = undefined;\n  /* scoped */\n  var __vue_scope_id__$F = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$F = false;\n  /* component normalizer */\n  function __vue_normalize__$F(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsIcon.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsIcon = __vue_normalize__$F({ render: __vue_render__$F, staticRenderFns: __vue_staticRenderFns__$F }, __vue_inject_styles__$F, __vue_script__$F, __vue_scope_id__$F, __vue_is_functional_template__$F);\n\n  //\n\n  var script$E = {\n    name: 'v-ons-card',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$E = script$E;\n\n  /* template */\n  var __vue_render__$E = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-card', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$E = [];\n\n  /* style */\n  var __vue_inject_styles__$E = undefined;\n  /* scoped */\n  var __vue_scope_id__$E = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$E = false;\n  /* component normalizer */\n  function __vue_normalize__$E(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsCard.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsCard = __vue_normalize__$E({ render: __vue_render__$E, staticRenderFns: __vue_staticRenderFns__$E }, __vue_inject_styles__$E, __vue_script__$E, __vue_scope_id__$E, __vue_is_functional_template__$E);\n\n  //\n\n  var script$D = {\n    name: 'v-ons-list',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$D = script$D;\n\n  /* template */\n  var __vue_render__$D = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-list', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$D = [];\n\n  /* style */\n  var __vue_inject_styles__$D = undefined;\n  /* scoped */\n  var __vue_scope_id__$D = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$D = false;\n  /* component normalizer */\n  function __vue_normalize__$D(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsList.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsList = __vue_normalize__$D({ render: __vue_render__$D, staticRenderFns: __vue_staticRenderFns__$D }, __vue_inject_styles__$D, __vue_script__$D, __vue_scope_id__$D, __vue_is_functional_template__$D);\n\n  //\n\n  var script$C = {\n    name: 'v-ons-list-item',\n    mixins: [deriveEvents, modifier],\n    props: {\n      expanded: {\n        type: Boolean\n      }\n    },\n    methods: {\n      onExpansion: function onExpansion() {\n        if (this.expanded !== this.$el.expanded) {\n          this.$emit('update:expanded', this.$el.expanded);\n        }\n      }\n    },\n    watch: {\n      expanded: function expanded() {\n        var action = this.expanded ? 'show' : 'hide';\n        this.$el[action + 'Expansion']();\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$C = script$C;\n\n  /* template */\n  var __vue_render__$C = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-list-item', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier }, on: { \"expansion\": _vm.onExpansion } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$C = [];\n\n  /* style */\n  var __vue_inject_styles__$C = undefined;\n  /* scoped */\n  var __vue_scope_id__$C = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$C = false;\n  /* component normalizer */\n  function __vue_normalize__$C(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsListItem.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsListItem = __vue_normalize__$C({ render: __vue_render__$C, staticRenderFns: __vue_staticRenderFns__$C }, __vue_inject_styles__$C, __vue_script__$C, __vue_scope_id__$C, __vue_is_functional_template__$C);\n\n  //\n\n  var script$B = {\n    name: 'v-ons-list-title',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$B = script$B;\n\n  /* template */\n  var __vue_render__$B = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-list-title', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$B = [];\n\n  /* style */\n  var __vue_inject_styles__$B = undefined;\n  /* scoped */\n  var __vue_scope_id__$B = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$B = false;\n  /* component normalizer */\n  function __vue_normalize__$B(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsListTitle.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsListTitle = __vue_normalize__$B({ render: __vue_render__$B, staticRenderFns: __vue_staticRenderFns__$B }, __vue_inject_styles__$B, __vue_script__$B, __vue_scope_id__$B, __vue_is_functional_template__$B);\n\n  //\n\n  var script$A = {\n    name: 'v-ons-list-header',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$A = script$A;\n\n  /* template */\n  var __vue_render__$A = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-list-header', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$A = [];\n\n  /* style */\n  var __vue_inject_styles__$A = undefined;\n  /* scoped */\n  var __vue_scope_id__$A = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$A = false;\n  /* component normalizer */\n  function __vue_normalize__$A(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsListHeader.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsListHeader = __vue_normalize__$A({ render: __vue_render__$A, staticRenderFns: __vue_staticRenderFns__$A }, __vue_inject_styles__$A, __vue_script__$A, __vue_scope_id__$A, __vue_is_functional_template__$A);\n\n  //\n\n  var script$z = {\n    name: 'v-ons-ripple',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$z = script$z;\n\n  /* template */\n  var __vue_render__$z = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-ripple', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$z = [];\n\n  /* style */\n  var __vue_inject_styles__$z = undefined;\n  /* scoped */\n  var __vue_scope_id__$z = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$z = false;\n  /* component normalizer */\n  function __vue_normalize__$z(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsRipple.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsRipple = __vue_normalize__$z({ render: __vue_render__$z, staticRenderFns: __vue_staticRenderFns__$z }, __vue_inject_styles__$z, __vue_script__$z, __vue_scope_id__$z, __vue_is_functional_template__$z);\n\n  //\n\n  var script$y = {\n    name: 'v-ons-row',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$y = script$y;\n\n  /* template */\n  var __vue_render__$y = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-row', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$y = [];\n\n  /* style */\n  var __vue_inject_styles__$y = undefined;\n  /* scoped */\n  var __vue_scope_id__$y = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$y = false;\n  /* component normalizer */\n  function __vue_normalize__$y(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsRow.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsRow = __vue_normalize__$y({ render: __vue_render__$y, staticRenderFns: __vue_staticRenderFns__$y }, __vue_inject_styles__$y, __vue_script__$y, __vue_scope_id__$y, __vue_is_functional_template__$y);\n\n  //\n\n  var script$x = {\n    name: 'v-ons-col',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$x = script$x;\n\n  /* template */\n  var __vue_render__$x = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-col', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$x = [];\n\n  /* style */\n  var __vue_inject_styles__$x = undefined;\n  /* scoped */\n  var __vue_scope_id__$x = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$x = false;\n  /* component normalizer */\n  function __vue_normalize__$x(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsCol.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsCol = __vue_normalize__$x({ render: __vue_render__$x, staticRenderFns: __vue_staticRenderFns__$x }, __vue_inject_styles__$x, __vue_script__$x, __vue_scope_id__$x, __vue_is_functional_template__$x);\n\n  //\n\n  var script$w = {\n    name: 'v-ons-progress-bar',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$w = script$w;\n\n  /* template */\n  var __vue_render__$w = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-progress-bar', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$w = [];\n\n  /* style */\n  var __vue_inject_styles__$w = undefined;\n  /* scoped */\n  var __vue_scope_id__$w = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$w = false;\n  /* component normalizer */\n  function __vue_normalize__$w(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsProgressBar.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsProgressBar = __vue_normalize__$w({ render: __vue_render__$w, staticRenderFns: __vue_staticRenderFns__$w }, __vue_inject_styles__$w, __vue_script__$w, __vue_scope_id__$w, __vue_is_functional_template__$w);\n\n  //\n\n  var script$v = {\n    name: 'v-ons-progress-circular',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$v = script$v;\n\n  /* template */\n  var __vue_render__$v = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-progress-circular', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$v = [];\n\n  /* style */\n  var __vue_inject_styles__$v = undefined;\n  /* scoped */\n  var __vue_scope_id__$v = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$v = false;\n  /* component normalizer */\n  function __vue_normalize__$v(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsProgressCircular.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsProgressCircular = __vue_normalize__$v({ render: __vue_render__$v, staticRenderFns: __vue_staticRenderFns__$v }, __vue_inject_styles__$v, __vue_script__$v, __vue_scope_id__$v, __vue_is_functional_template__$v);\n\n  //\n\n  var script$u = {\n    name: 'v-ons-carousel-item',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$u = script$u;\n\n  /* template */\n  var __vue_render__$u = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-carousel-item', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$u = [];\n\n  /* style */\n  var __vue_inject_styles__$u = undefined;\n  /* scoped */\n  var __vue_scope_id__$u = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$u = false;\n  /* component normalizer */\n  function __vue_normalize__$u(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsCarouselItem.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsCarouselItem = __vue_normalize__$u({ render: __vue_render__$u, staticRenderFns: __vue_staticRenderFns__$u }, __vue_inject_styles__$u, __vue_script__$u, __vue_scope_id__$u, __vue_is_functional_template__$u);\n\n  //\n\n  var script$t = {\n    name: 'v-ons-splitter-mask',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$t = script$t;\n\n  /* template */\n  var __vue_render__$t = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-splitter-mask', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$t = [];\n\n  /* style */\n  var __vue_inject_styles__$t = undefined;\n  /* scoped */\n  var __vue_scope_id__$t = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$t = false;\n  /* component normalizer */\n  function __vue_normalize__$t(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSplitterMask.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSplitterMask = __vue_normalize__$t({ render: __vue_render__$t, staticRenderFns: __vue_staticRenderFns__$t }, __vue_inject_styles__$t, __vue_script__$t, __vue_scope_id__$t, __vue_is_functional_template__$t);\n\n  //\n\n  var script$s = {\n    name: 'v-ons-splitter-content',\n    mixins: [deriveEvents]\n  };\n\n  /* script */\n  var __vue_script__$s = script$s;\n\n  /* template */\n  var __vue_render__$s = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-splitter-content', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$s = [];\n\n  /* style */\n  var __vue_inject_styles__$s = undefined;\n  /* scoped */\n  var __vue_scope_id__$s = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$s = false;\n  /* component normalizer */\n  function __vue_normalize__$s(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSplitterContent.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSplitterContent = __vue_normalize__$s({ render: __vue_render__$s, staticRenderFns: __vue_staticRenderFns__$s }, __vue_inject_styles__$s, __vue_script__$s, __vue_scope_id__$s, __vue_is_functional_template__$s);\n\n  //\n\n  var script$r = {\n    name: 'v-ons-splitter',\n    mixins: [deriveEvents, selfProvider, deriveDBB]\n  };\n\n  /* script */\n  var __vue_script__$r = script$r;\n\n  /* template */\n  var __vue_render__$r = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-splitter', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$r = [];\n\n  /* style */\n  var __vue_inject_styles__$r = undefined;\n  /* scoped */\n  var __vue_scope_id__$r = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$r = false;\n  /* component normalizer */\n  function __vue_normalize__$r(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSplitter.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSplitter = __vue_normalize__$r({ render: __vue_render__$r, staticRenderFns: __vue_staticRenderFns__$r }, __vue_inject_styles__$r, __vue_script__$r, __vue_scope_id__$r, __vue_is_functional_template__$r);\n\n  //\n\n  var script$q = {\n    name: 'v-ons-switch',\n    mixins: [deriveEvents, modelCheckbox, modifier]\n  };\n\n  /* script */\n  var __vue_script__$q = script$q;\n\n  /* template */\n  var __vue_render__$q = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-switch', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$q = [];\n\n  /* style */\n  var __vue_inject_styles__$q = undefined;\n  /* scoped */\n  var __vue_scope_id__$q = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$q = false;\n  /* component normalizer */\n  function __vue_normalize__$q(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSwitch.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSwitch = __vue_normalize__$q({ render: __vue_render__$q, staticRenderFns: __vue_staticRenderFns__$q }, __vue_inject_styles__$q, __vue_script__$q, __vue_scope_id__$q, __vue_is_functional_template__$q);\n\n  //\n\n  var script$p = {\n    name: 'v-ons-checkbox',\n    mixins: [deriveEvents, modelCheckbox, modifier]\n  };\n\n  /* script */\n  var __vue_script__$p = script$p;\n\n  /* template */\n  var __vue_render__$p = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-checkbox', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$p = [];\n\n  /* style */\n  var __vue_inject_styles__$p = undefined;\n  /* scoped */\n  var __vue_scope_id__$p = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$p = false;\n  /* component normalizer */\n  function __vue_normalize__$p(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsCheckbox.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsCheckbox = __vue_normalize__$p({ render: __vue_render__$p, staticRenderFns: __vue_staticRenderFns__$p }, __vue_inject_styles__$p, __vue_script__$p, __vue_scope_id__$p, __vue_is_functional_template__$p);\n\n  //\n\n  var script$o = {\n    name: 'v-ons-input',\n    mixins: [deriveEvents, modelInput, modifier]\n  };\n\n  /* script */\n  var __vue_script__$o = script$o;\n\n  /* template */\n  var __vue_render__$o = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-input', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$o = [];\n\n  /* style */\n  var __vue_inject_styles__$o = undefined;\n  /* scoped */\n  var __vue_scope_id__$o = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$o = false;\n  /* component normalizer */\n  function __vue_normalize__$o(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsInput.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsInput = __vue_normalize__$o({ render: __vue_render__$o, staticRenderFns: __vue_staticRenderFns__$o }, __vue_inject_styles__$o, __vue_script__$o, __vue_scope_id__$o, __vue_is_functional_template__$o);\n\n  //\n\n  var script$n = {\n    name: 'v-ons-search-input',\n    mixins: [deriveEvents, modelInput, modifier]\n  };\n\n  /* script */\n  var __vue_script__$n = script$n;\n\n  /* template */\n  var __vue_render__$n = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-search-input', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$n = [];\n\n  /* style */\n  var __vue_inject_styles__$n = undefined;\n  /* scoped */\n  var __vue_scope_id__$n = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$n = false;\n  /* component normalizer */\n  function __vue_normalize__$n(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSearchInput.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSearchInput = __vue_normalize__$n({ render: __vue_render__$n, staticRenderFns: __vue_staticRenderFns__$n }, __vue_inject_styles__$n, __vue_script__$n, __vue_scope_id__$n, __vue_is_functional_template__$n);\n\n  //\n\n  var script$m = {\n    name: 'v-ons-range',\n    mixins: [deriveEvents, modelInput, modifier]\n  };\n\n  /* script */\n  var __vue_script__$m = script$m;\n\n  /* template */\n  var __vue_render__$m = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-range', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$m = [];\n\n  /* style */\n  var __vue_inject_styles__$m = undefined;\n  /* scoped */\n  var __vue_scope_id__$m = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$m = false;\n  /* component normalizer */\n  function __vue_normalize__$m(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsRange.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsRange = __vue_normalize__$m({ render: __vue_render__$m, staticRenderFns: __vue_staticRenderFns__$m }, __vue_inject_styles__$m, __vue_script__$m, __vue_scope_id__$m, __vue_is_functional_template__$m);\n\n  //\n\n  var script$l = {\n    name: 'v-ons-radio',\n    mixins: [deriveEvents, modelRadio, modifier]\n  };\n\n  /* script */\n  var __vue_script__$l = script$l;\n\n  /* template */\n  var __vue_render__$l = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-radio', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$l = [];\n\n  /* style */\n  var __vue_inject_styles__$l = undefined;\n  /* scoped */\n  var __vue_scope_id__$l = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$l = false;\n  /* component normalizer */\n  function __vue_normalize__$l(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsRadio.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsRadio = __vue_normalize__$l({ render: __vue_render__$l, staticRenderFns: __vue_staticRenderFns__$l }, __vue_inject_styles__$l, __vue_script__$l, __vue_scope_id__$l, __vue_is_functional_template__$l);\n\n  //\n\n  var script$k = {\n    name: 'v-ons-fab',\n    mixins: [deriveEvents, hidable, modifier]\n  };\n\n  /* script */\n  var __vue_script__$k = script$k;\n\n  /* template */\n  var __vue_render__$k = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-fab', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$k = [];\n\n  /* style */\n  var __vue_inject_styles__$k = undefined;\n  /* scoped */\n  var __vue_scope_id__$k = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$k = false;\n  /* component normalizer */\n  function __vue_normalize__$k(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsFab.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsFab = __vue_normalize__$k({ render: __vue_render__$k, staticRenderFns: __vue_staticRenderFns__$k }, __vue_inject_styles__$k, __vue_script__$k, __vue_scope_id__$k, __vue_is_functional_template__$k);\n\n  //\n\n  var script$j = {\n    name: 'v-ons-speed-dial-item',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$j = script$j;\n\n  /* template */\n  var __vue_render__$j = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-speed-dial-item', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$j = [];\n\n  /* style */\n  var __vue_inject_styles__$j = undefined;\n  /* scoped */\n  var __vue_scope_id__$j = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$j = false;\n  /* component normalizer */\n  function __vue_normalize__$j(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSpeedDialItem.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSpeedDialItem = __vue_normalize__$j({ render: __vue_render__$j, staticRenderFns: __vue_staticRenderFns__$j }, __vue_inject_styles__$j, __vue_script__$j, __vue_scope_id__$j, __vue_is_functional_template__$j);\n\n  //\n\n  var script$i = {\n    name: 'v-ons-dialog',\n    mixins: [deriveEvents, hidable, hasOptions, dialogCancel, deriveDBB, portal, modifier]\n  };\n\n  /* script */\n  var __vue_script__$i = script$i;\n\n  /* template */\n  var __vue_render__$i = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-dialog', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$i = [];\n\n  /* style */\n  var __vue_inject_styles__$i = undefined;\n  /* scoped */\n  var __vue_scope_id__$i = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$i = false;\n  /* component normalizer */\n  function __vue_normalize__$i(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsDialog.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsDialog = __vue_normalize__$i({ render: __vue_render__$i, staticRenderFns: __vue_staticRenderFns__$i }, __vue_inject_styles__$i, __vue_script__$i, __vue_scope_id__$i, __vue_is_functional_template__$i);\n\n  //\n\n  var script$h = {\n    name: 'v-ons-action-sheet',\n    mixins: [deriveEvents, hidable, hasOptions, dialogCancel, deriveDBB, portal, modifier]\n  };\n\n  /* script */\n  var __vue_script__$h = script$h;\n\n  /* template */\n  var __vue_render__$h = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-action-sheet', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$h = [];\n\n  /* style */\n  var __vue_inject_styles__$h = undefined;\n  /* scoped */\n  var __vue_scope_id__$h = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$h = false;\n  /* component normalizer */\n  function __vue_normalize__$h(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsActionSheet.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsActionSheet = __vue_normalize__$h({ render: __vue_render__$h, staticRenderFns: __vue_staticRenderFns__$h }, __vue_inject_styles__$h, __vue_script__$h, __vue_scope_id__$h, __vue_is_functional_template__$h);\n\n  //\n\n  var script$g = {\n    name: 'v-ons-action-sheet-button',\n    mixins: [deriveEvents, modifier]\n  };\n\n  /* script */\n  var __vue_script__$g = script$g;\n\n  /* template */\n  var __vue_render__$g = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-action-sheet-button', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$g = [];\n\n  /* style */\n  var __vue_inject_styles__$g = undefined;\n  /* scoped */\n  var __vue_scope_id__$g = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$g = false;\n  /* component normalizer */\n  function __vue_normalize__$g(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsActionSheetButton.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsActionSheetButton = __vue_normalize__$g({ render: __vue_render__$g, staticRenderFns: __vue_staticRenderFns__$g }, __vue_inject_styles__$g, __vue_script__$g, __vue_scope_id__$g, __vue_is_functional_template__$g);\n\n  //\n\n  var script$f = {\n    name: 'v-ons-modal',\n    mixins: [deriveEvents, hidable, hasOptions, deriveDBB, portal, modifier]\n  };\n\n  /* script */\n  var __vue_script__$f = script$f;\n\n  /* template */\n  var __vue_render__$f = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-modal', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$f = [];\n\n  /* style */\n  var __vue_inject_styles__$f = undefined;\n  /* scoped */\n  var __vue_scope_id__$f = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$f = false;\n  /* component normalizer */\n  function __vue_normalize__$f(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsModal.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsModal = __vue_normalize__$f({ render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f }, __vue_inject_styles__$f, __vue_script__$f, __vue_scope_id__$f, __vue_is_functional_template__$f);\n\n  //\n\n  var script$e = {\n    name: 'v-ons-toast',\n    mixins: [deriveEvents, hidable, hasOptions, deriveDBB, portal, modifier]\n  };\n\n  /* script */\n  var __vue_script__$e = script$e;\n\n  /* template */\n  var __vue_render__$e = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-toast', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$e = [];\n\n  /* style */\n  var __vue_inject_styles__$e = undefined;\n  /* scoped */\n  var __vue_scope_id__$e = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$e = false;\n  /* component normalizer */\n  function __vue_normalize__$e(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsToast.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsToast = __vue_normalize__$e({ render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e }, __vue_inject_styles__$e, __vue_script__$e, __vue_scope_id__$e, __vue_is_functional_template__$e);\n\n  //\n\n  var script$d = {\n    name: 'v-ons-popover',\n    mixins: [hidable, hasOptions, dialogCancel, deriveEvents, deriveDBB, portal],\n\n    props: {\n      target: {\n        validator: function validator(value) {\n          return value._isVue || typeof value === 'string' || value instanceof Event || value instanceof HTMLElement;\n        }\n      }\n    },\n\n    computed: {\n      normalizedTarget: function normalizedTarget() {\n        if (this.target && this.target._isVue) {\n          return this.target.$el;\n        }\n        return this.target;\n      },\n      normalizedOptions: function normalizedOptions() {\n        if (this.target) {\n          return _extends({\n            target: this.normalizedTarget\n          }, this.options);\n        }\n        return this.options;\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$d = script$d;\n\n  /* template */\n  var __vue_render__$d = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-popover', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$d = [];\n\n  /* style */\n  var __vue_inject_styles__$d = undefined;\n  /* scoped */\n  var __vue_scope_id__$d = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$d = false;\n  /* component normalizer */\n  function __vue_normalize__$d(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsPopover.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsPopover = __vue_normalize__$d({ render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d }, __vue_inject_styles__$d, __vue_script__$d, __vue_scope_id__$d, __vue_is_functional_template__$d);\n\n  //\n\n  var script$c = {\n    name: 'v-ons-alert-dialog',\n    mixins: [hidable, hasOptions, dialogCancel, deriveEvents, deriveDBB, portal, modifier],\n\n    props: {\n      title: {\n        type: String\n      },\n      footer: {\n        type: Object,\n        validator: function validator(value) {\n          return Object.keys(value).every(function (key) {\n            return value[key] instanceof Function;\n          });\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$c = script$c;\n\n  /* template */\n  var __vue_render__$c = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-alert-dialog', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.unrecognizedListeners), [_c('div', { staticClass: \"alert-dialog-title\" }, [_vm._t(\"title\", function () {\n      return [_vm._v(_vm._s(_vm.title))];\n    })], 2), _vm._v(\" \"), _c('div', { staticClass: \"alert-dialog-content\" }, [_vm._t(\"default\")], 2), _vm._v(\" \"), _c('div', { staticClass: \"alert-dialog-footer\" }, [_vm._t(\"footer\", function () {\n      return _vm._l(_vm.footer, function (handler, key) {\n        return _c('ons-alert-dialog-button', { key: key, on: { \"click\": handler } }, [_vm._v(_vm._s(key))]);\n      });\n    })], 2)]);\n  };\n  var __vue_staticRenderFns__$c = [];\n\n  /* style */\n  var __vue_inject_styles__$c = undefined;\n  /* scoped */\n  var __vue_scope_id__$c = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$c = false;\n  /* component normalizer */\n  function __vue_normalize__$c(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsAlertDialog.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsAlertDialog = __vue_normalize__$c({ render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c }, __vue_inject_styles__$c, __vue_script__$c, __vue_scope_id__$c, __vue_is_functional_template__$c);\n\n  //\n\n  var script$b = {\n    name: 'v-ons-speed-dial',\n    mixins: [deriveEvents, hidable],\n\n    props: {\n      open: {\n        type: Boolean,\n        default: undefined\n      }\n    },\n\n    methods: {\n      action: function action() {\n        var runDefault = true;\n        this.$emit('click', { preventDefault: function preventDefault() {\n            return runDefault = false;\n          } });\n\n        if (runDefault) {\n          this.$el.toggleItems();\n        }\n      },\n      _shouldUpdate: function _shouldUpdate() {\n        return this.open !== undefined && this.open !== this.$el.isOpen();\n      },\n      _updateToggle: function _updateToggle() {\n        this._shouldUpdate() && this.$el[this.open ? 'showItems' : 'hideItems'].call(this.$el);\n      }\n    },\n\n    watch: {\n      open: function open() {\n        this._updateToggle();\n      }\n    },\n\n    mounted: function mounted() {\n      var _this = this;\n\n      this.$on(['open', 'close'], function () {\n        return _this._shouldUpdate() && _this.$emit('update:open', _this.$el.isOpen());\n      });\n\n      this._updateToggle();\n    }\n  };\n\n  /* script */\n  var __vue_script__$b = script$b;\n\n  /* template */\n  var __vue_render__$b = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-speed-dial', { domProps: { \"onClick\": _vm.action } }, [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$b = [];\n\n  /* style */\n  var __vue_inject_styles__$b = undefined;\n  /* scoped */\n  var __vue_scope_id__$b = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$b = false;\n  /* component normalizer */\n  function __vue_normalize__$b(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSpeedDial.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSpeedDial = __vue_normalize__$b({ render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b }, __vue_inject_styles__$b, __vue_script__$b, __vue_scope_id__$b, __vue_is_functional_template__$b);\n\n  //\n\n  var script$a = {\n    name: 'v-ons-carousel',\n    mixins: [hasOptions, deriveEvents],\n\n    props: {\n      index: {\n        type: Number\n      },\n      onSwipe: {\n        type: Function\n      }\n    },\n\n    watch: {\n      index: function index() {\n        if (this.index !== this.$el.getActiveIndex()) {\n          this.$el.setActiveIndex(this.index, this.options);\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$a = script$a;\n\n  /* template */\n  var __vue_render__$a = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-carousel', _vm._g({ attrs: { \"initial-index\": _vm.index }, domProps: { \"onSwipe\": _vm.onSwipe }, on: { \"postchange\": function postchange($event) {\n          if ($event.target !== $event.currentTarget) {\n            return null;\n          }return _vm.$emit('update:index', $event.activeIndex);\n        } } }, _vm.unrecognizedListeners), [_c('div', [_vm._t(\"default\")], 2), _vm._v(\" \"), _c('div')]);\n  };\n  var __vue_staticRenderFns__$a = [];\n\n  /* style */\n  var __vue_inject_styles__$a = undefined;\n  /* scoped */\n  var __vue_scope_id__$a = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$a = false;\n  /* component normalizer */\n  function __vue_normalize__$a(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsCarousel.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsCarousel = __vue_normalize__$a({ render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a }, __vue_inject_styles__$a, __vue_script__$a, __vue_scope_id__$a, __vue_is_functional_template__$a);\n\n  //\n  //\n  //\n  //\n  //\n\n  // 'ons-tab';\n\n  var script$9 = {\n    name: 'v-ons-tab',\n    inject: ['tabbar'],\n\n    props: {\n      page: {},\n      props: {},\n      active: {\n        type: Boolean\n      }\n    },\n\n    methods: {\n      action: function action() {\n        var runDefault = true;\n        this.$emit('click', { preventDefault: function preventDefault() {\n            return runDefault = false;\n          } });\n\n        if (runDefault) {\n          this.tabbar.$el.setActiveTab(this.$el.index, _extends({ reject: false }, this.tabbar.options));\n        }\n      }\n    },\n\n    watch: {\n      active: function active() {\n        this.$el.setActive(this.active);\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$9 = script$9;\n\n  /* template */\n  var __vue_render__$9 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-tab', { attrs: { \"active\": _vm.active }, domProps: { \"onClick\": _vm.action } });\n  };\n  var __vue_staticRenderFns__$9 = [];\n\n  /* style */\n  var __vue_inject_styles__$9 = undefined;\n  /* scoped */\n  var __vue_scope_id__$9 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$9 = false;\n  /* component normalizer */\n  function __vue_normalize__$9(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsTab.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsTab = __vue_normalize__$9({ render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 }, __vue_inject_styles__$9, __vue_script__$9, __vue_scope_id__$9, __vue_is_functional_template__$9);\n\n  //\n\n  var script$8 = {\n    name: 'v-ons-tabbar',\n    mixins: [deriveEvents, hasOptions, hidable, selfProvider, modifier],\n\n    props: {\n      index: {\n        type: Number\n      },\n      tabs: {\n        type: Array,\n        validator: function validator(value) {\n          return value.every(function (tab) {\n            return ['icon', 'label', 'page'].some(function (prop) {\n              return !!Object.getOwnPropertyDescriptor(tab, prop);\n            });\n          });\n        }\n      },\n      onSwipe: {\n        type: Function\n      },\n      tabbarStyle: {\n        type: null\n      }\n    },\n\n    methods: {\n      _tabKey: function _tabKey(tab) {\n        return tab.key || tab.label || tab.icon;\n      }\n    },\n\n    watch: {\n      index: function index() {\n        if (this.index !== this.$el.getActiveTabIndex()) {\n          this.$el.setActiveTab(this.index, _extends({ reject: false }, this.options));\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$8 = script$8;\n\n  /* template */\n  var __vue_render__$8 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-tabbar', _vm._g({ attrs: { \"activeIndex\": _vm.index, \"modifier\": _vm.normalizedModifier }, domProps: { \"onSwipe\": _vm.onSwipe }, on: { \"prechange\": function prechange($event) {\n          if ($event.target !== $event.currentTarget) {\n            return null;\n          }_vm.$nextTick(function () {\n            return !$event.detail.canceled && _vm.$emit('update:index', $event.index);\n          });\n        } } }, _vm.unrecognizedListeners), [_c('div', { staticClass: \"tabbar__content\" }, [_c('div', [_vm._t(\"pages\", function () {\n      return _vm._l(_vm.tabs, function (tab) {\n        return _c(tab.page, _vm._g(_vm._b({ key: tab.page.key || tab.page.name || _vm._tabKey(tab), tag: \"component\" }, 'component', tab.props, false), _vm.unrecognizedListeners));\n      });\n    })], 2), _vm._v(\" \"), _c('div')]), _vm._v(\" \"), _c('div', { staticClass: \"tabbar\", style: _vm.tabbarStyle }, [_vm._t(\"default\", function () {\n      return _vm._l(_vm.tabs, function (tab) {\n        return _c('v-ons-tab', _vm._b({ key: _vm._tabKey(tab) }, 'v-ons-tab', tab, false));\n      });\n    }), _vm._v(\" \"), _c('div', { staticClass: \"tabbar__border\" })], 2)]);\n  };\n  var __vue_staticRenderFns__$8 = [];\n\n  /* style */\n  var __vue_inject_styles__$8 = undefined;\n  /* scoped */\n  var __vue_scope_id__$8 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$8 = false;\n  /* component normalizer */\n  function __vue_normalize__$8(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsTabbar.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsTabbar = __vue_normalize__$8({ render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 }, __vue_inject_styles__$8, __vue_script__$8, __vue_scope_id__$8, __vue_is_functional_template__$8);\n\n  //\n\n  var script$7 = {\n    name: 'v-ons-back-button',\n    inject: ['navigator'],\n    mixins: [modifier],\n\n    methods: {\n      action: function action() {\n        var runDefault = true;\n        this.$emit('click', { preventDefault: function preventDefault() {\n            return runDefault = false;\n          } });\n\n        if (runDefault && this.navigator.pageStack.length > 1) {\n          this.navigator.popPage();\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$7 = script$7;\n\n  /* template */\n  var __vue_render__$7 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-back-button', { domProps: { \"onClick\": _vm.action } }, [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$7 = [];\n\n  /* style */\n  var __vue_inject_styles__$7 = undefined;\n  /* scoped */\n  var __vue_scope_id__$7 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$7 = false;\n  /* component normalizer */\n  function __vue_normalize__$7(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsBackButton.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsBackButton = __vue_normalize__$7({ render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 }, __vue_inject_styles__$7, __vue_script__$7, __vue_scope_id__$7, __vue_is_functional_template__$7);\n\n  //\n\n  var script$6 = {\n    name: 'v-ons-navigator',\n    mixins: [hasOptions, selfProvider, deriveEvents, deriveDBB],\n\n    props: {\n      pageStack: {\n        type: Array,\n        required: true\n      },\n      popPage: {\n        type: Function,\n        default: function _default() {\n          this.pageStack.pop();\n        }\n      }\n    },\n\n    methods: {\n      isReady: function isReady() {\n        if (this.hasOwnProperty('_ready') && this._ready instanceof Promise) {\n          return this._ready;\n        }\n        return Promise.resolve();\n      },\n      onDeviceBackButton: function onDeviceBackButton(event) {\n        if (this.pageStack.length > 1) {\n          this.popPage();\n        } else {\n          event.callParentHandler();\n        }\n      },\n      _findScrollPage: function _findScrollPage(page) {\n        var nextPage = page._contentElement.children.length === 1 && this.$ons._ons._util.getTopPage(page._contentElement.children[0]);\n        return nextPage ? this._findScrollPage(nextPage) : page;\n      },\n      _eachPage: function _eachPage(start, end, cb) {\n        for (var i = start; i < end; i++) {\n          cb(this.$children[i].$el);\n        }\n      },\n      _reattachPage: function _reattachPage(pageElement) {\n        var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        var restoreScroll = arguments[2];\n\n        this.$el.insertBefore(pageElement, position);\n        restoreScroll instanceof Function && restoreScroll();\n        pageElement._isShown = true;\n      },\n      _redetachPage: function _redetachPage(pageElement) {\n        pageElement._destroy();\n        return Promise.resolve();\n      },\n      _animate: function _animate(_ref) {\n        var _this = this;\n\n        var lastLength = _ref.lastLength,\n            currentLength = _ref.currentLength,\n            lastTopPage = _ref.lastTopPage,\n            currentTopPage = _ref.currentTopPage,\n            restoreScroll = _ref.restoreScroll;\n\n        var pushedOptions = this.pageStack[this.pageStack.length - 1].onsNavigatorOptions || currentTopPage.__vue__.onsNavigatorOptions || {};\n\n        // Push\n        if (currentLength > lastLength) {\n          var isReattached = false;\n          if (lastTopPage.parentElement !== this.$el) {\n            this._reattachPage(lastTopPage, this.$el.children[lastLength - 1], restoreScroll);\n            isReattached = true;\n            lastLength--;\n          }\n\n          this._eachPage(lastLength, currentLength, function (el) {\n            el.style.visibility = 'hidden';\n          });\n          this._eachPage(lastLength, currentLength - 1, function (el) {\n            el.pushedOptions = pushedOptions;\n          });\n\n          return this.$el._pushPage(_extends({}, pushedOptions, { leavePage: lastTopPage })).then(function () {\n            setImmediate(function () {\n              _this._eachPage(lastLength, currentLength, function (el) {\n                el.style.visibility = '';\n              });\n              _this._eachPage(lastLength - 1, currentLength - 1, function (el) {\n                el.style.display = 'none';\n              });\n            });\n\n            if (isReattached) {\n              _this._redetachPage(lastTopPage);\n            }\n          }, function () {\n            // push failed or was canceled\n            _this._canceled = true;\n            _this.pageStack.pop();\n          });\n        }\n\n        // Pop\n        if (currentLength < lastLength) {\n          this._reattachPage(lastTopPage, null, restoreScroll);\n          return this.$el._popPage({}, function () {\n            return _this._redetachPage(lastTopPage);\n          });\n        }\n\n        // Replace page\n        currentTopPage.style.visibility = 'hidden';\n        this._reattachPage(lastTopPage, currentTopPage, restoreScroll);\n        return this.$el._pushPage(_extends({}, pushedOptions, { _replacePage: true })).then(function () {\n          return _this._redetachPage(lastTopPage);\n        });\n      },\n      _checkSwipe: function _checkSwipe(event) {\n        if (this.$el.hasAttribute('swipeable') && event.leavePage !== this.$el.lastChild && event.leavePage === this.$children[this.$children.length - 1].$el) {\n          this.popPage();\n        }\n      }\n    },\n\n    watch: {\n      pageStack: function pageStack(after, before) {\n        if (this.$el.hasAttribute('swipeable') && this.$children.length !== this.$el.children.length) {\n          return;\n        }\n\n        // watcher triggered by undoing a canceled push or pop\n        if (this._canceled) {\n          this._canceled = null;\n          return;\n        }\n\n        var propWasMutated = after === before; // Can be mutated or replaced\n        var lastTopPage = this.$children[this.$children.length - 1].$el;\n        var scrollElement = this._findScrollPage(lastTopPage);\n        var scrollValue = scrollElement.scrollTop || 0;\n\n        this._pageStackUpdate = {\n          lastTopPage: lastTopPage,\n          lastLength: propWasMutated ? this.$children.length : before.length,\n          currentLength: !propWasMutated && after.length,\n          restoreScroll: function restoreScroll() {\n            return scrollElement.scrollTop = scrollValue;\n          }\n        };\n\n        // this.$nextTick(() => { }); // Waits too long, updated() hook is faster and prevents flickerings\n      }\n    },\n\n    updated: function updated() {\n      if (this._pageStackUpdate) {\n        var currentTopPage = this.$children[this.$children.length - 1].$el;\n        var _pageStackUpdate = this._pageStackUpdate,\n            lastTopPage = _pageStackUpdate.lastTopPage,\n            currentLength = _pageStackUpdate.currentLength;\n        var _pageStackUpdate2 = this._pageStackUpdate,\n            lastLength = _pageStackUpdate2.lastLength,\n            restoreScroll = _pageStackUpdate2.restoreScroll;\n\n        currentLength = currentLength === false ? this.$children.length : currentLength;\n\n        if (currentTopPage !== lastTopPage) {\n          this._ready = this._animate({ lastLength: lastLength, currentLength: currentLength, lastTopPage: lastTopPage, currentTopPage: currentTopPage, restoreScroll: restoreScroll });\n        } else if (currentLength !== lastLength) {\n          currentTopPage.updateBackButton(currentLength > 1);\n        }\n\n        lastTopPage = currentTopPage = this._pageStackUpdate = null;\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$6 = script$6;\n\n  /* template */\n  var __vue_render__$6 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-navigator', _vm._g({ domProps: { \"options\": _vm.options }, on: { \"postpop\": function postpop($event) {\n          if ($event.target !== $event.currentTarget) {\n            return null;\n          }return _vm._checkSwipe.apply(null, arguments);\n        } } }, _vm.unrecognizedListeners), [_vm._t(\"default\", function () {\n      return _vm._l(_vm.pageStack, function (page) {\n        return _c(page, _vm._g(_vm._b({ key: page.key || page.name, tag: \"component\" }, 'component', page.onsNavigatorProps, false), _vm.unrecognizedListeners));\n      });\n    })], 2);\n  };\n  var __vue_staticRenderFns__$6 = [];\n\n  /* style */\n  var __vue_inject_styles__$6 = undefined;\n  /* scoped */\n  var __vue_scope_id__$6 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$6 = false;\n  /* component normalizer */\n  function __vue_normalize__$6(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsNavigator.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsNavigator = __vue_normalize__$6({ render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 }, __vue_inject_styles__$6, __vue_script__$6, __vue_scope_id__$6, __vue_is_functional_template__$6);\n\n  //\n\n  var script$5 = {\n    name: 'v-ons-splitter-side',\n    mixins: [hasOptions, deriveEvents],\n\n    props: {\n      open: {\n        type: Boolean,\n        default: undefined\n      }\n    },\n\n    methods: {\n      action: function action() {\n        this._shouldUpdate() && this.$el[this.open ? 'open' : 'close'].call(this.$el, this.options).catch(function () {});\n      },\n      _shouldUpdate: function _shouldUpdate() {\n        return this.open !== undefined && this.open !== this.$el.isOpen;\n      }\n    },\n\n    watch: {\n      open: function open() {\n        this.action();\n      }\n    },\n\n    mounted: function mounted() {\n      var _this = this;\n\n      this.$on(['postopen', 'postclose', 'modechange'], function () {\n        return _this._shouldUpdate() && _this.$emit('update:open', _this.$el.isOpen);\n      });\n\n      this.action();\n    }\n  };\n\n  /* script */\n  var __vue_script__$5 = script$5;\n\n  /* template */\n  var __vue_render__$5 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-splitter-side', _vm._g({}, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$5 = [];\n\n  /* style */\n  var __vue_inject_styles__$5 = undefined;\n  /* scoped */\n  var __vue_scope_id__$5 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$5 = false;\n  /* component normalizer */\n  function __vue_normalize__$5(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSplitterSide.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSplitterSide = __vue_normalize__$5({ render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 }, __vue_inject_styles__$5, __vue_script__$5, __vue_scope_id__$5, __vue_is_functional_template__$5);\n\n  //\n  //\n  //\n  //\n  //\n\n  // 'ons-lazy-repeat';\n\n  var script$4 = {\n    name: 'v-ons-lazy-repeat',\n\n    props: {\n      renderItem: {\n        type: Function,\n        required: true,\n        validator: function validator(value) {\n          var component = value(0);\n          if (component._isVue && !component._isMounted) {\n            component.$destroy();\n            return true;\n          }\n          return false;\n        }\n      },\n      length: {\n        type: Number,\n        required: true\n      },\n      calculateItemHeight: {\n        type: Function,\n        default: undefined\n      }\n    },\n\n    data: function data() {\n      return {\n        provider: null\n      };\n    },\n\n\n    methods: {\n      _setup: function _setup() {\n        var _this = this;\n\n        this.provider && this.provider.destroy();\n\n        var delegate = new this.$ons._ons._internal.LazyRepeatDelegate({\n          calculateItemHeight: this.calculateItemHeight,\n          createItemContent: function createItemContent(i) {\n            return _this.renderItem(i).$mount().$el;\n          },\n          destroyItem: function destroyItem(i, _ref) {\n            var element = _ref.element;\n            return element.__vue__.$destroy();\n          },\n          countItems: function countItems() {\n            return _this.length;\n          }\n        }, null);\n\n        this.provider = new this.$ons._ons._internal.LazyRepeatProvider(this.$parent.$el, delegate);\n      },\n      refresh: function refresh() {\n        return this.provider.refresh();\n      }\n    },\n\n    watch: {\n      renderItem: function renderItem() {\n        this._setup();\n      },\n      length: function length() {\n        this._setup();\n      },\n      calculateItemHeight: function calculateItemHeight() {\n        this._setup();\n      }\n    },\n\n    mounted: function mounted() {\n      this._setup();\n      this.$vnode.context.$on('refresh', this.refresh);\n    },\n    beforeDestroy: function beforeDestroy() {\n      this.$vnode.context.$off('refresh', this.refresh);\n\n      // This will destroy the provider once the rendered element\n      // is detached (detachedCallback). Therefore, animations\n      // have time to finish before elements start to disappear.\n      // It cannot be set earlier in order to prevent accidental\n      // destroys if this element is retached by something else.\n      this.$el._lazyRepeatProvider = this.provider;\n      this.provider = null;\n    }\n  };\n\n  /* script */\n  var __vue_script__$4 = script$4;\n\n  /* template */\n  var __vue_render__$4 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-lazy-repeat');\n  };\n  var __vue_staticRenderFns__$4 = [];\n\n  /* style */\n  var __vue_inject_styles__$4 = undefined;\n  /* scoped */\n  var __vue_scope_id__$4 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$4 = false;\n  /* component normalizer */\n  function __vue_normalize__$4(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsLazyRepeat.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsLazyRepeat = __vue_normalize__$4({ render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 }, __vue_inject_styles__$4, __vue_script__$4, __vue_scope_id__$4, __vue_is_functional_template__$4);\n\n  //\n\n  var script$3 = {\n    name: 'v-ons-select',\n    mixins: [modifier],\n    model: {\n      prop: 'modelProp',\n      event: 'modelEvent'\n    },\n    props: {\n      modelProp: [Number, String],\n      modelEvent: {\n        type: String,\n        default: 'input'\n      }\n    },\n    computed: {\n      selectedValue: {\n        get: function get() {\n          return this.modelProp;\n        },\n        set: function set(val) {\n          this.$emit('modelEvent', val);\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$3 = script$3;\n\n  /* template */\n  var __vue_render__$3 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-select', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier } }, _vm.$listeners), [_c('select', { directives: [{ name: \"model\", rawName: \"v-model\", value: _vm.selectedValue, expression: \"selectedValue\" }], on: { \"change\": function change($event) {\n          var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n            return o.selected;\n          }).map(function (o) {\n            var val = \"_value\" in o ? o._value : o.value;return val;\n          });_vm.selectedValue = $event.target.multiple ? $$selectedVal : $$selectedVal[0];\n        } } }, [_vm._t(\"default\")], 2)]);\n  };\n  var __vue_staticRenderFns__$3 = [];\n\n  /* style */\n  var __vue_inject_styles__$3 = undefined;\n  /* scoped */\n  var __vue_scope_id__$3 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$3 = false;\n  /* component normalizer */\n  function __vue_normalize__$3(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSelect.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSelect = __vue_normalize__$3({ render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 }, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3);\n\n  //\n\n  var script$2 = {\n    name: 'v-ons-segment',\n    mixins: [deriveEvents],\n\n    props: {\n      index: {\n        type: Number\n      }\n    },\n\n    watch: {\n      index: function index() {\n        if (this.index !== this.$el.getActiveButtonIndex()) {\n          this.$el.setActiveButton(this.index, { reject: false });\n        }\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$2 = script$2;\n\n  /* template */\n  var __vue_render__$2 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-segment', { attrs: { \"active-index\": _vm.index }, on: { \"postchange\": function postchange($event) {\n          if ($event.target !== $event.currentTarget) {\n            return null;\n          }return _vm.$emit('update:index', $event.index);\n        } } }, [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$2 = [];\n\n  /* style */\n  var __vue_inject_styles__$2 = undefined;\n  /* scoped */\n  var __vue_scope_id__$2 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$2 = false;\n  /* component normalizer */\n  function __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsSegment.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsSegment = __vue_normalize__$2({ render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 }, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2);\n\n  //\n\n  var script$1 = {\n    name: 'v-ons-pull-hook',\n    mixins: [deriveEvents],\n\n    props: {\n      action: {\n        type: Function\n      },\n      onPull: {\n        type: Function\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__$1 = script$1;\n\n  /* template */\n  var __vue_render__$1 = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-pull-hook', _vm._g({ domProps: { \"onAction\": _vm.action, \"onPull\": _vm.onPull } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__$1 = [];\n\n  /* style */\n  var __vue_inject_styles__$1 = undefined;\n  /* scoped */\n  var __vue_scope_id__$1 = undefined;\n  /* functional template */\n  var __vue_is_functional_template__$1 = false;\n  /* component normalizer */\n  function __vue_normalize__$1(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsPullHook.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsPullHook = __vue_normalize__$1({ render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 }, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1);\n\n  //\n\n  var script = {\n    name: 'v-ons-page',\n    mixins: [deriveEvents, deriveDBB, modifier],\n\n    props: {\n      infiniteScroll: {\n        type: Function\n      }\n    }\n  };\n\n  /* script */\n  var __vue_script__ = script;\n\n  /* template */\n  var __vue_render__ = function __vue_render__() {\n    var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('ons-page', _vm._g({ attrs: { \"modifier\": _vm.normalizedModifier }, domProps: { \"onInfiniteScroll\": _vm.infiniteScroll } }, _vm.unrecognizedListeners), [_vm._t(\"default\")], 2);\n  };\n  var __vue_staticRenderFns__ = [];\n\n  /* style */\n  var __vue_inject_styles__ = undefined;\n  /* scoped */\n  var __vue_scope_id__ = undefined;\n  /* functional template */\n  var __vue_is_functional_template__ = false;\n  /* component normalizer */\n  function __vue_normalize__(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n    var component = (typeof script === 'function' ? script.options : script) || {};\n\n    // For security concerns, we use only base name in production mode.\n    component.__file = \"VOnsPage.vue\";\n\n    if (!component.render) {\n      component.render = template.render;\n      component.staticRenderFns = template.staticRenderFns;\n      component._compiled = true;\n\n      if (functional) component.functional = true;\n    }\n\n    component._scopeId = scope;\n\n    return component;\n  }\n  /* style inject */\n\n  /* style inject SSR */\n\n  var VOnsPage = __vue_normalize__({ render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ }, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__);\n\n  // Generic components:\n\n  var components = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    VOnsToolbar: VOnsToolbar,\n    VOnsBottomToolbar: VOnsBottomToolbar,\n    VOnsToolbarButton: VOnsToolbarButton,\n    VOnsAlertDialogButton: VOnsAlertDialogButton,\n    VOnsButton: VOnsButton,\n    VOnsIcon: VOnsIcon,\n    VOnsCard: VOnsCard,\n    VOnsList: VOnsList,\n    VOnsListItem: VOnsListItem,\n    VOnsListTitle: VOnsListTitle,\n    VOnsListHeader: VOnsListHeader,\n    VOnsRipple: VOnsRipple,\n    VOnsRow: VOnsRow,\n    VOnsCol: VOnsCol,\n    VOnsProgressBar: VOnsProgressBar,\n    VOnsProgressCircular: VOnsProgressCircular,\n    VOnsCarouselItem: VOnsCarouselItem,\n    VOnsSplitterMask: VOnsSplitterMask,\n    VOnsSplitterContent: VOnsSplitterContent,\n    VOnsSplitter: VOnsSplitter,\n    VOnsSwitch: VOnsSwitch,\n    VOnsCheckbox: VOnsCheckbox,\n    VOnsInput: VOnsInput,\n    VOnsSearchInput: VOnsSearchInput,\n    VOnsRange: VOnsRange,\n    VOnsRadio: VOnsRadio,\n    VOnsFab: VOnsFab,\n    VOnsSpeedDialItem: VOnsSpeedDialItem,\n    VOnsDialog: VOnsDialog,\n    VOnsActionSheet: VOnsActionSheet,\n    VOnsActionSheetButton: VOnsActionSheetButton,\n    VOnsModal: VOnsModal,\n    VOnsToast: VOnsToast,\n    VOnsPopover: VOnsPopover,\n    VOnsAlertDialog: VOnsAlertDialog,\n    VOnsSpeedDial: VOnsSpeedDial,\n    VOnsCarousel: VOnsCarousel,\n    VOnsTab: VOnsTab,\n    VOnsTabbar: VOnsTabbar,\n    VOnsBackButton: VOnsBackButton,\n    VOnsNavigator: VOnsNavigator,\n    VOnsSplitterSide: VOnsSplitterSide,\n    VOnsLazyRepeat: VOnsLazyRepeat,\n    VOnsSelect: VOnsSelect,\n    VOnsSegment: VOnsSegment,\n    VOnsPullHook: VOnsPullHook,\n    VOnsPage: VOnsPage\n  });\n\n  var $ons = setup(ons__default['default']);\n\n  $ons.install = function (Vue) {\n    /**\n     * Register components of vue-onsenui.\n     */\n    Object.keys(components).forEach(function (key) {\n      return Vue.component(components[key].name, components[key]);\n    });\n\n    /**\n     * Expose ons object.\n     */\n    Vue.prototype.$ons = $ons;\n  };\n\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use({ install: $ons.install });\n  }\n\n  return $ons;\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-onsenui/dist/vue-onsenui.js\n// module id = EOUi\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = VU/8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = W2nU\n// module chunks = 0","/* onsenui v2.11.2 - 2021-01-12 */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ons = factory());\n}(this, (function () { 'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n// Save HTMLElement object before Custom Elements polyfill patch global HTMLElement.\nvar NativeHTMLElement = window.HTMLElement;\n\n/**\n * @object ons.platform\n * @category util\n * @description\n *   [en]Utility methods to detect current platform.[/en]\n *   [ja]現在実行されているプラットフォームを検知するためのユーティリティメソッドを収めたオブジェクトです。[/ja]\n */\n\nvar Platform = function () {\n\n  /**\n   * All elements will be rendered as if the app was running on this platform.\n   * @type {String}\n   */\n  function Platform() {\n    classCallCheck(this, Platform);\n\n    this._selectedPlatform = null;\n    this._ignorePlatformSelect = false;\n  }\n\n  /**\n   * @method select\n   * @signature select(platform)\n   * @param  {string} platform Name of the platform.\n   *   [en]Possible values are: \"opera\", \"firefox\", \"safari\", \"chrome\", \"ie\", \"android\", \"blackberry\", \"ios\" or \"wp\".[/en]\n   *   [ja]\"opera\", \"firefox\", \"safari\", \"chrome\", \"ie\", \"android\", \"blackberry\", \"ios\", \"wp\"のいずれかを指定します。[/ja]\n   * @description\n   *   [en]Sets the platform used to render the elements. Useful for testing.[/en]\n   *   [ja]要素を描画するために利用するプラットフォーム名を設定します。テストに便利です。[/ja]\n   */\n\n\n  createClass(Platform, [{\n    key: 'select',\n    value: function select(platform) {\n      if (typeof platform === 'string') {\n        this._selectedPlatform = platform.trim().toLowerCase();\n      }\n    }\n  }, {\n    key: '_getSelectedPlatform',\n    value: function _getSelectedPlatform() {\n      return this._ignorePlatformSelect ? null : this._selectedPlatform;\n    }\n  }, {\n    key: '_runOnActualPlatform',\n    value: function _runOnActualPlatform(fn) {\n      this._ignorePlatformSelect = true;\n      var result = fn();\n      this._ignorePlatformSelect = false;\n\n      return result;\n    }\n\n    //----------------\n    // General\n    //----------------\n    /**\n     * @method isWebView\n     * @signature isWebView()\n     * @description\n     *   [en]Returns whether app is running in Cordova.[/en]\n     *   [ja]Cordova内で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isWebView',\n    value: function isWebView() {\n      if (document.readyState === 'loading' || document.readyState == 'uninitialized') {\n        throw new Error('isWebView() method is available after dom contents loaded.');\n      }\n\n      return !!(window.cordova || window.phonegap || window.PhoneGap);\n    }\n\n    //----------------\n    // iOS devices\n    //----------------\n    /**\n     * @method isIPhone\n     * @signature isIPhone()\n     * @description\n     *   [en]Returns whether the device is iPhone.[/en]\n     *   [ja]iPhone上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIPhone',\n    value: function isIPhone() {\n      return (/iPhone/i.test(navigator.userAgent)\n      );\n    }\n\n    /**\n     * @method isIPhoneX\n     * @signature isIPhoneX()\n     * @description\n     *   [en]Returns whether the device is iPhone X, XS, XS Max, XR, 11, 11 Pro, 11 Pro Max, 12 Mini, 12, 12 Pro or 12 Pro Max.[/en]\n     *   [ja]iPhone X や XS、XS Max、XR、11、11 Pro、11 Pro Max、12 Mini、12、12 Pro、または12 Pro Max上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIPhoneX',\n    value: function isIPhoneX() {\n      // iOS WebViews on the same iOS version have the same user agent.\n      // We cannot avoid using window.screen.\n      // We also cannot use cordova-plugin-device since its behavior is different between simulators and real devices.\n      // This works well both in iOS Safari and (UI|WK)WebView of iPhone X.\n      return this.isIPhone() && (\n      // X, XS, 11 Pro, 12 Mini\n      window.screen.width === 375 && window.screen.height === 812 || // portrait\n      window.screen.width === 812 && window.screen.height === 375 || // landscape\n\n      // XS Max, XR, 11, 11 Pro Max\n      window.screen.width === 414 && window.screen.height === 896 || // portrait\n      window.screen.width === 896 && window.screen.height === 414 || // landscape\n\n      // 12, 12 Pro\n      window.screen.width === 390 && window.screen.height === 844 || // portrait\n      window.screen.width === 844 && window.screen.height === 390 || // landscape\n\n      // 12 Pro Max\n      window.screen.width === 428 && window.screen.height === 926 || // portrait\n      window.screen.width === 926 && window.screen.height === 428 // landscape\n      );\n    }\n\n    /**\n     * @method isIPad\n     * @signature isIPad()\n     * @description\n     *   [en]Returns whether the device is iPad.[/en]\n     *   [ja]iPad上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIPad',\n    value: function isIPad() {\n      return (/iPad/i.test(navigator.userAgent) || this.isIPadOS()\n      );\n    }\n\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIPod',\n    value: function isIPod() {\n      return (/iPod/i.test(navigator.userAgent)\n      );\n    }\n\n    //----------------\n    // iOS versions\n    //----------------\n    /**\n     * @method isIOS\n     * @signature isIOS([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the OS is iOS. By default will return manually selected platform if it is set.[/en]\n     *   [ja]iOS上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIOS',\n    value: function isIOS(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'ios';\n      }\n\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\n        return (/iOS/i.test(device.platform)\n        );\n      } else {\n        return (/iPhone|iPad|iPod/i.test(navigator.userAgent) || this.isIPadOS()\n        );\n      }\n    }\n\n    /**\n     * @method isIOS7above\n     * @signature isIOS7above()\n     * @description\n     *   [en]Returns whether the iOS version is 7 or above.[/en]\n     *   [ja]iOS7以上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIOS7above',\n    value: function isIOS7above() {\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\n        return (/iOS/i.test(device.platform) && parseInt(device.version.split('.')[0]) >= 7\n        );\n      } else if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\n        var ver = (navigator.userAgent.match(/\\b[0-9]+_[0-9]+(?:_[0-9]+)?\\b/) || [''])[0].replace(/_/g, '.');\n        return parseInt(ver.split('.')[0]) >= 7;\n      }\n      return false;\n    }\n\n    /**\n     * @method isIPadOS\n     * @signature isIPadOS()\n     * @description\n     *   [en]Returns whether the OS is iPadOS.[/en]\n     *   [ja][/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIPadOS',\n    value: function isIPadOS() {\n      // The iPadOS User Agent string is the same as MacOS so as a\n      // workaround we test the max touch points, which is 5 for\n      // iPads and 0 for desktop browsers.\n      return !!(/Macintosh/i.test(navigator.userAgent) && navigator.maxTouchPoints && navigator.maxTouchPoints === 5);\n    }\n\n    //----------------\n    // iOS browsers\n    //----------------\n    /**\n     * @method isIOSSafari\n     * @signature isIOSSafari()\n     * @description\n     *   [en]Returns whether app is running in iOS Safari.[/en]\n     *   [ja]iOS Safariで実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIOSSafari',\n    value: function isIOSSafari() {\n      var navigator = window.navigator;\n      var ua = navigator.userAgent;\n\n      return !!(this.isIOS() && ua.indexOf('Safari') !== -1 && ua.indexOf('Version') !== -1 && !navigator.standalone);\n    }\n\n    /**\n     * @method isWKWebView\n     * @signature isWKWebView()\n     * @description\n     *   [en]Returns whether app is running in WKWebView.[/en]\n     *   [ja]WKWebViewで実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isWKWebView',\n    value: function isWKWebView() {\n      var lte9 = /constructor/i.test(NativeHTMLElement);\n      return !!(this.isIOS() && window.webkit && window.webkit.messageHandlers && window.indexedDB && !lte9);\n    }\n\n    //----------------\n    // Android devices\n    //----------------\n    /**\n     * @method isAndroidPhone\n     * @signature isAndroidPhone()\n     * @description\n     *   [en]Returns whether the device is Android phone.[/en]\n     *   [ja]Android携帯上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAndroidPhone',\n    value: function isAndroidPhone() {\n      return (/Android/i.test(navigator.userAgent) && /Mobile/i.test(navigator.userAgent)\n      );\n    }\n\n    /**\n     * @method isAndroidTablet\n     * @signature isAndroidTablet()\n     * @description\n     *   [en]Returns whether the device is Android tablet.[/en]\n     *   [ja]Androidタブレット上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAndroidTablet',\n    value: function isAndroidTablet() {\n      return (/Android/i.test(navigator.userAgent) && !/Mobile/i.test(navigator.userAgent)\n      );\n    }\n\n    //----------------\n    // Android versions\n    //----------------\n    /**\n     * @method isAndroid\n     * @signature isAndroid([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the OS is Android. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Android上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isAndroid',\n    value: function isAndroid(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'android';\n      }\n\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\n        return (/Android/i.test(device.platform)\n        );\n      } else {\n        return (/Android/i.test(navigator.userAgent)\n        );\n      }\n    }\n\n    //----------------\n    // Other devices\n    //----------------\n    /**\n     * @method isWP\n     * @signature isWP([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the OS is Windows phone. By default will return manually selected platform if it is set.[/en]\n     *   [ja][/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isWP',\n    value: function isWP(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'wp';\n      }\n\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\n        return (/Win32NT|WinCE/i.test(device.platform)\n        );\n      } else {\n        return (/Windows Phone|IEMobile|WPDesktop/i.test(navigator.userAgent)\n        );\n      }\n    }\n\n    /**\n     * @method isBlackBerry\n     * @signature isBlackBerry([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the device is BlackBerry. By default will return manually selected platform if it is set.[/en]\n     *   [ja]BlackBerry上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isBlackBerry',\n    value: function isBlackBerry(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'blackberry';\n      }\n\n      if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object' && !/browser/i.test(device.platform)) {\n        return (/BlackBerry/i.test(device.platform)\n        );\n      } else {\n        return (/BlackBerry|RIM Tablet OS|BB10/i.test(navigator.userAgent)\n        );\n      }\n    }\n\n    //----------------\n    // Other browsers\n    //----------------\n    /**\n     * @method isOpera\n     * @signature isOpera([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Opera. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Opera上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isOpera',\n    value: function isOpera(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'opera';\n      }\n\n      return !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;\n    }\n\n    /**\n     * @method isFirefox\n     * @signature isFirefox([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Firefox. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Firefox上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isFirefox',\n    value: function isFirefox(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'firefox';\n      }\n\n      return typeof InstallTrigger !== 'undefined';\n    }\n\n    /**\n     * @method isSafari\n     * @signature isSafari([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Safari. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Safari上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isSafari',\n    value: function isSafari(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'safari';\n      }\n\n      return Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor') > 0 || function (p) {\n        return p.toString() === '[object SafariRemoteNotification]';\n      }(!window['safari'] || safari.pushNotification);\n    }\n\n    /**\n     * @method isChrome\n     * @signature isChrome([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Chrome. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Chrome上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isChrome',\n    value: function isChrome(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'chrome';\n      }\n\n      return !!window.chrome && !(!!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) && !(navigator.userAgent.indexOf(' Edge/') >= 0);\n    }\n\n    /**\n     * @method isIE\n     * @signature isIE([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Internet Explorer. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Internet Explorer上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isIE',\n    value: function isIE(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'ie';\n      }\n\n      return false || !!document.documentMode;\n    }\n\n    /**\n     * @method isEdge\n     * @signature isEdge([forceActualPlatform])\n     * @param {Boolean} forceActualPlatform\n     *   [en]If true, selected platform is ignored and the actual platform is returned.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns whether the browser is Edge. By default will return manually selected platform if it is set.[/en]\n     *   [ja]Edge上で実行されているかどうかを返します。[/ja]\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isEdge',\n    value: function isEdge(forceActualPlatform) {\n      if (!forceActualPlatform && this._getSelectedPlatform()) {\n        return this._getSelectedPlatform() === 'edge';\n      }\n\n      return navigator.userAgent.indexOf(' Edge/') >= 0;\n    }\n\n    //----------------\n    // Utility functions\n    //----------------\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: 'getMobileOS',\n    value: function getMobileOS() {\n      if (this.isAndroid()) {\n        return 'android';\n      } else if (this.isIOS()) {\n        return 'ios';\n      } else if (this.isWP()) {\n        return 'wp';\n      } else {\n        return 'other';\n      }\n    }\n\n    /**\n     * @return {String}\n     */\n\n  }, {\n    key: 'getIOSDevice',\n    value: function getIOSDevice() {\n      if (this.isIPhone()) {\n        return 'iphone';\n      } else if (this.isIPad()) {\n        return 'ipad';\n      } else if (this.isIPod()) {\n        return 'ipod';\n      } else {\n        return 'na';\n      }\n    }\n  }]);\n  return Platform;\n}();\n\nvar platform = new Platform();\n\n// For @onsenui/custom-elements\nif (window.customElements) {\n    // even if native CE1 impl exists, use polyfill\n    window.customElements.forcePolyfill = true;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _global = createCommonjsModule(function (module) {\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n  var global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\n  if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _core = createCommonjsModule(function (module) {\n  var core = module.exports = { version: '2.6.12' };\n  if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\n\nvar _core_1 = _core.version;\n\nvar _isObject = function _isObject(it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function _anObject(it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function _fails(exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function get() {\n      return 7;\n    } }).a != 7;\n});\n\nvar document$1 = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\nvar _domCreate = function _domCreate(it) {\n  return is ? document$1.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function get() {\n      return 7;\n    } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function _toPrimitive(it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) {/* empty */}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n  f: f\n};\n\nvar _propertyDesc = function _propertyDesc(bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function _has(it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function _uid(key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar _library = false;\n\nvar _shared = createCommonjsModule(function (module) {\n  var SHARED = '__core-js_shared__';\n  var store = _global[SHARED] || (_global[SHARED] = {});\n\n  (module.exports = function (key, value) {\n    return store[key] || (store[key] = value !== undefined ? value : {});\n  })('versions', []).push({\n    version: _core.version,\n    mode: _library ? 'pure' : 'global',\n    copyright: '© 2020 Denis Pushkarev (zloirock.ru)'\n  });\n});\n\nvar _functionToString = _shared('native-function-to-string', Function.toString);\n\nvar _redefine = createCommonjsModule(function (module) {\n  var SRC = _uid('src');\n\n  var TO_STRING = 'toString';\n  var TPL = ('' + _functionToString).split(TO_STRING);\n\n  _core.inspectSource = function (it) {\n    return _functionToString.call(it);\n  };\n\n  (module.exports = function (O, key, val, safe) {\n    var isFunction = typeof val == 'function';\n    if (isFunction) _has(val, 'name') || _hide(val, 'name', key);\n    if (O[key] === val) return;\n    if (isFunction) _has(val, SRC) || _hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n    if (O === _global) {\n      O[key] = val;\n    } else if (!safe) {\n      delete O[key];\n      _hide(O, key, val);\n    } else if (O[key]) {\n      O[key] = val;\n    } else {\n      _hide(O, key, val);\n    }\n    // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n  })(Function.prototype, TO_STRING, function toString() {\n    return typeof this == 'function' && this[SRC] || _functionToString.call(this);\n  });\n});\n\nvar _aFunction = function _aFunction(it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function _ctx(fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () /* ...args */{\n    return fn.apply(that, arguments);\n  };\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] || (_global[name] = {}) : (_global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? _ctx(out, _global) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // extend global\n    if (target) _redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) _hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\n_global.core = _core;\n// type bitmap\n$export.F = 1; // forced\n$export.G = 2; // global\n$export.S = 4; // static\n$export.P = 8; // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\n$export.U = 64; // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\nvar toString = {}.toString;\n\nvar _cof = function _cof(it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function _defined(it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function _toIobject(it) {\n  return _iobject(_defined(it));\n};\n\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar f$1 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = _toIobject(O);\n  P = _toPrimitive(P, true);\n  if (_ie8DomDefine) try {\n    return gOPD(O, P);\n  } catch (e) {/* empty */}\n  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);\n};\n\nvar _objectGopd = {\n  f: f$1\n};\n\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\n\nvar check = function check(O, proto) {\n  _anObject(O);\n  if (!_isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nvar _setProto = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n  function (test, buggy, set) {\n    try {\n      set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n// 19.1.3.19 Object.setPrototypeOf(O, proto)\n\n_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });\n\nvar setPrototypeOf = _core.Object.setPrototypeOf;\n\nvar _wks = createCommonjsModule(function (module) {\n  var store = _shared('wks');\n\n  var _Symbol = _global.Symbol;\n  var USE_SYMBOL = typeof _Symbol == 'function';\n\n  var $exports = module.exports = function (name) {\n    return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : _uid)('Symbol.' + name));\n  };\n\n  $exports.store = store;\n});\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () {\n  return arguments;\n}()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {/* empty */}\n};\n\nvar _classof = function _classof(it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n  // @@toStringTag case\n  : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n  // builtinTag case\n  : ARG ? _cof(O)\n  // ES3 arguments fallback\n  : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n// 19.1.3.6 Object.prototype.toString()\n\nvar test = {};\ntest[_wks('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  _redefine(Object.prototype, 'toString', function toString() {\n    return '[object ' + _classof(this) + ']';\n  }, true);\n}\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function _toInteger(it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function _stringAt(TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _iterators = {};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function _toLength(it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function _toAbsoluteIndex(index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\nvar _arrayIncludes = function _arrayIncludes(IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n      // Array#indexOf ignores holes, Array#includes - not\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function _sharedKey(key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function _objectKeysInternal(object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO$1) _has(O, key) && result.push(key);\n  } // Don't enum bug & hidden keys\n  while (names.length > i) {\n    if (_has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    _objectDp.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\nvar document$2 = _global.document;\nvar _html = document$2 && document$2.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\nvar IE_PROTO = _sharedKey('IE_PROTO');\nvar Empty = function Empty() {/* empty */};\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar _createDict = function createDict() {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  }return _createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\nvar def = _objectDp.f;\n\nvar TAG$1 = _wks('toStringTag');\n\nvar _setToStringTag = function _setToStringTag(it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG$1)) def(it, TAG$1, { configurable: true, value: tag });\n};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () {\n  return this;\n});\n\nvar _iterCreate = function _iterCreate(Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function _toObject(it) {\n  return Object(_defined(it));\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }return O instanceof Object ? ObjectProto : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function returnThis() {\n  return this;\n};\n\nvar _iterDefine = function _iterDefine(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0; // next index\n  // 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = _wks('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) _hide(ArrayProto, UNSCOPABLES, {});\nvar _addToUnscopables = function _addToUnscopables(key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\nvar _iterStep = function _iterStep(done, value) {\n  return { value: value, done: !!done };\n};\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nvar es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {\n  this._t = _toIobject(iterated); // target\n  this._i = 0; // next index\n  this._k = kind; // kind\n  // 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return _iterStep(1);\n  }\n  if (kind == 'keys') return _iterStep(0, index);\n  if (kind == 'values') return _iterStep(0, O[index]);\n  return _iterStep(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n_iterators.Arguments = _iterators.Array;\n\n_addToUnscopables('keys');\n_addToUnscopables('values');\n_addToUnscopables('entries');\n\nvar ITERATOR$1 = _wks('iterator');\nvar TO_STRING_TAG = _wks('toStringTag');\nvar ArrayValues = _iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = _objectKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = _global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR$1]) _hide(proto, ITERATOR$1, ArrayValues);\n    if (!proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);\n    _iterators[NAME] = ArrayValues;\n    if (explicit) for (key in es6_array_iterator) {\n      if (!proto[key]) _redefine(proto, key, es6_array_iterator[key], true);\n    }\n  }\n}\n\nvar _redefineAll = function _redefineAll(target, src, safe) {\n  for (var key in src) {\n    _redefine(target, key, src[key], safe);\n  }return target;\n};\n\nvar _anInstance = function _anInstance(it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }return it;\n};\n\n// call something on iterator step with safe closing on error\n\nvar _iterCall = function _iterCall(iterator, fn, value, entries) {\n  try {\n    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);\n    // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) _anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n// check on default Array iterator\n\nvar ITERATOR$2 = _wks('iterator');\nvar ArrayProto$1 = Array.prototype;\n\nvar _isArrayIter = function _isArrayIter(it) {\n  return it !== undefined && (_iterators.Array === it || ArrayProto$1[ITERATOR$2] === it);\n};\n\nvar ITERATOR$3 = _wks('iterator');\n\nvar core_getIteratorMethod = _core.getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR$3] || it['@@iterator'] || _iterators[_classof(it)];\n};\n\nvar _forOf = createCommonjsModule(function (module) {\n  var BREAK = {};\n  var RETURN = {};\n  var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n    var iterFn = ITERATOR ? function () {\n      return iterable;\n    } : core_getIteratorMethod(iterable);\n    var f = _ctx(fn, that, entries ? 2 : 1);\n    var index = 0;\n    var length, step, iterator, result;\n    if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n    // fast case for arrays with default iterator\n    if (_isArrayIter(iterFn)) for (length = _toLength(iterable.length); length > index; index++) {\n      result = entries ? f(_anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n      if (result === BREAK || result === RETURN) return result;\n    } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n      result = _iterCall(iterator, f, step.value, entries);\n      if (result === BREAK || result === RETURN) return result;\n    }\n  };\n  exports.BREAK = BREAK;\n  exports.RETURN = RETURN;\n});\n\nvar SPECIES = _wks('species');\n\nvar _setSpecies = function _setSpecies(KEY) {\n  var C = _global[KEY];\n  if (_descriptors && C && !C[SPECIES]) _objectDp.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\nvar _meta = createCommonjsModule(function (module) {\n  var META = _uid('meta');\n\n  var setDesc = _objectDp.f;\n  var id = 0;\n  var isExtensible = Object.isExtensible || function () {\n    return true;\n  };\n  var FREEZE = !_fails(function () {\n    return isExtensible(Object.preventExtensions({}));\n  });\n  var setMeta = function setMeta(it) {\n    setDesc(it, META, { value: {\n        i: 'O' + ++id, // object ID\n        w: {} // weak collections IDs\n      } });\n  };\n  var fastKey = function fastKey(it, create) {\n    // return primitive with prefix\n    if (!_isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n    if (!_has(it, META)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return 'F';\n      // not necessary to add metadata\n      if (!create) return 'E';\n      // add missing metadata\n      setMeta(it);\n      // return object ID\n    }return it[META].i;\n  };\n  var getWeak = function getWeak(it, create) {\n    if (!_has(it, META)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return true;\n      // not necessary to add metadata\n      if (!create) return false;\n      // add missing metadata\n      setMeta(it);\n      // return hash weak collections IDs\n    }return it[META].w;\n  };\n  // add metadata on freeze-family methods calling\n  var onFreeze = function onFreeze(it) {\n    if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);\n    return it;\n  };\n  var meta = module.exports = {\n    KEY: META,\n    NEED: false,\n    fastKey: fastKey,\n    getWeak: getWeak,\n    onFreeze: onFreeze\n  };\n});\n\nvar _meta_1 = _meta.KEY;\nvar _meta_2 = _meta.NEED;\nvar _meta_3 = _meta.fastKey;\nvar _meta_4 = _meta.getWeak;\nvar _meta_5 = _meta.onFreeze;\n\nvar _validateCollection = function _validateCollection(it, TYPE) {\n  if (!_isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\nvar dP$1 = _objectDp.f;\n\nvar fastKey = _meta.fastKey;\n\nvar SIZE = _descriptors ? '_s' : 'size';\n\nvar getEntry = function getEntry(that, key) {\n  // fast case\n  var index = fastKey(key);\n  var entry;\n  if (index !== 'F') return that._i[index];\n  // frozen object case\n  for (entry = that._f; entry; entry = entry.n) {\n    if (entry.k == key) return entry;\n  }\n};\n\nvar _collectionStrong = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      _anInstance(that, C, NAME, '_i');\n      that._t = NAME; // collection type\n      that._i = _objectCreate(null); // index\n      that._f = undefined; // first entry\n      that._l = undefined; // last entry\n      that[SIZE] = 0; // size\n      if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    _redefineAll(C.prototype, {\n      // 23.1.3.1 Map.prototype.clear()\n      // 23.2.3.2 Set.prototype.clear()\n      clear: function clear() {\n        for (var that = _validateCollection(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {\n          entry.r = true;\n          if (entry.p) entry.p = entry.p.n = undefined;\n          delete data[entry.i];\n        }\n        that._f = that._l = undefined;\n        that[SIZE] = 0;\n      },\n      // 23.1.3.3 Map.prototype.delete(key)\n      // 23.2.3.4 Set.prototype.delete(value)\n      'delete': function _delete(key) {\n        var that = _validateCollection(this, NAME);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.n;\n          var prev = entry.p;\n          delete that._i[entry.i];\n          entry.r = true;\n          if (prev) prev.n = next;\n          if (next) next.p = prev;\n          if (that._f == entry) that._f = next;\n          if (that._l == entry) that._l = prev;\n          that[SIZE]--;\n        }return !!entry;\n      },\n      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)\n      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        _validateCollection(this, NAME);\n        var f = _ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);\n        var entry;\n        while (entry = entry ? entry.n : this._f) {\n          f(entry.v, entry.k, this);\n          // revert to the last existing entry\n          while (entry && entry.r) {\n            entry = entry.p;\n          }\n        }\n      },\n      // 23.1.3.7 Map.prototype.has(key)\n      // 23.2.3.7 Set.prototype.has(value)\n      has: function has(key) {\n        return !!getEntry(_validateCollection(this, NAME), key);\n      }\n    });\n    if (_descriptors) dP$1(C.prototype, 'size', {\n      get: function get() {\n        return _validateCollection(this, NAME)[SIZE];\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var entry = getEntry(that, key);\n    var prev, index;\n    // change existing entry\n    if (entry) {\n      entry.v = value;\n      // create new entry\n    } else {\n      that._l = entry = {\n        i: index = fastKey(key, true), // <- index\n        k: key, // <- key\n        v: value, // <- value\n        p: prev = that._l, // <- previous entry\n        n: undefined, // <- next entry\n        r: false // <- removed\n      };\n      if (!that._f) that._f = entry;\n      if (prev) prev.n = entry;\n      that[SIZE]++;\n      // add to index\n      if (index !== 'F') that._i[index] = entry;\n    }return that;\n  },\n  getEntry: getEntry,\n  setStrong: function setStrong(C, NAME, IS_MAP) {\n    // add .keys, .values, .entries, [@@iterator]\n    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11\n    _iterDefine(C, NAME, function (iterated, kind) {\n      this._t = _validateCollection(iterated, NAME); // target\n      this._k = kind; // kind\n      this._l = undefined; // previous\n    }, function () {\n      var that = this;\n      var kind = that._k;\n      var entry = that._l;\n      // revert to the last existing entry\n      while (entry && entry.r) {\n        entry = entry.p;\n      } // get next entry\n      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {\n        // or finish the iteration\n        that._t = undefined;\n        return _iterStep(1);\n      }\n      // return step by kind\n      if (kind == 'keys') return _iterStep(0, entry.k);\n      if (kind == 'values') return _iterStep(0, entry.v);\n      return _iterStep(0, [entry.k, entry.v]);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // add [@@species], 23.1.2.2, 23.2.2.2\n    _setSpecies(NAME);\n  }\n};\n\nvar ITERATOR$4 = _wks('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR$4]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  // eslint-disable-next-line no-throw-literal\n  \n} catch (e) {/* empty */}\n\nvar _iterDetect = function _iterDetect(exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR$4]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR$4] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {/* empty */}\n  return safe;\n};\n\nvar setPrototypeOf$2 = _setProto.set;\nvar _inheritIfRequired = function _inheritIfRequired(that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && _isObject(P) && setPrototypeOf$2) {\n    setPrototypeOf$2(that, P);\n  }return that;\n};\n\nvar _collection = function _collection(NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = _global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    _redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !_isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !_isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !_isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !_fails(function () {\n    new C().entries().next();\n  }))) {\n    // create collection constructor\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    _redefineAll(C.prototype, methods);\n    _meta.NEED = true;\n  } else {\n    var instance = new C();\n    // early implementations not supports chaining\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false\n    var THROWS_ON_PRIMITIVES = _fails(function () {\n      instance.has(1);\n    });\n    // most early implementations doesn't supports iterables, most modern - not close it correctly\n    var ACCEPT_ITERABLES = _iterDetect(function (iter) {\n      new C(iter);\n    }); // eslint-disable-line no-new\n    // for early implementations -0 and +0 not the same\n    var BUGGY_ZERO = !IS_WEAK && _fails(function () {\n      // V8 ~ Chromium 42- fails only with 5+ elements\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        _anInstance(target, C, NAME);\n        var that = _inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    // weak collections should not contains .clear method\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n\n  _setToStringTag(C, NAME);\n\n  O[NAME] = C;\n  _export(_export.G + _export.W + _export.F * (C != Base), O);\n\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\n  return C;\n};\n\nvar SET = 'Set';\n\n// 23.2 Set Objects\nvar es6_set = _collection(SET, function (get) {\n  return function Set() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return _collectionStrong.def(_validateCollection(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, _collectionStrong);\n\nvar _arrayFromIterable = function _arrayFromIterable(iter, ITERATOR) {\n  var result = [];\n  _forOf(iter, false, result.push, result, ITERATOR);\n  return result;\n};\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\n\nvar _collectionToJson = function _collectionToJson(NAME) {\n  return function toJSON() {\n    if (_classof(this) != NAME) throw TypeError(NAME + \"#toJSON isn't generic\");\n    return _arrayFromIterable(this);\n  };\n};\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\n\n_export(_export.P + _export.R, 'Set', { toJSON: _collectionToJson('Set') });\n\n// https://tc39.github.io/proposal-setmap-offrom/\n\n\nvar _setCollectionOf = function _setCollectionOf(COLLECTION) {\n  _export(_export.S, COLLECTION, { of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    } });\n};\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.of\n_setCollectionOf('Set');\n\n// https://tc39.github.io/proposal-setmap-offrom/\n\n\nvar _setCollectionFrom = function _setCollectionFrom(COLLECTION) {\n  _export(_export.S, COLLECTION, { from: function from(source /* , mapFn, thisArg */) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      _aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) _aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = _ctx(mapFn, arguments[2], 2);\n        _forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        _forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    } });\n};\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-set.from\n_setCollectionFrom('Set');\n\nvar set$1 = _core.Set;\n\nvar MAP = 'Map';\n\n// 23.1 Map Objects\nvar es6_map = _collection(MAP, function (get) {\n  return function Map() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n}, {\n  // 23.1.3.6 Map.prototype.get(key)\n  get: function get(key) {\n    var entry = _collectionStrong.getEntry(_validateCollection(this, MAP), key);\n    return entry && entry.v;\n  },\n  // 23.1.3.9 Map.prototype.set(key, value)\n  set: function set(key, value) {\n    return _collectionStrong.def(_validateCollection(this, MAP), key === 0 ? 0 : key, value);\n  }\n}, _collectionStrong, true);\n\n// https://github.com/DavidBruant/Map-Set.prototype.toJSON\n\n\n_export(_export.P + _export.R, 'Map', { toJSON: _collectionToJson('Map') });\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.of\n_setCollectionOf('Map');\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-map.from\n_setCollectionFrom('Map');\n\nvar map = _core.Map;\n\n// 7.2.2 IsArray(argument)\n\nvar _isArray = Array.isArray || function isArray(arg) {\n  return _cof(arg) == 'Array';\n};\n\nvar SPECIES$1 = _wks('species');\n\nvar _arraySpeciesConstructor = function _arraySpeciesConstructor(original) {\n  var C;\n  if (_isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || _isArray(C.prototype))) C = undefined;\n    if (_isObject(C)) {\n      C = C[SPECIES$1];\n      if (C === null) C = undefined;\n    }\n  }return C === undefined ? Array : C;\n};\n\n// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\n\n\nvar _arraySpeciesCreate = function _arraySpeciesCreate(original, length) {\n  return new (_arraySpeciesConstructor(original))(length);\n};\n\n// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\n\n\nvar _arrayMethods = function _arrayMethods(TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || _arraySpeciesCreate;\n  return function ($this, callbackfn, that) {\n    var O = _toObject($this);\n    var self = _iobject(O);\n    var f = _ctx(callbackfn, that, 3);\n    var length = _toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res; // map\n          else if (res) switch (TYPE) {\n              case 3:\n                return true; // some\n              case 5:\n                return val; // find\n              case 6:\n                return index; // findIndex\n              case 2:\n                result.push(val); // filter\n            } else if (IS_EVERY) return false; // every\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\nvar f$3 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$3\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!_descriptors || isEnum.call(S, key)) T[key] = S[key];\n    }\n  }return T;\n} : $assign;\n\nvar getWeak = _meta.getWeak;\n\nvar arrayFind = _arrayMethods(5);\nvar arrayFindIndex = _arrayMethods(6);\nvar id$1 = 0;\n\n// fallback for uncaught frozen keys\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\n\nvar _collectionWeak = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      _anInstance(that, C, NAME, '_i');\n      that._t = NAME; // collection type\n      that._i = id$1++; // collection id\n      that._l = undefined; // leak store for uncaught frozen objects\n      if (iterable != undefined) _forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    _redefineAll(C.prototype, {\n      // 23.3.3.2 WeakMap.prototype.delete(key)\n      // 23.4.3.3 WeakSet.prototype.delete(value)\n      'delete': function _delete(key) {\n        if (!_isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(_validateCollection(this, NAME))['delete'](key);\n        return data && _has(data, this._i) && delete data[this._i];\n      },\n      // 23.3.3.4 WeakMap.prototype.has(key)\n      // 23.4.3.4 WeakSet.prototype.has(value)\n      has: function has(key) {\n        if (!_isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(_validateCollection(this, NAME)).has(key);\n        return data && _has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(_anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\nvar es6_weakMap = createCommonjsModule(function (module) {\n  var each = _arrayMethods(0);\n\n  var NATIVE_WEAK_MAP = _validateCollection;\n  var IS_IE11 = !_global.ActiveXObject && 'ActiveXObject' in _global;\n  var WEAK_MAP = 'WeakMap';\n  var getWeak = _meta.getWeak;\n  var isExtensible = Object.isExtensible;\n  var uncaughtFrozenStore = _collectionWeak.ufstore;\n  var InternalMap;\n\n  var wrapper = function wrapper(get) {\n    return function WeakMap() {\n      return get(this, arguments.length > 0 ? arguments[0] : undefined);\n    };\n  };\n\n  var methods = {\n    // 23.3.3.3 WeakMap.prototype.get(key)\n    get: function get(key) {\n      if (_isObject(key)) {\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(_validateCollection(this, WEAK_MAP)).get(key);\n        return data ? data[this._i] : undefined;\n      }\n    },\n    // 23.3.3.5 WeakMap.prototype.set(key, value)\n    set: function set(key, value) {\n      return _collectionWeak.def(_validateCollection(this, WEAK_MAP), key, value);\n    }\n  };\n\n  // 23.3 WeakMap Objects\n  var $WeakMap = module.exports = _collection(WEAK_MAP, wrapper, methods, _collectionWeak, true, true);\n\n  // IE11 WeakMap frozen keys fix\n  if (NATIVE_WEAK_MAP && IS_IE11) {\n    InternalMap = _collectionWeak.getConstructor(wrapper, WEAK_MAP);\n    _objectAssign(InternalMap.prototype, methods);\n    _meta.NEED = true;\n    each(['delete', 'has', 'get', 'set'], function (key) {\n      var proto = $WeakMap.prototype;\n      var method = proto[key];\n      _redefine(proto, key, function (a, b) {\n        // store frozen objects on internal weakmap shim\n        if (_isObject(a) && !isExtensible(a)) {\n          if (!this._f) this._f = new InternalMap();\n          var result = this._f[key](a, b);\n          return key == 'set' ? this : result;\n          // store all the rest on native weakmap\n        }return method.call(this, a, b);\n      });\n    });\n  }\n});\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.of\n_setCollectionOf('WeakMap');\n\n// https://tc39.github.io/proposal-setmap-offrom/#sec-weakmap.from\n_setCollectionFrom('WeakMap');\n\nvar weakMap = _core.WeakMap;\n\nvar _createProperty = function _createProperty(object, index, value) {\n  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));else object[index] = value;\n};\n\n_export(_export.S + _export.F * !_iterDetect(function (iter) {\n  \n}), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = _toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = core_getIteratorMethod(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        _createProperty(result, index, mapping ? _iterCall(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = _toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\nvar from$1 = _core.Array.from;\n\nvar reservedTagList = new Set(['annotation-xml', 'color-profile', 'font-face', 'font-face-src', 'font-face-uri', 'font-face-format', 'font-face-name', 'missing-glyph']);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nfunction isValidCustomElementName(localName) {\n  var reserved = reservedTagList.has(localName);\n  var validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nfunction isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  var nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  var current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  var node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return !node || node === root ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nfunction walkDeepDescendantElements(root, callback) {\n  var visitedImports = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Set();\n\n  var node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      var element = /** @type {!Element} */node;\n\n      callback(element);\n\n      var localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        var importNode = /** @type {!Node} */element.import;\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (var child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      var shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (var _child = shadowRoot.firstChild; _child; _child = _child.nextSibling) {\n          walkDeepDescendantElements(_child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nfunction setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n\n/**\n * @enum {number}\n */\nvar CustomElementState = {\n  custom: 1,\n  failed: 2\n};\n\nvar CustomElementInternals = function () {\n  function CustomElementInternals() {\n    classCallCheck(this, CustomElementInternals);\n\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n\n\n  createClass(CustomElementInternals, [{\n    key: 'setDefinition',\n    value: function setDefinition(localName, definition) {\n      this._localNameToDefinition.set(localName, definition);\n      this._constructorToDefinition.set(definition.constructor, definition);\n    }\n\n    /**\n     * @param {string} localName\n     * @return {!CustomElementDefinition|undefined}\n     */\n\n  }, {\n    key: 'localNameToDefinition',\n    value: function localNameToDefinition(localName) {\n      return this._localNameToDefinition.get(localName);\n    }\n\n    /**\n     * @param {!Function} constructor\n     * @return {!CustomElementDefinition|undefined}\n     */\n\n  }, {\n    key: 'constructorToDefinition',\n    value: function constructorToDefinition(constructor) {\n      return this._constructorToDefinition.get(constructor);\n    }\n\n    /**\n     * @param {!function(!Node)} listener\n     */\n\n  }, {\n    key: 'addPatch',\n    value: function addPatch(listener) {\n      this._hasPatches = true;\n      this._patches.push(listener);\n    }\n\n    /**\n     * @param {!Node} node\n     */\n\n  }, {\n    key: 'patchTree',\n    value: function patchTree(node) {\n      var _this = this;\n\n      if (!this._hasPatches) return;\n\n      walkDeepDescendantElements(node, function (element) {\n        return _this.patch(element);\n      });\n    }\n\n    /**\n     * @param {!Node} node\n     */\n\n  }, {\n    key: 'patch',\n    value: function patch(node) {\n      if (!this._hasPatches) return;\n\n      if (node.__CE_patched) return;\n      node.__CE_patched = true;\n\n      for (var i = 0; i < this._patches.length; i++) {\n        this._patches[i](node);\n      }\n    }\n\n    /**\n     * @param {!Node} root\n     */\n\n  }, {\n    key: 'connectTree',\n    value: function connectTree(root) {\n      var elements = [];\n\n      walkDeepDescendantElements(root, function (element) {\n        return elements.push(element);\n      });\n\n      for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        if (element.__CE_state === CustomElementState.custom) {\n          if (isConnected(element)) {\n            this.connectedCallback(element);\n          }\n        } else {\n          this.upgradeElement(element);\n        }\n      }\n    }\n\n    /**\n     * @param {!Node} root\n     */\n\n  }, {\n    key: 'disconnectTree',\n    value: function disconnectTree(root) {\n      var elements = [];\n\n      walkDeepDescendantElements(root, function (element) {\n        return elements.push(element);\n      });\n\n      for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        if (element.__CE_state === CustomElementState.custom) {\n          this.disconnectedCallback(element);\n        }\n      }\n    }\n\n    /**\n     * Upgrades all uncustomized custom elements at and below a root node for\n     * which there is a definition. When custom element reaction callbacks are\n     * assumed to be called synchronously (which, by the current DOM / HTML spec\n     * definitions, they are *not*), callbacks for both elements customized\n     * synchronously by the parser and elements being upgraded occur in the same\n     * relative order.\n     *\n     * NOTE: This function, when used to simulate the construction of a tree that\n     * is already created but not customized (i.e. by the parser), does *not*\n     * prevent the element from reading the 'final' (true) state of the tree. For\n     * example, the element, during truly synchronous parsing / construction would\n     * see that it contains no children as they have not yet been inserted.\n     * However, this function does not modify the tree, the element will\n     * (incorrectly) have children. Additionally, self-modification restrictions\n     * for custom element constructors imposed by the DOM spec are *not* enforced.\n     *\n     *\n     * The following nested list shows the steps extending down from the HTML\n     * spec's parsing section that cause elements to be synchronously created and\n     * upgraded:\n     *\n     * The \"in body\" insertion mode:\n     * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n     * - Switch on token:\n     *   .. other cases ..\n     *   -> Any other start tag\n     *      - [Insert an HTML element](below) for the token.\n     *\n     * Insert an HTML element:\n     * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n     * - Insert a foreign element for the token in the HTML namespace:\n     *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n     *   - Create an element for a token:\n     *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n     *     - Will execute script flag is true?\n     *       - (Element queue pushed to the custom element reactions stack.)\n     *     - Create an element:\n     *       https://dom.spec.whatwg.org/#concept-create-element\n     *       - Sync CE flag is true?\n     *         - Constructor called.\n     *         - Self-modification restrictions enforced.\n     *       - Sync CE flag is false?\n     *         - (Upgrade reaction enqueued.)\n     *     - Attributes appended to element.\n     *       (`attributeChangedCallback` reactions enqueued.)\n     *     - Will execute script flag is true?\n     *       - (Element queue popped from the custom element reactions stack.\n     *         Reactions in the popped stack are invoked.)\n     *   - (Element queue pushed to the custom element reactions stack.)\n     *   - Insert the element:\n     *     https://dom.spec.whatwg.org/#concept-node-insert\n     *     - Shadow-including descendants are connected. During parsing\n     *       construction, there are no shadow-*excluding* descendants.\n     *       However, the constructor may have validly attached a shadow\n     *       tree to itself and added descendants to that shadow tree.\n     *       (`connectedCallback` reactions enqueued.)\n     *   - (Element queue popped from the custom element reactions stack.\n     *     Reactions in the popped stack are invoked.)\n     *\n     * @param {!Node} root\n     * @param {!Set<Node>=} visitedImports\n     */\n\n  }, {\n    key: 'patchAndUpgradeTree',\n    value: function patchAndUpgradeTree(root) {\n      var _this2 = this;\n\n      var visitedImports = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Set();\n\n      var elements = [];\n\n      var gatherElements = function gatherElements(element) {\n        if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n          // The HTML Imports polyfill sets a descendant element of the link to\n          // the `import` property, specifically this is *not* a Document.\n          var importNode = /** @type {?Node} */element.import;\n\n          if (importNode instanceof Node && importNode.readyState === 'complete') {\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n          } else {\n            // If this link's import root is not available, its contents can't be\n            // walked. Wait for 'load' and walk it when it's ready.\n            element.addEventListener('load', function () {\n              var importNode = /** @type {!Node} */element.import;\n\n              if (importNode.__CE_documentLoadHandled) return;\n              importNode.__CE_documentLoadHandled = true;\n\n              importNode.__CE_isImportDocument = true;\n\n              // Connected links are associated with the registry.\n              importNode.__CE_hasRegistry = true;\n\n              // Clone the `visitedImports` set that was populated sync during\n              // the `patchAndUpgradeTree` call that caused this 'load' handler to\n              // be added. Then, remove *this* link's import node so that we can\n              // walk that import again, even if it was partially walked later\n              // during the same `patchAndUpgradeTree` call.\n              visitedImports.delete(importNode);\n\n              _this2.patchAndUpgradeTree(importNode, visitedImports);\n            });\n          }\n        } else {\n          elements.push(element);\n        }\n      };\n\n      // `walkDeepDescendantElements` populates (and internally checks against)\n      // `visitedImports` when traversing a loaded import.\n      walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n      if (this._hasPatches) {\n        for (var i = 0; i < elements.length; i++) {\n          this.patch(elements[i]);\n        }\n      }\n\n      for (var _i = 0; _i < elements.length; _i++) {\n        this.upgradeElement(elements[_i]);\n      }\n    }\n\n    /**\n     * @param {!Element} element\n     */\n\n  }, {\n    key: 'upgradeElement',\n    value: function upgradeElement(element) {\n      var currentState = element.__CE_state;\n      if (currentState !== undefined) return;\n\n      var definition = this.localNameToDefinition(element.localName);\n      if (!definition) return;\n\n      definition.constructionStack.push(element);\n\n      var constructor = definition.constructor;\n      try {\n        try {\n          var result = new constructor();\n          if (result !== element) {\n            throw new Error('The custom element constructor did not produce the element being upgraded.');\n          }\n        } finally {\n          definition.constructionStack.pop();\n        }\n      } catch (e) {\n        element.__CE_state = CustomElementState.failed;\n        throw e;\n      }\n\n      element.__CE_state = CustomElementState.custom;\n      element.__CE_definition = definition;\n\n      if (definition.attributeChangedCallback) {\n        var observedAttributes = definition.observedAttributes;\n        for (var i = 0; i < observedAttributes.length; i++) {\n          var name = observedAttributes[i];\n          var value = element.getAttribute(name);\n          if (value !== null) {\n            this.attributeChangedCallback(element, name, null, value, null);\n          }\n        }\n      }\n\n      if (isConnected(element)) {\n        this.connectedCallback(element);\n      }\n    }\n\n    /**\n     * @param {!Element} element\n     */\n\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback(element) {\n      var definition = element.__CE_definition;\n      if (definition.connectedCallback) {\n        definition.connectedCallback.call(element);\n      }\n\n      element.__CE_isConnectedCallbackCalled = true;\n    }\n\n    /**\n     * @param {!Element} element\n     */\n\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback(element) {\n      if (!element.__CE_isConnectedCallbackCalled) {\n        this.connectedCallback(element);\n      }\n\n      var definition = element.__CE_definition;\n      if (definition.disconnectedCallback) {\n        definition.disconnectedCallback.call(element);\n      }\n\n      element.__CE_isConnectedCallbackCalled = undefined;\n    }\n\n    /**\n     * @param {!Element} element\n     * @param {string} name\n     * @param {?string} oldValue\n     * @param {?string} newValue\n     * @param {?string} namespace\n     */\n\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n      var definition = element.__CE_definition;\n      if (definition.attributeChangedCallback && definition.observedAttributes.indexOf(name) > -1) {\n        definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n      }\n    }\n  }]);\n  return CustomElementInternals;\n}();\n\nvar DocumentConstructionObserver = function () {\n  function DocumentConstructionObserver(internals, doc) {\n    classCallCheck(this, DocumentConstructionObserver);\n\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n\n  createClass(DocumentConstructionObserver, [{\n    key: 'disconnect',\n    value: function disconnect() {\n      if (this._observer) {\n        this._observer.disconnect();\n      }\n    }\n\n    /**\n     * @param {!Array<!MutationRecord>} mutations\n     */\n\n  }, {\n    key: '_handleMutations',\n    value: function _handleMutations(mutations) {\n      // Once the document's `readyState` is 'interactive' or 'complete', all new\n      // nodes created within that document will be the result of script and\n      // should be handled by patching.\n      var readyState = this._document.readyState;\n      if (readyState === 'interactive' || readyState === 'complete') {\n        this.disconnect();\n      }\n\n      for (var i = 0; i < mutations.length; i++) {\n        var addedNodes = mutations[i].addedNodes;\n        for (var j = 0; j < addedNodes.length; j++) {\n          var node = addedNodes[j];\n          this._internals.patchAndUpgradeTree(node);\n        }\n      }\n    }\n  }]);\n  return DocumentConstructionObserver;\n}();\n\n/**\n * @template T\n */\nvar Deferred = function () {\n  function Deferred() {\n    var _this = this;\n\n    classCallCheck(this, Deferred);\n\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(function (resolve) {\n      _this._resolve = resolve;\n\n      if (_this._value) {\n        resolve(_this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n\n\n  createClass(Deferred, [{\n    key: 'resolve',\n    value: function resolve(value) {\n      if (this._value) {\n        throw new Error('Already resolved.');\n      }\n\n      this._value = value;\n\n      if (this._resolve) {\n        this._resolve(value);\n      }\n    }\n\n    /**\n     * @return {!Promise<T>}\n     */\n\n  }, {\n    key: 'toPromise',\n    value: function toPromise() {\n      return this._promise;\n    }\n  }]);\n  return Deferred;\n}();\n\n/**\n * @unrestricted\n */\n\nvar CustomElementRegistry = function () {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  function CustomElementRegistry(internals) {\n    classCallCheck(this, CustomElementRegistry);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = function (fn) {\n      return fn();\n    };\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n\n\n  createClass(CustomElementRegistry, [{\n    key: 'define',\n    value: function define(localName, constructor) {\n      var _this = this;\n\n      if (!(constructor instanceof Function)) {\n        throw new TypeError('Custom element constructors must be functions.');\n      }\n\n      if (!isValidCustomElementName(localName)) {\n        throw new SyntaxError('The element name \\'' + localName + '\\' is not valid.');\n      }\n\n      if (this._internals.localNameToDefinition(localName)) {\n        throw new Error('A custom element with name \\'' + localName + '\\' has already been defined.');\n      }\n\n      if (this._elementDefinitionIsRunning) {\n        throw new Error('A custom element is already being defined.');\n      }\n      this._elementDefinitionIsRunning = true;\n\n      var connectedCallback = void 0;\n      var disconnectedCallback = void 0;\n      var adoptedCallback = void 0;\n      var attributeChangedCallback = void 0;\n      var observedAttributes = void 0;\n      try {\n        var getCallback = function getCallback(name) {\n          var callbackValue = prototype[name];\n          if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n            throw new Error('The \\'' + name + '\\' callback must be a function.');\n          }\n          return callbackValue;\n        };\n\n        /** @type {!Object} */\n        var prototype = constructor.prototype;\n        if (!(prototype instanceof Object)) {\n          throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n        }\n\n        connectedCallback = getCallback('connectedCallback');\n        disconnectedCallback = getCallback('disconnectedCallback');\n        adoptedCallback = getCallback('adoptedCallback');\n        attributeChangedCallback = getCallback('attributeChangedCallback');\n        observedAttributes = constructor['observedAttributes'] || [];\n      } catch (e) {\n        return;\n      } finally {\n        this._elementDefinitionIsRunning = false;\n      }\n\n      var definition = {\n        localName: localName,\n        constructor: constructor,\n        connectedCallback: connectedCallback,\n        disconnectedCallback: disconnectedCallback,\n        adoptedCallback: adoptedCallback,\n        attributeChangedCallback: attributeChangedCallback,\n        observedAttributes: observedAttributes,\n        constructionStack: []\n      };\n\n      this._internals.setDefinition(localName, definition);\n\n      this._unflushedLocalNames.push(localName);\n\n      // If we've already called the flush callback and it hasn't called back yet,\n      // don't call it again.\n      if (!this._flushPending) {\n        this._flushPending = true;\n        this._flushCallback(function () {\n          return _this._flush();\n        });\n      }\n    }\n  }, {\n    key: '_flush',\n    value: function _flush() {\n      // If no new definitions were defined, don't attempt to flush. This could\n      // happen if a flush callback keeps the function it is given and calls it\n      // multiple times.\n      if (this._flushPending === false) return;\n\n      this._flushPending = false;\n      this._internals.patchAndUpgradeTree(document);\n\n      while (this._unflushedLocalNames.length > 0) {\n        var localName = this._unflushedLocalNames.shift();\n        var deferred = this._whenDefinedDeferred.get(localName);\n        if (deferred) {\n          deferred.resolve(undefined);\n        }\n      }\n    }\n\n    /**\n     * @param {string} localName\n     * @return {Function|undefined}\n     */\n\n  }, {\n    key: 'get',\n    value: function get$$1(localName) {\n      var definition = this._internals.localNameToDefinition(localName);\n      if (definition) {\n        return definition.constructor;\n      }\n\n      return undefined;\n    }\n\n    /**\n     * @param {string} localName\n     * @return {!Promise<undefined>}\n     */\n\n  }, {\n    key: 'whenDefined',\n    value: function whenDefined(localName) {\n      if (!isValidCustomElementName(localName)) {\n        return Promise.reject(new SyntaxError('\\'' + localName + '\\' is not a valid custom element name.'));\n      }\n\n      var prior = this._whenDefinedDeferred.get(localName);\n      if (prior) {\n        return prior.toPromise();\n      }\n\n      var deferred = new Deferred();\n      this._whenDefinedDeferred.set(localName, deferred);\n\n      var definition = this._internals.localNameToDefinition(localName);\n      // Resolve immediately only if the given local name has a definition *and*\n      // the full document walk to upgrade elements with that local name has\n      // already happened.\n      if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n        deferred.resolve(undefined);\n      }\n\n      return deferred.toPromise();\n    }\n  }, {\n    key: 'polyfillWrapFlushCallback',\n    value: function polyfillWrapFlushCallback(outer) {\n      this._documentConstructionObserver.disconnect();\n      var inner = this._flushCallback;\n      this._flushCallback = function (flush) {\n        return outer(function () {\n          return inner(flush);\n        });\n      };\n    }\n  }]);\n  return CustomElementRegistry;\n}();\n\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n\nvar Native = {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement']\n};\n\n/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nvar AlreadyConstructedMarker = function AlreadyConstructedMarker() {\n  classCallCheck(this, AlreadyConstructedMarker);\n};\n\nvar AlreadyConstructedMarker$1 = new AlreadyConstructedMarker();\n\n/**\n * @param {!CustomElementInternals} internals\n */\nvar PatchHTMLElement = function (internals) {\n  window['HTMLElement'] = function () {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      var constructor = this.constructor;\n\n      var definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      var constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        var _element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(_element, constructor.prototype);\n        _element.__CE_state = CustomElementState.custom;\n        _element.__CE_definition = definition;\n        internals.patch(_element);\n        return _element;\n      }\n\n      var lastIndex = constructionStack.length - 1;\n      var element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker$1) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker$1;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch( /** @type {!HTMLElement} */element);\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  }();\n};\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nvar PatchParentNode = function (internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function () {\n    for (var _len = arguments.length, nodes = Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    var connectedBefore = /** @type {!Array<!Node>} */nodes.filter(function (node) {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && isConnected(node);\n    });\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (var i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (isConnected(this)) {\n      for (var _i = 0; _i < nodes.length; _i++) {\n        var node = nodes[_i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function () {\n    for (var _len2 = arguments.length, nodes = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      nodes[_key2] = arguments[_key2];\n    }\n\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    var connectedBefore = /** @type {!Array<!Node>} */nodes.filter(function (node) {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && isConnected(node);\n    });\n\n    builtIn.append.apply(this, nodes);\n\n    for (var i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (isConnected(this)) {\n      for (var _i2 = 0; _i2 < nodes.length; _i2++) {\n        var node = nodes[_i2];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n\n/**\n * @param {!CustomElementInternals} internals\n */\nvar PatchDocument = function (internals) {\n  setPropertyUnchecked(Document.prototype, 'createElement',\n  /**\n   * @this {Document}\n   * @param {string} localName\n   * @return {!Element}\n   */\n  function (localName) {\n    // Only create custom elements if this document is associated with the registry.\n    if (this.__CE_hasRegistry) {\n      var definition = internals.localNameToDefinition(localName);\n      if (definition) {\n        return new definition.constructor();\n      }\n    }\n\n    var result = /** @type {!Element} */\n    Native.Document_createElement.call(this, localName);\n    internals.patch(result);\n    return result;\n  });\n\n  setPropertyUnchecked(Document.prototype, 'importNode',\n  /**\n   * @this {Document}\n   * @param {!Node} node\n   * @param {boolean=} deep\n   * @return {!Node}\n   */\n  function (node, deep) {\n    var clone = Native.Document_importNode.call(this, node, deep);\n    // Only create custom elements if this document is associated with the registry.\n    if (!this.__CE_hasRegistry) {\n      internals.patchTree(clone);\n    } else {\n      internals.patchAndUpgradeTree(clone);\n    }\n    return clone;\n  });\n\n  var NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  setPropertyUnchecked(Document.prototype, 'createElementNS',\n  /**\n   * @this {Document}\n   * @param {?string} namespace\n   * @param {string} localName\n   * @return {!Element}\n   */\n  function (namespace, localName) {\n    // Only create custom elements if this document is associated with the registry.\n    if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n      var definition = internals.localNameToDefinition(localName);\n      if (definition) {\n        return new definition.constructor();\n      }\n    }\n\n    var result = /** @type {!Element} */\n    Native.Document_createElementNS.call(this, namespace, localName);\n    internals.patch(result);\n    return result;\n  });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append\n  });\n};\n\n/**\n * @param {!CustomElementInternals} internals\n */\nvar PatchNode = function (internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  setPropertyUnchecked(Node.prototype, 'insertBefore',\n  /**\n   * @this {Node}\n   * @param {!Node} node\n   * @param {?Node} refNode\n   * @return {!Node}\n   */\n  function (node, refNode) {\n    if (node instanceof DocumentFragment) {\n      var insertedNodes = Array.prototype.slice.apply(node.childNodes);\n      var _nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      // DocumentFragments can't be connected, so `disconnectTree` will never\n      // need to be called on a DocumentFragment's children after inserting it.\n\n      if (isConnected(this)) {\n        for (var i = 0; i < insertedNodes.length; i++) {\n          internals.connectTree(insertedNodes[i]);\n        }\n      }\n\n      return _nativeResult;\n    }\n\n    var nodeWasConnected = isConnected(node);\n    var nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n    if (nodeWasConnected) {\n      internals.disconnectTree(node);\n    }\n\n    if (isConnected(this)) {\n      internals.connectTree(node);\n    }\n\n    return nativeResult;\n  });\n\n  setPropertyUnchecked(Node.prototype, 'appendChild',\n  /**\n   * @this {Node}\n   * @param {!Node} node\n   * @return {!Node}\n   */\n  function (node) {\n    if (node instanceof DocumentFragment) {\n      var insertedNodes = Array.prototype.slice.apply(node.childNodes);\n      var _nativeResult2 = Native.Node_appendChild.call(this, node);\n\n      // DocumentFragments can't be connected, so `disconnectTree` will never\n      // need to be called on a DocumentFragment's children after inserting it.\n\n      if (isConnected(this)) {\n        for (var i = 0; i < insertedNodes.length; i++) {\n          internals.connectTree(insertedNodes[i]);\n        }\n      }\n\n      return _nativeResult2;\n    }\n\n    var nodeWasConnected = isConnected(node);\n    var nativeResult = Native.Node_appendChild.call(this, node);\n\n    if (nodeWasConnected) {\n      internals.disconnectTree(node);\n    }\n\n    if (isConnected(this)) {\n      internals.connectTree(node);\n    }\n\n    return nativeResult;\n  });\n\n  setPropertyUnchecked(Node.prototype, 'cloneNode',\n  /**\n   * @this {Node}\n   * @param {boolean=} deep\n   * @return {!Node}\n   */\n  function (deep) {\n    var clone = Native.Node_cloneNode.call(this, deep);\n    // Only create custom elements if this element's owner document is\n    // associated with the registry.\n    if (!this.ownerDocument.__CE_hasRegistry) {\n      internals.patchTree(clone);\n    } else {\n      internals.patchAndUpgradeTree(clone);\n    }\n    return clone;\n  });\n\n  setPropertyUnchecked(Node.prototype, 'removeChild',\n  /**\n   * @this {Node}\n   * @param {!Node} node\n   * @return {!Node}\n   */\n  function (node) {\n    var nodeWasConnected = isConnected(node);\n    var nativeResult = Native.Node_removeChild.call(this, node);\n\n    if (nodeWasConnected) {\n      internals.disconnectTree(node);\n    }\n\n    return nativeResult;\n  });\n\n  setPropertyUnchecked(Node.prototype, 'replaceChild',\n  /**\n   * @this {Node}\n   * @param {!Node} nodeToInsert\n   * @param {!Node} nodeToRemove\n   * @return {!Node}\n   */\n  function (nodeToInsert, nodeToRemove) {\n    if (nodeToInsert instanceof DocumentFragment) {\n      var insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n      var _nativeResult3 = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n      // DocumentFragments can't be connected, so `disconnectTree` will never\n      // need to be called on a DocumentFragment's children after inserting it.\n\n      if (isConnected(this)) {\n        internals.disconnectTree(nodeToRemove);\n        for (var i = 0; i < insertedNodes.length; i++) {\n          internals.connectTree(insertedNodes[i]);\n        }\n      }\n\n      return _nativeResult3;\n    }\n\n    var nodeToInsertWasConnected = isConnected(nodeToInsert);\n    var nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n    var thisIsConnected = isConnected(this);\n\n    if (thisIsConnected) {\n      internals.disconnectTree(nodeToRemove);\n    }\n\n    if (nodeToInsertWasConnected) {\n      internals.disconnectTree(nodeToInsert);\n    }\n\n    if (thisIsConnected) {\n      internals.connectTree(nodeToInsert);\n    }\n\n    return nativeResult;\n  });\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */function set(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        var removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          var childNodes = this.childNodes;\n          var childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (var i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (var _i = 0; _i < removedNodes.length; _i++) {\n            internals.disconnectTree(removedNodes[_i]);\n          }\n        }\n      }\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function (element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */function get() {\n          /** @type {!Array<string>} */\n          var parts = [];\n\n          for (var i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */function set(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        }\n      });\n    });\n  }\n};\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nvar PatchChildNode = function (internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function () {\n    for (var _len = arguments.length, nodes = Array(_len), _key = 0; _key < _len; _key++) {\n      nodes[_key] = arguments[_key];\n    }\n\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    var connectedBefore = /** @type {!Array<!Node>} */nodes.filter(function (node) {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && isConnected(node);\n    });\n\n    builtIn.before.apply(this, nodes);\n\n    for (var i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (isConnected(this)) {\n      for (var _i = 0; _i < nodes.length; _i++) {\n        var node = nodes[_i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function () {\n    for (var _len2 = arguments.length, nodes = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      nodes[_key2] = arguments[_key2];\n    }\n\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    var connectedBefore = /** @type {!Array<!Node>} */nodes.filter(function (node) {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && isConnected(node);\n    });\n\n    builtIn.after.apply(this, nodes);\n\n    for (var i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (isConnected(this)) {\n      for (var _i2 = 0; _i2 < nodes.length; _i2++) {\n        var node = nodes[_i2];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function () {\n    for (var _len3 = arguments.length, nodes = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      nodes[_key3] = arguments[_key3];\n    }\n\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    var connectedBefore = /** @type {!Array<!Node>} */nodes.filter(function (node) {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && isConnected(node);\n    });\n\n    var wasConnected = isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (var i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (var _i3 = 0; _i3 < nodes.length; _i3++) {\n        var node = nodes[_i3];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function () {\n    var wasConnected = isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n\n/**\n * @param {!CustomElementInternals} internals\n */\nvar PatchElement = function (internals) {\n  if (Native.Element_attachShadow) {\n    setPropertyUnchecked(Element.prototype, 'attachShadow',\n    /**\n     * @this {Element}\n     * @param {!{mode: string}} init\n     * @return {ShadowRoot}\n     */\n    function (init) {\n      var shadowRoot = Native.Element_attachShadow.call(this, init);\n      this.__CE_shadowRoot = shadowRoot;\n      return shadowRoot;\n    });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */function set(htmlString) {\n        var _this = this;\n\n        var isConnected$$1 = isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        var removedElements = undefined;\n        if (isConnected$$1) {\n          removedElements = [];\n          walkDeepDescendantElements(this, function (element) {\n            if (element !== _this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (var i = 0; i < removedElements.length; i++) {\n            var element = removedElements[i];\n            if (element.__CE_state === CustomElementState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      }\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    var rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function (element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */function get() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */function set(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          var content = this.localName === 'template' ? /** @type {!HTMLTemplateElement} */this.content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        }\n      });\n    });\n  }\n\n  setPropertyUnchecked(Element.prototype, 'setAttribute',\n  /**\n   * @this {Element}\n   * @param {string} name\n   * @param {string} newValue\n   */\n  function (name, newValue) {\n    // Fast path for non-custom elements.\n    if (this.__CE_state !== CustomElementState.custom) {\n      return Native.Element_setAttribute.call(this, name, newValue);\n    }\n\n    var oldValue = Native.Element_getAttribute.call(this, name);\n    Native.Element_setAttribute.call(this, name, newValue);\n    newValue = Native.Element_getAttribute.call(this, name);\n    internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n  });\n\n  setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n  /**\n   * @this {Element}\n   * @param {?string} namespace\n   * @param {string} name\n   * @param {string} newValue\n   */\n  function (namespace, name, newValue) {\n    // Fast path for non-custom elements.\n    if (this.__CE_state !== CustomElementState.custom) {\n      return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n    }\n\n    var oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n    Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n    newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n    internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n  });\n\n  setPropertyUnchecked(Element.prototype, 'removeAttribute',\n  /**\n   * @this {Element}\n   * @param {string} name\n   */\n  function (name) {\n    // Fast path for non-custom elements.\n    if (this.__CE_state !== CustomElementState.custom) {\n      return Native.Element_removeAttribute.call(this, name);\n    }\n\n    var oldValue = Native.Element_getAttribute.call(this, name);\n    Native.Element_removeAttribute.call(this, name);\n    if (oldValue !== null) {\n      internals.attributeChangedCallback(this, name, oldValue, null, null);\n    }\n  });\n\n  setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n  /**\n   * @this {Element}\n   * @param {?string} namespace\n   * @param {string} name\n   */\n  function (namespace, name) {\n    // Fast path for non-custom elements.\n    if (this.__CE_state !== CustomElementState.custom) {\n      return Native.Element_removeAttributeNS.call(this, namespace, name);\n    }\n\n    var oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n    Native.Element_removeAttributeNS.call(this, namespace, name);\n    // In older browsers, `Element#getAttributeNS` may return the empty string\n    // instead of null if the attribute does not exist. For details, see;\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n    var newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n    if (oldValue !== newValue) {\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    }\n  });\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    setPropertyUnchecked(destination, 'insertAdjacentElement',\n    /**\n     * @this {Element}\n     * @param {string} where\n     * @param {!Element} element\n     * @return {?Element}\n     */\n    function (where, element) {\n      var wasConnected = isConnected(element);\n      var insertedElement = /** @type {!Element} */\n      baseMethod.call(this, where, element);\n\n      if (wasConnected) {\n        internals.disconnectTree(element);\n      }\n\n      if (isConnected(insertedElement)) {\n        internals.connectTree(element);\n      }\n      return insertedElement;\n    });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove\n  });\n};\n\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nvar priorCustomElements = window['customElements'];\n\nif (!priorCustomElements || priorCustomElements['forcePolyfill'] || typeof priorCustomElements['define'] != 'function' || typeof priorCustomElements['get'] != 'function') {\n  /** @type {!CustomElementInternals} */\n  var internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  var customElements$1 = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements$1\n  });\n}\n\n/**\n * @license\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n// @version 0.7.22\n\n(function (global) {\n  if (global.JsMutationObserver) {\n    return;\n  }\n  var registrationsTable = new WeakMap();\n  var setImmediate;\n  if (/Trident|Edge/.test(navigator.userAgent)) {\n    setImmediate = setTimeout;\n  } else if (window.setImmediate) {\n    setImmediate = window.setImmediate;\n  } else {\n    var setImmediateQueue = [];\n    var sentinel = String(Math.random());\n    window.addEventListener(\"message\", function (e) {\n      if (e.data === sentinel) {\n        var queue = setImmediateQueue;\n        setImmediateQueue = [];\n        queue.forEach(function (func) {\n          func();\n        });\n      }\n    });\n    setImmediate = function setImmediate(func) {\n      setImmediateQueue.push(func);\n      window.postMessage(sentinel, \"*\");\n    };\n  }\n  var isScheduled = false;\n  var scheduledObservers = [];\n  function scheduleCallback(observer) {\n    scheduledObservers.push(observer);\n    if (!isScheduled) {\n      isScheduled = true;\n      setImmediate(dispatchCallbacks);\n    }\n  }\n  function wrapIfNeeded(node) {\n    return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(node) || node;\n  }\n  function dispatchCallbacks() {\n    isScheduled = false;\n    var observers = scheduledObservers;\n    scheduledObservers = [];\n    observers.sort(function (o1, o2) {\n      return o1.uid_ - o2.uid_;\n    });\n    var anyNonEmpty = false;\n    observers.forEach(function (observer) {\n      var queue = observer.takeRecords();\n      removeTransientObserversFor(observer);\n      if (queue.length) {\n        observer.callback_(queue, observer);\n        anyNonEmpty = true;\n      }\n    });\n    if (anyNonEmpty) dispatchCallbacks();\n  }\n  function removeTransientObserversFor(observer) {\n    observer.nodes_.forEach(function (node) {\n      var registrations = registrationsTable.get(node);\n      if (!registrations) return;\n      registrations.forEach(function (registration) {\n        if (registration.observer === observer) registration.removeTransientObservers();\n      });\n    });\n  }\n  function forEachAncestorAndObserverEnqueueRecord(target, callback) {\n    for (var node = target; node; node = node.parentNode) {\n      var registrations = registrationsTable.get(node);\n      if (registrations) {\n        for (var j = 0; j < registrations.length; j++) {\n          var registration = registrations[j];\n          var options = registration.options;\n          if (node !== target && !options.subtree) continue;\n          var record = callback(options);\n          if (record) registration.enqueue(record);\n        }\n      }\n    }\n  }\n  var uidCounter = 0;\n  function JsMutationObserver(callback) {\n    this.callback_ = callback;\n    this.nodes_ = [];\n    this.records_ = [];\n    this.uid_ = ++uidCounter;\n  }\n  JsMutationObserver.prototype = {\n    observe: function observe(target, options) {\n      target = wrapIfNeeded(target);\n      if (!options.childList && !options.attributes && !options.characterData || options.attributeOldValue && !options.attributes || options.attributeFilter && options.attributeFilter.length && !options.attributes || options.characterDataOldValue && !options.characterData) {\n        throw new SyntaxError();\n      }\n      var registrations = registrationsTable.get(target);\n      if (!registrations) registrationsTable.set(target, registrations = []);\n      var registration;\n      for (var i = 0; i < registrations.length; i++) {\n        if (registrations[i].observer === this) {\n          registration = registrations[i];\n          registration.removeListeners();\n          registration.options = options;\n          break;\n        }\n      }\n      if (!registration) {\n        registration = new Registration(this, target, options);\n        registrations.push(registration);\n        this.nodes_.push(target);\n      }\n      registration.addListeners();\n    },\n    disconnect: function disconnect() {\n      this.nodes_.forEach(function (node) {\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          var registration = registrations[i];\n          if (registration.observer === this) {\n            registration.removeListeners();\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n      this.records_ = [];\n    },\n    takeRecords: function takeRecords() {\n      var copyOfRecords = this.records_;\n      this.records_ = [];\n      return copyOfRecords;\n    }\n  };\n  function MutationRecord(type, target) {\n    this.type = type;\n    this.target = target;\n    this.addedNodes = [];\n    this.removedNodes = [];\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.attributeName = null;\n    this.attributeNamespace = null;\n    this.oldValue = null;\n  }\n  function copyMutationRecord(original) {\n    var record = new MutationRecord(original.type, original.target);\n    record.addedNodes = original.addedNodes.slice();\n    record.removedNodes = original.removedNodes.slice();\n    record.previousSibling = original.previousSibling;\n    record.nextSibling = original.nextSibling;\n    record.attributeName = original.attributeName;\n    record.attributeNamespace = original.attributeNamespace;\n    record.oldValue = original.oldValue;\n    return record;\n  }\n  var currentRecord, recordWithOldValue;\n  function getRecord(type, target) {\n    return currentRecord = new MutationRecord(type, target);\n  }\n  function getRecordWithOldValue(oldValue) {\n    if (recordWithOldValue) return recordWithOldValue;\n    recordWithOldValue = copyMutationRecord(currentRecord);\n    recordWithOldValue.oldValue = oldValue;\n    return recordWithOldValue;\n  }\n  function clearRecords() {\n    currentRecord = recordWithOldValue = undefined;\n  }\n  function recordRepresentsCurrentMutation(record) {\n    return record === recordWithOldValue || record === currentRecord;\n  }\n  function selectRecord(lastRecord, newRecord) {\n    if (lastRecord === newRecord) return lastRecord;\n    if (recordWithOldValue && recordRepresentsCurrentMutation(lastRecord)) return recordWithOldValue;\n    return null;\n  }\n  function Registration(observer, target, options) {\n    this.observer = observer;\n    this.target = target;\n    this.options = options;\n    this.transientObservedNodes = [];\n  }\n  Registration.prototype = {\n    enqueue: function enqueue(record) {\n      var records = this.observer.records_;\n      var length = records.length;\n      if (records.length > 0) {\n        var lastRecord = records[length - 1];\n        var recordToReplaceLast = selectRecord(lastRecord, record);\n        if (recordToReplaceLast) {\n          records[length - 1] = recordToReplaceLast;\n          return;\n        }\n      } else {\n        scheduleCallback(this.observer);\n      }\n      records[length] = record;\n    },\n    addListeners: function addListeners() {\n      this.addListeners_(this.target);\n    },\n    addListeners_: function addListeners_(node) {\n      var options = this.options;\n      if (options.attributes) node.addEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.addEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.addEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.addEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    removeListeners: function removeListeners() {\n      this.removeListeners_(this.target);\n    },\n    removeListeners_: function removeListeners_(node) {\n      var options = this.options;\n      if (options.attributes) node.removeEventListener(\"DOMAttrModified\", this, true);\n      if (options.characterData) node.removeEventListener(\"DOMCharacterDataModified\", this, true);\n      if (options.childList) node.removeEventListener(\"DOMNodeInserted\", this, true);\n      if (options.childList || options.subtree) node.removeEventListener(\"DOMNodeRemoved\", this, true);\n    },\n    addTransientObserver: function addTransientObserver(node) {\n      if (node === this.target) return;\n      this.addListeners_(node);\n      this.transientObservedNodes.push(node);\n      var registrations = registrationsTable.get(node);\n      if (!registrations) registrationsTable.set(node, registrations = []);\n      registrations.push(this);\n    },\n    removeTransientObservers: function removeTransientObservers() {\n      var transientObservedNodes = this.transientObservedNodes;\n      this.transientObservedNodes = [];\n      transientObservedNodes.forEach(function (node) {\n        this.removeListeners_(node);\n        var registrations = registrationsTable.get(node);\n        for (var i = 0; i < registrations.length; i++) {\n          if (registrations[i] === this) {\n            registrations.splice(i, 1);\n            break;\n          }\n        }\n      }, this);\n    },\n    handleEvent: function handleEvent(e) {\n      e.stopImmediatePropagation();\n      switch (e.type) {\n        case \"DOMAttrModified\":\n          var name = e.attrName;\n          var namespace = e.relatedNode.namespaceURI;\n          var target = e.target;\n          var record = new getRecord(\"attributes\", target);\n          record.attributeName = name;\n          record.attributeNamespace = namespace;\n          var oldValue = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;\n          forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n            if (!options.attributes) return;\n            if (options.attributeFilter && options.attributeFilter.length && options.attributeFilter.indexOf(name) === -1 && options.attributeFilter.indexOf(namespace) === -1) {\n              return;\n            }\n            if (options.attributeOldValue) return getRecordWithOldValue(oldValue);\n            return record;\n          });\n          break;\n\n        case \"DOMCharacterDataModified\":\n          var target = e.target;\n          var record = getRecord(\"characterData\", target);\n          var oldValue = e.prevValue;\n          forEachAncestorAndObserverEnqueueRecord(target, function (options) {\n            if (!options.characterData) return;\n            if (options.characterDataOldValue) return getRecordWithOldValue(oldValue);\n            return record;\n          });\n          break;\n\n        case \"DOMNodeRemoved\":\n          this.addTransientObserver(e.target);\n\n        case \"DOMNodeInserted\":\n          var changedNode = e.target;\n          var addedNodes, removedNodes;\n          if (e.type === \"DOMNodeInserted\") {\n            addedNodes = [changedNode];\n            removedNodes = [];\n          } else {\n            addedNodes = [];\n            removedNodes = [changedNode];\n          }\n          var previousSibling = changedNode.previousSibling;\n          var nextSibling = changedNode.nextSibling;\n          var record = getRecord(\"childList\", e.target.parentNode);\n          record.addedNodes = addedNodes;\n          record.removedNodes = removedNodes;\n          record.previousSibling = previousSibling;\n          record.nextSibling = nextSibling;\n          forEachAncestorAndObserverEnqueueRecord(e.relatedNode, function (options) {\n            if (!options.childList) return;\n            return record;\n          });\n      }\n      clearRecords();\n    }\n  };\n  global.JsMutationObserver = JsMutationObserver;\n  if (!global.MutationObserver) {\n    global.MutationObserver = JsMutationObserver;\n    JsMutationObserver._isPolyfilled = true;\n  }\n})(self);\n\n/*\nCopyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n(function (global, undefined) {\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var setImmediate;\n\n    function addFromSetImmediateArguments(args) {\n        tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);\n        return nextHandle++;\n    }\n\n    // This function accepts the same arguments as setImmediate, but\n    // returns a function that requires no arguments.\n    function partiallyApplied(handler) {\n        var args = [].slice.call(arguments, 1);\n        return function () {\n            if (typeof handler === \"function\") {\n                handler.apply(undefined, args);\n            } else {\n                new Function(\"\" + handler)();\n            }\n        };\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    task();\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function installNextTickImplementation() {\n        setImmediate = function setImmediate() {\n            var handle = addFromSetImmediateArguments(arguments);\n            process.nextTick(partiallyApplied(runIfPresent, handle));\n            return handle;\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function () {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function onGlobalMessage(event) {\n            if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        setImmediate = function setImmediate() {\n            var handle = addFromSetImmediateArguments(arguments);\n            global.postMessage(messagePrefix + handle, \"*\");\n            return handle;\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function (event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        setImmediate = function setImmediate() {\n            var handle = addFromSetImmediateArguments(arguments);\n            channel.port2.postMessage(handle);\n            return handle;\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        setImmediate = function setImmediate() {\n            var handle = addFromSetImmediateArguments(arguments);\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n            return handle;\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        setImmediate = function setImmediate() {\n            var handle = addFromSetImmediateArguments(arguments);\n            setTimeout(partiallyApplied(runIfPresent, handle), 0);\n            return handle;\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n})(self);\n\n// Caution:\n// Do not replace this import statement with codes.\n//\n// If you replace this import statement with codes,\n// the codes will be executed after the following polyfills are imported\n// because import statements are hoisted during compilation.\n// Polyfill ECMAScript standard features with global namespace pollution\n// Polyfill Custom Elements v1 with global namespace pollution\n// Polyfill MutationObserver with global namespace pollution\n// Polyfill setImmediate with global namespace pollution\n\n(function () {\n  var DEFAULT_VIEWPORT = 'width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no';\n\n  var Viewport = {\n    ensureViewportElement: function ensureViewportElement() {\n      var viewportElement = document.querySelector('meta[name=viewport]');\n\n      if (!viewportElement) {\n        viewportElement = document.createElement('meta');\n        viewportElement.name = 'viewport';\n        document.head.appendChild(viewportElement);\n      }\n\n      return viewportElement;\n    },\n\n    setup: function setup() {\n      var viewportElement = Viewport.ensureViewportElement();\n\n      if (!viewportElement) {\n        return;\n      }\n\n      if (!viewportElement.hasAttribute('content')) {\n        viewportElement.setAttribute('content', DEFAULT_VIEWPORT);\n      }\n    }\n  };\n\n  window.Viewport = Viewport;\n})();\n\n/**\n * MicroEvent - to make any js object an event emitter (server or browser)\n *\n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediately, no mystery, no magic involved\n *\n * - create a MicroEventDebug with goodies to debug\n *   - make it safer to use\n*/\n\n/** NOTE: This library is customized for Onsen UI. */\n\nvar MicroEvent = function MicroEvent() {};\nMicroEvent.prototype = {\n  on: function on(event, fct) {\n    this._events = this._events || {};\n    this._events[event] = this._events[event] || [];\n    this._events[event].push(fct);\n  },\n  once: function once(event, fct) {\n    var self = this;\n    var wrapper = function wrapper() {\n      self.off(event, wrapper);\n      return fct.apply(null, arguments);\n    };\n    this.on(event, wrapper);\n  },\n  off: function off(event, fct) {\n    this._events = this._events || {};\n    if (event in this._events === false) {\n      return;\n    }\n\n    this._events[event] = this._events[event].filter(function (_fct) {\n      if (fct) {\n        return fct !== _fct;\n      } else {\n        return false;\n      }\n    });\n  },\n  emit: function emit(event /* , args... */) {\n    this._events = this._events || {};\n    if (event in this._events === false) {\n      return;\n    }\n    for (var i = 0; i < this._events[event].length; i++) {\n      this._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1));\n    }\n  }\n};\n\n/**\n * mixin will delegate all MicroEvent.js function in the destination object\n *\n * - require('MicroEvent').mixin(Foobar) will make Foobar able to use MicroEvent\n *\n * @param {Object} the object which will support MicroEvent\n*/\nMicroEvent.mixin = function (destObject) {\n  var props = ['on', 'once', 'off', 'emit'];\n  for (var i = 0; i < props.length; i++) {\n    if (typeof destObject === 'function') {\n      destObject.prototype[props[i]] = MicroEvent.prototype[props[i]];\n    } else {\n      destObject[props[i]] = MicroEvent.prototype[props[i]];\n    }\n  }\n};\n\nwindow.MicroEvent = MicroEvent;\n\nvar onsElements = {};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Add vendor prefix.\n *\n * @param {String} name\n * @return {String}\n */\nvar prefix = function () {\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var prefix = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n\n  return function (name) {\n    return '-' + prefix + '-' + util$1.hyphenate(name);\n  };\n}();\n\n/**\n * Minimal utility library for manipulating element's style.\n * Set element's style.\n *\n * @param {Element} element\n * @param {Object} styles\n * @return {Element}\n */\nvar styler = function styler(element, style) {\n  Object.keys(style).forEach(function (key) {\n    if (key in element.style) {\n      element.style[key] = style[key];\n    } else if (prefix(key) in element.style) {\n      element.style[prefix(key)] = style[key];\n    } else {\n      util$1.warn('No such style property: ' + key);\n    }\n  });\n  return element;\n};\n\n/**\n * @param {Element} element\n * @param {String} styles Space-separated CSS properties to remove\n */\nstyler.clear = function (element) {\n  var styles = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n  var clearlist = styles.split(/\\s+/).reduce(function (r, s) {\n    return r.concat([util$1.hyphenate(s), prefix(s)]);\n  }, []),\n      keys = [];\n\n  var _loop = function _loop(i) {\n    var key = element.style[i];\n    if (clearlist.length === 0 || clearlist.some(function (s) {\n      return key.indexOf(s) === 0;\n    })) {\n      keys.push(key); // Store the key to fix Safari style indexes\n    }\n  };\n\n  for (var i = element.style.length - 1; i >= 0; i--) {\n    _loop(i);\n  }\n\n  keys.forEach(function (key) {\n    return element.style[key] = '';\n  });\n  element.getAttribute('style') === '' && element.removeAttribute('style');\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar autoStyleEnabled = true;\n\n// Modifiers\nvar modifiersMap = {\n  'quiet': 'material--flat',\n  'light': 'material--flat',\n  'outline': 'material--flat',\n  'cta': '',\n  'large--quiet': 'material--flat large',\n  'large--cta': 'large',\n  'noborder': '',\n  'tappable': ''\n};\n\nvar platforms = {};\n\nplatforms.android = function (element) {\n\n  var elementName = element.tagName.toLowerCase();\n\n  if (!util$1.hasModifier(element, 'material')) {\n    var oldModifier = element.getAttribute('modifier') || '';\n\n    var newModifier = oldModifier.trim().split(/\\s+/).map(function (e) {\n      return modifiersMap.hasOwnProperty(e) ? modifiersMap[e] : e;\n    });\n    newModifier.unshift('material');\n\n    element.setAttribute('modifier', newModifier.join(' ').trim());\n  }\n\n  var elements = ['ons-alert-dialog-button', 'ons-toolbar-button', 'ons-back-button', 'ons-button', 'ons-list-item', 'ons-fab', 'ons-speed-dial', 'ons-speed-dial-item', 'ons-tab'];\n\n  // Effects\n  if (elements.indexOf(elementName) !== -1 && !element.hasAttribute('ripple') && !element.querySelector('ons-ripple')) {\n\n    if (elementName === 'ons-list-item') {\n      if (element.hasAttribute('tappable')) {\n        element.setAttribute('ripple', '');\n        element.removeAttribute('tappable');\n      }\n    } else {\n      element.setAttribute('ripple', '');\n    }\n  }\n};\n\nplatforms.ios = function (element) {\n\n  // Modifiers\n  if (util$1.removeModifier(element, 'material')) {\n    if (util$1.removeModifier(element, 'material--flat')) {\n      util$1.addModifier(element, util$1.removeModifier(element, 'large') ? 'large--quiet' : 'quiet');\n    }\n\n    if (!element.getAttribute('modifier')) {\n      element.removeAttribute('modifier');\n    }\n  }\n\n  // Effects\n  if (element.hasAttribute('ripple')) {\n    if (element.tagName.toLowerCase() === 'ons-list-item') {\n      element.setAttribute('tappable', '');\n    }\n\n    element.removeAttribute('ripple');\n  }\n};\n\nvar unlocked = {\n  android: true\n};\n\nvar getPlatform = function getPlatform(element, force) {\n  if (autoStyleEnabled && !element.hasAttribute('disable-auto-styling')) {\n    var mobileOS = platform.getMobileOS();\n    if (platforms.hasOwnProperty(mobileOS) && (unlocked.hasOwnProperty(mobileOS) || force)) {\n      return mobileOS;\n    }\n  }\n  return null;\n};\n\nvar prepare = function prepare(element, force) {\n  var p = getPlatform(element, force);\n  p && platforms[p](element);\n};\n\nvar mapModifier = function mapModifier(modifier, element, force) {\n  if (getPlatform(element, force)) {\n    return modifier.split(/\\s+/).map(function (m) {\n      return modifiersMap.hasOwnProperty(m) ? modifiersMap[m] : m;\n    }).join(' ');\n  }\n  return modifier;\n};\n\nvar restoreModifier = function restoreModifier(element) {\n  if (getPlatform(element) === 'android') {\n    var modifier = element.getAttribute('modifier') || '';\n    var newModifier = mapModifier(modifier, element);\n\n    if (!/(^|\\s+)material($|\\s+)/i.test(modifier)) {\n      newModifier = 'material ' + newModifier;\n    }\n\n    if (newModifier !== modifier) {\n      element.setAttribute('modifier', newModifier.trim());\n      return true;\n    }\n  }\n  return false;\n};\n\nvar autoStyle = {\n  isEnabled: function isEnabled() {\n    return autoStyleEnabled;\n  },\n  enable: function enable() {\n    return autoStyleEnabled = true;\n  },\n  disable: function disable() {\n    return autoStyleEnabled = false;\n  },\n  prepare: prepare,\n  mapModifier: mapModifier,\n  getPlatform: getPlatform,\n  restoreModifier: restoreModifier\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar ModifierUtil = function () {\n  function ModifierUtil() {\n    classCallCheck(this, ModifierUtil);\n  }\n\n  createClass(ModifierUtil, null, [{\n    key: 'diff',\n\n    /**\n     * @param {String} last\n     * @param {String} current\n     */\n    value: function diff(last, current) {\n      last = makeDict(('' + last).trim());\n      current = makeDict(('' + current).trim());\n\n      var removed = Object.keys(last).reduce(function (result, token) {\n        if (!current[token]) {\n          result.push(token);\n        }\n        return result;\n      }, []);\n\n      var added = Object.keys(current).reduce(function (result, token) {\n        if (!last[token]) {\n          result.push(token);\n        }\n        return result;\n      }, []);\n\n      return { added: added, removed: removed };\n\n      function makeDict(modifier) {\n        var dict = {};\n        ModifierUtil.split(modifier).forEach(function (token) {\n          return dict[token] = token;\n        });\n        return dict;\n      }\n    }\n\n    /**\n     * @param {Object} diff\n     * @param {Array} diff.removed\n     * @param {Array} diff.added\n     * @param {Object} classList\n     * @param {String} template\n     */\n\n  }, {\n    key: 'applyDiffToClassList',\n    value: function applyDiffToClassList(diff, classList, template) {\n      diff.added.map(function (modifier) {\n        return template.replace(/\\*/g, modifier);\n      }).forEach(function (klass) {\n        return klass.split(/\\s+/).forEach(function (k) {\n          return classList.add(k);\n        });\n      });\n\n      diff.removed.map(function (modifier) {\n        return template.replace(/\\*/g, modifier);\n      }).forEach(function (klass) {\n        return klass.split(/\\s+/).forEach(function (k) {\n          return classList.remove(k);\n        });\n      });\n    }\n\n    /**\n     * @param {Object} diff\n     * @param {Array} diff.removed\n     * @param {Array} diff.added\n     * @param {HTMLElement} element\n     * @param {Object} scheme\n     */\n\n  }, {\n    key: 'applyDiffToElement',\n    value: function applyDiffToElement(diff, element, scheme) {\n      Object.keys(scheme).forEach(function (selector) {\n        var targetElements = !selector || util$1.match(element, selector) ? [element] : Array.prototype.filter.call(element.querySelectorAll(selector), function (targetElement) {\n          return !util$1.findParent(targetElement, element.tagName, function (parent) {\n            return parent === element;\n          });\n        });\n\n        for (var i = 0; i < targetElements.length; i++) {\n          ModifierUtil.applyDiffToClassList(diff, targetElements[i].classList, scheme[selector]);\n        }\n      });\n    }\n\n    /**\n     * @param {String} last\n     * @param {String} current\n     * @param {HTMLElement} element\n     * @param {Object} scheme\n     */\n\n  }, {\n    key: 'onModifierChanged',\n    value: function onModifierChanged(last, current, element, scheme) {\n      ModifierUtil.applyDiffToElement(ModifierUtil.diff(last, current), element, scheme);\n      autoStyle.restoreModifier(element);\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh(element, scheme) {\n      ModifierUtil.applyDiffToElement(ModifierUtil.diff('', element.getAttribute('modifier') || ''), element, scheme);\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @param {Object} scheme\n     */\n\n  }, {\n    key: 'initModifier',\n    value: function initModifier(element, scheme) {\n      var modifier = element.getAttribute('modifier');\n      if (typeof modifier !== 'string') {\n        return;\n      }\n\n      ModifierUtil.applyDiffToElement({\n        removed: [],\n        added: ModifierUtil.split(modifier)\n      }, element, scheme);\n    }\n  }, {\n    key: 'split',\n    value: function split(modifier) {\n      if (typeof modifier !== 'string') {\n        return [];\n      }\n\n      return modifier.trim().split(/ +/).filter(function (token) {\n        return token !== '';\n      });\n    }\n\n    /**\n     * Add modifier token to an element.\n     */\n\n  }, {\n    key: 'addModifier',\n    value: function addModifier(element, modifierToken) {\n      if (!element.hasAttribute('modifier')) {\n        element.setAttribute('modifier', modifierToken);\n      } else {\n        var tokens = ModifierUtil.split(element.getAttribute('modifier'));\n        if (tokens.indexOf(modifierToken) == -1) {\n          tokens.push(modifierToken);\n          element.setAttribute('modifier', tokens.join(' '));\n        }\n      }\n    }\n\n    /**\n     * Remove modifier token from an element.\n     */\n\n  }, {\n    key: 'removeModifier',\n    value: function removeModifier(element, modifierToken) {\n      if (element.hasAttribute('modifier')) {\n        var tokens = ModifierUtil.split(element.getAttribute('modifier'));\n        var index = tokens.indexOf(modifierToken);\n        if (index !== -1) {\n          tokens.splice(index, 1);\n          element.setAttribute('modifier', tokens.join(' '));\n        }\n      }\n    }\n  }]);\n  return ModifierUtil;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar startsWith = function startsWith(s, c) {\n  return s.substr(0, c.length) === c;\n};\nvar endsWith = function endsWith(s, c) {\n  return s.substr(s.length - c.length, c.length) === c;\n};\nvar unwrap = function unwrap(s) {\n  return s.slice(1, -1);\n};\nvar isObjectString = function isObjectString(s) {\n  return startsWith(s, '{') && endsWith(s, '}');\n};\nvar isArrayString = function isArrayString(s) {\n  return startsWith(s, '[') && endsWith(s, ']');\n};\nvar isQuotedString = function isQuotedString(s) {\n  return startsWith(s, '\\'') && endsWith(s, '\\'') || startsWith(s, '\"') && endsWith(s, '\"');\n};\n\nvar error = function error(token, string, originalString) {\n  throw new Error('Unexpected token \\'' + token + '\\' at position ' + (originalString.length - string.length - 1) + ' in string: \\'' + originalString + '\\'');\n};\n\nvar processToken = function processToken(token, string, originalString) {\n  if (token === 'true' || token === 'false') {\n    return token === 'true';\n  } else if (isQuotedString(token)) {\n    return unwrap(token);\n  } else if (!isNaN(token)) {\n    return +token;\n  } else if (isObjectString(token)) {\n    return parseObject(unwrap(token));\n  } else if (isArrayString(token)) {\n    return parseArray(unwrap(token));\n  } else {\n    error(token, string, originalString);\n  }\n};\n\nvar nextToken = function nextToken(string) {\n  string = string.trim();\n  var limit = string.length;\n\n  if (string[0] === ':' || string[0] === ',') {\n\n    limit = 1;\n  } else if (string[0] === '{' || string[0] === '[') {\n\n    var c = string.charCodeAt(0);\n    var nestedObject = 1;\n    for (var i = 1; i < string.length; i++) {\n      if (string.charCodeAt(i) === c) {\n        nestedObject++;\n      } else if (string.charCodeAt(i) === c + 2) {\n        nestedObject--;\n        if (nestedObject === 0) {\n          limit = i + 1;\n          break;\n        }\n      }\n    }\n  } else if (string[0] === '\\'' || string[0] === '\"') {\n\n    for (var _i = 1; _i < string.length; _i++) {\n      if (string[_i] === string[0]) {\n        limit = _i + 1;\n        break;\n      }\n    }\n  } else {\n\n    for (var _i2 = 1; _i2 < string.length; _i2++) {\n      if ([' ', ',', ':'].indexOf(string[_i2]) !== -1) {\n        limit = _i2;\n        break;\n      }\n    }\n  }\n\n  return string.slice(0, limit);\n};\n\nvar parseObject = function parseObject(string) {\n  var isValidKey = function isValidKey(key) {\n    return (/^[A-Z_$][A-Z0-9_$]*$/i.test(key)\n    );\n  };\n\n  string = string.trim();\n  var originalString = string;\n  var object = {};\n  var readingKey = true,\n      key = void 0,\n      previousToken = void 0,\n      token = void 0;\n\n  while (string.length > 0) {\n    previousToken = token;\n    token = nextToken(string);\n    string = string.slice(token.length, string.length).trim();\n\n    if (token === ':' && (!readingKey || !previousToken || previousToken === ',') || token === ',' && readingKey || token !== ':' && token !== ',' && previousToken && previousToken !== ',' && previousToken !== ':') {\n      error(token, string, originalString);\n    } else if (token === ':' && readingKey && previousToken) {\n      previousToken = isQuotedString(previousToken) ? unwrap(previousToken) : previousToken;\n      if (isValidKey(previousToken)) {\n        key = previousToken;\n        readingKey = false;\n      } else {\n        throw new Error('Invalid key token \\'' + previousToken + '\\' at position 0 in string: \\'' + originalString + '\\'');\n      }\n    } else if (token === ',' && !readingKey && previousToken) {\n      object[key] = processToken(previousToken, string, originalString);\n      readingKey = true;\n    }\n  }\n\n  if (token) {\n    object[key] = processToken(token, string, originalString);\n  }\n\n  return object;\n};\n\nvar parseArray = function parseArray(string) {\n  string = string.trim();\n  var originalString = string;\n  var array = [];\n  var previousToken = void 0,\n      token = void 0;\n\n  while (string.length > 0) {\n    previousToken = token;\n    token = nextToken(string);\n    string = string.slice(token.length, string.length).trim();\n\n    if (token === ',' && (!previousToken || previousToken === ',')) {\n      error(token, string, originalString);\n    } else if (token === ',') {\n      array.push(processToken(previousToken, string, originalString));\n    }\n  }\n\n  if (token) {\n    if (token !== ',') {\n      array.push(processToken(token, string, originalString));\n    } else {\n      error(token, string, originalString);\n    }\n  }\n\n  return array;\n};\n\nvar parse = function parse(string) {\n  string = string.trim();\n\n  if (isObjectString(string)) {\n    return parseObject(unwrap(string));\n  } else if (isArrayString(string)) {\n    return parseArray(unwrap(string));\n  } else {\n    throw new Error('Provided string must be object or array like: ' + string);\n  }\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar util$1 = {};\nvar errorPrefix = '[Onsen UI]';\n\nutil$1.globals = {\n  fabOffset: 0,\n  errorPrefix: errorPrefix,\n  supportsPassive: false\n};\n\nplatform._runOnActualPlatform(function () {\n  util$1.globals.actualMobileOS = platform.getMobileOS();\n  util$1.globals.isWKWebView = platform.isWKWebView();\n});\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get$$1() {\n      util$1.globals.supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {\n  \n}\n\n/**\n * @param {Element} el Target\n * @param {String} name Event name\n * @param {Function} handler Event handler\n * @param {Object} [opt] Event options (passive, capture...)\n * @param {Boolean} [isGD] If comes from GestureDetector. Just for testing.\n */\nutil$1.addEventListener = function (el, name, handler, opt, isGD) {\n  el.addEventListener(name, handler, util$1.globals.supportsPassive ? opt : (opt || {}).capture);\n};\nutil$1.removeEventListener = function (el, name, handler, opt, isGD) {\n  el.removeEventListener(name, handler, util$1.globals.supportsPassive ? opt : (opt || {}).capture);\n};\n\n/**\n * @param {String/Function} query dot class name or node name or matcher function.\n * @return {Function}\n */\nutil$1.prepareQuery = function (query) {\n  return query instanceof Function ? query : function (element) {\n    return util$1.match(element, query);\n  };\n};\n\n/**\n * @param {Element} e\n * @param {String/Function} s CSS Selector.\n * @return {Boolean}\n */\nutil$1.match = function (e, s) {\n  return (e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector).call(e, s);\n};\n\n/**\n * @param {Element} element\n * @param {String/Function} query dot class name or node name or matcher function.\n * @return {HTMLElement/null}\n */\nutil$1.findChild = function (element, query) {\n  var match = util$1.prepareQuery(query);\n\n  // Caution: `element.children` is `undefined` in some environments if `element` is `svg`\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var node = element.childNodes[i];\n    if (node.nodeType !== Node.ELEMENT_NODE) {\n      // process only element nodes\n      continue;\n    }\n    if (match(node)) {\n      return node;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {Element} element\n * @param {String/Function} query dot class name or node name or matcher function.\n * @return {HTMLElement/null}\n */\nutil$1.findParent = function (element, query, until) {\n  var match = util$1.prepareQuery(query);\n\n  var parent = element.parentNode;\n  for (;;) {\n    if (!parent || parent === document || parent instanceof DocumentFragment || until && until(parent)) {\n      return null;\n    } else if (match(parent)) {\n      return parent;\n    }\n    parent = parent.parentNode;\n  }\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\nutil$1.isAttached = function (element) {\n  return document.body.contains(element);\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\nutil$1.hasAnyComponentAsParent = function (element) {\n  while (element && document.documentElement !== element) {\n    element = element.parentNode;\n    if (element && element.nodeName.toLowerCase().match(/(ons-navigator|ons-tabbar|ons-modal)/)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @param {Object} element\n * @return {Array}\n */\nutil$1.getAllChildNodes = function (element) {\n  var _ref;\n\n  return (_ref = [element]).concat.apply(_ref, toConsumableArray(Array.from(element.children).map(function (childEl) {\n    return util$1.getAllChildNodes(childEl);\n  })));\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\nutil$1.isPageControl = function (element) {\n  return element.nodeName.match(/^ons-(navigator|splitter|tabbar|page)$/i);\n};\n\n/**\n * @param {Element} element\n * @param {String} action to propagate\n */\nutil$1.propagateAction = function (element, action) {\n  for (var i = 0; i < element.childNodes.length; i++) {\n    var child = element.childNodes[i];\n    if (child[action] instanceof Function) {\n      child[action]();\n    } else {\n      util$1.propagateAction(child, action);\n    }\n  }\n};\n\n/**\n * @param {String} string - string to be camelized\n * @return {String} Camelized string\n */\nutil$1.camelize = function (string) {\n  return string.toLowerCase().replace(/-([a-z])/g, function (m, l) {\n    return l.toUpperCase();\n  });\n};\n\n/**\n * @param {String} string - string to be hyphenated\n * @return {String} Hyphenated string\n */\nutil$1.hyphenate = function (string) {\n  return string.replace(/([a-zA-Z])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\n/**\n * @param {String} selector - tag and class only\n * @param {Object} style\n * @param {Element}\n */\nutil$1.create = function () {\n  var selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var classList = selector.split('.');\n  var element = document.createElement(classList.shift() || 'div');\n\n  if (classList.length) {\n    element.className = classList.join(' ');\n  }\n\n  styler(element, style);\n\n  return element;\n};\n\n/**\n * @param {String} html\n * @return {Element}\n */\nutil$1.createElement = function (html) {\n  var wrapper = document.createElement('div');\n\n  if (html instanceof DocumentFragment) {\n    wrapper.appendChild(document.importNode(html, true));\n  } else {\n    wrapper.innerHTML = html.trim();\n  }\n\n  if (wrapper.children.length > 1) {\n    util$1.throw('HTML template must contain a single root element');\n  }\n\n  var element = wrapper.children[0];\n  wrapper.children[0].remove();\n  return element;\n};\n\n/**\n * @param {String} html\n * @return {HTMLFragment}\n */\nutil$1.createFragment = function (html) {\n  var template = document.createElement('template');\n  template.innerHTML = html;\n  return document.importNode(template.content, true);\n};\n\n/*\n * @param {Object} dst Destination object.\n * @param {...Object} src Source object(s).\n * @returns {Object} Reference to `dst`.\n */\nutil$1.extend = function (dst) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  for (var i = 0; i < args.length; i++) {\n    if (args[i]) {\n      var keys = Object.keys(args[i]);\n      for (var j = 0; j < keys.length; j++) {\n        var key = keys[j];\n        dst[key] = args[i][key];\n      }\n    }\n  }\n\n  return dst;\n};\n\n/**\n * @param {Object} arrayLike\n * @return {Array}\n */\nutil$1.arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.apply(arrayLike);\n};\n\n/**\n * @param {String} jsonString\n * @param {Object} [failSafe]\n * @return {Object}\n */\nutil$1.parseJSONObjectSafely = function (jsonString) {\n  var failSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  try {\n    var result = JSON.parse('' + jsonString);\n    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {\n      return result;\n    }\n  } catch (e) {\n    return failSafe;\n  }\n  return failSafe;\n};\n\n/**\n * @param {String} path - path such as 'myApp.controllers.data.loadData'\n * @return {Any} - whatever is located at that path\n */\nutil$1.findFromPath = function (path) {\n  path = path.split('.');\n  var el = window,\n      key;\n  while (key = path.shift()) {\n    // eslint-disable-line no-cond-assign\n    el = el[key];\n  }\n  return el;\n};\n\n/**\n * @param {HTMLElement} container - Page or page-container that implements 'topPage'\n * @return {HTMLElement|null} - Visible page element or null if not found.\n */\nutil$1.getTopPage = function (container) {\n  return container && (container.tagName.toLowerCase() === 'ons-page' ? container : container.topPage) || null;\n};\n\n/**\n * @param {HTMLElement} container - Element where the search begins\n * @return {HTMLElement|null} - Page element that contains the visible toolbar or null.\n */\nutil$1.findToolbarPage = function (container) {\n  var page = util$1.getTopPage(container);\n\n  if (page) {\n    if (page._canAnimateToolbar()) {\n      return page;\n    }\n\n    for (var i = 0; i < page._contentElement.children.length; i++) {\n      var nextPage = util$1.getTopPage(page._contentElement.children[i]);\n      if (nextPage && !/ons-tabbar/i.test(page._contentElement.children[i].tagName)) {\n        return util$1.findToolbarPage(nextPage);\n      }\n    }\n  }\n\n  return null;\n};\n\n/**\n * @param {Element} element\n * @param {String} eventName\n * @param {Object} [detail]\n * @return {CustomEvent}\n */\nutil$1.triggerElementEvent = function (target, eventName) {\n  var detail = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n  var event = new CustomEvent(eventName, {\n    bubbles: true,\n    cancelable: true,\n    detail: detail\n  });\n\n  Object.keys(detail).forEach(function (key) {\n    event[key] = detail[key];\n  });\n\n  target.dispatchEvent(event);\n\n  return event;\n};\n\n/**\n * @param {Element} target\n * @param {String} modifierName\n * @return {Boolean}\n */\nutil$1.hasModifier = function (target, modifierName) {\n  if (!target.hasAttribute('modifier')) {\n    return false;\n  }\n\n  return RegExp('(^|\\\\s+)' + modifierName + '($|\\\\s+)', 'i').test(target.getAttribute('modifier'));\n};\n\n/**\n * @param {Element} target\n * @param {String} modifierName\n * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.\n * @param {Object} options.forceAutoStyle Ignores platform limitation.\n * @return {Boolean} Whether it was added or not.\n */\nutil$1.addModifier = function (target, modifierName) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options.autoStyle) {\n    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);\n  }\n\n  if (util$1.hasModifier(target, modifierName)) {\n    return false;\n  }\n\n  target.setAttribute('modifier', ((target.getAttribute('modifier') || '') + ' ' + modifierName).trim());\n  return true;\n};\n\n/**\n * @param {Element} target\n * @param {String} modifierName\n * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.\n * @param {Object} options.forceAutoStyle Ignores platform limitation.\n * @return {Boolean} Whether it was found or not.\n */\nutil$1.removeModifier = function (target, modifierName) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (options.autoStyle) {\n    modifierName = autoStyle.mapModifier(modifierName, target, options.forceAutoStyle);\n  }\n\n  if (!target.getAttribute('modifier') || !util$1.hasModifier(target, modifierName)) {\n    return false;\n  }\n\n  var newModifiers = target.getAttribute('modifier').split(/\\s+/).filter(function (m) {\n    return m && m !== modifierName;\n  });\n  newModifiers.length ? target.setAttribute('modifier', newModifiers.join(' ')) : target.removeAttribute('modifier');\n  return true;\n};\n\n/**\n * @param {Element} target\n * @param {String} modifierName\n * @param {Boolean} options.force Forces modifier to be added or removed.\n * @param {Object} options.autoStyle Maps the modifierName to the corresponding styled modifier.\n * @param {Boolean} options.forceAutoStyle Ignores platform limitation.\n * @return {Boolean} Whether it was found or not.\n */\nutil$1.toggleModifier = function () {\n  var options = arguments.length > 2 ? arguments.length <= 2 ? undefined : arguments[2] : {};\n  var force = typeof options === 'boolean' ? options : options.force;\n\n  var toggle = typeof force === 'boolean' ? force : !util$1.hasModifier.apply(util$1, arguments);\n  toggle ? util$1.addModifier.apply(util$1, arguments) : util$1.removeModifier.apply(util$1, arguments);\n};\n\n/**\n * @param {Element} el\n * @param {String} defaultClass\n * @param {Object} scheme\n */\nutil$1.restoreClass = function (el, defaultClass, scheme) {\n  defaultClass.split(/\\s+/).forEach(function (c) {\n    return c !== '' && !el.classList.contains(c) && el.classList.add(c);\n  });\n  el.hasAttribute('modifier') && ModifierUtil.refresh(el, scheme);\n};\n\n// TODO: FIX\nutil$1.updateParentPosition = function (el) {\n  if (!el._parentUpdated && el.parentElement) {\n    if (window.getComputedStyle(el.parentElement).getPropertyValue('position') === 'static') {\n      el.parentElement.style.position = 'relative';\n    }\n    el._parentUpdated = true;\n  }\n};\n\nutil$1.toggleAttribute = function (element, name, value) {\n  if (value) {\n    element.setAttribute(name, typeof value === 'boolean' ? '' : value);\n  } else {\n    element.removeAttribute(name);\n  }\n};\n\nutil$1.bindListeners = function (element, listenerNames) {\n  listenerNames.forEach(function (name) {\n    var boundName = name.replace(/^_[a-z]/, '_bound' + name[1].toUpperCase());\n    element[boundName] = element[boundName] || element[name].bind(element);\n  });\n};\n\nutil$1.each = function (obj, f) {\n  return Object.keys(obj).forEach(function (key) {\n    return f(key, obj[key]);\n  });\n};\n\n/**\n * @param {Element} target\n * @param {boolean} hasRipple\n * @param {Object} attrs\n */\nutil$1.updateRipple = function (target, hasRipple) {\n  var attrs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (hasRipple === undefined) {\n    hasRipple = target.hasAttribute('ripple');\n  }\n\n  var rippleElement = util$1.findChild(target, 'ons-ripple');\n\n  if (hasRipple) {\n    if (!rippleElement) {\n      var element = document.createElement('ons-ripple');\n      Object.keys(attrs).forEach(function (key) {\n        return element.setAttribute(key, attrs[key]);\n      });\n      target.insertBefore(element, target.firstChild);\n    }\n  } else if (rippleElement) {\n    rippleElement.remove();\n  }\n};\n\n/**\n * @param {String}\n * @return {Object}\n */\nutil$1.animationOptionsParse = parse;\n\n/**\n * @param {*} value\n */\nutil$1.isInteger = function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * @return {Object} Deferred promise.\n */\nutil$1.defer = function () {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n};\n\n/**\n * Show warnings when they are enabled.\n *\n * @param {*} arguments to console.warn\n */\nutil$1.warn = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (!internal$1.config.warningsDisabled) {\n    var _console;\n\n    (_console = console).warn.apply(_console, [errorPrefix].concat(args));\n  }\n};\n\nutil$1.throw = function (message) {\n  throw new Error(errorPrefix + ' ' + message);\n};\n\nutil$1.throwAbstract = function () {\n  return util$1.throw('Cannot instantiate abstract class');\n};\nutil$1.throwMember = function () {\n  return util$1.throw('Class member must be implemented');\n};\nutil$1.throwPageLoader = function () {\n  return util$1.throw('First parameter should be an instance of PageLoader');\n};\nutil$1.throwAnimator = function (el) {\n  return util$1.throw('\"Animator\" param must inherit ' + el + 'Animator');\n};\n\nvar prevent = function prevent(e) {\n  return e.cancelable && e.preventDefault();\n};\n\n/**\n * Prevent scrolling while draging horizontally on iOS.\n *\n * @param {gd} GestureDetector instance\n */\nutil$1.iosPreventScroll = function (gd) {\n  if (util$1.globals.actualMobileOS === 'ios') {\n    var clean = function clean(e) {\n      gd.off('touchmove', prevent);\n      gd.off('dragend', clean);\n    };\n\n    gd.on('touchmove', prevent);\n    gd.on('dragend', clean);\n  }\n};\n\n/**\n * Prevents scroll in underlying pages on iOS. See #2220 #2274 #1949\n *\n * @param {el} HTMLElement that prevents the events\n * @param {add} Boolean Add or remove event listeners\n */\nutil$1.iosPageScrollFix = function (add) {\n  // Full fix - May cause issues with UIWebView's momentum scroll\n  if (util$1.globals.actualMobileOS === 'ios') {\n    document.body.classList.toggle('ons-ios-scroll', add); // Allows custom and localized fixes (#2274)\n    document.body.classList.toggle('ons-ios-scroll-fix', add);\n  }\n};\n\n/**\n * Distance and deltaTime filter some weird dragstart events that are not fired immediately.\n *\n * @param {event}\n */\nutil$1.isValidGesture = function (event) {\n  return event.gesture !== undefined && (event.gesture.distance <= 15 || event.gesture.deltaTime <= 100);\n};\n\nutil$1.checkMissingImport = function () {\n  for (var _len3 = arguments.length, elementNames = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    elementNames[_key3] = arguments[_key3];\n  }\n\n  elementNames.forEach(function (name) {\n    if (!onsElements[name]) {\n      util$1.throw('Ons' + name + ' is required but was not imported (Custom Elements)');\n    }\n  });\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar error$1 = function error(message) {\n  return util$1.throw('In PageAttributeExpression: ' + message);\n};\n\nvar pageAttributeExpression = {\n  _variables: {},\n\n  /**\n   * Define a variable.\n   *\n   * @param {String} name Name of the variable\n   * @param {String|Function} value Value of the variable. Can be a string or a function. The function must return a string.\n   * @param {Boolean} overwrite If this value is false, an error will be thrown when trying to define a variable that has already been defined.\n   */\n  defineVariable: function defineVariable(name, value) {\n    var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof name !== 'string') {\n      error$1('Variable name must be a string');\n    } else if (typeof value !== 'string' && typeof value !== 'function') {\n      error$1('Variable value must be a string or a function');\n    } else if (this._variables.hasOwnProperty(name) && !overwrite) {\n      error$1('\"' + name + '\" is already defined');\n    }\n    this._variables[name] = value;\n  },\n\n  /**\n   * Get a variable.\n   *\n   * @param {String} name Name of the variable.\n   * @return {String|Function|null}\n   */\n  getVariable: function getVariable(name) {\n    if (!this._variables.hasOwnProperty(name)) {\n      return null;\n    }\n\n    return this._variables[name];\n  },\n\n  /**\n   * Remove a variable.\n   *\n   * @param {String} name Name of the varaible.\n   */\n  removeVariable: function removeVariable(name) {\n    delete this._variables[name];\n  },\n\n  /**\n   * Get all variables.\n   *\n   * @return {Object}\n   */\n  getAllVariables: function getAllVariables() {\n    return this._variables;\n  },\n  _parsePart: function _parsePart(part) {\n    var c = void 0,\n        inInterpolation = false,\n        currentIndex = 0;\n\n    var tokens = [];\n\n    if (part.length === 0) {\n      error$1('Unable to parse empty string');\n    }\n\n    for (var i = 0; i < part.length; i++) {\n      c = part.charAt(i);\n\n      if (c === '$' && part.charAt(i + 1) === '{') {\n        if (inInterpolation) {\n          error$1('Nested interpolation not supported');\n        }\n\n        var token = part.substring(currentIndex, i);\n        if (token.length > 0) {\n          tokens.push(part.substring(currentIndex, i));\n        }\n\n        currentIndex = i;\n        inInterpolation = true;\n      } else if (c === '}') {\n        if (!inInterpolation) {\n          error$1('} must be preceeded by ${');\n        }\n\n        var _token = part.substring(currentIndex, i + 1);\n        if (_token.length > 0) {\n          tokens.push(part.substring(currentIndex, i + 1));\n        }\n\n        currentIndex = i + 1;\n        inInterpolation = false;\n      }\n    }\n\n    if (inInterpolation) {\n      error$1('Unterminated interpolation');\n    }\n\n    tokens.push(part.substring(currentIndex, part.length));\n\n    return tokens;\n  },\n  _replaceToken: function _replaceToken(token) {\n    var re = /^\\${(.*?)}$/,\n        match = token.match(re);\n\n    if (match) {\n      var name = match[1].trim();\n      var variable = this.getVariable(name);\n\n      if (variable === null) {\n        error$1('Variable \"' + name + '\" does not exist');\n      } else if (typeof variable === 'string') {\n        return variable;\n      } else {\n        var rv = variable();\n\n        if (typeof rv !== 'string') {\n          error$1('Must return a string');\n        }\n\n        return rv;\n      }\n    } else {\n      return token;\n    }\n  },\n  _replaceTokens: function _replaceTokens(tokens) {\n    return tokens.map(this._replaceToken.bind(this));\n  },\n  _parseExpression: function _parseExpression(expression) {\n    return expression.split(',').map(function (part) {\n      return part.trim();\n    }).map(this._parsePart.bind(this)).map(this._replaceTokens.bind(this)).map(function (part) {\n      return part.join('');\n    });\n  },\n\n  /**\n   * Evaluate an expression.\n   *\n   * @param {String} expression An page attribute expression.\n   * @return {Array}\n   */\n  evaluate: function evaluate(expression) {\n    if (!expression) {\n      return [];\n    }\n\n    return this._parseExpression(expression);\n  }\n};\n\n// Define default variables.\npageAttributeExpression.defineVariable('mobileOS', platform.getMobileOS());\npageAttributeExpression.defineVariable('iOSDevice', platform.getIOSDevice());\npageAttributeExpression.defineVariable('runtime', function () {\n  return platform.isWebView() ? 'cordova' : 'browser';\n});\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar internal$1 = {};\n\ninternal$1.config = {\n  autoStatusBarFill: true,\n  animationsDisabled: false,\n  warningsDisabled: false\n};\n\ninternal$1.nullElement = window.document.createElement('div');\n\n/**\n * @return {Boolean}\n */\ninternal$1.isEnabledAutoStatusBarFill = function () {\n  return !!internal$1.config.autoStatusBarFill;\n};\n\n/**\n * @param {String} html\n * @return {String}\n */\ninternal$1.normalizePageHTML = function (html) {\n  return ('' + html).trim();\n};\n\ninternal$1.waitDOMContentLoaded = function (callback) {\n  if (window.document.readyState === 'loading' || window.document.readyState == 'uninitialized') {\n    var wrappedCallback = function wrappedCallback() {\n      callback();\n      window.document.removeEventListener('DOMContentLoaded', wrappedCallback);\n    };\n    window.document.addEventListener('DOMContentLoaded', wrappedCallback);\n  } else {\n    setImmediate(callback);\n  }\n};\n\ninternal$1.autoStatusBarFill = function (action) {\n  var onReady = function onReady() {\n    if (internal$1.shouldFillStatusBar()) {\n      action();\n    }\n    document.removeEventListener('deviceready', onReady);\n  };\n\n  if ((typeof device === 'undefined' ? 'undefined' : _typeof(device)) === 'object') {\n    document.addEventListener('deviceready', onReady);\n  } else if (['complete', 'interactive'].indexOf(document.readyState) === -1) {\n    internal$1.waitDOMContentLoaded(onReady);\n  } else {\n    onReady();\n  }\n};\n\ninternal$1.shouldFillStatusBar = function () {\n  return internal$1.isEnabledAutoStatusBarFill() && (platform.isWebView() && (platform.isIOS7above() || platform.isIPadOS()) && !platform.isIPhoneX() || document.body.querySelector('.ons-status-bar-mock.ios'));\n};\n\ninternal$1.templateStore = {\n  _storage: {},\n\n  /**\n   * @param {String} key\n   * @return {String/null} template\n   */\n  get: function get$$1(key) {\n    return internal$1.templateStore._storage[key] || null;\n  },\n\n\n  /**\n   * @param {String} key\n   * @param {String} template\n   */\n  set: function set$$1(key, template) {\n    internal$1.templateStore._storage[key] = template;\n  }\n};\n\nwindow.document.addEventListener('_templateloaded', function (e) {\n  if (e.target.nodeName.toLowerCase() === 'ons-template') {\n    internal$1.templateStore.set(e.templateId, e.template);\n  }\n}, false);\n\n/**\n * @param {String} page\n * @return {Promise}\n */\ninternal$1.getTemplateHTMLAsync = function (page) {\n  return new Promise(function (resolve, reject) {\n    internal$1.waitDOMContentLoaded(function () {\n      var cache = internal$1.templateStore.get(page);\n      if (cache) {\n        if (cache instanceof DocumentFragment) {\n          return resolve(cache);\n        }\n\n        var html = typeof cache === 'string' ? cache : cache[1];\n        return resolve(internal$1.normalizePageHTML(html));\n      }\n\n      var local = window.document.getElementById(page);\n      if (local) {\n        var _html = local.textContent || local.content;\n        return resolve(_html);\n      }\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', page, true);\n      xhr.onload = function () {\n        var html = xhr.responseText;\n        if (xhr.status >= 400 && xhr.status < 600) {\n          reject(html);\n        } else {\n          // Refresh script tags\n          var fragment = util$1.createFragment(html);\n          util$1.arrayFrom(fragment.querySelectorAll('script')).forEach(function (el) {\n            var script = document.createElement('script');\n            script.type = el.type || 'text/javascript';\n            script.appendChild(document.createTextNode(el.text || el.textContent || el.innerHTML));\n            el.parentNode.replaceChild(script, el);\n          });\n\n          internal$1.templateStore.set(page, fragment);\n          resolve(fragment);\n        }\n      };\n      xhr.onerror = function () {\n        util$1.throw('Page template not found: ' + page);\n      };\n      xhr.send(null);\n    });\n  });\n};\n\n/**\n * @param {String} page\n * @return {Promise}\n */\ninternal$1.getPageHTMLAsync = function (page) {\n  var pages = pageAttributeExpression.evaluate(page);\n\n  var getPage = function getPage(page) {\n    if (typeof page !== 'string') {\n      return Promise.reject('Must specify a page.');\n    }\n\n    return internal$1.getTemplateHTMLAsync(page).catch(function (error) {\n      if (pages.length === 0) {\n        return Promise.reject(error);\n      }\n\n      return getPage(pages.shift());\n    });\n  };\n\n  return getPage(pages.shift());\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar AnimatorFactory = function () {\n\n  /**\n   * @param {Object} opts\n   * @param {Object} opts.animators The dictionary for animator classes\n   * @param {Function} opts.baseClass The base class of animators\n   * @param {String} [opts.baseClassName] The name of the base class of animators\n   * @param {String} [opts.defaultAnimation] The default animation name\n   * @param {Object} [opts.defaultAnimationOptions] The default animation options\n   */\n  function AnimatorFactory(opts) {\n    classCallCheck(this, AnimatorFactory);\n\n    this._animators = opts.animators;\n    this._baseClass = opts.baseClass;\n    this._baseClassName = opts.baseClassName || opts.baseClass.name;\n    this._animation = opts.defaultAnimation || 'default';\n    this._animationOptions = opts.defaultAnimationOptions || {};\n\n    if (!this._animators[this._animation]) {\n      util$1.throw('No such animation: ' + this._animation);\n    }\n  }\n\n  /**\n   * @param {String} jsonString\n   * @return {Object/null}\n   */\n\n\n  createClass(AnimatorFactory, [{\n    key: 'setAnimationOptions',\n\n\n    /**\n     * @param {Object} options\n     */\n    value: function setAnimationOptions(options) {\n      this._animationOptions = options;\n    }\n\n    /**\n     * @param {Object} options\n     * @param {String} [options.animation] The animation name\n     * @param {Object} [options.animationOptions] The animation options\n     * @param {Object} defaultAnimator The default animator instance\n     * @return {Object} An animator instance\n     */\n\n  }, {\n    key: 'newAnimator',\n    value: function newAnimator() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var defaultAnimator = arguments[1];\n\n\n      var animator = null;\n\n      if (options.animation instanceof this._baseClass) {\n        return options.animation;\n      }\n\n      var Animator = null;\n\n      if (typeof options.animation === 'string') {\n        Animator = this._animators[options.animation];\n      }\n\n      if (!Animator && defaultAnimator) {\n        animator = defaultAnimator;\n      } else {\n        Animator = Animator || this._animators[this._animation];\n\n        var animationOpts = util$1.extend({}, this._animationOptions, options.animationOptions || {}, internal$1.config.animationsDisabled ? { duration: 0, delay: 0 } : {});\n\n        animator = new Animator(animationOpts);\n\n        if (typeof animator === 'function') {\n          animator = new animator(animationOpts); // eslint-disable-line new-cap\n        }\n      }\n\n      if (!(animator instanceof this._baseClass)) {\n        util$1.throw('\"animator\" is not an instance of ' + this._baseClassName);\n      }\n\n      return animator;\n    }\n  }], [{\n    key: 'parseAnimationOptionsString',\n    value: function parseAnimationOptionsString(jsonString) {\n      try {\n        if (typeof jsonString === 'string') {\n          var result = util$1.animationOptionsParse(jsonString);\n          if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object' && result !== null) {\n            return result;\n          } else {\n            console.error('\"animation-options\" attribute must be a JSON object string: ' + jsonString);\n          }\n        }\n        return {};\n      } catch (e) {\n        console.error('\"animation-options\" attribute must be a JSON object string: ' + jsonString);\n        return {};\n      }\n    }\n  }]);\n  return AnimatorFactory;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar util$3 = {\n  _ready: false,\n\n  _domContentLoaded: false,\n\n  _onDOMContentLoaded: function _onDOMContentLoaded() {\n    util$3._domContentLoaded = true;\n\n    if (platform.isWebView()) {\n      window.document.addEventListener('deviceready', function () {\n        util$3._ready = true;\n      }, false);\n    } else {\n      util$3._ready = true;\n    }\n  },\n\n  addBackButtonListener: function addBackButtonListener(fn) {\n    if (!this._domContentLoaded) {\n      throw new Error('This method is available after DOMContentLoaded');\n    }\n\n    if (this._ready) {\n      window.document.addEventListener('backbutton', fn, false);\n    } else {\n      window.document.addEventListener('deviceready', function () {\n        window.document.addEventListener('backbutton', fn, false);\n      });\n    }\n  },\n\n  removeBackButtonListener: function removeBackButtonListener(fn) {\n    if (!this._domContentLoaded) {\n      throw new Error('This method is available after DOMContentLoaded');\n    }\n\n    if (this._ready) {\n      window.document.removeEventListener('backbutton', fn, false);\n    } else {\n      window.document.addEventListener('deviceready', function () {\n        window.document.removeEventListener('backbutton', fn, false);\n      });\n    }\n  }\n};\nwindow.addEventListener('DOMContentLoaded', function () {\n  return util$3._onDOMContentLoaded();\n}, false);\n\nvar HandlerRepository = {\n  _store: {},\n\n  _genId: function () {\n    var i = 0;\n    return function () {\n      return i++;\n    };\n  }(),\n\n  set: function set$$1(element, handler) {\n    if (element.dataset.deviceBackButtonHandlerId) {\n      this.remove(element);\n    }\n    var id = element.dataset.deviceBackButtonHandlerId = HandlerRepository._genId();\n    this._store[id] = handler;\n  },\n\n  remove: function remove(element) {\n    if (element.dataset.deviceBackButtonHandlerId) {\n      delete this._store[element.dataset.deviceBackButtonHandlerId];\n      delete element.dataset.deviceBackButtonHandlerId;\n    }\n  },\n\n  get: function get$$1(element) {\n    if (!element.dataset.deviceBackButtonHandlerId) {\n      return undefined;\n    }\n\n    var id = element.dataset.deviceBackButtonHandlerId;\n\n    if (!this._store[id]) {\n      throw new Error();\n    }\n\n    return this._store[id];\n  },\n\n  has: function has(element) {\n    if (!element.dataset) {\n      return false;\n    }\n\n    var id = element.dataset.deviceBackButtonHandlerId;\n\n    return !!this._store[id];\n  }\n};\n\nvar DeviceBackButtonDispatcher = function () {\n  function DeviceBackButtonDispatcher() {\n    classCallCheck(this, DeviceBackButtonDispatcher);\n\n    this._isEnabled = false;\n    this._boundCallback = this._callback.bind(this);\n  }\n\n  /**\n   * Enable to handle 'backbutton' events.\n   */\n\n\n  createClass(DeviceBackButtonDispatcher, [{\n    key: 'enable',\n    value: function enable() {\n      if (!this._isEnabled) {\n        util$3.addBackButtonListener(this._boundCallback);\n        this._isEnabled = true;\n      }\n    }\n\n    /**\n     * Disable to handle 'backbutton' events.\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (this._isEnabled) {\n        util$3.removeBackButtonListener(this._boundCallback);\n        this._isEnabled = false;\n      }\n    }\n\n    /**\n     * Fire a 'backbutton' event manually.\n     */\n\n  }, {\n    key: 'fireDeviceBackButtonEvent',\n    value: function fireDeviceBackButtonEvent() {\n      var event = document.createEvent('Event');\n      event.initEvent('backbutton', true, true);\n      document.dispatchEvent(event);\n    }\n  }, {\n    key: '_callback',\n    value: function _callback() {\n      this._dispatchDeviceBackButtonEvent();\n    }\n\n    /**\n     * @param {HTMLElement} element\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'createHandler',\n    value: function createHandler(element, callback) {\n      if (!(element instanceof HTMLElement)) {\n        throw new Error('element must be an instance of HTMLElement');\n      }\n\n      if (!(callback instanceof Function)) {\n        throw new Error('callback must be an instance of Function');\n      }\n\n      var handler = {\n        _callback: callback,\n        _element: element,\n\n        disable: function disable() {\n          HandlerRepository.remove(element);\n        },\n\n        setListener: function setListener(callback) {\n          this._callback = callback;\n        },\n\n        enable: function enable() {\n          HandlerRepository.set(element, this);\n        },\n\n        isEnabled: function isEnabled() {\n          return HandlerRepository.get(element) === this;\n        },\n\n        destroy: function destroy() {\n          HandlerRepository.remove(element);\n          this._callback = this._element = null;\n        }\n      };\n\n      handler.enable();\n\n      return handler;\n    }\n  }, {\n    key: '_dispatchDeviceBackButtonEvent',\n    value: function _dispatchDeviceBackButtonEvent() {\n      var tree = this._captureTree();\n\n      var element = this._findHandlerLeafElement(tree);\n\n      var handler = HandlerRepository.get(element);\n      handler._callback(createEvent(element));\n\n      function createEvent(element) {\n        return {\n          _element: element,\n          callParentHandler: function callParentHandler() {\n            var parent = this._element.parentNode;\n\n            while (parent) {\n              handler = HandlerRepository.get(parent);\n              if (handler) {\n                return handler._callback(createEvent(parent));\n              }\n              parent = parent.parentNode;\n            }\n          }\n        };\n      }\n    }\n\n    /**\n     * @return {Object}\n     */\n\n  }, {\n    key: '_captureTree',\n    value: function _captureTree() {\n      return createTree(document.body);\n\n      function createTree(element) {\n        var tree = {\n          element: element,\n          children: Array.prototype.concat.apply([], arrayOf(element.children).map(function (childElement) {\n\n            if (childElement.style.display === 'none' || childElement._isShown === false) {\n              return [];\n            }\n\n            if (childElement.children.length === 0 && !HandlerRepository.has(childElement)) {\n              return [];\n            }\n\n            var result = createTree(childElement);\n\n            if (result.children.length === 0 && !HandlerRepository.has(result.element)) {\n              return [];\n            }\n\n            return [result];\n          }))\n        };\n\n        if (!HandlerRepository.has(tree.element)) {\n          for (var i = 0; i < tree.children.length; i++) {\n            var subTree = tree.children[i];\n            if (HandlerRepository.has(subTree.element)) {\n              return subTree;\n            }\n          }\n        }\n\n        return tree;\n      }\n\n      function arrayOf(target) {\n        var result = [];\n        for (var i = 0; i < target.length; i++) {\n          result.push(target[i]);\n        }\n        return result;\n      }\n    }\n\n    /**\n     * @param {Object} tree\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_findHandlerLeafElement',\n    value: function _findHandlerLeafElement(tree) {\n      return find(tree);\n\n      function find(node) {\n        if (node.children.length === 0) {\n          return node.element;\n        }\n\n        if (node.children.length === 1) {\n          return find(node.children[0]);\n        }\n\n        return node.children.map(function (childNode) {\n          return childNode.element;\n        }).reduce(function (left, right) {\n          if (!left) {\n            return right;\n          }\n\n          var leftZ = parseInt(window.getComputedStyle(left, '').zIndex, 10);\n          var rightZ = parseInt(window.getComputedStyle(right, '').zIndex, 10);\n\n          if (!isNaN(leftZ) && !isNaN(rightZ)) {\n            return leftZ > rightZ ? left : right;\n          }\n\n          throw new Error('Capturing backbutton-handler is failure.');\n        }, null);\n      }\n    }\n  }]);\n  return DeviceBackButtonDispatcher;\n}();\n\nvar deviceBackButtonDispatcher = new DeviceBackButtonDispatcher();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\ninternal$1.AnimatorFactory = AnimatorFactory;\ninternal$1.ModifierUtil = ModifierUtil;\ninternal$1.dbbDispatcher = deviceBackButtonDispatcher;\n\nfunction setup(ons) {\n  internal$1.waitDOMContentLoaded(function () {\n    register('script[type=\"text/ons-template\"]');\n    register('script[type=\"text/template\"]');\n    register('script[type=\"text/ng-template\"]');\n    register('template');\n\n    function register(query) {\n      var templates = window.document.querySelectorAll(query);\n      for (var i = 0; i < templates.length; i++) {\n        internal$1.templateStore.set(templates[i].getAttribute('id'), templates[i].textContent || templates[i].content);\n      }\n    }\n  });\n\n  if (window._onsLoaded) {\n    ons._util.warn('Onsen UI is loaded more than once.');\n  }\n  window._onsLoaded = true;\n\n  ons.ready(function () {\n    ons.enableDeviceBackButtonHandler();\n    ons._defaultDeviceBackButtonHandler = ons._internal.dbbDispatcher.createHandler(window.document.body, function () {\n      if (Object.hasOwnProperty.call(navigator, 'app')) {\n        navigator.app.exitApp();\n      } else {\n        console.warn('Could not close the app. Is \\'cordova.js\\' included?\\nError: \\'window.navigator.app\\' is undefined.');\n      }\n    });\n    document.body._gestureDetector = new ons.GestureDetector(document.body, { passive: true });\n\n    // Simulate Device Back Button on ESC press\n    if (!ons.platform.isWebView()) {\n      document.body.addEventListener('keydown', function (event) {\n        if (event.keyCode === 27) {\n          ons.fireDeviceBackButtonEvent();\n        }\n      });\n    }\n\n    // setup loading placeholder\n    ons._setupLoadingPlaceHolders();\n  });\n\n  // viewport.js\n  Viewport.setup();\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Minimal animation library for managing css transition on mobile browsers.\n */\nvar TIMEOUT_RATIO = 1.4;\n\nvar util$4 = {};\n\n// capitalize string\nutil$4.capitalize = function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\n/**\n * @param {Object} params\n * @param {String} params.property\n * @param {Float} params.duration\n * @param {String} params.timing\n */\nutil$4.buildTransitionValue = function (params) {\n  params.property = params.property || 'all';\n  params.duration = params.duration || 0.4;\n  params.timing = params.timing || 'linear';\n\n  var props = params.property.split(/ +/);\n\n  return props.map(function (prop) {\n    return prop + ' ' + params.duration + 's ' + params.timing;\n  }).join(', ');\n};\n\n/**\n * Add an event handler on \"transitionend\" event.\n */\nutil$4.onceOnTransitionEnd = function (element, callback) {\n  if (!element) {\n    return function () {};\n  }\n\n  var fn = function fn(event) {\n    if (element == event.target) {\n      event.stopPropagation();\n      removeListeners();\n\n      callback();\n    }\n  };\n\n  var removeListeners = function removeListeners() {\n    util$4._transitionEndEvents.forEach(function (eventName) {\n      element.removeEventListener(eventName, fn, false);\n    });\n  };\n\n  util$4._transitionEndEvents.forEach(function (eventName) {\n    element.addEventListener(eventName, fn, false);\n  });\n\n  return removeListeners;\n};\n\nutil$4._transitionEndEvents = function () {\n\n  if ('ontransitionend' in window) {\n    return ['transitionend'];\n  }\n\n  if ('onwebkittransitionend' in window) {\n    return ['webkitTransitionEnd'];\n  }\n\n  if (util$4.vendorPrefix === 'webkit' || util$4.vendorPrefix === 'o' || util$4.vendorPrefix === 'moz' || util$4.vendorPrefix === 'ms') {\n    return [util$4.vendorPrefix + 'TransitionEnd', 'transitionend'];\n  }\n\n  return [];\n}();\n\nutil$4._cssPropertyDict = function () {\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var dict = {};\n  var a = 'A'.charCodeAt(0);\n  var z = 'z'.charCodeAt(0);\n\n  var upper = function upper(s) {\n    return s.substr(1).toUpperCase();\n  };\n\n  for (var i = 0; i < styles.length; i++) {\n\n    var key = styles[i].replace(/^[-]+/, '').replace(/[-][a-z]/g, upper).replace(/^moz/, 'Moz');\n\n    if (a <= key.charCodeAt(0) && z >= key.charCodeAt(0)) {\n      if (key !== 'cssText' && key !== 'parentText') {\n        dict[key] = true;\n      }\n    }\n  }\n\n  return dict;\n}();\n\nutil$4.hasCssProperty = function (name) {\n  return name in util$4._cssPropertyDict;\n};\n\n/**\n * Vendor prefix for css property.\n */\nutil$4.vendorPrefix = function () {\n  var styles = window.getComputedStyle(document.documentElement, ''),\n      pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];\n  return pre;\n}();\n\nutil$4.forceLayoutAtOnce = function (elements, callback) {\n  this.batchImmediate(function () {\n    elements.forEach(function (element) {\n      // force layout\n      element.offsetHeight;\n    });\n    callback();\n  });\n};\n\nutil$4.batchImmediate = function () {\n  var callbacks = [];\n\n  return function (callback) {\n    if (callbacks.length === 0) {\n      setImmediate(function () {\n        var concreateCallbacks = callbacks.slice(0);\n        callbacks = [];\n        concreateCallbacks.forEach(function (callback) {\n          callback();\n        });\n      });\n    }\n\n    callbacks.push(callback);\n  };\n}();\n\nutil$4.batchAnimationFrame = function () {\n  var callbacks = [];\n\n  var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n    setTimeout(callback, 1000 / 60);\n  };\n\n  return function (callback) {\n    if (callbacks.length === 0) {\n      raf(function () {\n        var concreateCallbacks = callbacks.slice(0);\n        callbacks = [];\n        concreateCallbacks.forEach(function (callback) {\n          callback();\n        });\n      });\n    }\n\n    callbacks.push(callback);\n  };\n}();\n\nutil$4.transitionPropertyName = function () {\n  if (util$4.hasCssProperty('transitionDuration')) {\n    return 'transition';\n  }\n\n  if (util$4.hasCssProperty(util$4.vendorPrefix + 'TransitionDuration')) {\n    return util$4.vendorPrefix + 'Transition';\n  }\n\n  throw new Error('Invalid state');\n}();\n\n/**\n * @param {HTMLElement} element\n */\nvar Animit = function Animit(element, defaults) {\n  if (!(this instanceof Animit)) {\n    return new Animit(element, defaults);\n  }\n\n  if (element instanceof HTMLElement) {\n    this.elements = [element];\n  } else if (Object.prototype.toString.call(element) === '[object Array]') {\n    this.elements = element;\n  } else {\n    throw new Error('First argument must be an array or an instance of HTMLElement.');\n  }\n\n  this.defaults = defaults;\n  this.transitionQueue = [];\n  this.lastStyleAttributeDict = [];\n};\n\nAnimit.prototype = {\n\n  /**\n   * @property {Array}\n   */\n  transitionQueue: undefined,\n\n  /**\n   * @property {Array}\n   */\n  elements: undefined,\n\n  /**\n   * @property {Object}\n   */\n  defaults: undefined,\n\n  /**\n   * Start animation sequence with passed animations.\n   *\n   * @param {Function} callback\n   */\n  play: function play(callback) {\n    if (typeof callback === 'function') {\n      this.transitionQueue.push(function (done) {\n        callback();\n        done();\n      });\n    }\n\n    this.startAnimation();\n\n    return this;\n  },\n\n  /**\n   * Most of the animations follow this default process.\n   *\n   * @param {from} css or options object containing css\n   * @param {to} css or options object containing css\n   * @param {delay} delay to wait\n   */\n  default: function _default(from, to, delay) {\n    function step(params, duration, timing) {\n      if (params.duration !== undefined) {\n        duration = params.duration;\n      }\n      if (params.timing !== undefined) {\n        timing = params.timing;\n      }\n\n      return {\n        css: params.css || params,\n        duration: duration,\n        timing: timing\n      };\n    }\n\n    return this.saveStyle().queue(step(from, 0, this.defaults.timing)).wait(delay === undefined ? this.defaults.delay : delay).queue(step(to, this.defaults.duration, this.defaults.timing)).restoreStyle();\n  },\n\n  /**\n   * Queue transition animations or other function.\n   *\n   * e.g. animit(elt).queue({color: 'red'})\n   * e.g. animit(elt).queue({color: 'red'}, {duration: 0.4})\n   * e.g. animit(elt).queue({css: {color: 'red'}, duration: 0.2})\n   *\n   * @param {Object|Animit.Transition|Function} transition\n   * @param {Object} [options]\n   */\n  queue: function queue(transition, options) {\n    var queue = this.transitionQueue;\n\n    if (transition && options) {\n      options.css = transition;\n      transition = new Animit.Transition(options);\n    }\n\n    if (!(transition instanceof Function || transition instanceof Animit.Transition)) {\n      if (transition.css) {\n        transition = new Animit.Transition(transition);\n      } else {\n        transition = new Animit.Transition({\n          css: transition\n        });\n      }\n    }\n\n    if (transition instanceof Function) {\n      queue.push(transition);\n    } else if (transition instanceof Animit.Transition) {\n      queue.push(transition.build());\n    } else {\n      throw new Error('Invalid arguments');\n    }\n\n    return this;\n  },\n\n  /**\n   * Queue transition animations.\n   *\n   * @param {Float} seconds\n   */\n  wait: function wait(seconds) {\n    if (seconds > 0) {\n      this.transitionQueue.push(function (done) {\n        setTimeout(done, 1000 * seconds);\n      });\n    }\n\n    return this;\n  },\n\n  saveStyle: function saveStyle() {\n\n    this.transitionQueue.push(function (done) {\n      this.elements.forEach(function (element, index) {\n        var css = this.lastStyleAttributeDict[index] = {};\n\n        for (var i = 0; i < element.style.length; i++) {\n          css[element.style[i]] = element.style[element.style[i]];\n        }\n      }.bind(this));\n      done();\n    }.bind(this));\n\n    return this;\n  },\n\n  /**\n   * Restore element's style.\n   *\n   * @param {Object} [options]\n   * @param {Float} [options.duration]\n   * @param {String} [options.timing]\n   * @param {String} [options.transition]\n   */\n  restoreStyle: function restoreStyle(options) {\n    options = options || {};\n    var self = this;\n\n    if (options.transition && !options.duration) {\n      throw new Error('\"options.duration\" is required when \"options.transition\" is enabled.');\n    }\n\n    var transitionName = util$4.transitionPropertyName;\n\n    if (options.transition || options.duration && options.duration > 0) {\n      var transitionValue = options.transition || 'all ' + options.duration + 's ' + (options.timing || 'linear');\n\n      this.transitionQueue.push(function (done) {\n        var elements = this.elements;\n        var timeoutId;\n\n        var clearTransition = function clearTransition() {\n          elements.forEach(function (element) {\n            element.style[transitionName] = '';\n          });\n        };\n\n        // add \"transitionend\" event handler\n        var removeListeners = util$4.onceOnTransitionEnd(elements[0], function () {\n          clearTimeout(timeoutId);\n          clearTransition();\n          done();\n        });\n\n        // for fail safe.\n        timeoutId = setTimeout(function () {\n          removeListeners();\n          clearTransition();\n          done();\n        }, options.duration * 1000 * TIMEOUT_RATIO);\n\n        // transition and style settings\n        elements.forEach(function (element, index) {\n\n          var css = self.lastStyleAttributeDict[index];\n\n          if (!css) {\n            throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');\n          }\n\n          self.lastStyleAttributeDict[index] = undefined;\n\n          var name;\n          for (var i = 0, len = element.style.length; i < len; i++) {\n            name = element.style[i];\n            if (css[name] === undefined) {\n              css[name] = '';\n            }\n          }\n\n          element.style[transitionName] = transitionValue;\n\n          Object.keys(css).forEach(function (key) {\n            if (key !== transitionName) {\n              element.style[key] = css[key];\n            }\n          });\n\n          element.style[transitionName] = transitionValue;\n        });\n      });\n    } else {\n      this.transitionQueue.push(function (done) {\n        reset();\n        done();\n      });\n    }\n\n    return this;\n\n    function reset() {\n      // Clear transition animation settings.\n      self.elements.forEach(function (element, index) {\n        element.style[transitionName] = 'none';\n\n        var css = self.lastStyleAttributeDict[index];\n\n        if (!css) {\n          throw new Error('restoreStyle(): The style is not saved. Invoke saveStyle() before.');\n        }\n\n        self.lastStyleAttributeDict[index] = undefined;\n\n        for (var i = 0, name = ''; i < element.style.length; i++) {\n          name = element.style[i];\n          if (typeof css[element.style[i]] === 'undefined') {\n            css[element.style[i]] = '';\n          }\n        }\n\n        Object.keys(css).forEach(function (key) {\n          element.style[key] = css[key];\n        });\n      });\n    }\n  },\n\n  /**\n   * Start animation sequence.\n   */\n  startAnimation: function startAnimation() {\n    this._dequeueTransition();\n\n    return this;\n  },\n\n  _dequeueTransition: function _dequeueTransition() {\n    var transition = this.transitionQueue.shift();\n    if (this._currentTransition) {\n      throw new Error('Current transition exists.');\n    }\n    this._currentTransition = transition;\n    var self = this;\n    var called = false;\n\n    var done = function done() {\n      if (!called) {\n        called = true;\n        self._currentTransition = undefined;\n        self._dequeueTransition();\n      } else {\n        throw new Error('Invalid state: This callback is called twice.');\n      }\n    };\n\n    if (transition) {\n      transition.call(this, done);\n    }\n  }\n\n};\n\n/**\n * @param {Animit} arguments\n */\nAnimit.runAll = function () /* arguments... */{\n  for (var i = 0; i < arguments.length; i++) {\n    arguments[i].play();\n  }\n};\n\n/**\n * @param {Object} options\n * @param {Float} [options.duration]\n * @param {String} [options.property]\n * @param {String} [options.timing]\n */\nAnimit.Transition = function (options) {\n  this.options = options || {};\n  this.options.duration = this.options.duration || 0;\n  this.options.timing = this.options.timing || 'linear';\n  this.options.css = this.options.css || {};\n  this.options.property = this.options.property || 'all';\n};\n\nAnimit.Transition.prototype = {\n\n  /**\n   * @param {HTMLElement} element\n   * @return {Function}\n   */\n  build: function build() {\n\n    if (Object.keys(this.options.css).length === 0) {\n      throw new Error('options.css is required.');\n    }\n\n    var css = createActualCssProps(this.options.css);\n\n    if (this.options.duration > 0) {\n      var transitionValue = util$4.buildTransitionValue(this.options);\n      var self = this;\n\n      return function (callback) {\n        var elements = this.elements;\n        var timeout = self.options.duration * 1000 * TIMEOUT_RATIO;\n        var timeoutId;\n\n        var removeListeners = util$4.onceOnTransitionEnd(elements[0], function () {\n          clearTimeout(timeoutId);\n          callback();\n        });\n\n        timeoutId = setTimeout(function () {\n          removeListeners();\n          callback();\n        }, timeout);\n\n        elements.forEach(function (element) {\n          element.style[util$4.transitionPropertyName] = transitionValue;\n\n          Object.keys(css).forEach(function (name) {\n            element.style[name] = css[name];\n          });\n        });\n      };\n    }\n\n    if (this.options.duration <= 0) {\n      return function (callback) {\n        var elements = this.elements;\n\n        elements.forEach(function (element) {\n          element.style[util$4.transitionPropertyName] = '';\n\n          Object.keys(css).forEach(function (name) {\n            element.style[name] = css[name];\n          });\n        });\n\n        if (elements.length > 0) {\n          util$4.forceLayoutAtOnce(elements, function () {\n            util$4.batchAnimationFrame(callback);\n          });\n        } else {\n          util$4.batchAnimationFrame(callback);\n        }\n      };\n    }\n\n    function createActualCssProps(css) {\n      var result = {};\n\n      Object.keys(css).forEach(function (name) {\n        var value = css[name];\n\n        if (util$4.hasCssProperty(name)) {\n          result[name] = value;\n          return;\n        }\n\n        var prefixed = util$4.vendorPrefix + util$4.capitalize(name);\n        if (util$4.hasCssProperty(prefixed)) {\n          result[prefixed] = value;\n        } else {\n          result[prefixed] = value;\n          result[name] = value;\n        }\n      });\n\n      return result;\n    }\n  }\n};\n\n/*\n * Gesture detector library that forked from github.com/EightMedia/hammer.js.\n */\n\nvar Event$1;\nvar Utils;\nvar Detection;\nvar PointerEvent;\n\n/**\n * @object ons.GestureDetector\n * @category gesture\n * @description\n *   [en]Utility class for gesture detection.[/en]\n *   [ja]ジェスチャを検知するためのユーティリティクラスです。[/ja]\n */\n\n/**\n * @method constructor\n * @signature constructor(element[, options])\n * @description\n *  [en]Create a new GestureDetector instance.[/en]\n *  [ja]GestureDetectorのインスタンスを生成します。[/ja]\n * @param {Element} element\n *   [en]Name of the event.[/en]\n *   [ja]ジェスチャを検知するDOM要素を指定します。[/ja]\n * @param {Object} [options]\n *   [en]Options object.[/en]\n *   [ja]オプションを指定します。[/ja]\n * @return {ons.GestureDetector.Instance}\n */\nvar GestureDetector = function GestureDetector(element, options) {\n  return new GestureDetector.Instance(element, options || {});\n};\n\n/**\n * default settings.\n * more settings are defined per gesture at `/gestures`. Each gesture can be disabled/enabled\n * by setting it's name (like `swipe`) to false.\n * You can set the defaults for all instances by changing this object before creating an instance.\n * @example\n * ````\n *  GestureDetector.defaults.drag = false;\n *  GestureDetector.defaults.behavior.touchAction = 'pan-y';\n *  delete GestureDetector.defaults.behavior.userSelect;\n * ````\n * @property defaults\n * @type {Object}\n */\nGestureDetector.defaults = {\n  behavior: {\n    // userSelect: 'none', // Also disables selection in `input` children\n    touchAction: 'pan-y',\n    touchCallout: 'none',\n    contentZooming: 'none',\n    userDrag: 'none',\n    tapHighlightColor: 'rgba(0,0,0,0)'\n  }\n};\n\n/**\n * GestureDetector document where the base events are added at\n * @property DOCUMENT\n * @type {HTMLElement}\n * @default window.document\n */\nGestureDetector.DOCUMENT = document;\n\n/**\n * detect support for pointer events\n * @property HAS_POINTEREVENTS\n * @type {Boolean}\n */\nGestureDetector.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;\n\n/**\n * detect support for touch events\n * @property HAS_TOUCHEVENTS\n * @type {Boolean}\n */\nGestureDetector.HAS_TOUCHEVENTS = 'ontouchstart' in window;\n\n/**\n * detect mobile browsers\n * @property IS_MOBILE\n * @type {Boolean}\n */\nGestureDetector.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);\n\n/**\n * detect if we want to support mouseevents at all\n * @property NO_MOUSEEVENTS\n * @type {Boolean}\n */\nGestureDetector.NO_MOUSEEVENTS = GestureDetector.HAS_TOUCHEVENTS && GestureDetector.IS_MOBILE || GestureDetector.HAS_POINTEREVENTS;\n\n/**\n * interval in which GestureDetector recalculates current velocity/direction/angle in ms\n * @property CALCULATE_INTERVAL\n * @type {Number}\n * @default 25\n */\nGestureDetector.CALCULATE_INTERVAL = 25;\n\n/**\n * eventtypes per touchevent (start, move, end) are filled by `Event.determineEventTypes` on `setup`\n * the object contains the DOM event names per type (`EVENT_START`, `EVENT_MOVE`, `EVENT_END`)\n * @property EVENT_TYPES\n * @private\n * @writeOnce\n * @type {Object}\n */\nvar EVENT_TYPES = {};\n\n/**\n * direction strings, for safe comparisons\n * @property DIRECTION_DOWN|LEFT|UP|RIGHT\n * @final\n * @type {String}\n * @default 'down' 'left' 'up' 'right'\n */\nvar DIRECTION_DOWN = GestureDetector.DIRECTION_DOWN = 'down';\nvar DIRECTION_LEFT = GestureDetector.DIRECTION_LEFT = 'left';\nvar DIRECTION_UP = GestureDetector.DIRECTION_UP = 'up';\nvar DIRECTION_RIGHT = GestureDetector.DIRECTION_RIGHT = 'right';\n\n/**\n * pointertype strings, for safe comparisons\n * @property POINTER_MOUSE|TOUCH|PEN\n * @final\n * @type {String}\n * @default 'mouse' 'touch' 'pen'\n */\nvar POINTER_MOUSE = GestureDetector.POINTER_MOUSE = 'mouse';\nvar POINTER_TOUCH = GestureDetector.POINTER_TOUCH = 'touch';\nvar POINTER_PEN = GestureDetector.POINTER_PEN = 'pen';\n\n/**\n * eventtypes\n * @property EVENT_START|MOVE|END|RELEASE|TOUCH\n * @final\n * @type {String}\n * @default 'start' 'change' 'move' 'end' 'release' 'touch'\n */\nvar EVENT_START = GestureDetector.EVENT_START = 'start';\nvar EVENT_MOVE = GestureDetector.EVENT_MOVE = 'move';\nvar EVENT_END = GestureDetector.EVENT_END = 'end';\nvar EVENT_RELEASE = GestureDetector.EVENT_RELEASE = 'release';\nvar EVENT_TOUCH = GestureDetector.EVENT_TOUCH = 'touch';\n\n/**\n * if the window events are set...\n * @property READY\n * @writeOnce\n * @type {Boolean}\n * @default false\n */\nGestureDetector.READY = false;\n\n/**\n * plugins namespace\n * @property plugins\n * @type {Object}\n */\nGestureDetector.plugins = GestureDetector.plugins || {};\n\n/**\n * gestures namespace\n * see `/gestures` for the definitions\n * @property gestures\n * @type {Object}\n */\nGestureDetector.gestures = GestureDetector.gestures || {};\n\n/**\n * setup events to detect gestures on the document\n * this function is called when creating an new instance\n * @private\n */\nfunction setup$1(opts) {\n  if (GestureDetector.READY) {\n    return;\n  }\n\n  // find what eventtypes we add listeners to\n  Event$1.determineEventTypes();\n\n  // Register all gestures inside GestureDetector.gestures\n  Utils.each(GestureDetector.gestures, function (gesture) {\n    Detection.register(gesture);\n  });\n\n  // Add touch events on the document\n  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_MOVE, Detection.detect, opts);\n  Event$1.onTouch(GestureDetector.DOCUMENT, EVENT_END, Detection.detect, opts);\n\n  // GestureDetector is ready...!\n  GestureDetector.READY = true;\n}\n\n/**\n * @module GestureDetector\n *\n * @class Utils\n * @static\n */\nUtils = GestureDetector.utils = {\n  /**\n   * extend method, could also be used for cloning when `dest` is an empty object.\n   * changes the dest object\n   * @param {Object} dest\n   * @param {Object} src\n   * @param {Boolean} [merge=false]  do a merge\n   * @return {Object} dest\n   */\n  extend: function extend(dest, src, merge) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key) && (dest[key] === undefined || !merge)) {\n        dest[key] = src[key];\n      }\n    }\n    return dest;\n  },\n\n  /**\n   * simple addEventListener wrapper\n   * @param {HTMLElement} element\n   * @param {String} type\n   * @param {Function} handler\n   */\n  on: function on(element, type, handler, opt) {\n    util$1.addEventListener(element, type, handler, opt, true);\n  },\n\n  /**\n   * simple removeEventListener wrapper\n   * @param {HTMLElement} element\n   * @param {String} type\n   * @param {Function} handler\n   */\n  off: function off(element, type, handler, opt) {\n    util$1.removeEventListener(element, type, handler, opt, true);\n  },\n\n  /**\n   * forEach over arrays and objects\n   * @param {Object|Array} obj\n   * @param {Function} iterator\n   * @param {any} iterator.item\n   * @param {Number} iterator.index\n   * @param {Object|Array} iterator.obj the source object\n   * @param {Object} context value to use as `this` in the iterator\n   */\n  each: function each(obj, iterator, context) {\n    var i, len;\n\n    // native forEach on arrays\n    if ('forEach' in obj) {\n      obj.forEach(iterator, context);\n      // arrays\n    } else if (obj.length !== undefined) {\n      for (i = 0, len = obj.length; i < len; i++) {\n        if (iterator.call(context, obj[i], i, obj) === false) {\n          return;\n        }\n      }\n      // objects\n    } else {\n      for (i in obj) {\n        if (obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj) === false) {\n          return;\n        }\n      }\n    }\n  },\n\n  /**\n   * find if a string contains the string using indexOf\n   * @param {String} src\n   * @param {String} find\n   * @return {Boolean} found\n   */\n  inStr: function inStr(src, find) {\n    return src.indexOf(find) > -1;\n  },\n\n  /**\n   * find if a array contains the object using indexOf or a simple polyfill\n   * @param {String} src\n   * @param {String} find\n   * @return {Boolean|Number} false when not found, or the index\n   */\n  inArray: function inArray(src, find, deep) {\n    if (deep) {\n      for (var i = 0, len = src.length; i < len; i++) {\n        // Array.findIndex\n        if (Object.keys(find).every(function (key) {\n          return src[i][key] === find[key];\n        })) {\n          return i;\n        }\n      }\n      return -1;\n    }\n\n    if (src.indexOf) {\n      return src.indexOf(find);\n    } else {\n      for (var i = 0, len = src.length; i < len; i++) {\n        if (src[i] === find) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  },\n\n  /**\n   * convert an array-like object (`arguments`, `touchlist`) to an array\n   * @param {Object} obj\n   * @return {Array}\n   */\n  toArray: function toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n  },\n\n  /**\n   * find if a node is in the given parent\n   * @param {HTMLElement} node\n   * @param {HTMLElement} parent\n   * @return {Boolean} found\n   */\n  hasParent: function hasParent(node, parent) {\n    while (node) {\n      if (node == parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  },\n\n  /**\n   * get the center of all the touches\n   * @param {Array} touches\n   * @return {Object} center contains `pageX`, `pageY`, `clientX` and `clientY` properties\n   */\n  getCenter: function getCenter(touches) {\n    var pageX = [],\n        pageY = [],\n        clientX = [],\n        clientY = [],\n        min = Math.min,\n        max = Math.max;\n\n    // no need to loop when only one touch\n    if (touches.length === 1) {\n      return {\n        pageX: touches[0].pageX,\n        pageY: touches[0].pageY,\n        clientX: touches[0].clientX,\n        clientY: touches[0].clientY\n      };\n    }\n\n    Utils.each(touches, function (touch) {\n      pageX.push(touch.pageX);\n      pageY.push(touch.pageY);\n      clientX.push(touch.clientX);\n      clientY.push(touch.clientY);\n    });\n\n    return {\n      pageX: (min.apply(Math, pageX) + max.apply(Math, pageX)) / 2,\n      pageY: (min.apply(Math, pageY) + max.apply(Math, pageY)) / 2,\n      clientX: (min.apply(Math, clientX) + max.apply(Math, clientX)) / 2,\n      clientY: (min.apply(Math, clientY) + max.apply(Math, clientY)) / 2\n    };\n  },\n\n  /**\n   * calculate the velocity between two points. unit is in px per ms.\n   * @param {Number} deltaTime\n   * @param {Number} deltaX\n   * @param {Number} deltaY\n   * @return {Object} velocity `x` and `y`\n   */\n  getVelocity: function getVelocity(deltaTime, deltaX, deltaY) {\n    return {\n      x: Math.abs(deltaX / deltaTime) || 0,\n      y: Math.abs(deltaY / deltaTime) || 0\n    };\n  },\n\n  /**\n   * calculate the angle between two coordinates\n   * @param {Touch} touch1\n   * @param {Touch} touch2\n   * @return {Number} angle\n   */\n  getAngle: function getAngle(touch1, touch2) {\n    var x = touch2.clientX - touch1.clientX,\n        y = touch2.clientY - touch1.clientY;\n\n    return Math.atan2(y, x) * 180 / Math.PI;\n  },\n\n  /**\n   * do a small comparison to get the direction between two touches.\n   * @param {Touch} touch1\n   * @param {Touch} touch2\n   * @return {String} direction matches `DIRECTION_LEFT|RIGHT|UP|DOWN`\n   */\n  getDirection: function getDirection(touch1, touch2) {\n    var x = Math.abs(touch1.clientX - touch2.clientX),\n        y = Math.abs(touch1.clientY - touch2.clientY);\n\n    if (x >= y) {\n      return touch1.clientX - touch2.clientX > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return touch1.clientY - touch2.clientY > 0 ? DIRECTION_UP : DIRECTION_DOWN;\n  },\n\n  /**\n   * calculate the distance between two touches\n   * @param {Touch}touch1\n   * @param {Touch} touch2\n   * @return {Number} distance\n   */\n  getDistance: function getDistance(touch1, touch2) {\n    var x = touch2.clientX - touch1.clientX,\n        y = touch2.clientY - touch1.clientY;\n\n    return Math.sqrt(x * x + y * y);\n  },\n\n  /**\n   * calculate the scale factor between two touchLists\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n   * @param {Array} start array of touches\n   * @param {Array} end array of touches\n   * @return {Number} scale\n   */\n  getScale: function getScale(start, end) {\n    // need two fingers...\n    if (start.length >= 2 && end.length >= 2) {\n      return this.getDistance(end[0], end[1]) / this.getDistance(start[0], start[1]);\n    }\n    return 1;\n  },\n\n  /**\n   * calculate the rotation degrees between two touchLists\n   * @param {Array} start array of touches\n   * @param {Array} end array of touches\n   * @return {Number} rotation\n   */\n  getRotation: function getRotation(start, end) {\n    // need two fingers\n    if (start.length >= 2 && end.length >= 2) {\n      return this.getAngle(end[1], end[0]) - this.getAngle(start[1], start[0]);\n    }\n    return 0;\n  },\n\n  /**\n   * find out if the direction is vertical   *\n   * @param {String} direction matches `DIRECTION_UP|DOWN`\n   * @return {Boolean} is_vertical\n   */\n  isVertical: function isVertical(direction) {\n    return direction == DIRECTION_UP || direction == DIRECTION_DOWN;\n  },\n\n  /**\n   * set css properties with their prefixes\n   * @param {HTMLElement} element\n   * @param {String} prop\n   * @param {String} value\n   * @param {Boolean} [toggle=true]\n   * @return {Boolean}\n   */\n  setPrefixedCss: function setPrefixedCss(element, prop, value, toggle) {\n    var prefixes = ['', 'Webkit', 'Moz', 'O', 'ms'];\n    prop = Utils.toCamelCase(prop);\n\n    for (var i = 0; i < prefixes.length; i++) {\n      var p = prop;\n      // prefixes\n      if (prefixes[i]) {\n        p = prefixes[i] + p.slice(0, 1).toUpperCase() + p.slice(1);\n      }\n\n      // test the style\n      if (p in element.style) {\n        element.style[p] = (toggle === null || toggle) && value || '';\n        break;\n      }\n    }\n  },\n\n  /**\n   * toggle browser default behavior by setting css properties.\n   * `userSelect='none'` also sets `element.onselectstart` to false\n   * `userDrag='none'` also sets `element.ondragstart` to false\n   *\n   * @param {HtmlElement} element\n   * @param {Object} props\n   * @param {Boolean} [toggle=true]\n   */\n  toggleBehavior: function toggleBehavior(element, props, toggle) {\n    if (!props || !element || !element.style) {\n      return;\n    }\n\n    // set the css properties\n    Utils.each(props, function (value, prop) {\n      Utils.setPrefixedCss(element, prop, value, toggle);\n    });\n\n    var falseFn = toggle && function () {\n      return false;\n    };\n\n    // also the disable onselectstart\n    if (props.userSelect == 'none') {\n      element.onselectstart = falseFn;\n    }\n    // and disable ondragstart\n    if (props.userDrag == 'none') {\n      element.ondragstart = falseFn;\n    }\n  },\n\n  /**\n   * convert a string with underscores to camelCase\n   * so prevent_default becomes preventDefault\n   * @param {String} str\n   * @return {String} camelCaseStr\n   */\n  toCamelCase: function toCamelCase(str) {\n    return str.replace(/[_-]([a-z])/g, function (s) {\n      return s[1].toUpperCase();\n    });\n  }\n};\n\n/**\n * @module GestureDetector\n */\n/**\n * @class Event\n * @static\n */\nEvent$1 = GestureDetector.event = {\n  /**\n   * when touch events have been fired, this is true\n   * this is used to stop mouse events\n   * @property prevent_mouseevents\n   * @private\n   * @type {Boolean}\n   */\n  preventMouseEvents: false,\n\n  /**\n   * if EVENT_START has been fired\n   * @property started\n   * @private\n   * @type {Boolean}\n   */\n  started: false,\n\n  /**\n   * when the mouse is hold down, this is true\n   * @property should_detect\n   * @private\n   * @type {Boolean}\n   */\n  shouldDetect: false,\n\n  /**\n   * simple event binder with a hook and support for multiple types\n   * @param {HTMLElement} element\n   * @param {String} type\n   * @param {Function} handler\n   * @param {Object} [opt]\n   * @param {Function} [hook]\n   * @param {Object} hook.type\n   */\n  on: function on(element, type, handler, opt, hook) {\n    var types = type.split(' ');\n    Utils.each(types, function (type) {\n      Utils.on(element, type, handler, opt);\n      hook && hook(type);\n    });\n  },\n\n  /**\n   * simple event unbinder with a hook and support for multiple types\n   * @param {HTMLElement} element\n   * @param {String} type\n   * @param {Function} handler\n   * @param {Object} [opt]\n   * @param {Function} [hook]\n   * @param {Object} hook.type\n   */\n  off: function off(element, type, handler, opt, hook) {\n    var types = type.split(' ');\n    Utils.each(types, function (type) {\n      Utils.off(element, type, handler, opt);\n      hook && hook(type);\n    });\n  },\n\n  /**\n   * the core touch event handler.\n   * this finds out if we should to detect gestures\n   * @param {HTMLElement} element\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\n   * @param {Function} handler\n   * @return onTouchHandler {Function} the core event handler\n   */\n  onTouch: function onTouch(element, eventType, handler, opt) {\n    var self = this;\n\n    var onTouchHandler = function onTouchHandler(ev) {\n      var srcType = ev.type.toLowerCase(),\n          isPointer = GestureDetector.HAS_POINTEREVENTS,\n          isMouse = Utils.inStr(srcType, 'mouse'),\n          triggerType;\n\n      // if we are in a mouseevent, but there has been a touchevent triggered in this session\n      // we want to do nothing. simply break out of the event.\n      if (isMouse && self.preventMouseEvents) {\n        return;\n\n        // mousebutton must be down\n      } else if (isMouse && eventType == EVENT_START && ev.button === 0) {\n        self.preventMouseEvents = false;\n        self.shouldDetect = true;\n      } else if (isPointer && eventType == EVENT_START) {\n        self.shouldDetect = ev.buttons === 1 || PointerEvent.matchType(POINTER_TOUCH, ev);\n        // just a valid start event, but no mouse\n      } else if (!isMouse && eventType == EVENT_START) {\n        self.preventMouseEvents = true;\n        self.shouldDetect = true;\n      }\n\n      // update the pointer event before entering the detection\n      if (isPointer && eventType != EVENT_END) {\n        PointerEvent.updatePointer(eventType, ev);\n      }\n\n      // we are in a touch/down state, so allowed detection of gestures\n      if (self.shouldDetect) {\n        triggerType = self.doDetect.call(self, ev, eventType, element, handler);\n      }\n\n      // ...and we are done with the detection\n      // so reset everything to start each detection totally fresh\n      if (triggerType == EVENT_END) {\n        self.preventMouseEvents = false;\n        self.shouldDetect = false;\n        PointerEvent.reset();\n        // update the pointerevent object after the detection\n      }\n\n      if (isPointer && eventType == EVENT_END) {\n        PointerEvent.updatePointer(eventType, ev);\n      }\n    };\n\n    this.on(element, EVENT_TYPES[eventType], onTouchHandler, opt);\n    return onTouchHandler;\n  },\n\n  /**\n   * the core detection method\n   * this finds out what GestureDetector-touch-events to trigger\n   * @param {Object} ev\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\n   * @param {HTMLElement} element\n   * @param {Function} handler\n   * @return {String} triggerType matches `EVENT_START|MOVE|END`\n   */\n  doDetect: function doDetect(ev, eventType, element, handler) {\n    var touchList = this.getTouchList(ev, eventType);\n    var touchListLength = touchList.length;\n    var triggerType = eventType;\n    var triggerChange = touchList.trigger; // used by fakeMultitouch plugin\n    var changedLength = touchListLength;\n\n    // at each touchstart-like event we want also want to trigger a TOUCH event...\n    if (eventType == EVENT_START) {\n      triggerChange = EVENT_TOUCH;\n      // ...the same for a touchend-like event\n    } else if (eventType == EVENT_END) {\n      triggerChange = EVENT_RELEASE;\n\n      // keep track of how many touches have been removed\n      changedLength = touchList.length - (ev.changedTouches ? ev.changedTouches.length : 1);\n    }\n\n    // after there are still touches on the screen,\n    // we just want to trigger a MOVE event. so change the START or END to a MOVE\n    // but only after detection has been started, the first time we actually want a START\n    if (changedLength > 0 && this.started) {\n      triggerType = EVENT_MOVE;\n    }\n\n    // detection has been started, we keep track of this, see above\n    this.started = true;\n\n    // generate some event data, some basic information\n    var evData = this.collectEventData(element, triggerType, touchList, ev);\n\n    // trigger the triggerType event before the change (TOUCH, RELEASE) events\n    // but the END event should be at last\n    if (eventType != EVENT_END) {\n      handler.call(Detection, evData);\n    }\n\n    // trigger a change (TOUCH, RELEASE) event, this means the length of the touches changed\n    if (triggerChange) {\n      evData.changedLength = changedLength;\n      evData.eventType = triggerChange;\n\n      handler.call(Detection, evData);\n\n      evData.eventType = triggerType;\n      delete evData.changedLength;\n    }\n\n    // trigger the END event\n    if (triggerType == EVENT_END) {\n      handler.call(Detection, evData);\n\n      // ...and we are done with the detection\n      // so reset everything to start each detection totally fresh\n      this.started = false;\n    }\n\n    return triggerType;\n  },\n\n  /**\n   * we have different events for each device/browser\n   * determine what we need and set them in the EVENT_TYPES constant\n   * the `onTouch` method is bind to these properties.\n   * @return {Object} events\n   */\n  determineEventTypes: function determineEventTypes() {\n    var types;\n    if (GestureDetector.HAS_POINTEREVENTS) {\n      if (window.PointerEvent) {\n        types = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];\n      } else {\n        types = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];\n      }\n    } else if (GestureDetector.NO_MOUSEEVENTS) {\n      types = ['touchstart', 'touchmove', 'touchend touchcancel'];\n    } else {\n      types = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];\n    }\n\n    EVENT_TYPES[EVENT_START] = types[0];\n    EVENT_TYPES[EVENT_MOVE] = types[1];\n    EVENT_TYPES[EVENT_END] = types[2];\n    return EVENT_TYPES;\n  },\n\n  /**\n   * create touchList depending on the event\n   * @param {Object} ev\n   * @param {String} eventType\n   * @return {Array} touches\n   */\n  getTouchList: function getTouchList(ev, eventType) {\n    // get the fake pointerEvent touchlist\n    if (GestureDetector.HAS_POINTEREVENTS) {\n      return PointerEvent.getTouchList();\n    }\n\n    // get the touchlist\n    if (ev.touches) {\n      if (eventType == EVENT_MOVE) {\n        return ev.touches;\n      }\n\n      var identifiers = [];\n      var concat = [].concat(Utils.toArray(ev.touches), Utils.toArray(ev.changedTouches));\n      var touchList = [];\n\n      Utils.each(concat, function (touch) {\n        if (Utils.inArray(identifiers, touch.identifier) === -1) {\n          touchList.push(touch);\n        }\n        identifiers.push(touch.identifier);\n      });\n\n      return touchList;\n    }\n\n    // make fake touchList from mouse position\n    ev.identifier = 1;\n    return [ev];\n  },\n\n  /**\n   * collect basic event data\n   * @param {HTMLElement} element\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\n   * @param {Array} touches\n   * @param {Object} ev\n   * @return {Object} ev\n   */\n  collectEventData: function collectEventData(element, eventType, touches, ev) {\n    // find out pointerType\n    var pointerType = POINTER_TOUCH;\n    if (Utils.inStr(ev.type, 'mouse') || PointerEvent.matchType(POINTER_MOUSE, ev)) {\n      pointerType = POINTER_MOUSE;\n    } else if (PointerEvent.matchType(POINTER_PEN, ev)) {\n      pointerType = POINTER_PEN;\n    }\n\n    return {\n      center: Utils.getCenter(touches),\n      timeStamp: Date.now(),\n      target: ev.target,\n      touches: touches,\n      eventType: eventType,\n      pointerType: pointerType,\n      srcEvent: ev,\n\n      /**\n       * prevent the browser default actions\n       * mostly used to disable scrolling of the browser\n       */\n      preventDefault: function preventDefault() {\n        var srcEvent = this.srcEvent;\n        srcEvent.preventManipulation && srcEvent.preventManipulation();\n        srcEvent.preventDefault && srcEvent.preventDefault();\n      },\n\n      /**\n       * stop bubbling the event up to its parents\n       */\n      stopPropagation: function stopPropagation() {\n        this.srcEvent.stopPropagation();\n      },\n\n      /**\n       * immediately stop gesture detection\n       * might be useful after a swipe was detected\n       * @return {*}\n       */\n      stopDetect: function stopDetect() {\n        return Detection.stopDetect();\n      }\n    };\n  }\n};\n\n/**\n * @module GestureDetector\n *\n * @class PointerEvent\n * @static\n */\nPointerEvent = GestureDetector.PointerEvent = {\n  /**\n   * holds all pointers, by `identifier`\n   * @property pointers\n   * @type {Object}\n   */\n  pointers: {},\n\n  /**\n   * get the pointers as an array\n   * @return {Array} touchlist\n   */\n  getTouchList: function getTouchList() {\n    var touchlist = [];\n    // we can use forEach since pointerEvents only is in IE10\n    Utils.each(this.pointers, function (pointer) {\n      touchlist.push(pointer);\n    });\n    return touchlist;\n  },\n\n  /**\n   * update the position of a pointer\n   * @param {String} eventType matches `EVENT_START|MOVE|END`\n   * @param {Object} pointerEvent\n   */\n  updatePointer: function updatePointer(eventType, pointerEvent) {\n    if (eventType == EVENT_END || eventType != EVENT_END && pointerEvent.buttons !== 1) {\n      delete this.pointers[pointerEvent.pointerId];\n    } else {\n      pointerEvent.identifier = pointerEvent.pointerId;\n      this.pointers[pointerEvent.pointerId] = pointerEvent;\n    }\n  },\n\n  /**\n   * check if ev matches pointertype\n   * @param {String} pointerType matches `POINTER_MOUSE|TOUCH|PEN`\n   * @param {PointerEvent} ev\n   */\n  matchType: function matchType(pointerType, ev) {\n    if (!ev.pointerType) {\n      return false;\n    }\n\n    var pt = ev.pointerType,\n        types = {};\n\n    types[POINTER_MOUSE] = pt === (ev.MSPOINTER_TYPE_MOUSE || POINTER_MOUSE);\n    types[POINTER_TOUCH] = pt === (ev.MSPOINTER_TYPE_TOUCH || POINTER_TOUCH);\n    types[POINTER_PEN] = pt === (ev.MSPOINTER_TYPE_PEN || POINTER_PEN);\n    return types[pointerType];\n  },\n\n  /**\n   * reset the stored pointers\n   */\n  reset: function resetList() {\n    this.pointers = {};\n  }\n};\n\n/**\n * @module GestureDetector\n *\n * @class Detection\n * @static\n */\nDetection = GestureDetector.detection = {\n  // contains all registered GestureDetector.gestures in the correct order\n  gestures: [],\n\n  // data of the current GestureDetector.gesture detection session\n  current: null,\n\n  // the previous GestureDetector.gesture session data\n  // is a full clone of the previous gesture.current object\n  previous: null,\n\n  // when this becomes true, no gestures are fired\n  stopped: false,\n\n  /**\n   * start GestureDetector.gesture detection\n   * @param {GestureDetector.Instance} inst\n   * @param {Object} eventData\n   */\n  startDetect: function startDetect(inst, eventData) {\n    // already busy with a GestureDetector.gesture detection on an element\n    if (this.current) {\n      return;\n    }\n\n    this.stopped = false;\n\n    // holds current session\n    this.current = {\n      inst: inst, // reference to GestureDetectorInstance we're working for\n      startEvent: Utils.extend({}, eventData), // start eventData for distances, timing etc\n      lastEvent: false, // last eventData\n      lastCalcEvent: false, // last eventData for calculations.\n      futureCalcEvent: false, // last eventData for calculations.\n      lastCalcData: {}, // last lastCalcData\n      name: '' // current gesture we're in/detected, can be 'tap', 'hold' etc\n    };\n\n    this.detect(eventData);\n  },\n\n  /**\n   * GestureDetector.gesture detection\n   * @param {Object} eventData\n   * @return {any}\n   */\n  detect: function detect(eventData) {\n    if (!this.current || this.stopped) {\n      return;\n    }\n\n    // extend event data with calculations about scale, distance etc\n    eventData = this.extendEventData(eventData);\n\n    // GestureDetector instance and instance options\n    var inst = this.current.inst,\n        instOptions = inst.options;\n\n    // call GestureDetector.gesture handlers\n    Utils.each(this.gestures, function triggerGesture(gesture) {\n      // only when the instance options have enabled this gesture\n      if (!this.stopped && inst.enabled && instOptions[gesture.name]) {\n        gesture.handler.call(gesture, eventData, inst);\n      }\n    }, this);\n\n    // store as previous event event\n    if (this.current) {\n      this.current.lastEvent = eventData;\n    }\n\n    if (eventData.eventType == EVENT_END) {\n      this.stopDetect();\n    }\n\n    return eventData; // eslint-disable-line consistent-return\n  },\n\n  /**\n   * clear the GestureDetector.gesture vars\n   * this is called on endDetect, but can also be used when a final GestureDetector.gesture has been detected\n   * to stop other GestureDetector.gestures from being fired\n   */\n  stopDetect: function stopDetect() {\n    // clone current data to the store as the previous gesture\n    // used for the double tap gesture, since this is an other gesture detect session\n    this.previous = Utils.extend({}, this.current);\n\n    // reset the current\n    this.current = null;\n    this.stopped = true;\n  },\n\n  /**\n   * calculate velocity, angle and direction\n   * @param {Object} ev\n   * @param {Object} center\n   * @param {Number} deltaTime\n   * @param {Number} deltaX\n   * @param {Number} deltaY\n   */\n  getCalculatedData: function getCalculatedData(ev, center, deltaTime, deltaX, deltaY) {\n    var cur = this.current,\n        recalc = false,\n        calcEv = cur.lastCalcEvent,\n        calcData = cur.lastCalcData;\n\n    if (calcEv && ev.timeStamp - calcEv.timeStamp > GestureDetector.CALCULATE_INTERVAL) {\n      center = calcEv.center;\n      deltaTime = ev.timeStamp - calcEv.timeStamp;\n      deltaX = ev.center.clientX - calcEv.center.clientX;\n      deltaY = ev.center.clientY - calcEv.center.clientY;\n      recalc = true;\n    }\n\n    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\n      cur.futureCalcEvent = ev;\n    }\n\n    if (!cur.lastCalcEvent || recalc) {\n      calcData.velocity = Utils.getVelocity(deltaTime, deltaX, deltaY);\n      calcData.angle = Utils.getAngle(center, ev.center);\n      calcData.direction = Utils.getDirection(center, ev.center);\n\n      cur.lastCalcEvent = cur.futureCalcEvent || ev;\n      cur.futureCalcEvent = ev;\n    }\n\n    ev.velocityX = calcData.velocity.x;\n    ev.velocityY = calcData.velocity.y;\n    ev.interimAngle = calcData.angle;\n    ev.interimDirection = calcData.direction;\n  },\n\n  /**\n   * extend eventData for GestureDetector.gestures\n   * @param {Object} ev\n   * @return {Object} ev\n   */\n  extendEventData: function extendEventData(ev) {\n    var cur = this.current,\n        startEv = cur.startEvent,\n        lastEv = cur.lastEvent || startEv;\n\n    // update the start touchlist to calculate the scale/rotation\n    if (ev.eventType == EVENT_TOUCH || ev.eventType == EVENT_RELEASE) {\n      startEv.touches = [];\n      Utils.each(ev.touches, function (touch) {\n        startEv.touches.push({\n          clientX: touch.clientX,\n          clientY: touch.clientY\n        });\n      });\n    }\n\n    var deltaTime = ev.timeStamp - startEv.timeStamp,\n        deltaX = ev.center.clientX - startEv.center.clientX,\n        deltaY = ev.center.clientY - startEv.center.clientY;\n\n    this.getCalculatedData(ev, lastEv.center, deltaTime, deltaX, deltaY);\n\n    Utils.extend(ev, {\n      startEvent: startEv,\n\n      deltaTime: deltaTime,\n      deltaX: deltaX,\n      deltaY: deltaY,\n\n      distance: Utils.getDistance(startEv.center, ev.center),\n      angle: Utils.getAngle(startEv.center, ev.center),\n      direction: Utils.getDirection(startEv.center, ev.center),\n      scale: Utils.getScale(startEv.touches, ev.touches),\n      rotation: Utils.getRotation(startEv.touches, ev.touches)\n    });\n\n    return ev;\n  },\n\n  /**\n   * register new gesture\n   * @param {Object} gesture object, see `gestures/` for documentation\n   * @return {Array} gestures\n   */\n  register: function register(gesture) {\n    // add an enable gesture options if there is no given\n    var options = gesture.defaults || {};\n    if (options[gesture.name] === undefined) {\n      options[gesture.name] = true;\n    }\n\n    // extend GestureDetector default options with the GestureDetector.gesture options\n    Utils.extend(GestureDetector.defaults, options, true);\n\n    // set its index\n    gesture.index = gesture.index || 1000;\n\n    // add GestureDetector.gesture to the list\n    this.gestures.push(gesture);\n\n    // sort the list by index\n    this.gestures.sort(function (a, b) {\n      if (a.index < b.index) {\n        return -1;\n      }\n      if (a.index > b.index) {\n        return 1;\n      }\n      return 0;\n    });\n\n    return this.gestures;\n  }\n};\n\n/**\n * @module GestureDetector\n */\n\n/**\n * create new GestureDetector instance\n * all methods should return the instance itself, so it is chainable.\n *\n * @class Instance\n * @constructor\n * @param {HTMLElement} element\n * @param {Object} [options={}] options are merged with `GestureDetector.defaults`\n * @return {GestureDetector.Instance}\n */\nGestureDetector.Instance = function (element, options) {\n  var self = this;\n  var listenerOptions = options && options.passive ? { passive: true } : undefined;\n\n  // setup GestureDetectorJS window events and register all gestures\n  // this also sets up the default options\n  setup$1(listenerOptions);\n\n  /**\n   * @property element\n   * @type {HTMLElement}\n   */\n  this.element = element;\n\n  /**\n   * @property enabled\n   * @type {Boolean}\n   * @protected\n   */\n  this.enabled = true;\n\n  /**\n   * options, merged with the defaults\n   * options with an _ are converted to camelCase\n   * @property options\n   * @type {Object}\n   */\n  Utils.each(options, function (value, name) {\n    delete options[name];\n    options[Utils.toCamelCase(name)] = value;\n  });\n\n  this.options = Utils.extend(Utils.extend({}, GestureDetector.defaults), options || {});\n  this.options.listenerOptions = listenerOptions;\n\n  // add some css to the element to prevent the browser from doing its native behavior\n  if (this.options.behavior) {\n    Utils.toggleBehavior(this.element, this.options.behavior, true);\n  }\n\n  /**\n   * event start handler on the element to start the detection\n   * @property eventStartHandler\n   * @type {Object}\n   */\n  this.eventStartHandler = Event$1.onTouch(element, EVENT_START, function (ev) {\n    if (self.enabled && ev.eventType == EVENT_START) {\n      Detection.startDetect(self, ev);\n    } else if (ev.eventType == EVENT_TOUCH) {\n      Detection.detect(ev);\n    }\n  }, listenerOptions);\n\n  /**\n   * keep a list of user event handlers which needs to be removed when calling 'dispose'\n   * @property eventHandlers\n   * @type {Array}\n   */\n  this.eventHandlers = [];\n};\n\nGestureDetector.Instance.prototype = {\n  /**\n   * @method on\n   * @signature on(gestures, handler)\n   * @description\n   *  [en]Adds an event handler for a gesture. Available gestures are: drag, dragleft, dragright, dragup, dragdown, hold, release, swipe, swipeleft, swiperight, swipeup, swipedown, tap, doubletap, touch, transform, pinch, pinchin, pinchout and rotate. [/en]\n   *  [ja]ジェスチャに対するイベントハンドラを追加します。指定できるジェスチャ名は、drag dragleft dragright dragup dragdown hold release swipe swipeleft swiperight swipeup swipedown tap doubletap touch transform pinch pinchin pinchout rotate です。[/ja]\n   * @param {String} gestures\n   *   [en]A space separated list of gestures.[/en]\n   *   [ja]検知するジェスチャ名を指定します。スペースで複数指定することができます。[/ja]\n   * @param {Function} handler\n   *   [en]An event handling function.[/en]\n   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]\n   */\n  on: function onEvent(gestures, handler, opt) {\n    var self = this;\n\n    Event$1.on(self.element, gestures, handler, util$1.extend({}, self.options.listenerOptions, opt), function (type) {\n      self.eventHandlers.push({ gesture: type, handler: handler });\n    });\n    return self;\n  },\n\n  /**\n   * @method off\n   * @signature off(gestures, handler)\n   * @description\n   *  [en]Remove an event listener.[/en]\n   *  [ja]イベントリスナーを削除します。[/ja]\n   * @param {String} gestures\n   *   [en]A space separated list of gestures.[/en]\n   *   [ja]ジェスチャ名を指定します。スペースで複数指定することができます。[/ja]\n   * @param {Function} handler\n   *   [en]An event handling function.[/en]\n   *   [ja]イベントハンドラとなる関数オブジェクトを指定します。[/ja]\n   */\n  off: function offEvent(gestures, handler, opt) {\n    var self = this;\n\n    Event$1.off(self.element, gestures, handler, util$1.extend({}, self.options.listenerOptions, opt), function (type) {\n      var index = Utils.inArray(self.eventHandlers, { gesture: type, handler: handler }, true);\n      if (index >= 0) {\n        self.eventHandlers.splice(index, 1);\n      }\n    });\n    return self;\n  },\n\n  /**\n   * trigger gesture event\n   * @method trigger\n   * @signature trigger(gesture, eventData)\n   * @param {String} gesture\n   * @param {Object} [eventData]\n   */\n  trigger: function triggerEvent(gesture, eventData) {\n    // optional\n    if (!eventData) {\n      eventData = {};\n    }\n\n    // create DOM event\n    var event = GestureDetector.DOCUMENT.createEvent('Event');\n    event.initEvent(gesture, true, true);\n    event.gesture = eventData;\n\n    // trigger on the target if it is in the instance element,\n    // this is for event delegation tricks\n    var element = this.element;\n    if (Utils.hasParent(eventData.target, element)) {\n      element = eventData.target;\n    }\n\n    element.dispatchEvent(event);\n    return this;\n  },\n\n  /**\n   * @method enable\n   * @signature enable(state)\n   * @description\n   *  [en]Enable or disable gesture detection.[/en]\n   *  [ja]ジェスチャ検知を有効化/無効化します。[/ja]\n   * @param {Boolean} state\n   *   [en]Specify if it should be enabled or not.[/en]\n   *   [ja]有効にするかどうかを指定します。[/ja]\n   */\n  enable: function enable(state) {\n    this.enabled = state;\n    return this;\n  },\n\n  /**\n   * @method dispose\n   * @signature dispose()\n   * @description\n   *  [en]Remove and destroy all event handlers for this instance.[/en]\n   *  [ja]このインスタンスでのジェスチャの検知や、イベントハンドラを全て解除して廃棄します。[/ja]\n   */\n  dispose: function dispose() {\n    var i, eh;\n\n    // undo all changes made by stop_browser_behavior\n    Utils.toggleBehavior(this.element, this.options.behavior, false);\n\n    // unbind all custom event handlers\n    for (i = -1; eh = this.eventHandlers[++i];) {\n      // eslint-disable-line no-cond-assign\n      Utils.off(this.element, eh.gesture, eh.handler);\n    }\n\n    this.eventHandlers = [];\n\n    // unbind the start event listener\n    Event$1.off(this.element, EVENT_TYPES[EVENT_START], this.eventStartHandler);\n\n    return null;\n  }\n};\n\n/**\n * @module gestures\n */\n/**\n * Move with x fingers (default 1) around on the page.\n * Preventing the default browser behavior is a good way to improve feel and working.\n * ````\n *  GestureDetectortime.on(\"drag\", function(ev) {\n *    console.log(ev);\n *    ev.gesture.preventDefault();\n *  });\n * ````\n *\n * @class Drag\n * @static\n */\n/**\n * @event drag\n * @param {Object} ev\n */\n/**\n * @event dragstart\n * @param {Object} ev\n */\n/**\n * @event dragend\n * @param {Object} ev\n */\n/**\n * @event drapleft\n * @param {Object} ev\n */\n/**\n * @event dragright\n * @param {Object} ev\n */\n/**\n * @event dragup\n * @param {Object} ev\n */\n/**\n * @event dragdown\n * @param {Object} ev\n */\n\n/**\n * @param {String} name\n */\n(function (name) {\n  var triggered = false;\n\n  function dragGesture(ev, inst) {\n    var cur = Detection.current;\n\n    // max touches\n    if (inst.options.dragMaxTouches > 0 && ev.touches.length > inst.options.dragMaxTouches) {\n      return;\n    }\n\n    switch (ev.eventType) {\n      case EVENT_START:\n        triggered = false;\n        break;\n\n      case EVENT_MOVE:\n        // when the distance we moved is too small we skip this gesture\n        // or we can be already in dragging\n        if (ev.distance < inst.options.dragMinDistance && cur.name != name) {\n          return;\n        }\n\n        var startCenter = cur.startEvent.center;\n\n        // we are dragging!\n        if (cur.name != name) {\n          cur.name = name;\n          if (inst.options.dragDistanceCorrection && ev.distance > 0) {\n            // When a drag is triggered, set the event center to dragMinDistance pixels from the original event center.\n            // Without this correction, the dragged distance would jumpstart at dragMinDistance pixels instead of at 0.\n            // It might be useful to save the original start point somewhere\n            var factor = Math.abs(inst.options.dragMinDistance / ev.distance);\n            startCenter.pageX += ev.deltaX * factor;\n            startCenter.pageY += ev.deltaY * factor;\n            startCenter.clientX += ev.deltaX * factor;\n            startCenter.clientY += ev.deltaY * factor;\n\n            // recalculate event data using new start point\n            ev = Detection.extendEventData(ev);\n          }\n        }\n\n        // lock drag to axis?\n        if (cur.lastEvent.dragLockToAxis || inst.options.dragLockToAxis && inst.options.dragLockMinDistance <= ev.distance) {\n          ev.dragLockToAxis = true;\n        }\n\n        // keep direction on the axis that the drag gesture started on\n        var lastDirection = cur.lastEvent.direction;\n        if (ev.dragLockToAxis && lastDirection !== ev.direction) {\n          if (Utils.isVertical(lastDirection)) {\n            ev.direction = ev.deltaY < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n          } else {\n            ev.direction = ev.deltaX < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n          }\n        }\n\n        // first time, trigger dragstart event\n        if (!triggered) {\n          inst.trigger(name + 'start', ev);\n          triggered = true;\n        }\n\n        // trigger events\n        inst.trigger(name, ev);\n        inst.trigger(name + ev.direction, ev);\n\n        var isVertical = Utils.isVertical(ev.direction);\n\n        // block the browser events\n        if (inst.options.dragBlockVertical && isVertical || inst.options.dragBlockHorizontal && !isVertical) {\n          ev.preventDefault();\n        }\n        break;\n\n      case EVENT_RELEASE:\n        if (triggered && ev.changedLength <= inst.options.dragMaxTouches) {\n          inst.trigger(name + 'end', ev);\n          triggered = false;\n        }\n        break;\n\n      case EVENT_END:\n        triggered = false;\n        break;\n    }\n  }\n\n  GestureDetector.gestures.Drag = {\n    name: name,\n    index: 50,\n    handler: dragGesture,\n    defaults: {\n      /**\n       * minimal movement that have to be made before the drag event gets triggered\n       * @property dragMinDistance\n       * @type {Number}\n       * @default 10\n       */\n      dragMinDistance: 10,\n\n      /**\n       * Set dragDistanceCorrection to true to make the starting point of the drag\n       * be calculated from where the drag was triggered, not from where the touch started.\n       * Useful to avoid a jerk-starting drag, which can make fine-adjustments\n       * through dragging difficult, and be visually unappealing.\n       * @property dragDistanceCorrection\n       * @type {Boolean}\n       * @default true\n       */\n      dragDistanceCorrection: true,\n\n      /**\n       * set 0 for unlimited, but this can conflict with transform\n       * @property dragMaxTouches\n       * @type {Number}\n       * @default 1\n       */\n      dragMaxTouches: 1,\n\n      /**\n       * prevent default browser behavior when dragging occurs\n       * be careful with it, it makes the element a blocking element\n       * when you are using the drag gesture, it is a good practice to set this true\n       * @property dragBlockHorizontal\n       * @type {Boolean}\n       * @default false\n       */\n      dragBlockHorizontal: false,\n\n      /**\n       * same as `dragBlockHorizontal`, but for vertical movement\n       * @property dragBlockVertical\n       * @type {Boolean}\n       * @default false\n       */\n      dragBlockVertical: false,\n\n      /**\n       * dragLockToAxis keeps the drag gesture on the axis that it started on,\n       * It disallows vertical directions if the initial direction was horizontal, and vice versa.\n       * @property dragLockToAxis\n       * @type {Boolean}\n       * @default false\n       */\n      dragLockToAxis: false,\n\n      /**\n       * drag lock only kicks in when distance > dragLockMinDistance\n       * This way, locking occurs only when the distance has become large enough to reliably determine the direction\n       * @property dragLockMinDistance\n       * @type {Number}\n       * @default 25\n       */\n      dragLockMinDistance: 25\n    }\n  };\n})('drag');\n\n/**\n * @module gestures\n */\n/**\n * trigger a simple gesture event, so you can do anything in your handler.\n * only usable if you know what your doing...\n *\n * @class Gesture\n * @static\n */\n/**\n * @event gesture\n * @param {Object} ev\n */\nGestureDetector.gestures.Gesture = {\n  name: 'gesture',\n  index: 1337,\n  handler: function releaseGesture(ev, inst) {\n    inst.trigger(this.name, ev);\n  }\n};\n\n/**\n * @module gestures\n */\n/**\n * Touch stays at the same place for x time\n *\n * @class Hold\n * @static\n */\n/**\n * @event hold\n * @param {Object} ev\n */\n\n/**\n * @param {String} name\n */\n(function (name) {\n  var timer;\n\n  function holdGesture(ev, inst) {\n    var options = inst.options,\n        current = Detection.current;\n\n    switch (ev.eventType) {\n      case EVENT_START:\n        clearTimeout(timer);\n\n        // set the gesture so we can check in the timeout if it still is\n        current.name = name;\n\n        // set timer and if after the timeout it still is hold,\n        // we trigger the hold event\n        timer = setTimeout(function () {\n          if (current && current.name == name) {\n            inst.trigger(name, ev);\n          }\n        }, options.holdTimeout);\n        break;\n\n      case EVENT_MOVE:\n        if (ev.distance > options.holdThreshold) {\n          clearTimeout(timer);\n        }\n        break;\n\n      case EVENT_RELEASE:\n        clearTimeout(timer);\n        break;\n    }\n  }\n\n  GestureDetector.gestures.Hold = {\n    name: name,\n    index: 10,\n    defaults: {\n      /**\n       * @property holdTimeout\n       * @type {Number}\n       * @default 500\n       */\n      holdTimeout: 500,\n\n      /**\n       * movement allowed while holding\n       * @property holdThreshold\n       * @type {Number}\n       * @default 2\n       */\n      holdThreshold: 2\n    },\n    handler: holdGesture\n  };\n})('hold');\n\n/**\n * @module gestures\n */\n/**\n * when a touch is being released from the page\n *\n * @class Release\n * @static\n */\n/**\n * @event release\n * @param {Object} ev\n */\nGestureDetector.gestures.Release = {\n  name: 'release',\n  index: Infinity,\n  handler: function releaseGesture(ev, inst) {\n    if (ev.eventType == EVENT_RELEASE) {\n      inst.trigger(this.name, ev);\n    }\n  }\n};\n\n/**\n * @module gestures\n */\n/**\n * triggers swipe events when the end velocity is above the threshold\n * for best usage, set `preventDefault` (on the drag gesture) to `true`\n * ````\n *  GestureDetectortime.on(\"dragleft swipeleft\", function(ev) {\n *    console.log(ev);\n *    ev.gesture.preventDefault();\n *  });\n * ````\n *\n * @class Swipe\n * @static\n */\n/**\n * @event swipe\n * @param {Object} ev\n */\n/**\n * @event swipeleft\n * @param {Object} ev\n */\n/**\n * @event swiperight\n * @param {Object} ev\n */\n/**\n * @event swipeup\n * @param {Object} ev\n */\n/**\n * @event swipedown\n * @param {Object} ev\n */\nGestureDetector.gestures.Swipe = {\n  name: 'swipe',\n  index: 40,\n  defaults: {\n    /**\n     * @property swipeMinTouches\n     * @type {Number}\n     * @default 1\n     */\n    swipeMinTouches: 1,\n\n    /**\n     * @property swipeMaxTouches\n     * @type {Number}\n     * @default 1\n     */\n    swipeMaxTouches: 1,\n\n    /**\n     * horizontal swipe velocity\n     * @property swipeVelocityX\n     * @type {Number}\n     * @default 0.6\n     */\n    swipeVelocityX: 0.6,\n\n    /**\n     * vertical swipe velocity\n     * @property swipeVelocityY\n     * @type {Number}\n     * @default 0.6\n     */\n    swipeVelocityY: 0.6\n  },\n\n  handler: function swipeGesture(ev, inst) {\n    if (ev.eventType == EVENT_RELEASE) {\n      var touches = ev.touches.length,\n          options = inst.options;\n\n      // max touches\n      if (touches < options.swipeMinTouches || touches > options.swipeMaxTouches) {\n        return;\n      }\n\n      // when the distance we moved is too small we skip this gesture\n      // or we can be already in dragging\n      if (ev.velocityX > options.swipeVelocityX || ev.velocityY > options.swipeVelocityY) {\n        // trigger swipe events\n        inst.trigger(this.name, ev);\n        inst.trigger(this.name + ev.direction, ev);\n      }\n    }\n  }\n};\n\n/**\n * @module gestures\n */\n/**\n * Single tap and a double tap on a place\n *\n * @class Tap\n * @static\n */\n/**\n * @event tap\n * @param {Object} ev\n */\n/**\n * @event doubletap\n * @param {Object} ev\n */\n\n/**\n * @param {String} name\n */\n(function (name) {\n  var hasMoved = false;\n\n  function tapGesture(ev, inst) {\n    var options = inst.options,\n        current = Detection.current,\n        prev = Detection.previous,\n        sincePrev,\n        didDoubleTap;\n\n    switch (ev.eventType) {\n      case EVENT_START:\n        hasMoved = false;\n        break;\n\n      case EVENT_MOVE:\n        hasMoved = hasMoved || ev.distance > options.tapMaxDistance;\n        break;\n\n      case EVENT_END:\n        if (!Utils.inStr(ev.srcEvent.type, 'cancel') && ev.deltaTime < options.tapMaxTime && !hasMoved) {\n          // previous gesture, for the double tap since these are two different gesture detections\n          sincePrev = prev && prev.lastEvent && ev.timeStamp - prev.lastEvent.timeStamp;\n          didDoubleTap = false;\n\n          // check if double tap\n          if (prev && prev.name == name && sincePrev && sincePrev < options.doubleTapInterval && ev.distance < options.doubleTapDistance) {\n            inst.trigger('doubletap', ev);\n            didDoubleTap = true;\n          }\n\n          // do a single tap\n          if (!didDoubleTap || options.tapAlways) {\n            current.name = name;\n            inst.trigger(current.name, ev);\n          }\n        }\n        break;\n    }\n  }\n\n  GestureDetector.gestures.Tap = {\n    name: name,\n    index: 100,\n    handler: tapGesture,\n    defaults: {\n      /**\n       * max time of a tap, this is for the slow tappers\n       * @property tapMaxTime\n       * @type {Number}\n       * @default 250\n       */\n      tapMaxTime: 250,\n\n      /**\n       * max distance of movement of a tap, this is for the slow tappers\n       * @property tapMaxDistance\n       * @type {Number}\n       * @default 10\n       */\n      tapMaxDistance: 10,\n\n      /**\n       * always trigger the `tap` event, even while double-tapping\n       * @property tapAlways\n       * @type {Boolean}\n       * @default true\n       */\n      tapAlways: true,\n\n      /**\n       * max distance between two taps\n       * @property doubleTapDistance\n       * @type {Number}\n       * @default 20\n       */\n      doubleTapDistance: 20,\n\n      /**\n       * max time between two taps\n       * @property doubleTapInterval\n       * @type {Number}\n       * @default 300\n       */\n      doubleTapInterval: 300\n    }\n  };\n})('tap');\n\n/**\n * @module gestures\n */\n/**\n * when a touch is being touched at the page\n *\n * @class Touch\n * @static\n */\n/**\n * @event touch\n * @param {Object} ev\n */\nGestureDetector.gestures.Touch = {\n  name: 'touch',\n  index: -Infinity,\n  defaults: {\n    /**\n     * call preventDefault at touchstart, and makes the element blocking by disabling the scrolling of the page,\n     * but it improves gestures like transforming and dragging.\n     * be careful with using this, it can be very annoying for users to be stuck on the page\n     * @property preventDefault\n     * @type {Boolean}\n     * @default false\n     */\n    preventDefault: false,\n\n    /**\n     * disable mouse events, so only touch (or pen!) input triggers events\n     * @property preventMouse\n     * @type {Boolean}\n     * @default false\n     */\n    preventMouse: false\n  },\n  handler: function touchGesture(ev, inst) {\n    if (inst.options.preventMouse && ev.pointerType == POINTER_MOUSE) {\n      ev.stopDetect();\n      return;\n    }\n\n    if (inst.options.preventDefault) {\n      ev.preventDefault();\n    }\n\n    if (ev.eventType == EVENT_TOUCH) {\n      inst.trigger('touch', ev);\n    }\n  }\n};\n\n/**\n * @module gestures\n */\n/**\n * User want to scale or rotate with 2 fingers\n * Preventing the default browser behavior is a good way to improve feel and working. This can be done with the\n * `preventDefault` option.\n *\n * @class Transform\n * @static\n */\n/**\n * @event transform\n * @param {Object} ev\n */\n/**\n * @event transformstart\n * @param {Object} ev\n */\n/**\n * @event transformend\n * @param {Object} ev\n */\n/**\n * @event pinchin\n * @param {Object} ev\n */\n/**\n * @event pinchout\n * @param {Object} ev\n */\n/**\n * @event rotate\n * @param {Object} ev\n */\n\n/**\n * @param {String} name\n */\n(function (name) {\n  var triggered = false;\n\n  function transformGesture(ev, inst) {\n    switch (ev.eventType) {\n      case EVENT_START:\n        triggered = false;\n        break;\n\n      case EVENT_MOVE:\n        // at least multitouch\n        if (ev.touches.length < 2) {\n          return;\n        }\n\n        var scaleThreshold = Math.abs(1 - ev.scale);\n        var rotationThreshold = Math.abs(ev.rotation);\n\n        // when the distance we moved is too small we skip this gesture\n        // or we can be already in dragging\n        if (scaleThreshold < inst.options.transformMinScale && rotationThreshold < inst.options.transformMinRotation) {\n          return;\n        }\n\n        // we are transforming!\n        Detection.current.name = name;\n\n        // first time, trigger dragstart event\n        if (!triggered) {\n          inst.trigger(name + 'start', ev);\n          triggered = true;\n        }\n\n        inst.trigger(name, ev); // basic transform event\n\n        // trigger rotate event\n        if (rotationThreshold > inst.options.transformMinRotation) {\n          inst.trigger('rotate', ev);\n        }\n\n        // trigger pinch event\n        if (scaleThreshold > inst.options.transformMinScale) {\n          inst.trigger('pinch', ev);\n          inst.trigger('pinch' + (ev.scale < 1 ? 'in' : 'out'), ev);\n        }\n        break;\n\n      case EVENT_RELEASE:\n        if (triggered && ev.changedLength < 2) {\n          inst.trigger(name + 'end', ev);\n          triggered = false;\n        }\n        break;\n    }\n  }\n\n  GestureDetector.gestures.Transform = {\n    name: name,\n    index: 45,\n    defaults: {\n      /**\n       * minimal scale factor, no scale is 1, zoomin is to 0 and zoomout until higher then 1\n       * @property transformMinScale\n       * @type {Number}\n       * @default 0.01\n       */\n      transformMinScale: 0.01,\n\n      /**\n       * rotation in degrees\n       * @property transformMinRotation\n       * @type {Number}\n       * @default 1\n       */\n      transformMinRotation: 1\n    },\n\n    handler: transformGesture\n  };\n})('transform');\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar readyMap = void 0;\nvar queueMap = void 0;\n\nfunction isContentReady(element) {\n  if (element.childNodes.length > 0) {\n    setContentReady(element);\n  }\n  return readyMap.has(element);\n}\n\nfunction setContentReady(element) {\n  readyMap.set(element, true);\n}\n\nfunction addCallback(element, fn) {\n  if (!queueMap.has(element)) {\n    queueMap.set(element, []);\n  }\n  queueMap.get(element).push(fn);\n}\n\nfunction consumeQueue(element) {\n  var callbacks = queueMap.get(element, []) || [];\n  queueMap.delete(element);\n  callbacks.forEach(function (callback) {\n    return callback();\n  });\n}\n\nfunction contentReady(element) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n  if (readyMap === undefined) {\n    readyMap = new WeakMap();\n    queueMap = new WeakMap();\n  }\n\n  addCallback(element, fn);\n\n  if (isContentReady(element)) {\n    consumeQueue(element);\n    return;\n  }\n\n  var observer = new MutationObserver(function (changes) {\n    setContentReady(element);\n    consumeQueue(element);\n  });\n  observer.observe(element, { childList: true, characterData: true });\n\n  // failback for elements has empty content.\n  setImmediate(function () {\n    setContentReady(element);\n    consumeQueue(element);\n  });\n}\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar ToastQueue = function () {\n  function ToastQueue() {\n    classCallCheck(this, ToastQueue);\n\n    this.queue = [];\n  }\n\n  createClass(ToastQueue, [{\n    key: \"add\",\n    value: function add(fn, promise) {\n      var _this = this;\n\n      this.queue.push(fn);\n\n      if (this.queue.length === 1) {\n        setImmediate(this.queue[0]);\n      }\n\n      promise.then(function () {\n        _this.queue.shift();\n\n        if (_this.queue.length > 0) {\n          setTimeout(_this.queue[0], 1000 / 30); // Apply some visual delay\n        }\n      });\n    }\n  }]);\n  return ToastQueue;\n}();\n\nvar ToastQueue$1 = new ToastQueue();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar _setAttributes = function _setAttributes(element, options) {\n  ['id', 'class', 'animation'].forEach(function (a) {\n    return options.hasOwnProperty(a) && element.setAttribute(a, options[a]);\n  });\n\n  if (options.modifier) {\n    util$1.addModifier(element, options.modifier);\n  }\n};\n\nvar _normalizeArguments = function _normalizeArguments(message) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var defaults$$1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  options = _extends({}, options);\n  typeof message === 'string' ? options.message = message : options = message;\n  if (!options || !options.message && !options.messageHTML) {\n    util$1.throw('Notifications must contain a message');\n  }\n\n  if (options.hasOwnProperty('buttonLabels') || options.hasOwnProperty('buttonLabel')) {\n    options.buttonLabels = options.buttonLabels || options.buttonLabel;\n    if (!Array.isArray(options.buttonLabels)) {\n      options.buttonLabels = [options.buttonLabels || ''];\n    }\n  }\n\n  return util$1.extend({\n    compile: function compile(param) {\n      return param;\n    },\n    callback: function callback(param) {\n      return param;\n    },\n    animation: 'default',\n    cancelable: false,\n    primaryButtonIndex: (options.buttonLabels || defaults$$1.buttonLabels || []).length - 1\n  }, defaults$$1, options);\n};\n\n/**\n * @object ons.notification\n * @category dialog\n * @tutorial vanilla/Reference/notification\n * @description\n *   [en]\n *     Utility methods to create different kinds of notifications. There are three methods available:\n *\n *     * `ons.notification.alert()`\n *     * `ons.notification.confirm()`\n *     * `ons.notification.prompt()`\n *     * `ons.notification.toast()`\n *\n *     It will automatically display a Material Design dialog on Android devices.\n *   [/en]\n *   [ja]いくつかの種類のアラートダイアログを作成するためのユーティリティメソッドを収めたオブジェクトです。[/ja]\n * @example\n * ons.notification.alert('Hello, world!');\n *\n * ons.notification.confirm('Are you ready?')\n *   .then(\n *     function(answer) {\n *       if (answer === 1) {\n *         ons.notification.alert('Let\\'s go!');\n *       }\n *     }\n *   );\n *\n * ons.notification.prompt('How old are ?')\n *   .then(\n *     function(age) {\n *       ons.notification.alert('You are ' + age + ' years old.');\n *     }\n *   );\n */\nvar notification = {};\n\nnotification._createAlertDialog = function () {\n  for (var _len = arguments.length, params = Array(_len), _key = 0; _key < _len; _key++) {\n    params[_key] = arguments[_key];\n  }\n\n  return new Promise(function (resolve) {\n    var options = _normalizeArguments.apply(undefined, params);\n    util$1.checkMissingImport('AlertDialog', 'AlertDialogButton');\n\n    // Prompt input string\n    var inputString = '';\n    if (options.isPrompt) {\n      inputString = '\\n      <input\\n        class=\"text-input text-input--underbar\"\\n        type=\"' + (options.inputType || 'text') + '\"\\n        placeholder=\"' + (options.placeholder || '') + '\"\\n        value=\"' + (options.defaultValue || '') + '\"\\n        style=\"width: 100%; margin-top: 10px;\"\\n      />\\n    ';\n    }\n\n    // Buttons string\n    var buttons = '';\n    options.buttonLabels.forEach(function (label, index) {\n      buttons += '\\n      <ons-alert-dialog-button\\n        class=\"\\n          ' + (index === options.primaryButtonIndex ? ' alert-dialog-button--primal' : '') + '\\n          ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-button--rowfooter' : '') + '\\n        \"\\n        style=\"position: relative;\">\\n        ' + label + '\\n      </ons-alert-dialog-button>\\n    ';\n    });\n\n    // Dialog Element\n    var el = {};\n    var _destroyDialog = function _destroyDialog() {\n      if (el.dialog.onDialogCancel) {\n        el.dialog.removeEventListener('dialog-cancel', el.dialog.onDialogCancel);\n      }\n\n      Object.keys(el).forEach(function (key) {\n        return delete el[key];\n      });\n      el = null;\n\n      if (options.destroy instanceof Function) {\n        options.destroy();\n      }\n    };\n\n    el.dialog = document.createElement('ons-alert-dialog');\n    el.dialog.innerHTML = '\\n    <div class=\"alert-dialog-mask\"\\n      style=\"\\n        ' + (options.maskColor ? 'background-color: ' + options.maskColor : '') + '\\n      \"></div>\\n    <div class=\"alert-dialog\">\\n      <div class=\"alert-dialog-container\">\\n        <div class=\"alert-dialog-title\">\\n          ' + (options.title || '') + '\\n        </div>\\n        <div class=\"alert-dialog-content\">\\n          ' + (options.message || options.messageHTML) + '\\n          ' + inputString + '\\n        </div>\\n        <div class=\"\\n          alert-dialog-footer\\n          ' + (options.buttonLabels.length <= 2 ? ' alert-dialog-footer--rowfooter' : '') + '\\n        \">\\n          ' + buttons + '\\n        </div>\\n      </div>\\n    </div>\\n  ';\n    contentReady(el.dialog);\n\n    // Set attributes\n    _setAttributes(el.dialog, options);\n\n    // Prompt events\n    if (options.isPrompt) {\n      el.input = el.dialog.querySelector('.text-input');\n\n      if (options.submitOnEnter) {\n        el.input.onkeypress = function (event) {\n          if (event.keyCode === 13) {\n            el.dialog.hide().then(function () {\n              if (el) {\n                var resolveValue = el.input.value;\n                _destroyDialog();\n                options.callback(resolveValue);\n                resolve(resolveValue);\n              }\n            });\n          }\n        };\n      }\n    }\n\n    // Button events\n    el.footer = el.dialog.querySelector('.alert-dialog-footer');\n    util$1.arrayFrom(el.dialog.querySelectorAll('.alert-dialog-button')).forEach(function (buttonElement, index) {\n      buttonElement.onclick = function () {\n        el.dialog.hide().then(function () {\n          if (el) {\n            var resolveValue = index;\n            if (options.isPrompt) {\n              resolveValue = index === options.primaryButtonIndex ? el.input.value : null;\n            }\n            el.dialog.remove();\n            _destroyDialog();\n            options.callback(resolveValue);\n            resolve(resolveValue);\n          }\n        });\n      };\n\n      el.footer.appendChild(buttonElement);\n    });\n\n    // Cancel events\n    if (options.cancelable) {\n      el.dialog.cancelable = true;\n      el.dialog.onDialogCancel = function () {\n        setImmediate(function () {\n          el.dialog.remove();\n          _destroyDialog();\n        });\n        var resolveValue = options.isPrompt ? null : -1;\n        options.callback(resolveValue);\n        resolve(resolveValue);\n      };\n      el.dialog.addEventListener('dialog-cancel', el.dialog.onDialogCancel, false);\n    }\n\n    // Show dialog\n    document.body.appendChild(el.dialog);\n    options.compile(el.dialog);\n    setImmediate(function () {\n      el.dialog.show().then(function () {\n        if (el.input && options.isPrompt && options.autofocus) {\n          var strLength = el.input.value.length;\n          el.input.focus();\n          if (el.input.type && ['text', 'search', 'url', 'tel', 'password'].includes(el.input.type)) {\n            el.input.setSelectionRange(strLength, strLength);\n          }\n        }\n      });\n    });\n  });\n};\n\n/**\n * @method alert\n * @signature alert(message [, options] | options)\n * @return {Promise}\n *   [en]Will resolve to the index of the button that was pressed or `-1` when canceled.[/en]\n *   [ja][/ja]\n * @param {String} message\n *   [en]Notification message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\n *   [ja][/ja]\n * @param {Object} options\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクトです。[/ja]\n * @param {String} [options.message]\n *   [en]Notification message.[/en]\n *   [ja]アラートダイアログに表示する文字列を指定します。[/ja]\n * @param {String} [options.messageHTML]\n *   [en]Notification message in HTML.[/en]\n *   [ja]アラートダイアログに表示するHTMLを指定します。[/ja]\n * @param {String | Array} [options.buttonLabels]\n *   [en]Labels for the buttons. Default is `\"OK\"`.[/en]\n *   [ja]確認ボタンのラベルを指定します。\"OK\"がデフォルトです。[/ja]\n * @param {Number} [options.primaryButtonIndex]\n *   [en]Index of primary button. Default is the last one.[/en]\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]\n * @param {Boolean} [options.cancelable]\n *   [en]Whether the dialog is cancelable or not. Default is `false`. If the dialog is cancelable it can be closed by clicking the background or pressing the Android back button.[/en]\n *   [ja]ダイアログがキャンセル可能かどうかを指定します。[/ja]\n * @param {String} [options.animation]\n *   [en]Animation name. Available animations are `none` and `fade`. Default is `fade`.[/en]\n *   [ja]アラートダイアログを表示する際のアニメーション名を指定します。\"none\", \"fade\"のいずれかを指定できます。[/ja]\n * @param {String} [options.id]\n *   [en]The `<ons-alert-dialog>` element's ID.[/en]\n *   [ja]ons-alert-dialog要素のID。[/ja]\n * @param {String} [options.class]\n *   [en]The `<ons-alert-dialog>` element's class.[/en]\n *   [ja]ons-alert-dialog要素のclass。[/ja]\n * @param {String} [options.title]\n *   [en]Dialog title. Default is `\"Alert\"`.[/en]\n *   [ja]アラートダイアログの上部に表示するタイトルを指定します。\"Alert\"がデフォルトです。[/ja]\n * @param {String} [options.modifier]\n *   [en]Modifier for the dialog.[/en]\n *   [ja]アラートダイアログのmodifier属性の値を指定します。[/ja]\n * @param {String} [options.maskColor]\n *   [en]Color of the background mask. Default is \"rgba(0, 0, 0, 0.2)\" (\"rgba(0, 0, 0, 0.3)\" for Material).[/en]\n *   [ja]背景のマスクの色を指定します。\"rgba(0, 0, 0, 0.2)\"がデフォルト値です。[/ja]\n * @param {Function} [options.callback]\n *   [en]Function that executes after dialog has been closed.[/en]\n *   [ja]アラートダイアログが閉じられた時に呼び出される関数オブジェクトを指定します。[/ja]\n * @description\n *   [en]\n *     Display an alert dialog to show the user a message.\n *\n *     The content of the message can be either simple text or HTML.\n *\n *     It can be called in the following ways:\n *\n *     ```\n *     ons.notification.alert(message, options);\n *     ons.notification.alert(options);\n *     ```\n *\n *     Must specify either `message` or `messageHTML`.\n *   [/en]\n *   [ja]\n *     ユーザーへメッセージを見せるためのアラートダイアログを表示します。\n *     表示するメッセージは、テキストかもしくはHTMLを指定できます。\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\n *   [/ja]\n */\nnotification.alert = function (message, options) {\n  return notification._createAlertDialog(message, options, {\n    buttonLabels: ['OK'],\n    title: 'Alert'\n  });\n};\n\n/**\n * @method confirm\n * @signature confirm(message [, options] | options)\n * @return {Promise}\n *   [en]Will resolve to the index of the button that was pressed or `-1` when canceled.[/en]\n *   [ja][/ja]\n * @param {String} message\n *   [en]Notification message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\n *   [ja][/ja]\n * @param {Object} options\n *   [en]Parameter object.[/en]\n * @param {Array} [options.buttonLabels]\n *   [en]Labels for the buttons. Default is `[\"Cancel\", \"OK\"]`.[/en]\n *   [ja]ボタンのラベルの配列を指定します。[\"Cancel\", \"OK\"]がデフォルトです。[/ja]\n * @param {Number} [options.primaryButtonIndex]\n *   [en]Index of primary button. Default is the last one.[/en]\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 1 です。[/ja]\n * @description\n *   [en]\n *     Display a dialog to ask the user for confirmation. Extends `alert()` parameters.\n *     The default button labels are `\"Cancel\"` and `\"OK\"` but they can be customized.\n *\n *     It can be called in the following ways:\n *\n *     ```\n *     ons.notification.confirm(message, options);\n *     ons.notification.confirm(options);\n *     ```\n *\n *     Must specify either `message` or `messageHTML`.\n *   [/en]\n *   [ja]\n *     ユーザに確認を促すダイアログを表示します。\n *     デオルとのボタンラベルは、\"Cancel\"と\"OK\"ですが、これはこのメソッドの引数でカスタマイズできます。\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\n *   [/ja]\n */\nnotification.confirm = function (message, options) {\n  return notification._createAlertDialog(message, options, {\n    buttonLabels: ['Cancel', 'OK'],\n    title: 'Confirm'\n  });\n};\n\n/**\n * @method prompt\n * @signature prompt(message [, options] | options)\n * @param {String} message\n *   [en]Notification message. This argument is optional but if it's not defined either `options.message` or `options.messageHTML` must be defined instead.[/en]\n *   [ja][/ja]\n * @return {Promise}\n *   [en]Will resolve to the input value when the dialog is closed or `null` when canceled.[/en]\n *   [ja][/ja]\n * @param {Object} options\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクトです。[/ja]\n * @param {String | Array} [options.buttonLabels]\n *   [en]Labels for the buttons. Default is `\"OK\"`.[/en]\n *   [ja]確認ボタンのラベルを指定します。\"OK\"がデフォルトです。[/ja]\n * @param {Number} [options.primaryButtonIndex]\n *   [en]Index of primary button. Default is the last one.[/en]\n *   [ja]プライマリボタンのインデックスを指定します。デフォルトは 0 です。[/ja]\n * @param {String} [options.placeholder]\n *   [en]Placeholder for the text input.[/en]\n *   [ja]テキスト欄のプレースホルダに表示するテキストを指定します。[/ja]\n * @param {String} [options.defaultValue]\n *   [en]Default value for the text input.[/en]\n *   [ja]テキスト欄のデフォルトの値を指定します。[/ja]\n * @param {String} [options.inputType]\n *   [en]Type of the input element (`password`, `date`...). Default is `text`.[/en]\n *   [ja][/ja]\n * @param {Boolean} [options.autofocus]\n *   [en]Autofocus the input element. Default is `true`. In Cordova, `KeyboardDisplayRequiresUserAction` in `config.xml` must be `false` to activate this feature.[/en]\n *   [ja]input要素に自動的にフォーカスするかどうかを指定します。デフォルトはtrueです。Cordova環境では、この機能を有効にするためには `config.xml` で `KeyboardDisplayRequiresUserAction` を `false` に設定する必要があります。[/ja]\n * @param {Boolean} [options.submitOnEnter]\n *   [en]Submit automatically when enter is pressed. Default is `true`.[/en]\n *   [ja]Enterが押された際にそのformをsubmitするかどうかを指定します。デフォルトはtrueです。[/ja]\n * @description\n *   [en]\n *     Display a dialog with a prompt to ask the user a question. Extends `alert()` parameters.\n *\n *     It can be called in the following ways:\n *\n *     ```\n *     ons.notification.prompt(message, options);\n *     ons.notification.prompt(options);\n *     ```\n *\n *     Must specify either `message` or `messageHTML`.\n *   [/en]\n *   [ja]\n *     ユーザーに入力を促すダイアログを表示します。\n *     このメソッドの引数には、options.messageもしくはoptions.messageHTMLのどちらかを必ず指定する必要があります。\n *   [/ja]\n */\nnotification.prompt = function (message, options) {\n  return notification._createAlertDialog(message, options, {\n    buttonLabels: ['OK'],\n    title: 'Alert',\n    isPrompt: true,\n    autofocus: true,\n    submitOnEnter: true\n  });\n};\n\n/**\n * @method toast\n * @signature toast(message [, options] | options)\n * @return {Promise}\n *   [en]Will resolve when the toast is hidden.[/en]\n *   [ja][/ja]\n * @param {String} message\n *   [en]Toast message. This argument is optional but if it's not defined then `options.message` must be defined instead.[/en]\n *   [ja][/ja]\n * @param {Object} options\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクトです。[/ja]\n * @param {String} [options.message]\n *   [en]Notification message.[/en]\n *   [ja]トーストに表示する文字列を指定します。[/ja]\n * @param {String} [options.buttonLabel]\n *   [en]Label for the button.[/en]\n *   [ja]確認ボタンのラベルを指定します。[/ja]\n * @param {String} [options.animation]\n *   [en]Animation name. Available animations are `none`, `fade`, `ascend`, `lift` and `fall`. Default is `ascend` for Android and `lift` for iOS.[/en]\n *   [ja]トーストを表示する際のアニメーション名を指定します。\"none\", \"fade\", \"ascend\", \"lift\", \"fall\"のいずれかを指定できます。[/ja]\n * @param {Number} [options.timeout]\n *   [en]Number of miliseconds where the toast is visible before hiding automatically.[/en]\n *   [ja][/ja]\n * @param {Boolean} [options.force]\n *   [en]If `true`, the toast skips the notification queue and is shown immediately. Defaults to `false`.[/en]\n *   [ja][/ja]\n * @param {String} [options.id]\n *   [en]The `<ons-toast>` element's ID.[/en]\n *   [ja]ons-toast要素のID。[/ja]\n * @param {String} [options.class]\n *   [en]The `<ons-toast>` element's class.[/en]\n *   [ja]ons-toast要素のclass。[/ja]\n * @param {String} [options.modifier]\n *   [en]Modifier for the element.[/en]\n *   [ja]トーストのmodifier属性の値を指定します。[/ja]\n * @param {Function} [options.callback]\n *   [en]Function that executes after toast has been hidden.[/en]\n *   [ja]トーストが閉じられた時に呼び出される関数オブジェクトを指定します。[/ja]\n * @description\n *   [en]\n *     Display a simple notification toast with an optional button that can be used for simple actions.\n *\n *     It can be called in the following ways:\n *\n *     ```\n *     ons.notification.toast(message, options);\n *     ons.notification.toast(options);\n *     ```\n *   [/en]\n *   [ja][/ja]\n */\nnotification.toast = function (message, options) {\n  var promise = new Promise(function (resolve) {\n    util$1.checkMissingImport('Toast'); // Throws error, must be inside promise\n\n    options = _normalizeArguments(message, options, {\n      timeout: 0,\n      force: false\n    });\n\n    var toast = util$1.createElement('\\n      <ons-toast>\\n        ' + options.message + '\\n        ' + (options.buttonLabels ? '<button>' + options.buttonLabels[0] + '</button>' : '') + '\\n      </ons-toast>\\n    ');\n\n    _setAttributes(toast, options);\n\n    var originalHide = toast.hide.bind(toast);\n\n    var finish = function finish(value) {\n      if (toast) {\n        originalHide().then(function () {\n          if (toast) {\n            toast.remove();\n            toast = null;\n            options.callback(value);\n            resolve(value);\n          }\n        });\n      }\n    };\n\n    if (options.buttonLabels) {\n      util$1.findChild(toast._toast, 'button').onclick = function () {\n        return finish(0);\n      };\n    }\n\n    // overwrite so that ons.notification.hide resolves when toast.hide is called\n    toast.hide = function () {\n      return finish(-1);\n    };\n\n    document.body.appendChild(toast);\n    options.compile(toast);\n\n    var show = function show() {\n      toast.parentElement && toast.show(options).then(function () {\n        if (options.timeout) {\n          setTimeout(function () {\n            return finish(-1);\n          }, options.timeout);\n        }\n      });\n    };\n\n    setImmediate(function () {\n      return options.force ? show() : ToastQueue$1.add(show, promise);\n    });\n  });\n\n  return promise;\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n// Validate parameters\nvar checkOptions = function checkOptions(options) {\n  var err = function err(prop) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'Function';\n    return util$1.throw('\"options.' + prop + '\" must be an instance of ' + type);\n  };\n  var hasOwnProperty = function hasOwnProperty(prop) {\n    return Object.hasOwnProperty.call(options, prop);\n  };\n  var instanceOf = function instanceOf(prop) {\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Function;\n    return options[prop] instanceof type;\n  };\n\n  var b = 'buttons',\n      cb = 'callback',\n      c = 'compile',\n      d = 'destroy';\n  (!hasOwnProperty(b) || !instanceOf(b, Array)) && err(b, 'Array');\n  hasOwnProperty(cb) && !instanceOf(cb) && err(cb);\n  hasOwnProperty(c) && !instanceOf(c) && err(c);\n  hasOwnProperty(d) && !instanceOf(d) && err(d);\n};\n\n// Action Sheet\nvar actionSheet = (function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Promise(function (resolve) {\n    util$1.checkMissingImport('ActionSheet');\n    checkOptions(options);\n\n    // Main component\n    var actionSheet = util$1.createElement('\\n    <ons-action-sheet\\n      ' + (options.title ? 'title=\"' + options.title + '\"' : '') + '\\n      ' + (options.cancelable ? 'cancelable' : '') + '\\n      ' + (options.modifier ? 'modifier=\"' + options.modifier + '\"' : '') + '\\n      ' + (options.maskColor ? 'mask-color=\"' + options.maskColor + '\"' : '') + '\\n      ' + (options.id ? 'id=\"' + options.id + '\"' : '') + '\\n      ' + (options.class ? 'class=\"' + options.class + '\"' : '') + '\\n    >\\n      <div class=\"action-sheet\"></div>\\n    </ons-action-sheet>\\n  ');\n\n    // Resolve action and clean up\n    var finish = function finish(event) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      if (actionSheet) {\n        options.destroy && options.destroy(actionSheet);\n\n        actionSheet.removeEventListener('dialog-cancel', finish, false);\n        actionSheet.remove();\n        actionSheet = null;\n\n        options.callback && options.callback(index);\n        resolve(index);\n      }\n    };\n\n    // Link cancel handler\n    actionSheet.addEventListener('dialog-cancel', finish, false);\n\n    // Create buttons and link action handler\n    var buttons = document.createDocumentFragment();\n    options.buttons.forEach(function (item, index) {\n      var buttonOptions = typeof item === 'string' ? { label: item } : _extends({}, item);\n      if (options.destructive === index) {\n        buttonOptions.modifier = (buttonOptions.modifier || '') + ' destructive';\n      }\n\n      var button = util$1.createElement('\\n      <ons-action-sheet-button\\n        ' + (buttonOptions.icon ? 'icon=\"' + buttonOptions.icon + '\"' : '') + '\\n        ' + (buttonOptions.modifier ? 'modifier=\"' + buttonOptions.modifier + '\"' : '') + '\\n      >\\n        ' + buttonOptions.label + '\\n      </ons-action-sheet-button>\\n    ');\n\n      button.onclick = function (event) {\n        return actionSheet.hide().then(function () {\n          return finish(event, index);\n        });\n      };\n      buttons.appendChild(button);\n    });\n\n    // Finish component and attach\n    util$1.findChild(actionSheet, '.action-sheet').appendChild(buttons);\n    document.body.appendChild(actionSheet);\n    options.compile && options.compile(el.dialog);\n\n    // Show\n    setImmediate(function () {\n      return actionSheet.show({\n        animation: options.animation,\n        animationOptions: options.animationOptions\n      });\n    });\n  });\n});\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar create$1 = function create() {\n\n  /**\n   * @object ons.orientation\n   * @category util\n   * @description\n   *   [en]Utility methods for orientation detection.[/en]\n   *   [ja]画面のオリエンテーション検知のためのユーティリティメソッドを収めているオブジェクトです。[/ja]\n   */\n  var obj = {\n    /**\n     * @event change\n     * @description\n     *   [en]Fired when the device orientation changes.[/en]\n     *   [ja]デバイスのオリエンテーションが変化した際に発火します。[/ja]\n     * @param {Object} event\n     *   [en]Event object.[/en]\n     *   [ja]イベントオブジェクトです。[/ja]\n     * @param {Boolean} event.isPortrait\n     *   [en]Will be true if the current orientation is portrait mode.[/en]\n     *   [ja]現在のオリエンテーションがportraitの場合にtrueを返します。[/ja]\n     */\n\n    /**\n     * @method on\n     * @signature on(eventName, listener)\n     * @description\n     *   [en]Add an event listener.[/en]\n     *   [ja]イベントリスナーを追加します。[/ja]\n     * @param {String} eventName\n     *   [en]Name of the event.[/en]\n     *   [ja]イベント名を指定します。[/ja]\n     * @param {Function} listener\n     *   [en]Function to execute when the event is triggered.[/en]\n     *   [ja]このイベントが発火された際に呼び出される関数オブジェクトを指定します。[/ja]\n     */\n\n    /**\n     * @method once\n     * @signature once(eventName, listener)\n     * @description\n     *  [en]Add an event listener that's only triggered once.[/en]\n     *  [ja]一度だけ呼び出されるイベントリスナーを追加します。[/ja]\n     * @param {String} eventName\n     *   [en]Name of the event.[/en]\n     *   [ja]イベント名を指定します。[/ja]\n     * @param {Function} listener\n     *   [en]Function to execute when the event is triggered.[/en]\n     *   [ja]イベントが発火した際に呼び出される関数オブジェクトを指定します。[/ja]\n     */\n\n    /**\n     * @method off\n     * @signature off(eventName, [listener])\n     * @description\n     *  [en]Remove an event listener. If the listener is not specified all listeners for the event type will be removed.[/en]\n     *  [ja]イベントリスナーを削除します。もしイベントリスナーを指定しなかった場合には、そのイベントに紐づく全てのイベントリスナーが削除されます。[/ja]\n     * @param {String} eventName\n     *   [en]Name of the event.[/en]\n     *   [ja]イベント名を指定します。[/ja]\n     * @param {Function} listener\n     *   [en]Function to execute when the event is triggered.[/en]\n     *   [ja]削除するイベントリスナーを指定します。[/ja]\n     */\n\n    // actual implementation to detect if whether current screen is portrait or not\n    _isPortrait: false,\n\n    /**\n     * @method isPortrait\n     * @signature isPortrait()\n     * @return {Boolean}\n     *   [en]Will be true if the current orientation is portrait mode.[/en]\n     *   [ja]オリエンテーションがportraitモードの場合にtrueになります。[/ja]\n     * @description\n     *   [en]Returns whether the current screen orientation is portrait or not.[/en]\n     *   [ja]オリエンテーションがportraitモードかどうかを返します。[/ja]\n     */\n    isPortrait: function isPortrait() {\n      return this._isPortrait();\n    },\n\n    /**\n     * @method isLandscape\n     * @signature isLandscape()\n     * @return {Boolean}\n     *   [en]Will be true if the current orientation is landscape mode.[/en]\n     *   [ja]オリエンテーションがlandscapeモードの場合にtrueになります。[/ja]\n     * @description\n     *   [en]Returns whether the current screen orientation is landscape or not.[/en]\n     *   [ja]オリエンテーションがlandscapeモードかどうかを返します。[/ja]\n     */\n    isLandscape: function isLandscape() {\n      return !this.isPortrait();\n    },\n\n    _init: function _init() {\n      document.addEventListener('DOMContentLoaded', this._onDOMContentLoaded.bind(this), false);\n\n      if ('orientation' in window) {\n        window.addEventListener('orientationchange', this._onOrientationChange.bind(this), false);\n      } else {\n        window.addEventListener('resize', this._onResize.bind(this), false);\n      }\n\n      this._isPortrait = function () {\n        return window.innerHeight > window.innerWidth;\n      };\n\n      return this;\n    },\n\n    _onDOMContentLoaded: function _onDOMContentLoaded() {\n      this._installIsPortraitImplementation();\n      this.emit('change', { isPortrait: this.isPortrait() });\n    },\n\n    _installIsPortraitImplementation: function _installIsPortraitImplementation() {\n      var isPortrait = window.innerWidth < window.innerHeight;\n\n      if (!('orientation' in window)) {\n        this._isPortrait = function () {\n          return window.innerHeight > window.innerWidth;\n        };\n      } else if (window.orientation % 180 === 0) {\n        this._isPortrait = function () {\n          return Math.abs(window.orientation % 180) === 0 ? isPortrait : !isPortrait;\n        };\n      } else {\n        this._isPortrait = function () {\n          return Math.abs(window.orientation % 180) === 90 ? isPortrait : !isPortrait;\n        };\n      }\n    },\n\n    _onOrientationChange: function _onOrientationChange() {\n      var _this = this;\n\n      var isPortrait = this._isPortrait();\n\n      // Wait for the dimensions to change because\n      // of Android inconsistency.\n      var nIter = 0;\n      var interval = setInterval(function () {\n        nIter++;\n\n        var w = window.innerWidth;\n        var h = window.innerHeight;\n\n        if (isPortrait && w <= h || !isPortrait && w >= h) {\n          _this.emit('change', { isPortrait: isPortrait });\n          clearInterval(interval);\n        } else if (nIter === 50) {\n          _this.emit('change', { isPortrait: isPortrait });\n          clearInterval(interval);\n        }\n      }, 20);\n    },\n\n    // Run on not mobile browser.\n    _onResize: function _onResize() {\n      this.emit('change', { isPortrait: this.isPortrait() });\n    }\n  };\n\n  MicroEvent.mixin(obj);\n\n  return obj;\n};\n\nvar orientation = create$1()._init();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @object ons.modifier\n * @category visual\n * @description\n *   [en]\n *     Utility methods to change modifier attributes of Onsen UI elements..\n *   [/en]\n *   [ja][/ja]\n * @example\n * ons.modifier.add(myOnsInputElement, 'underbar');\n * ons.modifier.toggle(myOnsToastElement, 'custom-modifier');\n *\n */\nvar modifier = {\n  /**\n   * @method add\n   * @signature add(element, modifier [, modifier])\n   * @description\n   *   [en]Add the specified modifiers to the element if they are not already included.[/en]\n   *   [ja][/ja]\n   * @param {HTMLElement} element\n   *   [en]Target element.[/en]\n   *   [ja][/ja]\n   * @param {String} modifier\n   *   [en]Name of the modifier.[/en]\n   *   [ja][/ja]\n   */\n  add: function add(element) {\n    for (var _len = arguments.length, modifiers = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      modifiers[_key - 1] = arguments[_key];\n    }\n\n    return modifiers.forEach(function (modifier) {\n      return util$1.addModifier(element, modifier);\n    });\n  },\n  /**\n   * @method remove\n   * @signature remove(element, modifier [, modifier])\n   * @description\n   *   [en]Remove the specified modifiers from the element if they are included.[/en]\n   *   [ja][/ja]\n   * @param {HTMLElement} element\n   *   [en]Target element.[/en]\n   *   [ja][/ja]\n   * @param {String} modifier\n   *   [en]Name of the modifier.[/en]\n   *   [ja][/ja]\n   */\n  remove: function remove(element) {\n    for (var _len2 = arguments.length, modifiers = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      modifiers[_key2 - 1] = arguments[_key2];\n    }\n\n    return modifiers.forEach(function (modifier) {\n      return util$1.removeModifier(element, modifier);\n    });\n  },\n  /**\n   * @method contains\n   * @signature contains(element, modifier)\n   * @description\n   *   [en]Check whether the specified modifier is included in the element.[/en]\n   *   [ja][/ja]\n   * @param {HTMLElement} element\n   *   [en]Target element.[/en]\n   *   [ja][/ja]\n   * @param {String} modifier\n   *   [en]Name of the modifier.[/en]\n   *   [ja][/ja]\n   * @return {Boolean}\n   *   [en]`true` when the specified modifier is found in the element's `modifier` attribute. `false` otherwise.[/en]\n   *   [ja][/ja]\n   */\n  contains: util$1.hasModifier,\n  /**\n   * @method toggle\n   * @signature toggle(element, modifier [, force])\n   * @description\n   *   [en]Toggle the specified modifier.[/en]\n   *   [ja][/ja]\n   * @param {HTMLElement} element\n   *   [en]Target element.[/en]\n   *   [ja][/ja]\n   * @param {String} modifier\n   *   [en]Name of the modifier.[/en]\n   *   [ja][/ja]\n   * @param {String} force\n   *   [en]If it evaluates to true, add specified modifier value, and if it evaluates to false, remove it.[/en]\n   *   [ja][/ja]\n   */\n  toggle: util$1.toggleModifier\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar softwareKeyboard = new MicroEvent();\nsoftwareKeyboard._visible = false;\n\nvar onShow = function onShow() {\n  softwareKeyboard._visible = true;\n  softwareKeyboard.emit('show');\n};\n\nvar onHide = function onHide() {\n  softwareKeyboard._visible = false;\n  softwareKeyboard.emit('hide');\n};\n\nvar bindEvents = function bindEvents() {\n  if (typeof Keyboard !== 'undefined') {\n    // https://github.com/martinmose/cordova-keyboard/blob/95f3da3a38d8f8e1fa41fbf40145352c13535a00/README.md\n    Keyboard.onshow = onShow;\n    Keyboard.onhide = onHide;\n    softwareKeyboard.emit('init', { visible: Keyboard.isVisible });\n\n    return true;\n  } else if (typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.Keyboard !== 'undefined') {\n    // https://github.com/driftyco/ionic-plugins-keyboard/blob/ca27ecf/README.md\n    window.addEventListener('native.keyboardshow', onShow);\n    window.addEventListener('native.keyboardhide', onHide);\n    softwareKeyboard.emit('init', { visible: cordova.plugins.Keyboard.isVisible });\n\n    return true;\n  }\n\n  return false;\n};\n\nvar noPluginError = function noPluginError() {\n  util$1.warn('ons-keyboard: Cordova Keyboard plugin is not present.');\n};\n\ndocument.addEventListener('deviceready', function () {\n  if (!bindEvents()) {\n    if (document.querySelector('[ons-keyboard-active]') || document.querySelector('[ons-keyboard-inactive]')) {\n      noPluginError();\n    }\n\n    softwareKeyboard.on = noPluginError;\n  }\n});\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar generateId = function () {\n  var i = 0;\n  return function () {\n    return i++;\n  };\n}();\n\n/**\n * Door locking system.\n *\n * @param {Object} [options]\n * @param {Function} [options.log]\n */\n\nvar DoorLock = function () {\n  function DoorLock() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, DoorLock);\n\n    this._lockList = [];\n    this._waitList = [];\n    this._log = options.log || function () {};\n  }\n\n  /**\n   * Register a lock.\n   *\n   * @return {Function} Callback for unlocking.\n   */\n\n\n  createClass(DoorLock, [{\n    key: 'lock',\n    value: function lock() {\n      var _this = this;\n\n      var unlock = function unlock() {\n        _this._unlock(unlock);\n      };\n      unlock.id = generateId();\n      this._lockList.push(unlock);\n      this._log('lock: ' + unlock.id);\n\n      return unlock;\n    }\n  }, {\n    key: '_unlock',\n    value: function _unlock(fn) {\n      var index = this._lockList.indexOf(fn);\n      if (index === -1) {\n        throw new Error('This function is not registered in the lock list.');\n      }\n\n      this._lockList.splice(index, 1);\n      this._log('unlock: ' + fn.id);\n\n      this._tryToFreeWaitList();\n    }\n  }, {\n    key: '_tryToFreeWaitList',\n    value: function _tryToFreeWaitList() {\n      while (!this.isLocked() && this._waitList.length > 0) {\n        this._waitList.shift()();\n      }\n    }\n\n    /**\n     * Register a callback for waiting unlocked door.\n     *\n     * @params {Function} callback Callback on unlocking the door completely.\n     */\n\n  }, {\n    key: 'waitUnlock',\n    value: function waitUnlock(callback) {\n      if (!(callback instanceof Function)) {\n        throw new Error('The callback param must be a function.');\n      }\n\n      if (this.isLocked()) {\n        this._waitList.push(callback);\n      } else {\n        callback();\n      }\n    }\n\n    /**\n     * @return {Boolean}\n     */\n\n  }, {\n    key: 'isLocked',\n    value: function isLocked() {\n      return this._lockList.length > 0;\n    }\n  }]);\n  return DoorLock;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n// Default implementation for global PageLoader.\nfunction loadPage(_ref, done, error) {\n  var page = _ref.page,\n      parent = _ref.parent,\n      _ref$params = _ref.params;\n\n  internal$1.getPageHTMLAsync(page).then(function (html) {\n    var pageElement = util$1.createElement(html);\n    parent.appendChild(pageElement);\n\n    done(pageElement);\n  }).catch(function (e) {\n    return error(e);\n  });\n}\n\nfunction unloadPage(element) {\n  if (element._destroy instanceof Function) {\n    element._destroy();\n  } else {\n    element.remove();\n  }\n}\n\nvar PageLoader = function () {\n  /**\n   * @param {Function} [fn] Returns an object that has \"element\" property and \"unload\" function.\n   */\n  function PageLoader(loader, unloader) {\n    classCallCheck(this, PageLoader);\n\n    this._loader = loader instanceof Function ? loader : loadPage;\n    this._unloader = unloader instanceof Function ? unloader : unloadPage;\n  }\n\n  /**\n   * Set internal loader implementation.\n   */\n\n\n  createClass(PageLoader, [{\n    key: 'load',\n\n\n    /**\n     * @param {any} options.page\n     * @param {Element} options.parent A location to load page.\n     * @param {Object} [options.params] Extra parameters for ons-page.\n     * @param {Function} done Take an object that has \"element\" property and \"unload\" function.\n     * @param {Function} error Function called when there is an error.\n     */\n    value: function load(_ref2, done, error) {\n      var page = _ref2.page,\n          parent = _ref2.parent,\n          _ref2$params = _ref2.params,\n          params = _ref2$params === undefined ? {} : _ref2$params;\n\n      this._loader({ page: page, parent: parent, params: params }, function (pageElement) {\n        if (!(pageElement instanceof Element)) {\n          throw Error('pageElement must be an instance of Element.');\n        }\n\n        done(pageElement);\n      }, error);\n    }\n  }, {\n    key: 'unload',\n    value: function unload(pageElement) {\n      if (!(pageElement instanceof Element)) {\n        throw Error('pageElement must be an instance of Element.');\n      }\n\n      this._unloader(pageElement);\n    }\n  }, {\n    key: 'internalLoader',\n    set: function set$$1(fn) {\n      if (!(fn instanceof Function)) {\n        throw Error('First parameter must be an instance of Function');\n      }\n      this._loader = fn;\n    },\n    get: function get$$1() {\n      return this._loader;\n    }\n  }]);\n  return PageLoader;\n}();\n\nvar defaultPageLoader = new PageLoader();\n\nvar instantPageLoader = new PageLoader(function (_ref3, done) {\n  var page = _ref3.page,\n      parent = _ref3.parent,\n      _ref3$params = _ref3.params;\n\n  var element = util$1.createElement(page.trim());\n  parent.appendChild(element);\n\n  done(element);\n}, unloadPage);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @object ons\n * @category util\n * @description\n *   [ja]Onsen UIで利用できるグローバルなオブジェクトです。[/ja]\n *   [en]A global object that's used in Onsen UI. [/en]\n */\nvar ons$1 = {\n  animit: Animit,\n  defaultPageLoader: defaultPageLoader,\n  elements: onsElements,\n  GestureDetector: GestureDetector,\n  modifier: modifier,\n  notification: notification,\n  orientation: orientation,\n  pageAttributeExpression: pageAttributeExpression,\n  PageLoader: PageLoader,\n  platform: platform,\n  softwareKeyboard: softwareKeyboard,\n  _autoStyle: autoStyle,\n  _internal: internal$1,\n  _readyLock: new DoorLock(),\n  _util: util$1\n};\n\nons$1.platform.select((window.location.search.match(/platform=([\\w-]+)/) || [])[1]);\n\nwaitDeviceReady();\n\nvar readyError = function readyError(after) {\n  return util$1.throw('This method must be called ' + (after ? 'after' : 'before') + ' ons.isReady() is true');\n};\n\n/**\n * @method isReady\n * @signature isReady()\n * @return {Boolean}\n *   [en]Will be true if Onsen UI is initialized.[/en]\n *   [ja]初期化されているかどうかを返します。[/ja]\n * @description\n *   [en]Returns true if Onsen UI is initialized.[/en]\n *   [ja]Onsen UIがすでに初期化されているかどうかを返すメソッドです。[/ja]\n */\nons$1.isReady = function () {\n  return !ons$1._readyLock.isLocked();\n};\n\n/**\n * @method isWebView\n * @signature isWebView()\n * @return {Boolean}\n *   [en]Will be true if the app is running in Cordova.[/en]\n *   [ja]Cordovaで実行されている場合にtrueになります。[/ja]\n * @description\n *   [en]Returns true if running inside Cordova.[/en]\n *   [ja]Cordovaで実行されているかどうかを返すメソッドです。[/ja]\n */\nons$1.isWebView = ons$1.platform.isWebView;\n\n/**\n * @method ready\n * @signature ready(callback)\n * @description\n *   [ja]アプリの初期化に利用するメソッドです。渡された関数は、Onsen UIの初期化が終了している時点で必ず呼ばれます。[/ja]\n *   [en]Method used to wait for app initialization. Waits for `DOMContentLoaded` and `deviceready`, when necessary, before executing the callback.[/en]\n * @param {Function} callback\n *   [en]Function that executes after Onsen UI has been initialized.[/en]\n *   [ja]Onsen UIが初期化が完了した後に呼び出される関数オブジェクトを指定します。[/ja]\n */\nons$1.ready = function (callback) {\n  if (ons$1.isReady()) {\n    callback();\n  } else {\n    ons$1._readyLock.waitUnlock(callback);\n  }\n};\n\n/**\n * @method setDefaultDeviceBackButtonListener\n * @signature setDefaultDeviceBackButtonListener(listener)\n * @param {Function} listener\n *   [en]Function that executes when device back button is pressed. Must be called on `ons.ready`.[/en]\n *   [ja]デバイスのバックボタンが押された時に実行される関数オブジェクトを指定します。[/ja]\n * @description\n *   [en]Set default handler for device back button.[/en]\n *   [ja]デバイスのバックボタンのためのデフォルトのハンドラを設定します。[/ja]\n */\nons$1.setDefaultDeviceBackButtonListener = function (listener) {\n  if (!ons$1.isReady()) {\n    readyError(true);\n  }\n  ons$1._defaultDeviceBackButtonHandler.setListener(listener);\n};\n\n/**\n * @method disableDeviceBackButtonHandler\n * @signature disableDeviceBackButtonHandler()\n * @description\n * [en]Disable device back button event handler. Must be called on `ons.ready`.[/en]\n * [ja]デバイスのバックボタンのイベントを受け付けないようにします。[/ja]\n */\nons$1.disableDeviceBackButtonHandler = function () {\n  if (!ons$1.isReady()) {\n    readyError(true);\n  }\n  internal$1.dbbDispatcher.disable();\n};\n\n/**\n * @method enableDeviceBackButtonHandler\n * @signature enableDeviceBackButtonHandler()\n * @description\n * [en]Enable device back button event handler. Must be called on `ons.ready`.[/en]\n * [ja]デバイスのバックボタンのイベントを受け付けるようにします。[/ja]\n */\nons$1.enableDeviceBackButtonHandler = function () {\n  if (!ons$1.isReady()) {\n    readyError(true);\n  }\n  internal$1.dbbDispatcher.enable();\n};\n\nons$1.fireDeviceBackButtonEvent = function () {\n  internal$1.dbbDispatcher.fireDeviceBackButtonEvent();\n};\n\n/**\n * @method enableAutoStatusBarFill\n * @signature enableAutoStatusBarFill()\n * @description\n *   [en]Enable status bar fill feature on iOS7 and above (except for iPhone X). Must be called before `ons.ready`.[/en]\n *   [ja]iOS7以上（iPhone Xは除く）で、ステータスバー部分の高さを自動的に埋める処理を有効にします。[/ja]\n */\nons$1.enableAutoStatusBarFill = function () {\n  if (ons$1.isReady()) {\n    readyError(false);\n  }\n  internal$1.config.autoStatusBarFill = true;\n};\n\n/**\n * @method disableAutoStatusBarFill\n * @signature disableAutoStatusBarFill()\n * @description\n *   [en]Disable status bar fill feature on iOS7 and above (except for iPhone X). Must be called before `ons.ready`.[/en]\n *   [ja]iOS7以上（iPhone Xは除く）で、ステータスバー部分の高さを自動的に埋める処理を無効にします。[/ja]\n */\nons$1.disableAutoStatusBarFill = function () {\n  if (ons$1.isReady()) {\n    readyError(false);\n  }\n  internal$1.config.autoStatusBarFill = false;\n};\n\n/**\n * @method mockStatusBar\n * @signature mockStatusBar()\n * @description\n *   [en]Creates a static element similar to iOS status bar. Only useful for browser testing. Must be called before `ons.ready`.[/en]\n *   [ja][/ja]\n */\nons$1.mockStatusBar = function () {\n  if (ons$1.isReady()) {\n    readyError(false);\n  }\n\n  var mock = function mock() {\n    if (!document.body.children[0] || !document.body.children[0].classList.contains('ons-status-bar-mock')) {\n      var android = platform.isAndroid(),\n          i = function i(_i) {\n        return '<i class=\"' + _i.split('-')[0] + ' ' + _i + '\"></i>';\n      };\n      var left = android ? i('zmdi-twitter') + ' ' + i('zmdi-google-play') : 'No SIM ' + i('fa-wifi'),\n          center = android ? '' : '12:28 PM',\n          right = android ? i('zmdi-network') + ' ' + i('zmdi-wifi') + ' ' + i('zmdi-battery') + ' 12:28 PM' : '80% ' + i('fa-battery-three-quarters');\n\n      document.body.insertBefore(util$1.createElement('<div class=\"ons-status-bar-mock ' + (android ? 'android' : 'ios') + '\">' + ('<div>' + left + '</div><div>' + center + '</div><div>' + right + '</div>') + '</div>'), document.body.firstChild);\n    }\n  };\n\n  document.body ? mock() : internal$1.waitDOMContentLoaded(mock);\n};\n\n/**\n * @method disableAnimations\n * @signature disableAnimations()\n * @description\n *   [en]Disable all animations. Could be handy for testing and older devices.[/en]\n *   [ja]アニメーションを全て無効にします。テストの際に便利です。[/ja]\n */\nons$1.disableAnimations = function () {\n  internal$1.config.animationsDisabled = true;\n};\n\n/**\n * @method enableAnimations\n * @signature enableAnimations()\n * @description\n *   [en]Enable animations (default).[/en]\n *   [ja]アニメーションを有効にします。[/ja]\n */\nons$1.enableAnimations = function () {\n  internal$1.config.animationsDisabled = false;\n};\n\nons$1._disableWarnings = function () {\n  internal$1.config.warningsDisabled = true;\n};\n\nons$1._enableWarnings = function () {\n  internal$1.config.warningsDisabled = false;\n};\n\n/**\n * @method disableAutoStyling\n * @signature disableAutoStyling()\n * @description\n *   [en]Disable automatic styling.[/en]\n *   [ja][/ja]\n */\nons$1.disableAutoStyling = autoStyle.disable;\n\n/**\n * @method enableAutoStyling\n * @signature enableAutoStyling()\n * @description\n *   [en]Enable automatic styling based on OS (default).[/en]\n *   [ja][/ja]\n */\nons$1.enableAutoStyling = autoStyle.enable;\n\n/**\n * @method disableIconAutoPrefix\n * @signature disableIconAutoPrefix()\n * @description\n *   [en]Disable adding `fa-` prefix automatically to `ons-icon` classes. Useful when including custom icon packs.[/en]\n *   [ja][/ja]\n */\nons$1.disableIconAutoPrefix = function () {\n  util$1.checkMissingImport('Icon');\n  onsElements.Icon.setAutoPrefix(false);\n};\n\n/**\n * @method forcePlatformStyling\n * @signature forcePlatformStyling(platform)\n * @description\n *   [en]Refresh styling for the given platform. Only useful for demos. Use `ons.platform.select(...)` instead for development and production.[/en]\n *   [ja][/ja]\n * @param {string} platform New platform to style the elements.\n */\nons$1.forcePlatformStyling = function (newPlatform) {\n  ons$1.enableAutoStyling();\n  ons$1.platform.select(newPlatform || 'ios');\n\n  ons$1._util.arrayFrom(document.querySelectorAll('*')).forEach(function (element) {\n    if (element.tagName.toLowerCase() === 'ons-if') {\n      element._platformUpdate();\n    } else if (element.tagName.match(/^ons-/i)) {\n      autoStyle.prepare(element, true);\n      if (element.tagName.toLowerCase() === 'ons-tabbar') {\n        element._updatePosition();\n      }\n    }\n  });\n};\n\n/**\n * @method preload\n * @signature preload(templatePaths)\n * @param {String|Array} templatePaths\n *   [en]Set of HTML file paths containing 'ons-page' elements.[/en]\n *   [ja][/ja]\n * @return {Promise}\n *   [en]Promise that resolves when all the templates are cached.[/en]\n *   [ja][/ja]\n * @description\n *   [en]Separated files need to be requested on demand and this can slightly delay pushing new pages. This method requests and caches templates for later use.[/en]\n *   [ja][/ja]\n */\nons$1.preload = function () {\n  var templates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  return Promise.all((templates instanceof Array ? templates : [templates]).map(function (template) {\n    if (typeof template !== 'string') {\n      util$1.throw('Expected string arguments but got ' + (typeof template === 'undefined' ? 'undefined' : _typeof(template)));\n    }\n    return internal$1.getTemplateHTMLAsync(template);\n  }));\n};\n\n/**\n * @method createElement\n * @signature createElement(template, options)\n * @param {String} template\n *   [en]Either an HTML file path, a `<template>` id or an HTML string such as `'<div id=\"foo\">hoge</div>'`.[/en]\n *   [ja][/ja]\n * @param {Object} [options]\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクト。[/ja]\n * @param {Boolean|HTMLElement} [options.append]\n *   [en]Whether or not the element should be automatically appended to the DOM.  Defaults to `false`. If `true` value is given, `document.body` will be used as the target.[/en]\n *   [ja][/ja]\n * @param {HTMLElement} [options.insertBefore]\n *   [en]Reference node that becomes the next sibling of the new node (`options.append` element).[/en]\n *   [ja][/ja]\n * @return {HTMLElement|Promise}\n *   [en]If the provided template was an inline HTML string, it returns the new element. Otherwise, it returns a promise that resolves to the new element.[/en]\n *   [ja][/ja]\n * @description\n *   [en]Create a new element from a template. Both inline HTML and external files are supported although the return value differs.[/en]\n *   [ja][/ja]\n */\nons$1.createElement = function (template) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  template = template.trim();\n\n  var create = function create(html) {\n    var element = ons$1._util.createElement(html);\n    element.remove();\n\n    if (options.append) {\n      var target = options.append instanceof HTMLElement ? options.append : document.body;\n      target.insertBefore(element, options.insertBefore || null);\n      options.link instanceof Function && options.link(element);\n    }\n\n    return element;\n  };\n\n  return template.charAt(0) === '<' ? create(template) : internal$1.getPageHTMLAsync(template).then(create);\n};\n\n/**\n * @method createPopover\n * @signature createPopover(page, [options])\n * @param {String} page\n *   [en]Page name. Can be either an HTML file or a <template> containing a <ons-dialog> component.[/en]\n *   [ja]pageのURLか、もしくは`<template>`で宣言したテンプレートのid属性の値を指定できます。[/ja]\n * @param {Object} [options]\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクト。[/ja]\n * @param {Object} [options.parentScope]\n *   [en]Parent scope of the dialog. Used to bind models and access scope methods from the dialog.[/en]\n *   [ja]ダイアログ内で利用する親スコープを指定します。ダイアログからモデルやスコープのメソッドにアクセスするのに使います。このパラメータはAngularJSバインディングでのみ利用できます。[/ja]\n * @return {Promise}\n *   [en]Promise object that resolves to the popover component object.[/en]\n *   [ja]ポップオーバーのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\n * @description\n *   [en]Create a popover instance from a template.[/en]\n *   [ja]テンプレートからポップオーバーのインスタンスを生成します。[/ja]\n */\n/**\n * @method createDialog\n * @signature createDialog(page, [options])\n * @param {String} page\n *   [en]Page name. Can be either an HTML file or an `<template>` containing a <ons-dialog> component.[/en]\n *   [ja]pageのURLか、もしくは`<template>`で宣言したテンプレートのid属性の値を指定できます。[/ja]\n * @param {Object} [options]\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクト。[/ja]\n * @return {Promise}\n *   [en]Promise object that resolves to the dialog component object.[/en]\n *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\n * @description\n *   [en]Create a dialog instance from a template.[/en]\n *   [ja]テンプレートからダイアログのインスタンスを生成します。[/ja]\n */\n/**\n * @method createAlertDialog\n * @signature createAlertDialog(page, [options])\n * @param {String} page\n *   [en]Page name. Can be either an HTML file or an `<template>` containing a <ons-alert-dialog> component.[/en]\n *   [ja]pageのURLか、もしくは`<template>`で宣言したテンプレートのid属性の値を指定できます。[/ja]\n * @param {Object} [options]\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクト。[/ja]\n * @return {Promise}\n *   [en]Promise object that resolves to the alert dialog component object.[/en]\n *   [ja]ダイアログのコンポーネントオブジェクトを解決するPromiseオブジェクトを返します。[/ja]\n * @description\n *   [en]Create a alert dialog instance from a template.[/en]\n *   [ja]テンプレートからアラートダイアログのインスタンスを生成します。[/ja]\n */\nons$1.createPopover = ons$1.createDialog = ons$1.createAlertDialog = function (template) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ons$1.createElement(template, _extends({ append: true }, options));\n};\n\n/**\n * @method openActionSheet\n * @signature openActionSheet(options)\n * @description\n *   [en]Shows an instant Action Sheet and lets the user choose an action.[/en]\n *   [ja][/ja]\n * @param {Object} [options]\n *   [en]Parameter object.[/en]\n *   [ja]オプションを指定するオブジェクト。[/ja]\n * @param {Array} [options.buttons]\n *   [en]Represent each button of the action sheet following the specified order. Every item can be either a string label or an object containing `label`, `icon` and `modifier` properties.[/en]\n *   [ja][/ja]\n * @param {String} [options.title]\n *   [en]Optional title for the action sheet.[/en]\n *   [ja][/ja]\n * @param {Number} [options.destructive]\n *   [en]Optional index of the \"destructive\" button (only for iOS). It can be specified in the button array as well.[/en]\n *   [ja][/ja]\n * @param {Boolean} [options.cancelable]\n *   [en]Whether the action sheet can be canceled by tapping on the background mask or not.[/en]\n *   [ja][/ja]\n * @param {String} [options.modifier]\n *   [en]Modifier attribute of the action sheet. E.g. `'destructive'`.[/en]\n *   [ja][/ja]\n * @param {String} [options.maskColor]\n *   [en]Optionally change the background mask color.[/en]\n *   [ja][/ja]\n * @param {String} [options.id]\n *   [en]The element's id attribute.[/en]\n *   [ja][/ja]\n * @param {String} [options.class]\n *   [en]The element's class attribute.[/en]\n *   [ja][/ja]\n * @return {Promise}\n *   [en]Will resolve when the action sheet is closed. The resolve value is either the index of the tapped button or -1 when canceled.[/en]\n *   [ja][/ja]\n */\nons$1.openActionSheet = actionSheet;\n\n/**\n * @method resolveLoadingPlaceholder\n * @signature resolveLoadingPlaceholder(page)\n * @param {String} page\n *   [en]Page name. Can be either an HTML file or a `<template>` id.[/en]\n *   [ja]pageのURLか、もしくは`<template>`で宣言したテンプレートのid属性の値を指定できます。[/ja]\n * @description\n *   [en]If no page is defined for the `ons-loading-placeholder` attribute it will wait for this method being called before loading the page.[/en]\n *   [ja]ons-loading-placeholderの属性値としてページが指定されていない場合は、ページロード前に呼ばれるons.resolveLoadingPlaceholder処理が行われるまで表示されません。[/ja]\n */\nons$1.resolveLoadingPlaceholder = function (page, link) {\n  var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));\n  if (elements.length === 0) {\n    util$1.throw('No ons-loading-placeholder exists');\n  }\n\n  elements.filter(function (element) {\n    return !element.getAttribute('page');\n  }).forEach(function (element) {\n    element.setAttribute('ons-loading-placeholder', page);\n    ons$1._resolveLoadingPlaceholder(element, page, link);\n  });\n};\n\nons$1._setupLoadingPlaceHolders = function () {\n  ons$1.ready(function () {\n    var elements = ons$1._util.arrayFrom(window.document.querySelectorAll('[ons-loading-placeholder]'));\n\n    elements.forEach(function (element) {\n      var page = element.getAttribute('ons-loading-placeholder');\n      if (typeof page === 'string') {\n        ons$1._resolveLoadingPlaceholder(element, page);\n      }\n    });\n  });\n};\n\nons$1._resolveLoadingPlaceholder = function (parent, page) {\n  var link = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (el, done) {\n    return done();\n  };\n\n  page && ons$1.createElement(page).then(function (element) {\n    element.style.display = 'none';\n    parent.appendChild(element);\n    link(element, function () {\n      while (parent.firstChild && parent.firstChild !== element) {\n        parent.removeChild(parent.firstChild);\n      }\n      element.style.display = '';\n    });\n  }).catch(function (error) {\n    return Promise.reject('Unabled to resolve placeholder: ' + error);\n  });\n};\n\nfunction waitDeviceReady() {\n  var unlockDeviceReady = ons$1._readyLock.lock();\n  window.addEventListener('DOMContentLoaded', function () {\n    if (ons$1.isWebView()) {\n      window.document.addEventListener('deviceready', unlockDeviceReady, false);\n    } else {\n      unlockDeviceReady();\n    }\n  }, false);\n}\n\n/**\n * @method getScriptPage\n * @signature getScriptPage()\n * @description\n *   [en]Access the last created page from the current `script` scope. Only works inside `<script></script>` tags that are direct children of `ons-page` element. Use this to add lifecycle hooks to a page.[/en]\n *   [ja][/ja]\n * @return {HTMLElement}\n *   [en]Returns the corresponding page element.[/en]\n *   [ja][/ja]\n */\nvar getCS = 'currentScript' in document ? function () {\n  return document.currentScript;\n} : function () {\n  return document.scripts[document.scripts.length - 1];\n};\nons$1.getScriptPage = function () {\n  return getCS() && /ons-page/i.test(getCS().parentElement.tagName) && getCS().parentElement || null;\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nfunction getElementClass() {\n  if (typeof HTMLElement !== 'function') {\n    // case of Safari\n    var _BaseElement = function _BaseElement() {};\n    _BaseElement.prototype = document.createElement('div');\n    return _BaseElement;\n  } else {\n    return HTMLElement;\n  }\n}\n\nvar BaseElement = function (_getElementClass) {\n  inherits(BaseElement, _getElementClass);\n\n  function BaseElement() {\n    classCallCheck(this, BaseElement);\n    return possibleConstructorReturn(this, (BaseElement.__proto__ || Object.getPrototypeOf(BaseElement)).call(this));\n  }\n\n  return BaseElement;\n}(getElementClass());\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-template\n * @category util\n * @description\n *   [en]\n *     Define a separate HTML fragment and use as a template. These templates can be loaded as pages in `<ons-navigator>`, `<ons-tabbar>` and `<ons-splitter>`. They can also be used to generate dialogs. Since Onsen UI 2.4.0, the native `<template>` element can be used instead of `<ons-template>` for better performance and features. `<ons-template>` is still supported for backward compatibility.\n *   [/en]\n *   [ja]テンプレートとして使用するためのHTMLフラグメントを定義します。この要素でHTMLを宣言すると、id属性に指定した名前をpageのURLとしてons-navigatorなどのコンポーネントから参照できます。[/ja]\n * @seealso ons-navigator\n *   [en]The `<ons-navigator>` component enables stack based navigation.[/en]\n *   [ja][/ja]\n * @seealso ons-tabbar\n *   [en]The `<ons-tabbar>` component is used to add tab navigation.[/en]\n *   [ja][/ja]\n * @seealso ons-splitter\n *   [en]The `<ons-splitter>` component can be used to create a draggable menu or column based layout.[/en]\n *   [ja][/ja]\n * @example\n * <ons-template id=\"foobar.html\">\n *   <ons-page>\n *     Page content\n *   </ons-page>\n * </ons-template>\n *\n * <ons-navigator page=\"foobar.html\"></ons-navigator>\n */\n\nvar TemplateElement = function (_BaseElement) {\n  inherits(TemplateElement, _BaseElement);\n\n  /**\n   * @property template\n   * @type {String}\n   * @description\n   *  [en]Template content. This property can not be used with AngularJS bindings.[/en]\n   *  [ja][/ja]\n   */\n\n  function TemplateElement() {\n    classCallCheck(this, TemplateElement);\n\n    var _this = possibleConstructorReturn(this, (TemplateElement.__proto__ || Object.getPrototypeOf(TemplateElement)).call(this));\n\n    _this.template = _this.innerHTML;\n\n    while (_this.firstChild) {\n      _this.removeChild(_this.firstChild);\n    }\n    return _this;\n  }\n\n  createClass(TemplateElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      if (this.parentNode) {\n        // Note: this.parentNode is not set in some CE0/CE1 polyfills.\n        // Show warning when the ons-template is not located just under document.body\n        if (this.parentNode !== document.body) {\n          // if the parent is not document.body\n          util$1.warn('ons-template (id = ' + this.getAttribute('id') + ') must be located just under document.body' + (this.parentNode.outerHTML ? ':\\n\\n' + this.parentNode.outerHTML : '.'));\n        }\n      }\n\n      var event = new CustomEvent('_templateloaded', { bubbles: true, cancelable: true });\n      event.template = this.template;\n      event.templateId = this.getAttribute('id');\n\n      this.dispatchEvent(event);\n    }\n  }]);\n  return TemplateElement;\n}(BaseElement);\n\nonsElements.Template = TemplateElement;\ncustomElements.define('ons-template', TemplateElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-if\n * @category conditional\n * @tutorial vanilla/Reference/if\n * @description\n *   [en]\n *     Conditionally display content depending on the platform, device orientation or both.\n *\n *     Sometimes it is useful to conditionally hide or show certain components based on platform. When running on iOS the `<ons-if>` element can be used to hide the `<ons-fab>` element.\n *   [/en]\n *   [ja][/ja]\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\n * @example\n * <ons-page>\n *   <ons-if orientation=\"landscape\">\n *     Landscape view!\n *   </ons-if>\n *   <ons-if platform=\"android\">\n *     This is Android.\n *   </ons-if>\n *   <ons-if platform=\"ios other\">\n *     This is not Android.\n *   </ons-if>\n * </ons-page>\n */\n\nvar IfElement = function (_BaseElement) {\n  inherits(IfElement, _BaseElement);\n\n  /**\n   * @attribute platform\n   * @initonly\n   * @type {string}\n   * @description\n   *  [en]Space-separated platform names. Possible values are `\"ios\"`, `\"android\"`, `\"windows\"` and `\"other\"`.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute orientation\n   * @type {string}\n   * @description\n   *  [en]Either `\"portrait\"` or `\"landscape\"`.[/en]\n   *  [ja]portraitもしくはlandscapeを指定します[/ja]\n   */\n\n  function IfElement() {\n    classCallCheck(this, IfElement);\n\n    var _this = possibleConstructorReturn(this, (IfElement.__proto__ || Object.getPrototypeOf(IfElement)).call(this));\n\n    contentReady(_this, function () {\n      if (platform._getSelectedPlatform() !== null) {\n        _this._platformUpdate();\n      } else if (!_this._isAllowedPlatform()) {\n        while (_this.childNodes[0]) {\n          _this.childNodes[0].remove();\n        }\n        _this._platformUpdate();\n      }\n    });\n\n    _this._onOrientationChange();\n    return _this;\n  }\n\n  createClass(IfElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      orientation.on('change', this._onOrientationChange.bind(this));\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name) {\n      if (name === 'orientation') {\n        this._onOrientationChange();\n      }\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      orientation.off('change', this._onOrientationChange);\n    }\n  }, {\n    key: '_platformUpdate',\n    value: function _platformUpdate() {\n      this.style.display = this._isAllowedPlatform() ? '' : 'none';\n    }\n  }, {\n    key: '_isAllowedPlatform',\n    value: function _isAllowedPlatform() {\n      return !this.getAttribute('platform') || this.getAttribute('platform').split(/\\s+/).indexOf(platform.getMobileOS()) >= 0;\n    }\n  }, {\n    key: '_onOrientationChange',\n    value: function _onOrientationChange() {\n      if (this.hasAttribute('orientation') && this._isAllowedPlatform()) {\n        var conditionalOrientation = this.getAttribute('orientation').toLowerCase();\n        var currentOrientation = orientation.isPortrait() ? 'portrait' : 'landscape';\n\n        this.style.display = conditionalOrientation === currentOrientation ? '' : 'none';\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['orientation'];\n    }\n  }]);\n  return IfElement;\n}(BaseElement);\n\nonsElements.If = IfElement;\ncustomElements.define('ons-if', IfElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar BaseAnimator = function () {\n\n  /**\n   * @param {Object} options\n   * @param {String} options.timing\n   * @param {Number} options.duration\n   * @param {Number} options.delay\n   */\n  function BaseAnimator() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, BaseAnimator);\n\n    this.timing = options.timing || 'linear';\n    this.duration = options.duration || 0;\n    this.delay = options.delay || 0;\n\n    this.def = {\n      timing: this.timing,\n      duration: this.duration,\n      delay: this.delay\n    };\n  }\n\n  createClass(BaseAnimator, null, [{\n    key: 'extend',\n    value: function extend() {\n      var properties = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var extendedAnimator = this;\n      var newAnimator = function newAnimator() {\n        extendedAnimator.apply(this, arguments);\n        util$1.extend(this, properties);\n      };\n\n      newAnimator.prototype = this.prototype;\n      return newAnimator;\n    }\n  }]);\n  return BaseAnimator;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n// This object should not be exposed to users. Please keep this private.\nvar iPhoneXPatch = {};\n\niPhoneXPatch.isIPhoneXPortraitPatchActive = function () {\n  return document.documentElement.getAttribute('onsflag-iphonex-portrait') != null && window.innerWidth < window.innerHeight;\n};\n\niPhoneXPatch.isIPhoneXLandscapePatchActive = function () {\n  // If width === height, treat it as landscape\n  return document.documentElement.getAttribute('onsflag-iphonex-landscape') != null && window.innerWidth >= window.innerHeight;\n};\n\n/**\n * Returns the safe area lengths based on the current state of the safe areas.\n */\niPhoneXPatch.getSafeAreaLengths = function () {\n  var safeAreaLengths = void 0;\n  if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n    safeAreaLengths = {\n      top: 44,\n      right: 0,\n      bottom: 34,\n      left: 0\n    };\n  } else if (iPhoneXPatch.isIPhoneXLandscapePatchActive()) {\n    safeAreaLengths = {\n      top: 0,\n      right: 44,\n      bottom: 21,\n      left: 44\n    };\n  } else {\n    safeAreaLengths = {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    };\n  }\n\n  return safeAreaLengths;\n};\n\n/**\n * Returns the safe area rect based on the current state of the safe areas.\n */\niPhoneXPatch.getSafeAreaDOMRect = function () {\n  var safeAreaRect = void 0;\n  if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n    safeAreaRect = {\n      x: 0,\n      y: 44, /* 0 + 44 (top safe area) */\n      width: window.innerWidth,\n      height: window.innerHeight - 78 /* height - 44 (top safe area) - 34 (bottom safe area) */\n    };\n  } else if (iPhoneXPatch.isIPhoneXLandscapePatchActive()) {\n    safeAreaRect = {\n      x: 44, /* 0 + 44 (left safe area) */\n      y: 0,\n      width: window.innerWidth - 88, /* width - 44 (left safe area) - 34 (right safe area) */\n      height: window.innerHeight - 21 /* height - 21 (bottom safe area) */\n    };\n  } else {\n    safeAreaRect = {\n      x: 0,\n      y: 0,\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  return _extends({}, safeAreaRect, {\n    left: safeAreaRect.x,\n    top: safeAreaRect.y,\n    right: safeAreaRect.x + safeAreaRect.width,\n    bottom: safeAreaRect.y + safeAreaRect.height\n  });\n};\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar ActionSheetAnimator = function (_BaseAnimator) {\n  inherits(ActionSheetAnimator, _BaseAnimator);\n\n  function ActionSheetAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, ActionSheetAnimator);\n    return possibleConstructorReturn(this, (ActionSheetAnimator.__proto__ || Object.getPrototypeOf(ActionSheetAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} dialog\n   * @param {Function} done\n   */\n\n\n  createClass(ActionSheetAnimator, [{\n    key: 'show',\n    value: function show(dialog, done) {\n      done();\n    }\n\n    /**\n     * @param {HTMLElement} dialog\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, done) {\n      done();\n    }\n  }]);\n  return ActionSheetAnimator;\n}(BaseAnimator);\n\n/**\n * Android style animator for Action Sheet.\n */\nvar MDActionSheetAnimator = function (_ActionSheetAnimator) {\n  inherits(MDActionSheetAnimator, _ActionSheetAnimator);\n\n  function MDActionSheetAnimator() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$timing = _ref2.timing,\n        timing = _ref2$timing === undefined ? 'ease' : _ref2$timing,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === undefined ? 0.4 : _ref2$duration;\n\n    classCallCheck(this, MDActionSheetAnimator);\n\n    var _this2 = possibleConstructorReturn(this, (MDActionSheetAnimator.__proto__ || Object.getPrototypeOf(MDActionSheetAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this2.maskTiming = 'linear';\n    _this2.maskDuration = 0.2;\n    return _this2;\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(MDActionSheetAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n\n      Animit.runAll(Animit(dialog._mask).queue({ opacity: 0 }).wait(this.delay).queue({ opacity: 1.0 }, {\n        duration: this.maskDuration,\n        timing: this.maskTiming\n      }), Animit(dialog._sheet, this.def).default({ transform: 'translate3d(0, 80%, 0)', opacity: 0 }, { transform: 'translate3d(0, 0, 0)', opacity: 1 }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      Animit.runAll(Animit(dialog._mask).queue({ opacity: 1 }).wait(this.delay).queue({ opacity: 0 }, {\n        duration: this.maskDuration,\n        timing: this.maskTiming\n      }), Animit(dialog._sheet, this.def).default({ transform: 'translate3d(0, 0, 0)', opacity: 1 }, { transform: 'translate3d(0, 80%, 0)', opacity: 0 }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n  }]);\n  return MDActionSheetAnimator;\n}(ActionSheetAnimator);\n\n/**\n * iOS style animator for dialog.\n */\nvar IOSActionSheetAnimator = function (_ActionSheetAnimator2) {\n  inherits(IOSActionSheetAnimator, _ActionSheetAnimator2);\n\n  function IOSActionSheetAnimator() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$timing = _ref3.timing,\n        timing = _ref3$timing === undefined ? 'ease' : _ref3$timing,\n        _ref3$delay = _ref3.delay,\n        delay = _ref3$delay === undefined ? 0 : _ref3$delay,\n        _ref3$duration = _ref3.duration,\n        duration = _ref3$duration === undefined ? 0.3 : _ref3$duration;\n\n    classCallCheck(this, IOSActionSheetAnimator);\n\n    var _this3 = possibleConstructorReturn(this, (IOSActionSheetAnimator.__proto__ || Object.getPrototypeOf(IOSActionSheetAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this3.maskTiming = 'linear';\n    _this3.maskDuration = 0.2;\n    if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n      _this3.liftAmount = 'calc(100% + 48px)';\n    } else if (iPhoneXPatch.isIPhoneXLandscapePatchActive()) {\n      _this3.liftAmount = 'calc(100% + 33px)';\n    } else {\n      _this3.liftAmount = document.body.clientHeight / 2.0 - 1 + 'px'; // avoid Forced Synchronous Layout\n    }\n    return _this3;\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(IOSActionSheetAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      Animit.runAll(Animit(dialog._mask).queue({ opacity: 0 }).wait(this.delay).queue({ opacity: 1 }, {\n        duration: this.maskDuration,\n        timing: this.maskTiming\n      }), Animit(dialog._sheet, this.def).default({ transform: 'translate3d(0, ' + this.liftAmount + ', 0)' }, { transform: 'translate3d(0, 0, 0)' }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      Animit.runAll(Animit(dialog._mask).queue({ opacity: 1 }).wait(this.delay).queue({ opacity: 0 }, {\n        duration: this.maskDuration,\n        timing: this.maskTiming\n      }), Animit(dialog._sheet, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(0, ' + this.liftAmount + ', 0)' }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n  }]);\n  return IOSActionSheetAnimator;\n}(ActionSheetAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar BaseDialogElement = function (_BaseElement) {\n  inherits(BaseDialogElement, _BaseElement);\n  createClass(BaseDialogElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_toggleStyle',\n    value: function _toggleStyle(shouldShow) {\n      this.style.display = shouldShow ? 'block' : 'none';\n    }\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }]);\n\n  function BaseDialogElement() {\n    classCallCheck(this, BaseDialogElement);\n\n    var _this = possibleConstructorReturn(this, (BaseDialogElement.__proto__ || Object.getPrototypeOf(BaseDialogElement)).call(this));\n\n    if (_this.constructor === BaseDialogElement) {\n      util$1.throwAbstract();\n    }\n\n    _this._visible = false;\n    _this._doorLock = new DoorLock();\n    _this._cancel = _this._cancel.bind(_this);\n    _this._selfCamelName = util$1.camelize(_this.tagName.slice(4));\n    _this._defaultDBB = function (e) {\n      return _this.cancelable ? _this._cancel() : e.callParentHandler();\n    };\n    _this._animatorFactory = _this._updateAnimatorFactory();\n    return _this;\n  }\n\n  createClass(BaseDialogElement, [{\n    key: '_cancel',\n    value: function _cancel() {\n      var _this2 = this;\n\n      if (this.cancelable && !this._running) {\n        this._running = true;\n        this.hide().then(function () {\n          _this2._running = false;\n          util$1.triggerElementEvent(_this2, 'dialog-cancel');\n        }, function () {\n          return _this2._running = false;\n        });\n      }\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this._setVisible.apply(this, [true].concat(args));\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this._setVisible.apply(this, [false].concat(args));\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return this._setVisible.apply(this, [!this.visible].concat(args));\n    }\n  }, {\n    key: '_setVisible',\n    value: function _setVisible(shouldShow) {\n      var _util$triggerElementE,\n          _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var action = shouldShow ? 'show' : 'hide';\n\n      options = _extends({}, options);\n      options.animationOptions = util$1.extend(options.animationOptions || {}, AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options')));\n\n      var canceled = false;\n      util$1.triggerElementEvent(this, 'pre' + action, (_util$triggerElementE = {}, defineProperty(_util$triggerElementE, this._selfCamelName, this), defineProperty(_util$triggerElementE, 'cancel', function cancel() {\n        return canceled = true;\n      }), _util$triggerElementE));\n\n      if (canceled) {\n        return Promise.reject('Canceled in pre' + action + ' event.');\n      }\n\n      return new Promise(function (resolve) {\n        _this3._doorLock.waitUnlock(function () {\n          var unlock = _this3._doorLock.lock();\n          var animator = _this3._animatorFactory.newAnimator(options);\n\n          shouldShow && _this3._toggleStyle(true, options);\n          _this3._visible = shouldShow;\n          util$1.iosPageScrollFix(shouldShow);\n\n          contentReady(_this3, function () {\n            animator[action](_this3, function () {\n              !shouldShow && _this3._toggleStyle(false, options);\n\n              unlock();\n\n              util$1.propagateAction(_this3, '_' + action);\n              util$1.triggerElementEvent(_this3, 'post' + action, defineProperty({}, _this3._selfCamelName, _this3)); // postshow posthide\n\n              if (options.callback instanceof Function) {\n                options.callback(_this3);\n              }\n\n              resolve(_this3);\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: '_updateMask',\n    value: function _updateMask() {\n      var _this4 = this;\n\n      contentReady(this, function () {\n        if (_this4._mask && _this4.getAttribute('mask-color')) {\n          _this4._mask.style.backgroundColor = _this4.getAttribute('mask-color');\n        }\n      });\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this5 = this;\n\n      if (typeof this._defaultDBB === 'function') {\n        this.onDeviceBackButton = this._defaultDBB.bind(this);\n      }\n\n      contentReady(this, function () {\n        if (_this5._mask) {\n          _this5._mask.addEventListener('click', _this5._cancel, false);\n        }\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      if (this._backButtonHandler) {\n        this._backButtonHandler.destroy();\n        this._backButtonHandler = null;\n      }\n\n      if (this._mask) {\n        this._mask.removeEventListener('click', this._cancel, false);\n      }\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, this._scheme);\n          break;\n        case 'animation':\n          this._animatorFactory = this._updateAnimatorFactory();\n          break;\n        case 'mask-color':\n          this._updateMask();\n          break;\n      }\n    }\n  }, {\n    key: 'onDeviceBackButton',\n    get: function get$$1() {\n      return this._backButtonHandler;\n    },\n    set: function set$$1(callback) {\n      if (this._backButtonHandler) {\n        this._backButtonHandler.destroy();\n      }\n\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n    }\n  }, {\n    key: 'visible',\n    get: function get$$1() {\n      return this._visible;\n    }\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }, {\n    key: 'cancelable',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'cancelable', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('cancelable');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'animation', 'mask-color'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['preshow', 'postshow', 'prehide', 'posthide', 'dialog-cancel'];\n    }\n  }]);\n  return BaseDialogElement;\n}(BaseElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme = {\n  '.action-sheet': 'action-sheet--*',\n  '.action-sheet-mask': 'action-sheet-mask--*',\n  '.action-sheet-title': 'action-sheet-title--*'\n};\n\nvar _animatorDict = {\n  'default': function _default() {\n    return platform.isAndroid() ? MDActionSheetAnimator : IOSActionSheetAnimator;\n  },\n  'none': ActionSheetAnimator\n};\n\n/**\n * @element ons-action-sheet\n * @category dialog\n * @description\n *   [en]\n *     Action/bottom sheet that is displayed on top of current screen.\n *\n *     This element can either be attached directly to the `<body>` or dynamically created from a template using the `ons.createElement(template, { append: true })` utility function and the `<template>` tag.\n *\n *     The action sheet is useful for displaying a list of options and asking the user to make a decision. A `ons-action-sheet-button` is provided for this purpose, although it can contain any type of content.\n *\n *     It will automatically be displayed as Material Design (bottom sheet) when running on an Android device.\n *   [/en]\n *   [ja]\n *     アクションシート、もしくはボトムシートを現在のスクリーン上に表示します。\n *\n *     この要素は、`<body>`要素に直接アタッチされるか、もしくは`ons.createElement(template, { append: true })`と`<template>`タグを使ってテンプレートから動的に生成されます。\n *\n *     アクションシートは、選択肢のリストを表示してユーザーに尋ねるのに便利です。`ons-action-sheet-button`は、この要素の中に置くために提供されていますが、それ以外にも他のどのような要素を含むことができます。\n *\n *     Androidデバイスで実行されるときには、自動的にマテリアルデザイン(ボトムシート)として表示されます。\n *   [/ja]\n * @modifier material\n *   [en]Display a Material Design bottom sheet.[/en]\n *   [ja]マテリアルデザインのボトムシートを表示します。[/ja]\n * @tutorial vanilla/reference/action-sheet\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @seealso ons-popover\n *   [en]`<ons-popover>` component[/en]\n *   [ja]ons-popoverコンポーネント[/ja]\n * @seealso ons-modal\n *   [en]`<ons-modal>` component[/en]\n *   [ja]ons-modalコンポーネント[/ja]\n * @example\n * <ons-action-sheet id=\"sheet\">\n *   <ons-action-sheet-button>Label</ons-action-sheet-button>\n *   <ons-action-sheet-button>Label</ons-action-sheet-button>\n * </ons-action-sheet>\n *\n * <script>\n *   document.getElementById('sheet').show();\n * </script>\n */\n\nvar ActionSheetElement = function (_BaseDialogElement) {\n  inherits(ActionSheetElement, _BaseDialogElement);\n\n  /**\n   * @event preshow\n   * @description\n   * [en]Fired just before the action sheet is displayed.[/en]\n   * [ja]ダイアログが表示される直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.actionSheet\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the action sheet from being shown.[/en]\n   *   [ja]この関数を実行すると、ダイアログの表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event postshow\n   * @description\n   * [en]Fired just after the action sheet is displayed.[/en]\n   * [ja]ダイアログが表示された直後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.actionSheet\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event prehide\n   * @description\n   * [en]Fired just before the action sheet is hidden.[/en]\n   * [ja]ダイアログが隠れる直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.actionSheet\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the action sheet from being hidden.[/en]\n   *   [ja]この関数を実行すると、ダイアログの非表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event posthide\n   * @description\n   * [en]Fired just after the action sheet is hidden.[/en]\n   * [ja]ダイアログが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.actionSheet\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute title\n   * @type {String}\n   * @description\n   *  [en]Optional title of the action sheet. A new element will be created containing this string.[/en]\n   *  [ja]アクションシートのタイトルを指定します。ここで指定した文字列を含む新しい要素が作成されます。[/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the action sheet.[/en]\n   *  [ja]ダイアログの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute cancelable\n   * @description\n   *  [en]If this attribute is set the action sheet can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n   *  [ja]この属性が設定されると、アクションシートの背景やAndroidデバイスのバックボタンを推すことでアクションシートが閉じるようになります。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *  [en]If this attribute is set the action sheet is disabled.[/en]\n   *  [ja]この属性がある時、ダイアログはdisabled状態になります。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the action sheet. Can be either `\"none\"` or `\"default\"`.[/en]\n   *  [ja]ダイアログを表示する際のアニメーション名を指定します。\"none\"もしくは\"default\"を指定できます。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]\n   */\n\n  /**\n   * @attribute mask-color\n   * @type {String}\n   * @default rgba(0, 0, 0, 0.2)\n   * @description\n   *  [en]Color of the background mask. Default is `\"rgba(0, 0, 0, 0.2)\"`.[/en]\n   *  [ja]背景のマスクの色を指定します。\"rgba(0, 0, 0, 0.2)\"がデフォルト値です。[/ja]\n   */\n\n  function ActionSheetElement() {\n    classCallCheck(this, ActionSheetElement);\n\n    var _this = possibleConstructorReturn(this, (ActionSheetElement.__proto__ || Object.getPrototypeOf(ActionSheetElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ActionSheetElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict,\n        baseClass: ActionSheetAnimator,\n        baseClassName: 'ActionSheetAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.style.display = 'none';\n      this.style.zIndex = 10001;\n\n      /* Expected result:\n       *   <ons-action-sheet>\n       *     <div class=\"action-sheet-mask\"></div>\n       *     <div class=\"action-sheet\">\n       *       <div class=\"action-sheet-title></div>\n       *       ...\n       *     </div>\n       *   </ons-action-sheet>\n       */\n\n      if (!this._sheet) {\n        var sheet = document.createElement('div');\n        sheet.classList.add('action-sheet');\n\n        while (this.firstChild) {\n          sheet.appendChild(this.firstChild);\n        }\n\n        this.appendChild(sheet);\n      }\n\n      if (!this._title && this.hasAttribute('title')) {\n        var title = document.createElement('div');\n        title.innerHTML = this.getAttribute('title');\n        title.classList.add('action-sheet-title');\n        this._sheet.insertBefore(title, this._sheet.firstChild);\n      }\n\n      if (!this._mask) {\n        var mask = document.createElement('div');\n        mask.classList.add('action-sheet-mask');\n        this.insertBefore(mask, this.firstChild);\n      }\n\n      this._sheet.style.zIndex = 20001;\n      this._mask.style.zIndex = 20000;\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n  }, {\n    key: '_updateTitle',\n    value: function _updateTitle() {\n      if (this._title) {\n        this._title.innerHTML = this.getAttribute('title');\n      }\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n    /**\n     * @method show\n     * @signature show([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"slide\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"slide\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the action sheet has been revealed.[/en]\n     *   [ja]ダイアログが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *  [en]Show the action sheet.[/en]\n     *  [ja]ダイアログを開きます。[/ja]\n     * @return {Promise} Resolves to the displayed element.\n     */\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"slide\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"slide\"のいずれかを指定できます。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This functions is called after the action sheet has been hidden.[/en]\n     *   [ja]ダイアログが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Hide the action sheet.[/en]\n     *   [ja]ダイアログを閉じます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja]隠れた要素を解決します。[/ja]\n     */\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the action sheet is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the action sheet is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property cancelable\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the action sheet is cancelable or not. A cancelable action sheet can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n     *   [ja]アクションシートがキャンセル可能かどうかを設定します。キャンセル可能なアクションシートは、背景をタップしたりAndroidデバイスのバックボタンを推すことで閉じるようになります。[/ja]\n     */\n\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'title') {\n        this._updateTitle();\n      } else {\n        get(ActionSheetElement.prototype.__proto__ || Object.getPrototypeOf(ActionSheetElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n      }\n    }\n\n    /**\n     * @param {String} name\n     * @param {ActionSheetAnimator} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme;\n    }\n  }, {\n    key: '_mask',\n    get: function get$$1() {\n      return util$1.findChild(this, '.action-sheet-mask');\n    }\n  }, {\n    key: '_sheet',\n    get: function get$$1() {\n      return util$1.findChild(this, '.action-sheet');\n    }\n  }, {\n    key: '_title',\n    get: function get$$1() {\n      return this.querySelector('.action-sheet-title');\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof ActionSheetAnimator)) {\n        util$1.throwAnimator('ActionSheet');\n      }\n      _animatorDict[name] = Animator;\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(ActionSheetElement.__proto__ || Object.getPrototypeOf(ActionSheetElement), 'observedAttributes', this)), ['title']);\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict;\n    }\n  }, {\n    key: 'ActionSheetAnimator',\n    get: function get$$1() {\n      return ActionSheetAnimator;\n    }\n  }]);\n  return ActionSheetElement;\n}(BaseDialogElement);\n\nonsElements.ActionSheet = ActionSheetElement;\ncustomElements.define('ons-action-sheet', ActionSheetElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar BaseButtonElement = function (_BaseElement) {\n  inherits(BaseButtonElement, _BaseElement);\n  createClass(BaseButtonElement, [{\n    key: '_scheme',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_rippleOpt',\n    get: function get$$1() {\n      return [this];\n    }\n  }]);\n\n  function BaseButtonElement() {\n    classCallCheck(this, BaseButtonElement);\n\n    var _this = possibleConstructorReturn(this, (BaseButtonElement.__proto__ || Object.getPrototypeOf(BaseButtonElement)).call(this));\n\n    if (_this.constructor === BaseButtonElement) {\n      util$1.throwAbstract();\n    }\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(BaseButtonElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.classList.add(this._defaultClassName);\n\n      if (!this._icon && this.hasAttribute('icon')) {\n        util$1.checkMissingImport('Icon');\n        var icon = util$1.createElement('<ons-icon icon=\"' + this.getAttribute('icon') + '\"></ons-icon>');\n        icon.classList.add(this._defaultClassName.replace('button', 'icon'));\n        this.insertBefore(icon, this.firstChild);\n      }\n\n      this._updateRipple();\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n  }, {\n    key: '_updateIcon',\n    value: function _updateIcon() {\n      if (this._icon) {\n        this._icon.setAttribute('icon', this.getAttribute('icon'));\n      }\n    }\n  }, {\n    key: '_updateRipple',\n    value: function _updateRipple() {\n      this._rippleOpt && util$1.updateRipple.apply(util$1, toConsumableArray(this._rippleOpt));\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, this._defaultClassName, this._scheme);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, this._scheme);\n          break;\n        case 'icon':\n          this._updateIcon();\n          break;\n        case 'ripple':\n          this.classList.contains(this._defaultClassName) && this._updateRipple();\n          break;\n      }\n    }\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }, {\n    key: '_icon',\n    get: function get$$1() {\n      return util$1.findChild(this, 'ons-icon');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class', 'icon', 'ripple'];\n    }\n  }]);\n  return BaseButtonElement;\n}(BaseElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-action-sheet-button\n * @category dialog\n * @modifier destructive\n *   [en]Shows a \"destructive\" button (only for iOS).[/en]\n *   [ja]\"destructive\"なボタンを表示します(iOSでのみ有効)。[/ja]\n * @description\n *   [en]Component that represent each button of the action sheet.[/en]\n *   [ja]アクションシートに表示される各ボタンを表現するコンポーネントです。[/ja]\n * @seealso ons-action-sheet\n *   [en]The `<ons-action-sheet>` component[/en]\n *   [ja]ons-action-sheetコンポーネント[/ja]\n * @seealso ons-list-item\n *   [en]The `<ons-list-item>` component[/en]\n *   [ja]ons-list-itemコンポーネント[/ja]\n * @seealso ons-icon\n *   [en]The `<ons-icon>` component[/en]\n *   [ja]ons-iconコンポーネント[/ja]\n * @tutorial vanilla/Reference/action-sheet\n * @guide appsize.html#removing-icon-packs [en]Removing icon packs.[/en][ja][/ja]\n * @guide faq.html#how-can-i-use-custom-icon-packs [en]Adding custom icon packs.[/en][ja][/ja]\n * @modifier material\n *   [en]Display a Material Design action sheet button.[/en]\n *   [ja]マテリアルデザインのアクションシート用のボタンを表示します。[/ja]\n * @example\n * <ons-action-sheet id=\"sheet\">\n *   <ons-action-sheet-button>Label</ons-action-sheet-button>\n *   <ons-action-sheet-button>Label</ons-action-sheet-button>\n * </ons-action-sheet>\n *\n * <script>\n *   document.getElementById('sheet').show();\n * </script>\n */\n\nvar ActionSheetButtonElement = function (_BaseButtonElement) {\n  inherits(ActionSheetButtonElement, _BaseButtonElement);\n\n  function ActionSheetButtonElement() {\n    classCallCheck(this, ActionSheetButtonElement);\n    return possibleConstructorReturn(this, (ActionSheetButtonElement.__proto__ || Object.getPrototypeOf(ActionSheetButtonElement)).apply(this, arguments));\n  }\n\n  createClass(ActionSheetButtonElement, [{\n    key: '_scheme',\n\n\n    /**\n     * @attribute icon\n     * @type {String}\n     * @description\n     *  [en]Creates an `ons-icon` component with this string. Only visible on Android. Check [See also](#seealso) section for more information.[/en]\n     *  [ja]`ons-icon`コンポーネントを悪性します。Androidでのみ表示されます。[/ja]\n     */\n\n    /**\n     * @attribute modifier\n     * @type {String}\n     * @description\n     *   [en]The appearance of the action sheet button.[/en]\n     *   [ja]アクションシートボタンの見た目を設定します。[/ja]\n     */\n\n    get: function get$$1() {\n      return {\n        '': 'action-sheet-button--*',\n        '.action-sheet-icon': 'action-sheet-icon--*'\n      };\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'action-sheet-button';\n    }\n  }, {\n    key: '_rippleOpt',\n    get: function get$$1() {\n      return undefined;\n    }\n  }]);\n  return ActionSheetButtonElement;\n}(BaseButtonElement);\n\nonsElements.ActionSheetButton = ActionSheetButtonElement;\ncustomElements.define('ons-action-sheet-button', ActionSheetButtonElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar AlertDialogAnimator = function (_BaseAnimator) {\n  inherits(AlertDialogAnimator, _BaseAnimator);\n\n  function AlertDialogAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, AlertDialogAnimator);\n    return possibleConstructorReturn(this, (AlertDialogAnimator.__proto__ || Object.getPrototypeOf(AlertDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} dialog\n   * @param {Function} done\n   */\n\n\n  createClass(AlertDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, done) {\n      done();\n    }\n\n    /**\n     * @param {HTMLElement} dialog\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, done) {\n      done();\n    }\n  }]);\n  return AlertDialogAnimator;\n}(BaseAnimator);\n\n/**\n * Android style animator for alert dialog.\n */\nvar AndroidAlertDialogAnimator = function (_AlertDialogAnimator) {\n  inherits(AndroidAlertDialogAnimator, _AlertDialogAnimator);\n\n  function AndroidAlertDialogAnimator() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$timing = _ref2.timing,\n        timing = _ref2$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref2$timing,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === undefined ? 0.2 : _ref2$duration,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay;\n\n    classCallCheck(this, AndroidAlertDialogAnimator);\n    return possibleConstructorReturn(this, (AndroidAlertDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(AndroidAlertDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 0 }, { opacity: 1 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0) scale3d(.9, .9, 1)', opacity: 0 }, { transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)', opacity: 1 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)', opacity: 1 }, { transform: 'translate3d(-50%, -50%, 0) scale3d(.9, .9, 1)', opacity: 0 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return AndroidAlertDialogAnimator;\n}(AlertDialogAnimator);\n\n/**\n * iOS style animator for alert dialog.\n */\nvar IOSAlertDialogAnimator = function (_AlertDialogAnimator2) {\n  inherits(IOSAlertDialogAnimator, _AlertDialogAnimator2);\n\n  function IOSAlertDialogAnimator() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$timing = _ref3.timing,\n        timing = _ref3$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref3$timing,\n        _ref3$duration = _ref3.duration,\n        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration,\n        _ref3$delay = _ref3.delay,\n        delay = _ref3$delay === undefined ? 0 : _ref3$delay;\n\n    classCallCheck(this, IOSAlertDialogAnimator);\n    return possibleConstructorReturn(this, (IOSAlertDialogAnimator.__proto__ || Object.getPrototypeOf(IOSAlertDialogAnimator)).call(this, { duration: duration, timing: timing, delay: delay }));\n  }\n\n  /*\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(IOSAlertDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 0 }, { opacity: 1 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0) scale3d(1.3, 1.3, 1)', opacity: 0 }, { transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)', opacity: 1 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(dialog._dialog, this.def).default({ opacity: 1 }, { opacity: 0 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return IOSAlertDialogAnimator;\n}(AlertDialogAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$1 = {\n  '.alert-dialog': 'alert-dialog--*',\n  '.alert-dialog-container': 'alert-dialog-container--*',\n  '.alert-dialog-title': 'alert-dialog-title--*',\n  '.alert-dialog-content': 'alert-dialog-content--*',\n  '.alert-dialog-footer': 'alert-dialog-footer--*',\n  '.alert-dialog-footer--rowfooter': 'alert-dialog-footer--rowfooter--*',\n  '.alert-dialog-button--rowfooter': 'alert-dialog-button--rowfooter--*',\n  '.alert-dialog-button--primal': 'alert-dialog-button--primal--*',\n  '.alert-dialog-button': 'alert-dialog-button--*',\n  'ons-alert-dialog-button': 'alert-dialog-button--*',\n  '.alert-dialog-mask': 'alert-dialog-mask--*',\n  '.text-input': 'text-input--*'\n};\n\nvar _animatorDict$1 = {\n  'none': AlertDialogAnimator,\n  'default': function _default() {\n    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;\n  },\n  'fade': function fade() {\n    return platform.isAndroid() ? AndroidAlertDialogAnimator : IOSAlertDialogAnimator;\n  }\n};\n\n/**\n * @element ons-alert-dialog\n * @category dialog\n * @description\n *   [en]\n *     Alert dialog that is displayed on top of the current screen. Useful for displaying questions, warnings or error messages to the user. The title, content and buttons can be easily customized and it will automatically switch style based on the platform.\n *\n *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createAlertDialog(template)` utility function and the `<template>` tag.\n *   [/en]\n *   [ja]\n *     現在のスクリーンの上に表示するアラートダイアログです。ユーザに対する問いかけ、警告、エラーメッセージを表示するのに利用できます。タイトルやコンテンツやボタンは簡単にカスタマイズでき、実行しているプラットフォームに併せてスタイルが自動的に切り替わります。\n *   [/ja]\n * @codepen Qwwxyp\n * @tutorial vanilla/Reference/alert-dialog\n * @modifier material\n *   [en]Material Design style[/en]\n *   [ja]マテリアルデザインのスタイル[/ja]\n * @modifier rowfooter\n *   [en]Horizontally aligns the footer buttons.[/en]\n *   [ja]フッターの複数のボタンを水平に配置[/ja]\n * @seealso ons-dialog\n *   [en]ons-dialog component[/en]\n *   [ja]ons-dialogコンポーネント[/ja]\n * @seealso ons-popover\n *   [en]ons-popover component[/en]\n *   [ja]ons-dialogコンポーネント[/ja]\n * @seealso ons.notification\n *   [en]Using ons.notification utility functions.[/en]\n *   [ja]アラートダイアログを表示するには、ons.notificationオブジェクトのメソッドを使うこともできます。[/ja]\n * @example\n * <ons-alert-dialog id=\"alert-dialog\">\n *   <div class=\"alert-dialog-title\">Warning!</div>\n *   <div class=\"alert-dialog-content\">\n *     An error has occurred!\n *   </div>\n *   <div class=\"alert-dialog-footer\">\n *     <button id=\"alert-dialog-button\" class=\"alert-dialog-button\">OK</button>\n *   </div>\n * </ons-alert-dialog>\n * <script>\n *   document.getElementById('alert-dialog').show();\n * </script>\n */\n\nvar AlertDialogElement = function (_BaseDialogElement) {\n  inherits(AlertDialogElement, _BaseDialogElement);\n\n  /**\n   * @event preshow\n   * @description\n   *   [en]Fired just before the alert dialog is displayed.[/en]\n   *   [ja]アラートダイアログが表示される直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.alertDialog\n   *   [en]Alert dialog object.[/en]\n   *   [ja]アラートダイアログのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute to stop the dialog from showing.[/en]\n   *   [ja]この関数を実行すると、アラートダイアログの表示を止めます。[/ja]\n   */\n\n  /**\n   * @event postshow\n   * @description\n   *   [en]Fired just after the alert dialog is displayed.[/en]\n   *   [ja]アラートダイアログが表示された直後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.alertDialog\n   *   [en]Alert dialog object.[/en]\n   *   [ja]アラートダイアログのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event prehide\n   * @description\n   *   [en]Fired just before the alert dialog is hidden.[/en]\n   *   [ja]アラートダイアログが隠れる直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.alertDialog\n   *   [en]Alert dialog object.[/en]\n   *   [ja]アラートダイアログのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute to stop the dialog from hiding.[/en]\n   *   [ja]この関数を実行すると、アラートダイアログが閉じようとするのを止めます。[/ja]\n   */\n\n  /**\n   * @event posthide\n   * @description\n   * [en]Fired just after the alert dialog is hidden.[/en]\n   * [ja]アラートダイアログが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.alertDialog\n   *   [en]Alert dialog object.[/en]\n   *   [ja]アラートダイアログのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the dialog.[/en]\n   *  [ja]ダイアログの見た目を指定します。[/ja]\n   */\n\n  /**\n   * @attribute cancelable\n   * @description\n   *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n   *  [ja]この属性を設定すると、ダイアログの背景をタップしたりAndroidデバイスのバックボタンを押すとダイアログが閉じるようになります。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *  [en]If this attribute is set the dialog is disabled.[/en]\n   *  [ja]この属性がある時、アラートダイアログはdisabled状態になります。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the dialog. Can be either `\"none\"` or `\"default\"`.[/en]\n   *  [ja]ダイアログを表示する際のアニメーション名を指定します。デフォルトでは\"none\"か\"default\"が指定できます。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\n   */\n\n  /**\n   * @attribute mask-color\n   * @type {String}\n   * @default rgba(0, 0, 0, 0.2)\n   * @description\n   *  [en]Color of the background mask. Default is \"rgba(0, 0, 0, 0.2)\".[/en]\n   *  [ja]背景のマスクの色を指定します。\"rgba(0, 0, 0, 0.2)\"がデフォルト値です。[/ja]\n   */\n\n  function AlertDialogElement() {\n    classCallCheck(this, AlertDialogElement);\n\n    var _this = possibleConstructorReturn(this, (AlertDialogElement.__proto__ || Object.getPrototypeOf(AlertDialogElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(AlertDialogElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict$1,\n        baseClass: AlertDialogAnimator,\n        baseClassName: 'AlertDialogAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.style.display = 'none';\n      this.style.zIndex = 10001;\n\n      /**\n       * Expected result after compile:\n       *\n       * <ons-alert-dialog style=\"none\">\n       *   <div class=\"alert-dialog-mask\"></div>\n       *   <div class=\"alert-dialog\">\n       *     <div class=\"alert-dialog-container\">...</div>\n       *   </div>\n       * </ons-alert-dialog>\n       */\n\n      var content = document.createDocumentFragment();\n\n      if (!this._mask && !this._dialog) {\n        while (this.firstChild) {\n          content.appendChild(this.firstChild);\n        }\n      }\n\n      if (!this._mask) {\n        var mask = document.createElement('div');\n        mask.classList.add('alert-dialog-mask');\n        this.insertBefore(mask, this.children[0]);\n      }\n\n      if (!this._dialog) {\n        var dialog = document.createElement('div');\n        dialog.classList.add('alert-dialog');\n        this.insertBefore(dialog, null);\n      }\n\n      if (!util$1.findChild(this._dialog, '.alert-dialog-container')) {\n        var container = document.createElement('div');\n        container.classList.add('alert-dialog-container');\n        this._dialog.appendChild(container);\n      }\n\n      this._dialog.children[0].appendChild(content);\n\n      this._dialog.style.zIndex = 20001;\n      this._mask.style.zIndex = 20000;\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property cancelable\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n     *   [ja]そのダイアログがキャンセル可能かどうかを表します。キャンセル可能なダイアログは、背景をタップするかAndroidデバイスのバックボタンを押すことで閉じることが出来るようになります。[/ja]\n     */\n\n    /**\n     * @method show\n     * @signature show([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクトです。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"fade\"` and `\"none\"`.[/en]\n     *   [ja]アニメーション名を指定します。指定できるのは、\"fade\", \"none\"のいずれかです。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]\n     * @param {Function} [options.callback]\n     *   [en]Function to execute after the dialog has been revealed.[/en]\n     *   [ja]ダイアログが表示され終わった時に呼び出されるコールバックを指定します。[/ja]\n     * @description\n     *   [en]Show the alert dialog.[/en]\n     *   [ja]ダイアログを表示します。[/ja]\n     * @return {Promise}\n     *   [en]A `Promise` object that resolves to the displayed element.[/en]\n     *   [ja]表示される要素を解決する`Promise`オブジェクトを返します。[/ja]\n     */\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"fade\"` and `\"none\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"fade\", \"none\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g.  <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code>[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. <code>{duration: 0.2, delay: 0.4, timing: 'ease-in'}</code> [/ja]\n     * @param {Function} [options.callback]\n     *   [en]Function to execute after the dialog has been hidden.[/en]\n     *   [ja]このダイアログが閉じた時に呼び出されるコールバックを指定します。[/ja]\n     * @description\n     *   [en]Hide the alert dialog.[/en]\n     *   [ja]ダイアログを閉じます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja]隠れた要素を解決する`Promise`オブジェクトを返します。[/ja]\n     */\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the dialog is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n    /**\n     * @param {String} name\n     * @param {DialogAnimator} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$1;\n    }\n\n    /**\n     * @return {Element}\n     */\n\n  }, {\n    key: '_mask',\n    get: function get$$1() {\n      return util$1.findChild(this, '.alert-dialog-mask');\n    }\n\n    /**\n     * @return {Element}\n     */\n\n  }, {\n    key: '_dialog',\n    get: function get$$1() {\n      return util$1.findChild(this, '.alert-dialog');\n    }\n\n    /**\n     * @return {Element}\n     */\n\n  }, {\n    key: '_titleElement',\n    get: function get$$1() {\n      return util$1.findChild(this._dialog.children[0], '.alert-dialog-title');\n    }\n\n    /**\n     * @return {Element}\n     */\n\n  }, {\n    key: '_contentElement',\n    get: function get$$1() {\n      return util$1.findChild(this._dialog.children[0], '.alert-dialog-content');\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof AlertDialogAnimator)) {\n        util$1.throwAnimator('AlertDialog');\n      }\n      _animatorDict$1[name] = Animator;\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$1;\n    }\n  }, {\n    key: 'AlertDialogAnimator',\n    get: function get$$1() {\n      return AlertDialogAnimator;\n    }\n  }]);\n  return AlertDialogElement;\n}(BaseDialogElement);\n\nonsElements.AlertDialog = AlertDialogElement;\ncustomElements.define('ons-alert-dialog', AlertDialogElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-alert-dialog-button\n * @modifier material\n *   [en]Material Design alert-dialog button.[/en]\n *   [ja]マテリアルデザインのボタンを表示します。[/ja]\n * @description\n *   [en][/en]\n *   [ja][/ja]\n * @seealso ons-alert-dialog\n *   [en]The `<ons-alert-dialog>` component displays a alert dialog.[/en]\n *   [ja]ons-alert-dialogコンポーネント[/ja]\n * @example\n *  <ons-alert-dialog>\n *    <div class=\"alert-dialog-title\">Warning!</div>\n *    <div class=\"alert-dialog-content\">\n *      An error has occurred!\n *    </div>\n *    <div class=\"alert-dialog-footer\">\n *      <alert-dialog-button onclick=\"app.close()\">Cancel</alert-dialog-button>\n *      <alert-dialog-button class=\"alert-dialog-button\" onclick=\"app.close()\">OK</alert-dialog-button>\n *    </div>\n *  </ons-alert-dialog>\n */\n\nvar AlertDialogButtonElement = function (_BaseButtonElement) {\n  inherits(AlertDialogButtonElement, _BaseButtonElement);\n\n  function AlertDialogButtonElement() {\n    classCallCheck(this, AlertDialogButtonElement);\n    return possibleConstructorReturn(this, (AlertDialogButtonElement.__proto__ || Object.getPrototypeOf(AlertDialogButtonElement)).apply(this, arguments));\n  }\n\n  createClass(AlertDialogButtonElement, [{\n    key: '_scheme',\n\n\n    /**\n     * @attribute modifier\n     * @type {String}\n     * @description\n     *   [en]The appearance of the button.[/en]\n     *   [ja]ボタンの表現を指定します。[/ja]\n     */\n\n    /**\n     * @attribute disabled\n     * @description\n     *   [en]Specify if button should be disabled.[/en]\n     *   [ja]ボタンを無効化する場合は指定してください。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    get: function get$$1() {\n      return { '': 'alert-dialog-button--*' };\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'alert-dialog-button';\n    }\n  }, {\n    key: '_rippleOpt',\n    get: function get$$1() {\n      return [this, undefined, { 'modifier': 'light-gray' }];\n    }\n  }]);\n  return AlertDialogButtonElement;\n}(BaseButtonElement);\n\nonsElements.AlertDialogButton = AlertDialogButtonElement;\ncustomElements.define('ons-alert-dialog-button', AlertDialogButtonElement);\n\nvar iosBackButtonIcon = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"13px\\\" height=\\\"21px\\\" viewBox=\\\"0 0 13 21\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>ios-back-button-icon</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"toolbar-back-button\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"ios\\\" transform=\\\"translate(-34.000000, -30.000000)\\\">\\n            <polygon id=\\\"ios-back-button-icon\\\" points=\\\"34 40.5 44.5 30 46.5 32 38 40.5 46.5 49 44.5 51\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\\n\";\n\nvar mdBackButtonIcon = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<svg width=\\\"16px\\\" height=\\\"16px\\\" viewBox=\\\"0 0 16 16\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n    <title>md-back-button-icon</title>\\n    <desc>Created with Sketch.</desc>\\n    <defs></defs>\\n    <g id=\\\"toolbar-back-button\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill-rule=\\\"evenodd\\\">\\n        <g id=\\\"android\\\" transform=\\\"translate(-32.000000, -32.000000)\\\" fill-rule=\\\"nonzero\\\">\\n            <polygon id=\\\"md-back-button-icon\\\" points=\\\"48 39 35.83 39 41.42 33.41 40 32 32 40 40 48 41.41 46.59 35.83 41 48 41\\\"></polygon>\\n        </g>\\n    </g>\\n</svg>\\n\";\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName = 'back-button';\n\nvar scheme$2 = {\n  '': 'back-button--*',\n  '.back-button__icon': 'back-button--*__icon',\n  '.back-button__label': 'back-button--*__label'\n};\n\n/**\n * @element ons-back-button\n * @category navigation\n * @description\n *   [en]\n *     Back button component for `<ons-toolbar>`. Put it in the left part of the `<ons-toolbar>`.\n *\n *     It will find the parent `<ons-navigator>` element and pop a page when clicked. This behavior can be overriden by specifying the `onClick` property.\n *   [/en]\n *   [ja][/ja]\n * @codepen aHmGL\n * @tutorial vanilla/Reference/back-button\n * @modifier material\n *   [en]Material Design style[/en]\n *   [ja][/ja]\n * @seealso ons-toolbar\n *   [en]ons-toolbar component[/en]\n *   [ja]ons-toolbarコンポーネント[/ja]\n * @seealso ons-navigator\n *   [en]ons-navigator component[/en]\n *   [ja]ons-navigatorコンポーネント[/ja]\n * @example\n * <ons-toolbar>\n *   <div class=\"left\">\n *     <ons-back-button>Back</ons-back-button>\n *   </div>\n *   <div class=\"center\">\n *     Title\n *   <div>\n * </ons-toolbar>\n */\n\nvar BackButtonElement = function (_BaseElement) {\n  inherits(BackButtonElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the back button.[/en]\n   *  [ja]バックボタンの見た目を指定します。[/ja]\n   */\n\n  function BackButtonElement() {\n    classCallCheck(this, BackButtonElement);\n\n    var _this = possibleConstructorReturn(this, (BackButtonElement.__proto__ || Object.getPrototypeOf(BackButtonElement)).call(this));\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n\n    _this._options = {};\n    _this._boundOnClick = _this._onClick.bind(_this);\n    return _this;\n  }\n\n  createClass(BackButtonElement, [{\n    key: '_updateIcon',\n    value: function _updateIcon() {\n      var icon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : util$1.findChild(this, '.back-button__icon');\n\n      icon.innerHTML = autoStyle.getPlatform(this) === 'android' || util$1.hasModifier(this, 'material') ? mdBackButtonIcon : iosBackButtonIcon;\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.classList.add(defaultClassName);\n\n      if (!util$1.findChild(this, '.back-button__label')) {\n        var label = util$1.create('span.back-button__label');\n\n        while (this.childNodes[0]) {\n          label.appendChild(this.childNodes[0]);\n        }\n        this.appendChild(label);\n      }\n\n      if (!util$1.findChild(this, '.back-button__icon')) {\n        var icon = util$1.create('span.back-button__icon');\n        this._updateIcon(icon);\n\n        this.insertBefore(icon, this.children[0]);\n      }\n\n      util$1.updateRipple(this, undefined, { center: '', 'size': 'contain', 'background': 'transparent' });\n\n      ModifierUtil.initModifier(this, scheme$2);\n    }\n\n    /**\n     * @property options\n     * @type {Object}\n     * @description\n     *   [en]Options object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     */\n\n    /**\n     * @property options.animation\n     * @type {String}\n     * @description\n     *   [en]Animation name. Available animations are \"slide\", \"lift\", \"fade\" and \"none\".\n     *     These are platform based animations. For fixed animations, add \"-ios\" or \"-md\"\n     *     suffix to the animation name. E.g. \"lift-ios\", \"lift-md\". Defaults values are \"slide-ios\" and \"fade-md\".\n     *   [/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property options.animationOptions\n     * @type {String}\n     * @description\n     *   [en]Specify the animation's duration, delay and timing. E.g.  `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\n     */\n\n    /**\n     * @property options.callback\n     * @type {String}\n     * @description\n     *   [en]Function that is called when the transition has ended.[/en]\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\n     */\n\n  }, {\n    key: '_onClick',\n\n\n    /**\n     * @property onClick\n     * @type {Function}\n     * @description\n     *   [en]Used to override the default back button behavior.[/en]\n     *   [ja][/ja]\n     */\n    value: function _onClick() {\n      if (this.onClick) {\n        this.onClick.apply(this);\n      } else {\n        var navigator = util$1.findParent(this, 'ons-navigator');\n        if (navigator) {\n          navigator.popPage(this.options);\n        }\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this.addEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName, scheme$2);\n          break;\n\n        case 'modifier':\n          {\n            ModifierUtil.onModifierChanged(last, current, this, scheme$2) && this._updateIcon();\n            break;\n          }\n      }\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      this.style.display = 'inline-block';\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.style.display = 'none';\n    }\n  }, {\n    key: 'options',\n    get: function get$$1() {\n      return this._options;\n    },\n    set: function set$$1(object) {\n      this._options = object;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return BackButtonElement;\n}(BaseElement);\n\nonsElements.BackButton = BackButtonElement;\ncustomElements.define('ons-back-button', BackButtonElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$1 = 'bottom-bar';\nvar scheme$3 = { '': 'bottom-bar--*' };\n\n/**\n * @element ons-bottom-toolbar\n * @category page\n * @description\n *   [en]Toolbar component that is positioned at the bottom of the page. Since bottom toolbars are very versatile elements, `ons-bottom-toolbar` does not provide any specific layout syntax for its children. Modifiers or custom CSS must be used.[/en]\n *   [ja]ページ下部に配置されるツールバー用コンポーネントです。[/ja]\n * @modifier transparent\n *   [en]Make the toolbar transparent.[/en]\n *   [ja]ツールバーの背景を透明にして表示します。[/ja]\n * @modifier aligned\n *   [en]Vertically aligns its children and applies flexbox for block elements. `justify-content` CSS rule can be used to change horizontal align.[/en]\n *   [ja]ツールバーの背景を透明にして表示します。[/ja]\n * @seealso ons-toolbar [en]ons-toolbar component[/en][ja]ons-toolbarコンポーネント[/ja]\n * @example\n * <ons-bottom-toolbar>\n *   Content\n * </ons-bottom-toolbar>\n */\n\nvar BottomToolbarElement = function (_BaseElement) {\n  inherits(BottomToolbarElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the toolbar.[/en]\n   *   [ja]ツールバーの見た目の表現を指定します。[/ja]\n   */\n\n  function BottomToolbarElement() {\n    classCallCheck(this, BottomToolbarElement);\n\n    var _this = possibleConstructorReturn(this, (BottomToolbarElement.__proto__ || Object.getPrototypeOf(BottomToolbarElement)).call(this));\n\n    _this.classList.add(defaultClassName$1);\n    ModifierUtil.initModifier(_this, scheme$3);\n    return _this;\n  }\n\n  createClass(BottomToolbarElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$1, scheme$3);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$3);\n          break;\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return BottomToolbarElement;\n}(BaseElement);\n\nonsElements.BottomToolbar = BottomToolbarElement;\ncustomElements.define('ons-bottom-toolbar', BottomToolbarElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-button\n * @category form\n * @modifier outline\n *   [en]Button with outline and transparent background[/en]\n *   [ja]アウトラインを持ったボタンを表示します。[/ja]\n * @modifier light\n *   [en]Button that doesn't stand out.[/en]\n *   [ja]目立たないボタンを表示します。[/ja]\n * @modifier quiet\n *   [en]Button with no outline and or background..[/en]\n *   [ja]枠線や背景が無い文字だけのボタンを表示します。[/ja]\n * @modifier cta\n *   [en]Button that really stands out.[/en]\n *   [ja]目立つボタンを表示します。[/ja]\n * @modifier large\n *   [en]Large button that covers the width of the screen.[/en]\n *   [ja]横いっぱいに広がる大きなボタンを表示します。[/ja]\n * @modifier large--quiet\n *   [en]Large quiet button.[/en]\n *   [ja]横いっぱいに広がるquietボタンを表示します。[/ja]\n * @modifier large--cta\n *   [en]Large call to action button.[/en]\n *   [ja]横いっぱいに広がるctaボタンを表示します。[/ja]\n * @modifier material\n *   [en]Material Design button[/en]\n *   [ja]マテリアルデザインのボタン[/ja]\n * @modifier material--flat\n *   [en]Material Design flat button[/en]\n *   [ja]マテリアルデザインのフラットボタン[/ja]\n * @description\n *   [en]\n *     Button component. If you want to place a button in a toolbar, use `<ons-toolbar-button>` or `<ons-back-button>` instead.\n *\n *     Will automatically display as a Material Design button with a ripple effect on Android.\n *   [/en]\n *   [ja]ボタン用コンポーネント。ツールバーにボタンを設置する場合は、ons-toolbar-buttonもしくはons-back-buttonコンポーネントを使用します。[/ja]\n * @codepen hLayx\n * @tutorial vanilla/Reference/button\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\n * @example\n * <ons-button modifier=\"large--cta\">\n *   Tap Me\n * </ons-button>\n */\n\nvar ButtonElement = function (_BaseButtonElement) {\n  inherits(ButtonElement, _BaseButtonElement);\n\n  function ButtonElement() {\n    classCallCheck(this, ButtonElement);\n    return possibleConstructorReturn(this, (ButtonElement.__proto__ || Object.getPrototypeOf(ButtonElement)).apply(this, arguments));\n  }\n\n  createClass(ButtonElement, [{\n    key: '_scheme',\n\n\n    /**\n     * @attribute modifier\n     * @type {String}\n     * @description\n     *  [en]The appearance of the button.[/en]\n     *  [ja]ボタンの表現を指定します。[/ja]\n     */\n\n    /**\n     * @attribute ripple\n     * @description\n     *  [en]If this attribute is defined, the button will have a ripple effect.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @attribute disabled\n     * @description\n     *   [en]Specify if button should be disabled.[/en]\n     *   [ja]ボタンを無効化する場合は指定します。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the button is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    get: function get$$1() {\n      return { '': 'button--*' };\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'button';\n    }\n  }]);\n  return ButtonElement;\n}(BaseButtonElement);\n\nonsElements.Button = ButtonElement;\ncustomElements.define('ons-button', ButtonElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$2 = 'card';\nvar scheme$4 = {\n  '': 'card--*',\n  '.card__title': 'card--*__title',\n  '.card__content': 'card--*__content'\n};\n\n/**\n * @element ons-card\n * @category visual\n * @modifier material\n *   [en]A card with material design.[/en]\n *   [ja]リストの上下のボーダーが無いリストを表示します。[/ja]\n * @description\n *   [en]\n *    Component to create a card that displays some information.\n *\n *    The card may be composed by divs with specially prepared classes `title` and/or `content`. You can also add your own content as you please.[/en]\n *   [ja][/ja]\n * @tutorial vanilla/Reference/card\n * @example\n * <ons-card>\n *   <p>Some content</p>\n * </ons-card>\n */\n\nvar CardElement = function (_BaseElement) {\n  inherits(CardElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the card.[/en]\n   *   [ja]リストの表現を指定します。[/ja]\n   */\n\n  function CardElement() {\n    classCallCheck(this, CardElement);\n\n    var _this = possibleConstructorReturn(this, (CardElement.__proto__ || Object.getPrototypeOf(CardElement)).call(this));\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(CardElement, [{\n    key: '_compile',\n    value: function _compile() {\n      for (var i = 0; i < this.children.length; i++) {\n        var el = this.children[i];\n\n        if (el.classList.contains('title')) {\n          el.classList.add('card__title');\n          \n        } else if (el.classList.contains('content')) {\n          el.classList.add('card__content');\n          \n        }\n      }\n\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$2);\n      ModifierUtil.initModifier(this, scheme$4);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$2, scheme$4);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$4);\n          break;\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return CardElement;\n}(BaseElement);\n\nonsElements.Card = CardElement;\ncustomElements.define('ons-card', CardElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$5 = { '': 'carousel-item--*' };\n\n/**\n * @element ons-carousel-item\n * @category carousel\n * @description\n *   [en]\n *     Carousel item component. Used as a child of the `<ons-carousel>` element.\n *   [/en]\n *   [ja][/ja]\n * @codepen xbbzOQ\n * @tutorial vanilla/Reference/carousel\n * @seealso ons-carousel\n *   [en]`<ons-carousel>` components[/en]\n *   [ja]<ons-carousel>コンポーネント[/ja]\n * @example\n * <ons-carousel style=\"width: 100%; height: 200px\">\n *   <ons-carousel-item>\n *    ...\n *   </ons-carousel-item>\n *   <ons-carousel-item>\n *    ...\n *   </ons-carousel-item>\n * </ons-carousel>\n */\n\nvar CarouselItemElement = function (_BaseElement) {\n  inherits(CarouselItemElement, _BaseElement);\n\n  function CarouselItemElement() {\n    classCallCheck(this, CarouselItemElement);\n\n    var _this = possibleConstructorReturn(this, (CarouselItemElement.__proto__ || Object.getPrototypeOf(CarouselItemElement)).call(this));\n\n    _this.style.width = '100%';\n    ModifierUtil.initModifier(_this, scheme$5);\n    return _this;\n  }\n\n  createClass(CarouselItemElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'modifier') {\n        return ModifierUtil.onModifierChanged(last, current, this, scheme$5);\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier'];\n    }\n  }]);\n  return CarouselItemElement;\n}(BaseElement);\n\nonsElements.CarouselItem = CarouselItemElement;\ncustomElements.define('ons-carousel-item', CarouselItemElement);\n\nvar directionMap = {\n  vertical: {\n    axis: 'Y',\n    size: 'Height',\n    dir: ['up', 'down'],\n    t3d: ['0px, ', 'px, 0px']\n  },\n  horizontal: {\n    axis: 'X',\n    size: 'Width',\n    dir: ['left', 'right'],\n    t3d: ['', 'px, 0px, 0px']\n  }\n};\n\nvar Swiper = function () {\n  function Swiper(params) {\n    var _this = this;\n\n    classCallCheck(this, Swiper);\n\n    // Parameters\n    var FALSE = function FALSE() {\n      return false;\n    };\n    'getInitialIndex getBubbleWidth isVertical isOverScrollable isCentered\\n    isAutoScrollable refreshHook preChangeHook postChangeHook overScrollHook'.split(/\\s+/).forEach(function (key) {\n      return _this[key] = params[key] || FALSE;\n    });\n\n    this.getElement = params.getElement; // Required\n    this.scrollHook = params.scrollHook; // Optional\n    this.itemSize = params.itemSize || '100%';\n\n    this.getAutoScrollRatio = function () {\n      var ratio = params.getAutoScrollRatio && params.getAutoScrollRatio.apply(params, arguments);\n      ratio = typeof ratio === 'number' && ratio === ratio ? ratio : .5;\n      if (ratio < 0.0 || ratio > 1.0) {\n        util$1.throw('Invalid auto-scroll-ratio ' + ratio + '. Must be between 0 and 1');\n      }\n      return ratio;\n    };\n\n    // Prevent clicks only on desktop\n    this.shouldBlock = util$1.globals.actualMobileOS === 'other';\n\n    // Bind handlers\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDrag = this.onDrag.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.onResize = this.onResize.bind(this);\n\n    this._shouldFixScroll = util$1.globals.actualMobileOS === 'ios';\n  }\n\n  createClass(Swiper, [{\n    key: 'init',\n    value: function init() {\n      var _this2 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          swipeable = _ref.swipeable,\n          autoRefresh = _ref.autoRefresh;\n\n      this.initialized = true;\n      this.target = this.getElement().children[0];\n      this.blocker = this.getElement().children[1];\n      if (!this.target || !this.blocker) {\n        util$1.throw('Expected \"target\" and \"blocker\" elements to exist before initializing Swiper');\n      }\n\n      if (!this.shouldBlock) {\n        this.blocker.style.display = 'none';\n      }\n\n      // Add classes\n      this.getElement().classList.add('ons-swiper');\n      this.target.classList.add('ons-swiper-target');\n      this.blocker.classList.add('ons-swiper-blocker');\n\n      // Setup listeners\n      this._gestureDetector = new GestureDetector(this.getElement(), { dragMinDistance: 1, dragLockToAxis: true, passive: !this._shouldFixScroll });\n      this._mutationObserver = new MutationObserver(function () {\n        return _this2.refresh();\n      });\n      this.updateSwipeable(swipeable);\n      this.updateAutoRefresh(autoRefresh);\n\n      // Setup initial layout\n      this._scroll = this._offset = this._lastActiveIndex = 0;\n      this._updateLayout();\n      this._setupInitialIndex();\n      setImmediate(function () {\n        return _this2.initialized && _this2._setupInitialIndex();\n      });\n\n      // Fix rendering glitch on Android 4.1\n      // Fix for iframes where the width is inconsistent at the beginning\n      if (window !== window.parent || this.offsetHeight === 0) {\n        window.requestAnimationFrame(function () {\n          return _this2.initialized && _this2.onResize();\n        });\n      }\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.initialized = false;\n      this.updateSwipeable(false);\n      this.updateAutoRefresh(false);\n\n      this._gestureDetector && this._gestureDetector.dispose();\n      this.target = this.blocker = this._gestureDetector = this._mutationObserver = null;\n\n      this.setupResize(false);\n    }\n  }, {\n    key: 'onResize',\n    value: function onResize() {\n      var i = this._scroll / this.itemNumSize;\n      this._reset();\n      this.setActiveIndex(i);\n      this.refresh();\n    }\n  }, {\n    key: '_calculateItemSize',\n    value: function _calculateItemSize() {\n      var matches = this.itemSize.match(/^(\\d+)(px|%)/);\n\n      if (!matches) {\n        util$1.throw('Invalid state: swiper\\'s size unit must be \\'%\\' or \\'px\\'');\n      }\n\n      var value = parseInt(matches[1], 10);\n      return matches[2] === '%' ? Math.round(value / 100 * this.targetSize) : value;\n    }\n  }, {\n    key: '_setupInitialIndex',\n    value: function _setupInitialIndex() {\n      this._reset();\n      this._lastActiveIndex = Math.max(Math.min(Number(this.getInitialIndex()), this.itemCount), 0);\n      this._scroll = this._offset + this.itemNumSize * this._lastActiveIndex;\n      this._scrollTo(this._scroll);\n    }\n  }, {\n    key: '_setSwiping',\n    value: function _setSwiping(toggle) {\n      this.target.classList.toggle('swiping', toggle); // Hides everything except shown pages\n    }\n  }, {\n    key: 'setActiveIndex',\n    value: function setActiveIndex(index) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._setSwiping(true);\n      index = Math.max(0, Math.min(index, this.itemCount - 1));\n      var scroll = Math.max(0, Math.min(this.maxScroll, this._offset + this.itemNumSize * index));\n\n      return this._changeTo(scroll, options);\n    }\n  }, {\n    key: 'getActiveIndex',\n    value: function getActiveIndex() {\n      var scroll = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._scroll;\n\n      scroll -= this._offset;\n      var count = this.itemCount,\n          size = this.itemNumSize;\n\n      if (this.itemNumSize === 0 || !util$1.isInteger(scroll)) {\n        return this._lastActiveIndex;\n      }\n\n      if (scroll <= 0) {\n        return 0;\n      }\n\n      for (var i = 0; i < count; i++) {\n        if (size * i <= scroll && size * (i + 1) > scroll) {\n          return i;\n        }\n      }\n\n      return count - 1;\n    }\n  }, {\n    key: 'setupResize',\n    value: function setupResize(add) {\n      window[(add ? 'add' : 'remove') + 'EventListener']('resize', this.onResize, true);\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      var _this3 = this;\n\n      this.setupResize(true);\n      this.onResize();\n      setTimeout(function () {\n        return _this3.target && _this3.target.classList.add('active');\n      }, 1000 / 60); // Hide elements after animations\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.setupResize(false);\n      this.target.classList.remove('active'); // Show elements before animations\n    }\n  }, {\n    key: 'updateSwipeable',\n    value: function updateSwipeable(shouldUpdate) {\n      if (this._gestureDetector) {\n        var action = shouldUpdate ? 'on' : 'off';\n        this._gestureDetector[action]('drag', this.onDrag);\n        this._gestureDetector[action]('dragstart', this.onDragStart);\n        this._gestureDetector[action]('dragend', this.onDragEnd);\n      }\n    }\n  }, {\n    key: 'updateAutoRefresh',\n    value: function updateAutoRefresh(shouldWatch) {\n      if (this._mutationObserver) {\n        shouldWatch ? this._mutationObserver.observe(this.target, { childList: true }) : this._mutationObserver.disconnect();\n      }\n    }\n  }, {\n    key: 'updateItemSize',\n    value: function updateItemSize(newSize) {\n      this.itemSize = newSize || '100%';\n      this.refresh();\n    }\n  }, {\n    key: 'toggleBlocker',\n    value: function toggleBlocker(block) {\n      this.blocker.style.pointerEvents = block ? 'auto' : 'none';\n    }\n  }, {\n    key: '_canConsumeGesture',\n    value: function _canConsumeGesture(gesture) {\n      var d = gesture.direction;\n      var isFirst = this._scroll === 0 && !this.isOverScrollable();\n      var isLast = this._scroll === this.maxScroll && !this.isOverScrollable();\n\n      return this.isVertical() ? d === 'down' && !isFirst || d === 'up' && !isLast : d === 'right' && !isFirst || d === 'left' && !isLast;\n    }\n  }, {\n    key: 'onDragStart',\n    value: function onDragStart(event) {\n      var _this4 = this;\n\n      this._ignoreDrag = event.consumed || !util$1.isValidGesture(event);\n\n      if (!this._ignoreDrag) {\n        var consume = event.consume;\n        event.consume = function () {\n          consume && consume();_this4._ignoreDrag = true;\n        };\n\n        if (this._canConsumeGesture(event.gesture)) {\n          var startX = event.gesture.center && event.gesture.center.clientX || 0,\n              distFromEdge = this.getBubbleWidth() || 0,\n              start = function start() {\n            consume && consume();\n            event.consumed = true;\n            _this4._started = true; // Avoid starting drag from outside\n            _this4.shouldBlock && _this4.toggleBlocker(true);\n            _this4._setSwiping(true);\n            util$1.iosPreventScroll(_this4._gestureDetector);\n          };\n\n          // Let parent elements consume the gesture or consume it right away\n          startX < distFromEdge || startX > this.targetSize - distFromEdge ? setImmediate(function () {\n            return !_this4._ignoreDrag && start();\n          }) : start();\n        }\n      }\n    }\n  }, {\n    key: 'onDrag',\n    value: function onDrag(event) {\n      if (!event.gesture || this._ignoreDrag || !this._started) {\n        return;\n      }\n\n      this._continued = true; // Fix for random 'dragend' without 'drag'\n      event.stopPropagation();\n\n      this._scrollTo(this._scroll - this._getDelta(event), { throttle: true });\n    }\n  }, {\n    key: 'onDragEnd',\n    value: function onDragEnd(event) {\n      this._started = false;\n      if (!event.gesture || this._ignoreDrag || !this._continued) {\n        this._ignoreDrag = true; // onDragEnd might fire before onDragStart's setImmediate\n        return;\n      }\n\n      this._continued = false;\n      event.stopPropagation();\n\n      var scroll = this._scroll - this._getDelta(event);\n      var normalizedScroll = this._normalizeScroll(scroll);\n      scroll === normalizedScroll ? this._startMomentumScroll(scroll, event) : this._killOverScroll(normalizedScroll);\n      this.shouldBlock && this.toggleBlocker(false);\n    }\n  }, {\n    key: '_startMomentumScroll',\n    value: function _startMomentumScroll(scroll, event) {\n      var velocity = this._getVelocity(event),\n          matchesDirection = event.gesture.interimDirection === this.dM.dir[this._getDelta(event) < 0 ? 0 : 1];\n\n      var nextScroll = this._getAutoScroll(scroll, velocity, matchesDirection);\n      var duration = Math.abs(nextScroll - scroll) / (velocity + 0.01) / 1000;\n      duration = Math.min(.25, Math.max(.1, duration));\n\n      this._changeTo(nextScroll, { swipe: true, animationOptions: { duration: duration, timing: 'cubic-bezier(.4, .7, .5, 1)' } });\n    }\n  }, {\n    key: '_killOverScroll',\n    value: function _killOverScroll(scroll) {\n      var _this5 = this;\n\n      this._scroll = scroll;\n      var direction = this.dM.dir[Number(scroll > 0)];\n      var killOverScroll = function killOverScroll() {\n        return _this5._changeTo(scroll, { animationOptions: { duration: .4, timing: 'cubic-bezier(.1, .4, .1, 1)' } });\n      };\n      this.overScrollHook({ direction: direction, killOverScroll: killOverScroll }) || killOverScroll();\n    }\n  }, {\n    key: '_changeTo',\n    value: function _changeTo(scroll) {\n      var _this6 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var e = { activeIndex: this.getActiveIndex(scroll), lastActiveIndex: this._lastActiveIndex, swipe: options.swipe || false };\n      var change = e.activeIndex !== e.lastActiveIndex;\n      var canceled = change ? this.preChangeHook(e) : false;\n\n      this._scroll = canceled ? this._offset + e.lastActiveIndex * this.itemNumSize : scroll;\n      this._lastActiveIndex = canceled ? e.lastActiveIndex : e.activeIndex;\n\n      return this._scrollTo(this._scroll, options).then(function () {\n        if (scroll === _this6._scroll && !canceled) {\n          _this6._setSwiping(false);\n          change && _this6.postChangeHook(e);\n        } else if (options.reject) {\n          _this6._setSwiping(false);\n          return Promise.reject('Canceled');\n        }\n      });\n    }\n  }, {\n    key: '_scrollTo',\n    value: function _scrollTo(scroll) {\n      var _this7 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (options.throttle) {\n        var ratio = 0.35;\n        if (scroll < 0) {\n          scroll = this.isOverScrollable() ? Math.round(scroll * ratio) : 0;\n        } else {\n          var maxScroll = this.maxScroll;\n          if (maxScroll < scroll) {\n            scroll = this.isOverScrollable() ? maxScroll + Math.round((scroll - maxScroll) * ratio) : maxScroll;\n          }\n        }\n      }\n\n      var opt = options.animation === 'none' ? {} : options.animationOptions;\n      this.scrollHook && this.itemNumSize > 0 && this.scrollHook((scroll / this.itemNumSize).toFixed(2), options.animationOptions || {});\n\n      return new Promise(function (resolve) {\n        return Animit(_this7.target).queue({ transform: _this7._getTransform(scroll) }, opt).play(resolve);\n      });\n    }\n  }, {\n    key: '_getAutoScroll',\n    value: function _getAutoScroll(scroll, velocity, matchesDirection) {\n      var max = this.maxScroll,\n          offset = this._offset,\n          size = this.itemNumSize;\n\n      if (!this.isAutoScrollable()) {\n        return Math.max(0, Math.min(max, scroll));\n      }\n\n      var arr = [];\n      for (var s = offset; s < max; s += size) {\n        arr.push(s);\n      }\n      arr.push(max);\n\n      arr = arr.sort(function (left, right) {\n        return Math.abs(left - scroll) - Math.abs(right - scroll);\n      }).filter(function (item, pos) {\n        return !pos || item !== arr[pos - 1];\n      });\n\n      var result = arr[0];\n      var lastScroll = this._lastActiveIndex * size + offset;\n      var scrollRatio = Math.abs(scroll - lastScroll) / size;\n\n      if (scrollRatio <= this.getAutoScrollRatio(matchesDirection, velocity, size)) {\n        result = lastScroll;\n      } else {\n        if (scrollRatio < 1.0 && arr[0] === lastScroll && arr.length > 1) {\n          result = arr[1];\n        }\n      }\n      return Math.max(0, Math.min(max, result));\n    }\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      this._targetSize = this._itemNumSize = undefined;\n    }\n  }, {\n    key: '_normalizeScroll',\n    value: function _normalizeScroll(scroll) {\n      return Math.max(Math.min(scroll, this.maxScroll), 0);\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      this._reset();\n      this._updateLayout();\n\n      if (util$1.isInteger(this._scroll)) {\n        var scroll = this._normalizeScroll(this._scroll);\n        scroll !== this._scroll ? this._killOverScroll(scroll) : this._changeTo(scroll);\n      } else {\n        this._setupInitialIndex();\n      }\n\n      this.refreshHook();\n    }\n  }, {\n    key: '_getDelta',\n    value: function _getDelta(event) {\n      return event.gesture['delta' + this.dM.axis];\n    }\n  }, {\n    key: '_getVelocity',\n    value: function _getVelocity(event) {\n      return event.gesture['velocity' + this.dM.axis];\n    }\n  }, {\n    key: '_getTransform',\n    value: function _getTransform(scroll) {\n      return 'translate3d(' + this.dM.t3d[0] + -scroll + this.dM.t3d[1] + ')';\n    }\n  }, {\n    key: '_updateLayout',\n    value: function _updateLayout() {\n      this.dM = directionMap[this.isVertical() ? 'vertical' : 'horizontal'];\n      this.target.classList.toggle('ons-swiper-target--vertical', this.isVertical());\n\n      for (var c = this.target.children[0]; c; c = c.nextElementSibling) {\n        c.style[this.dM.size.toLowerCase()] = this.itemSize;\n      }\n\n      if (this.isCentered()) {\n        this._offset = (this.targetSize - this.itemNumSize) / -2 || 0;\n      }\n    }\n  }, {\n    key: 'itemCount',\n    get: function get$$1() {\n      return this.target.children.length;\n    }\n  }, {\n    key: 'itemNumSize',\n    get: function get$$1() {\n      if (typeof this._itemNumSize !== 'number' || this._itemNumSize !== this._itemNumSize) {\n        this._itemNumSize = this._calculateItemSize();\n      }\n      return this._itemNumSize;\n    }\n  }, {\n    key: 'maxScroll',\n    get: function get$$1() {\n      var max = this.itemCount * this.itemNumSize - this.targetSize;\n      return Math.ceil(max < 0 ? 0 : max); // Need to return an integer value.\n    }\n  }, {\n    key: 'targetSize',\n    get: function get$$1() {\n      if (!this._targetSize) {\n        this._targetSize = this.target['offset' + this.dM.size];\n      }\n      return this._targetSize;\n    }\n  }]);\n  return Swiper;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-carousel\n * @category carousel\n * @description\n *   [en]\n *     Carousel component. A carousel can be used to display several items in the same space.\n *\n *     The component supports displaying content both horizontally and vertically. The user can scroll through the items by dragging and it can also be controller programmatically.\n *   [/en]\n *   [ja][/ja]\n * @codepen xbbzOQ\n * @tutorial vanilla/Reference/carousel\n * @seealso ons-carousel-item\n *   [en]`<ons-carousel-item>` component[/en]\n *   [ja]ons-carousel-itemコンポーネント[/ja]\n * @example\n * <ons-carousel style=\"width: 100%; height: 200px\">\n *   <ons-carousel-item>\n *    ...\n *   </ons-carousel-item>\n *   <ons-carousel-item>\n *    ...\n *   </ons-carousel-item>\n * </ons-carousel>\n */\n\nvar CarouselElement = function (_BaseElement) {\n  inherits(CarouselElement, _BaseElement);\n\n  /**\n   * @event postchange\n   * @description\n   *   [en]Fired just after the current carousel item has changed.[/en]\n   *   [ja]現在表示しているカルーセルの要素が変わった時に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.carousel\n   *   [en]Carousel object.[/en]\n   *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]\n   * @param {Number} event.activeIndex\n   *   [en]Current active index.[/en]\n   *   [ja]現在アクティブになっている要素のインデックス。[/ja]\n   * @param {Number} event.lastActiveIndex\n   *   [en]Previous active index.[/en]\n   *   [ja]以前アクティブだった要素のインデックス。[/ja]\n   */\n\n  /**\n   * @event refresh\n   * @description\n   *   [en]Fired when the carousel has been refreshed.[/en]\n   *   [ja]カルーセルが更新された時に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.carousel\n   *   [en]Carousel object.[/en]\n   *   [ja]イベントが発火したCarouselオブジェクトです。[/ja]\n   */\n\n  /**\n   * @event overscroll\n   * @description\n   *   [en]Fired when the carousel has been overscrolled.[/en]\n   *   [ja]カルーセルがオーバースクロールした時に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.carousel\n   *   [en]Fired when the carousel has been refreshed.[/en]\n   *   [ja]カルーセルが更新された時に発火します。[/ja]\n   * @param {Number} event.activeIndex\n   *   [en]Current active index.[/en]\n   *   [ja]現在アクティブになっている要素のインデックス。[/ja]\n   * @param {String} event.direction\n   *   [en]Can be one of either \"up\", \"down\", \"left\" or \"right\".[/en]\n   *   [ja]オーバースクロールされた方向が得られます。\"up\", \"down\", \"left\", \"right\"のいずれかの方向が渡されます。[/ja]\n   * @param {Function} event.waitToReturn\n   *   [en]Takes a <code>Promise</code> object as an argument. The carousel will not scroll back until the promise has been resolved or rejected.[/en]\n   *   [ja]この関数はPromiseオブジェクトを引数として受け取ります。渡したPromiseオブジェクトがresolveされるかrejectされるまで、カルーセルはスクロールバックしません。[/ja]\n   */\n\n  /**\n   * @attribute direction\n   * @type {String}\n   * @description\n   *   [en]The direction of the carousel. Can be either \"horizontal\" or \"vertical\". Default is \"horizontal\".[/en]\n   *   [ja]カルーセルの方向を指定します。\"horizontal\"か\"vertical\"を指定できます。\"horizontal\"がデフォルト値です。[/ja]\n   */\n\n  /**\n   * @attribute fullscreen\n   * @description\n   *   [en]If this attribute is set the carousel will cover the whole screen.[/en]\n   *   [ja]この属性があると、absoluteポジションを使ってカルーセルが自動的に画面いっぱいに広がります。[/ja]\n   */\n\n  /**\n   * @attribute overscrollable\n   * @description\n   *   [en]If this attribute is set the carousel will be scrollable over the edge. It will bounce back when released.[/en]\n   *   [ja]この属性がある時、タッチやドラッグで端までスクロールした時に、バウンドするような効果が当たります。[/ja]\n   */\n\n  /**\n   * @attribute centered\n   * @description\n   *   [en]If this attribute is set the carousel then the selected item will be in the center of the carousel instead of the beginning. Useful only when the items are smaller than the carousel. [/en]\n   *   [ja]この属性がある時、選んでいるons-carousel-itemはカルーセルの真ん中へ行きます。項目がカルーセルよりも小さい場合にのみ、これは便利です。[/ja]\n   */\n\n  /**\n   * @attribute item-width\n   * @type {String}\n   * @description\n   *    [en]ons-carousel-item's width. Only works when the direction is set to \"horizontal\".[/en]\n   *    [ja]ons-carousel-itemの幅を指定します。この属性は、direction属性に\"horizontal\"を指定した時のみ有効になります。[/ja]\n   */\n\n  /**\n   * @attribute item-height\n   * @type {String}\n   * @description\n   *   [en]ons-carousel-item's height. Only works when the direction is set to \"vertical\".[/en]\n   *   [ja]ons-carousel-itemの高さを指定します。この属性は、direction属性に\"vertical\"を指定した時のみ有効になります。[/ja]\n   */\n\n  /**\n   * @attribute auto-scroll\n   * @description\n   *   [en]If this attribute is set the carousel will be automatically scrolled to the closest item border when released.[/en]\n   *   [ja]この属性がある時、一番近いcarousel-itemの境界まで自動的にスクロールするようになります。[/ja]\n   */\n\n  /**\n   * @attribute auto-scroll-ratio\n   * @type {Number}\n   * @description\n   *    [en]A number between 0.0 and 1.0 that specifies how much the user must drag the carousel in order for it to auto scroll to the next item.[/en]\n   *    [ja]0.0から1.0までの値を指定します。カルーセルの要素をどれぐらいの割合までドラッグすると次の要素に自動的にスクロールするかを指定します。[/ja]\n   */\n\n  /**\n   * @attribute swipeable\n   * @description\n   *   [en]If this attribute is set the carousel can be scrolled by drag or swipe.[/en]\n   *   [ja]この属性がある時、カルーセルをスワイプやドラッグで移動できるようになります。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]If this attribute is set the carousel is disabled.[/en]\n   *   [ja]この属性がある時、dragやtouchやswipeを受け付けなくなります。[/ja]\n   */\n\n  /**\n   * @attribute initial-index\n   * @initonly\n   * @default 0\n   * @type {Number}\n   * @description\n   *   [en]Specify the index of the ons-carousel-item to show initially. Default is 0.[/en]\n   *   [ja]最初に表示するons-carousel-itemを0始まりのインデックスで指定します。デフォルト値は 0 です。[/ja]\n   */\n\n  /**\n   * @attribute auto-refresh\n   * @description\n   *   [en]When this attribute is set the carousel will automatically refresh when the number of child nodes change.[/en]\n   *   [ja]この属性がある時、子要素の数が変わるとカルーセルは自動的に更新されるようになります。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @description\n   *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *   [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *   [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。例：{duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\n   */\n\n  function CarouselElement() {\n    classCallCheck(this, CarouselElement);\n\n    var _this = possibleConstructorReturn(this, (CarouselElement.__proto__ || Object.getPrototypeOf(CarouselElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(CarouselElement, [{\n    key: '_compile',\n    value: function _compile() {\n      var target = this.children[0] && this.children[0].tagName !== 'ONS-CAROUSEL-ITEM' && this.children[0] || document.createElement('div');\n      if (!target.parentNode) {\n        while (this.firstChild) {\n          target.appendChild(this.firstChild);\n        }\n        this.appendChild(target);\n      }\n\n      !this.children[1] && this.appendChild(document.createElement('div'));\n\n      this.appendChild = this.appendChild.bind(target);\n      this.insertBefore = this.insertBefore.bind(target);\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      if (!this._swiper) {\n        this._swiper = new Swiper({\n          getElement: function getElement() {\n            return _this2;\n          },\n          getInitialIndex: function getInitialIndex() {\n            return _this2.getAttribute('initial-index');\n          },\n          getAutoScrollRatio: function getAutoScrollRatio() {\n            return _this2.autoScrollRatio;\n          },\n          isVertical: function isVertical() {\n            return _this2.vertical;\n          },\n          isOverScrollable: function isOverScrollable() {\n            return _this2.overscrollable;\n          },\n          isCentered: function isCentered() {\n            return _this2.centered;\n          },\n          isAutoScrollable: function isAutoScrollable() {\n            return _this2.autoScroll;\n          },\n          itemSize: this.itemSize,\n          overScrollHook: this._onOverScroll.bind(this),\n          preChangeHook: this._onChange.bind(this, 'prechange'),\n          postChangeHook: this._onChange.bind(this, 'postchange'),\n          refreshHook: this._onRefresh.bind(this),\n          scrollHook: function scrollHook() {\n            return _this2._onSwipe && _this2._onSwipe.apply(_this2, arguments);\n          }\n        });\n\n        contentReady(this, function () {\n          return _this2._swiper.init({\n            swipeable: _this2.hasAttribute('swipeable'),\n            autoRefresh: _this2.hasAttribute('auto-refresh')\n          });\n        });\n      }\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      if (this._swiper && this._swiper.initialized) {\n        this._swiper.dispose();\n        this._swiper = null;\n      }\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (!this._swiper) {\n        return;\n      }\n\n      switch (name) {\n        case 'swipeable':\n          this._swiper.updateSwipeable(this.hasAttribute('swipeable'));\n          break;\n        case 'auto-refresh':\n          this._swiper.updateAutoRefresh(this.hasAttribute('auto-refresh'));\n          break;\n        case 'item-height':\n          this.vertical && this._swiper.updateItemSize(this.itemSize);\n          break;\n        case 'item-width':\n          this.vertical || this._swiper.updateItemSize(this.itemSize);\n          break;\n        case 'direction':\n          this._swiper.refresh();\n      }\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      this._swiper.show();\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      this._swiper.hide();\n    }\n  }, {\n    key: '_onOverScroll',\n    value: function _onOverScroll(_ref) {\n      var direction = _ref.direction,\n          killOverScroll = _ref.killOverScroll;\n\n      var waitForAction = false;\n      util$1.triggerElementEvent(this, 'overscroll', {\n        carousel: this,\n        activeIndex: this.getActiveIndex(),\n        direction: direction,\n        waitToReturn: function waitToReturn(promise) {\n          waitForAction = true;\n          promise.then(killOverScroll);\n        }\n      });\n\n      return waitForAction;\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(eventName, _ref2) {\n      var activeIndex = _ref2.activeIndex,\n          lastActiveIndex = _ref2.lastActiveIndex;\n\n      util$1.triggerElementEvent(this, eventName, { carousel: this, activeIndex: activeIndex, lastActiveIndex: lastActiveIndex });\n    }\n  }, {\n    key: '_onRefresh',\n    value: function _onRefresh() {\n      util$1.triggerElementEvent(this, 'refresh', { carousel: this });\n    }\n\n    /**\n     * @method setActiveIndex\n     * @signature setActiveIndex(index, [options])\n     * @param {Number} index\n     *   [en]The index that the carousel should be set to.[/en]\n     *   [ja]carousel要素のインデックスを指定します。[/ja]\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja][/ja]\n     * @param {Function} [options.callback]\n     *   [en]A function that will be called after the animation is finished.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options.animationOptions]\n     *   [en]An object that can be used to specify duration, delay and timing function of the animation.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Specify the index of the `<ons-carousel-item>` to show.[/en]\n     *   [ja]表示するons-carousel-itemをindexで指定します。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the carousel element.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'setActiveIndex',\n    value: function setActiveIndex(index) {\n      var _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      options = _extends({\n        animation: this.getAttribute('animation'),\n        animationOptions: this.hasAttribute('animation-options') ? util$1.animationOptionsParse(this.getAttribute('animation-options')) : { duration: .3, timing: 'cubic-bezier(.4, .7, .5, 1)' }\n      }, options);\n\n      return this._swiper.setActiveIndex(index, options).then(function () {\n        options.callback instanceof Function && options.callback(_this3);\n        return Promise.resolve(_this3);\n      });\n    }\n\n    /**\n     * @method getActiveIndex\n     * @signature getActiveIndex()\n     * @return {Number}\n     *   [en]The current carousel item index.[/en]\n     *   [ja]現在表示しているカルーセル要素のインデックスが返されます。[/ja]\n     * @description\n     *   [en]Returns the index of the currently visible `<ons-carousel-item>`.[/en]\n     *   [ja]現在表示されているons-carousel-item要素のインデックスを返します。[/ja]\n     */\n\n  }, {\n    key: 'getActiveIndex',\n    value: function getActiveIndex() {\n      return this._swiper.getActiveIndex();\n    }\n\n    /**\n     * @method next\n     * @signature next([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja][/ja]\n     * @param {Function} [options.callback]\n     *   [en]A function that will be executed after the animation has finished.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options.animationOptions]\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the carousel element[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Show next `<ons-carousel-item>`.[/en]\n     *   [ja]次のons-carousel-itemを表示します。[/ja]\n     */\n\n  }, {\n    key: 'next',\n    value: function next(options) {\n      return this.setActiveIndex(this.getActiveIndex() + 1, options);\n    }\n\n    /**\n     * @method prev\n     * @signature prev([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja][/ja]\n     * @param {Function} [options.callback]\n     *   [en]A function that will be executed after the animation has finished.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options.animationOptions]\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the carousel element[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Show previous `<ons-carousel-item>`.[/en]\n     *   [ja]前のons-carousel-itemを表示します。[/ja]\n     */\n\n  }, {\n    key: 'prev',\n    value: function prev(options) {\n      return this.setActiveIndex(this.getActiveIndex() - 1, options);\n    }\n\n    /**\n     * @method first\n     * @signature first()\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja][/ja]\n     * @param {Function} [options.callback]\n     *   [en]A function that will be executed after the animation has finished.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this is set to `\"none\"`, the transitions will not be animated.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options.animationOptions]\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the carousel element[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Show first `<ons-carousel-item>`.[/en]\n     *   [ja]最初のons-carousel-itemを表示します。[/ja]\n     */\n\n  }, {\n    key: 'first',\n    value: function first(options) {\n      return this.setActiveIndex(0, options);\n    }\n\n    /**\n     * @method last\n     * @signature last()\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja][/ja]\n     * @param {Function} [options.callback]\n     *   [en]A function that will be executed after the animation has finished.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options.animationOptions]\n     *   [en]An object that can be used to specify the duration, delay and timing function of the animation.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the carousel element[/en]\n     *   [ja]Resolves to the carousel element[/ja]\n     * @description\n     *   [en]Show last ons-carousel item.[/en]\n     *   [ja]最後のons-carousel-itemを表示します。[/ja]\n     */\n\n  }, {\n    key: 'last',\n    value: function last(options) {\n      this.setActiveIndex(Math.max(this.itemCount - 1, 0), options);\n    }\n\n    /**\n     * @method refresh\n     * @signature refresh()\n     * @description\n     *   [en]Update the layout of the carousel. Used when adding `<ons-carousel-items>` dynamically or to automatically adjust the size.[/en]\n     *   [ja]レイアウトや内部の状態を最新のものに更新します。ons-carousel-itemを動的に増やしたり、ons-carouselの大きさを動的に変える際に利用します。[/ja]\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      this._swiper.refresh();\n    }\n\n    /**\n     * @property itemCount\n     * @readonly\n     * @type {Number}\n     * @description\n     *   [en]The number of carousel items.[/en]\n     *   [ja]カルーセル要素の数です。[/ja]\n     */\n\n  }, {\n    key: 'itemCount',\n    get: function get$$1() {\n      return this._swiper.itemCount;\n    }\n\n    /**\n     * @property swipeable\n     * @type {Boolean}\n     * @description\n     *   [en]true if the carousel is swipeable.[/en]\n     *   [ja]swipeableであればtrueを返します。[/ja]\n     */\n\n  }, {\n    key: 'swipeable',\n    get: function get$$1() {\n      return this.hasAttribute('swipeable');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'swipeable', value);\n    }\n\n    /**\n     * @property onSwipe\n     * @type {Function}\n     * @description\n     *   [en]Hook called whenever the user slides the carousel. It gets a decimal index and an animationOptions object as arguments.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'onSwipe',\n    get: function get$$1() {\n      return this._onSwipe;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        util$1.throw('\"onSwipe\" must be a function');\n      }\n      this._onSwipe = value;\n    }\n\n    /**\n     * @property autoScroll\n     * @type {Boolean}\n     * @description\n     *   [en]true if auto scroll is enabled.[/en]\n     *   [ja]オートスクロールが有効であればtrueを返します。[/ja]\n     */\n\n  }, {\n    key: 'autoScroll',\n    get: function get$$1() {\n      return this.hasAttribute('auto-scroll');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'auto-scroll', value);\n    }\n  }, {\n    key: 'vertical',\n    get: function get$$1() {\n      return this.getAttribute('direction') === 'vertical';\n    }\n  }, {\n    key: 'itemSize',\n    get: function get$$1() {\n      var itemSizeAttr = (this.getAttribute('item-' + (this.vertical ? 'height' : 'width')) || '').trim();\n      return itemSizeAttr.match(/^\\d+(px|%)$/) ? itemSizeAttr : '100%';\n    }\n\n    /**\n     * @property autoScrollRatio\n     * @type {Number}\n     * @description\n     *   [en]The current auto scroll ratio. [/en]\n     *   [ja]現在のオートスクロールのratio値。[/ja]\n     */\n\n  }, {\n    key: 'autoScrollRatio',\n    get: function get$$1() {\n      return parseFloat(this.getAttribute('auto-scroll-ratio'));\n    },\n    set: function set$$1(ratio) {\n      this.setAttribute('auto-scroll-ratio', ratio);\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the carousel is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    }\n\n    /**\n     * @property overscrollable\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the carousel is overscrollable or not.[/en]\n     *   [ja]overscrollできればtrueを返します。[/ja]\n     */\n\n  }, {\n    key: 'overscrollable',\n    get: function get$$1() {\n      return this.hasAttribute('overscrollable');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'overscrollable', value);\n    }\n\n    /**\n     * @property centered\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the carousel is centered or not.[/en]\n     *   [ja]centered状態になっていればtrueを返します。[/ja]\n     */\n\n  }, {\n    key: 'centered',\n    get: function get$$1() {\n      return this.hasAttribute('centered');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'centered', value);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['swipeable', 'auto-refresh', 'direction', 'item-height', 'item-width'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['postchange', 'refresh', 'overscroll'];\n    }\n  }]);\n  return CarouselElement;\n}(BaseElement);\n\nonsElements.Carousel = CarouselElement;\ncustomElements.define('ons-carousel', CarouselElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-col\n * @category grid\n * @description\n *   [en]Represents a column in the grid system. Use with `<ons-row>` to layout components.[/en]\n *   [ja]グリッドシステムにて列を定義します。ons-rowとともに使用し、コンポーネントのレイアウトに利用します。[/ja]\n * @note\n *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-column, they may not be displayed correctly. You can use only one alignment.[/en]\n *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-columnを組み合わせた場合に描画が崩れる場合があります。[/ja]\n * @codepen GgujC {wide}\n * @guide theming.html [en]Layouting guide[/en][ja]レイアウト機能[/ja]\n * @seealso ons-row\n *   [en]The `<ons-row>` component is the parent of `<ons-col>`.[/en]\n *   [ja]ons-rowコンポーネント[/ja]\n * @example\n * <ons-row>\n *   <ons-col width=\"50px\"><ons-icon icon=\"fa-twitter\"></ons-icon></ons-col>\n *   <ons-col>Text</ons-col>\n * </ons-row>\n */\n\n/**\n * @attribute vertical-align\n * @type {String}\n * @description\n *   [en]Vertical alignment of the column. Valid values are \"top\", \"center\", and \"bottom\".[/en]\n *   [ja]縦の配置を指定する。\"top\", \"center\", \"bottom\"のいずれかを指定します。[/ja]\n */\n\n/**\n * @attribute width\n * @type {String}\n * @description\n *   [en]The width of the column. Valid values are css width values (\"10%\", \"50px\").[/en]\n *   [ja]カラムの横幅を指定する。パーセントもしくはピクセルで指定します（10%や50px）。[/ja]\n */\n\nvar ColElement = function (_BaseElement) {\n  inherits(ColElement, _BaseElement);\n\n  function ColElement() {\n    classCallCheck(this, ColElement);\n\n    var _this = possibleConstructorReturn(this, (ColElement.__proto__ || Object.getPrototypeOf(ColElement)).call(this));\n\n    if (_this.getAttribute('width')) {\n      _this._updateWidth();\n    }\n    return _this;\n  }\n\n  createClass(ColElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'width') {\n        this._updateWidth();\n      }\n    }\n  }, {\n    key: '_updateWidth',\n    value: function _updateWidth() {\n      var width = this.getAttribute('width');\n      if (!width) {\n        styler.clear(this, 'flex maxWidth');\n      } else {\n        width = width.trim().match(/^\\d+$/) ? width + '%' : width;\n\n        styler(this, {\n          flex: '0 0 ' + width,\n          maxWidth: width\n        });\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['width'];\n    }\n  }]);\n  return ColElement;\n}(BaseElement);\n\nonsElements.Col = ColElement;\ncustomElements.define('ons-col', ColElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar DialogAnimator = function (_BaseAnimator) {\n  inherits(DialogAnimator, _BaseAnimator);\n\n  function DialogAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, DialogAnimator);\n    return possibleConstructorReturn(this, (DialogAnimator.__proto__ || Object.getPrototypeOf(DialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} dialog\n   * @param {Function} done\n   */\n\n\n  createClass(DialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, done) {\n      done();\n    }\n\n    /**\n     * @param {HTMLElement} dialog\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, done) {\n      done();\n    }\n  }]);\n  return DialogAnimator;\n}(BaseAnimator);\n\n/**\n * Android style animator for dialog.\n */\nvar AndroidDialogAnimator = function (_DialogAnimator) {\n  inherits(AndroidDialogAnimator, _DialogAnimator);\n\n  function AndroidDialogAnimator() {\n    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$timing = _ref2.timing,\n        timing = _ref2$timing === undefined ? 'ease-in-out' : _ref2$timing,\n        _ref2$delay = _ref2.delay,\n        delay = _ref2$delay === undefined ? 0 : _ref2$delay,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === undefined ? 0.3 : _ref2$duration;\n\n    classCallCheck(this, AndroidDialogAnimator);\n    return possibleConstructorReturn(this, (AndroidDialogAnimator.__proto__ || Object.getPrototypeOf(AndroidDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(AndroidDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 0 }, { opacity: 1 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -60%, 0)', opacity: 0 }, { transform: 'translate3d(-50%, -50%, 0)', opacity: 1 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0)', opacity: 1 }, { transform: 'translate3d(-50%, -60%, 0)', opacity: 0 }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return AndroidDialogAnimator;\n}(DialogAnimator);\n\n/**\n * iOS style animator for dialog.\n */\nvar IOSDialogAnimator = function (_DialogAnimator2) {\n  inherits(IOSDialogAnimator, _DialogAnimator2);\n\n  function IOSDialogAnimator() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$timing = _ref3.timing,\n        timing = _ref3$timing === undefined ? 'ease-in-out' : _ref3$timing,\n        _ref3$delay = _ref3.delay,\n        delay = _ref3$delay === undefined ? 0 : _ref3$delay,\n        _ref3$duration = _ref3.duration,\n        duration = _ref3$duration === undefined ? 0.2 : _ref3$duration;\n\n    classCallCheck(this, IOSDialogAnimator);\n\n    var _this3 = possibleConstructorReturn(this, (IOSDialogAnimator.__proto__ || Object.getPrototypeOf(IOSDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this3.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout\n    return _this3;\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(IOSDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 0 }, { opacity: 1 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)' }, { transform: 'translate3d(-50%, -50%, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0)' }, { transform: 'translate3d(-50%, ' + (this.bodyHeight / 2.0 - 1) + 'px, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return IOSDialogAnimator;\n}(DialogAnimator);\n\n/**\n * Slide animator for dialog.\n */\nvar SlideDialogAnimator = function (_DialogAnimator3) {\n  inherits(SlideDialogAnimator, _DialogAnimator3);\n\n  function SlideDialogAnimator() {\n    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref4$timing = _ref4.timing,\n        timing = _ref4$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref4$timing,\n        _ref4$delay = _ref4.delay,\n        delay = _ref4$delay === undefined ? 0 : _ref4$delay,\n        _ref4$duration = _ref4.duration,\n        duration = _ref4$duration === undefined ? 0.2 : _ref4$duration;\n\n    classCallCheck(this, SlideDialogAnimator);\n\n    var _this4 = possibleConstructorReturn(this, (SlideDialogAnimator.__proto__ || Object.getPrototypeOf(SlideDialogAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this4.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout\n    return _this4;\n  }\n\n  /**\n   * @param {Object} dialog\n   * @param {Function} callback\n   */\n\n\n  createClass(SlideDialogAnimator, [{\n    key: 'show',\n    value: function show(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 0 }, { opacity: 1 }), Animit(dialog._dialog, this.def).default(\n      // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.\n      { transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)' }, { transform: 'translate3d(-50%, -50%, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} dialog\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(dialog, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit.runAll(Animit(dialog._mask, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(dialog._dialog, this.def).default({ transform: 'translate3d(-50%, -50%, 0)' },\n      // FIXME: This should avoid Forced Synchronous Layout. Otherwise, fade animation of mask will be broken.\n      { transform: 'translate3d(-50%, ' + (-(this.bodyHeight / 2.0) + 1 - dialog._dialog.clientHeight) + 'px, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return SlideDialogAnimator;\n}(DialogAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$6 = {\n  '.dialog': 'dialog--*',\n  '.dialog-container': 'dialog-container--*',\n  '.dialog-mask': 'dialog-mask--*'\n};\n\nvar _animatorDict$2 = {\n  'default': function _default() {\n    return platform.isAndroid() ? AndroidDialogAnimator : IOSDialogAnimator;\n  },\n  'slide': SlideDialogAnimator,\n  'none': DialogAnimator\n};\n\n/**\n * @element ons-dialog\n * @category dialog\n * @description\n *   [en]\n *     Dialog that is displayed on top of current screen. As opposed to the `<ons-alert-dialog>` element, this component can contain any kind of content.\n *\n *     To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createDialog(template)` utility function and the `<template>` tag.\n *\n *     The dialog is useful for displaying menus, additional information or to ask the user to make a decision.\n *\n *     It will automatically be displayed as Material Design when running on an Android device.\n *   [/en]\n *   [ja][/ja]\n * @modifier material\n *   [en]Display a Material Design dialog.[/en]\n *   [ja]マテリアルデザインのダイアログを表示します。[/ja]\n * @codepen zxxaGa\n * @tutorial vanilla/Reference/dialog\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @seealso ons-alert-dialog\n *   [en]`<ons-alert-dialog>` component[/en]\n *   [ja]ons-alert-dialogコンポーネント[/ja]\n * @seealso ons-popover\n *   [en]`<ons-popover>` component[/en]\n *   [ja]ons-popoverコンポーネント[/ja]\n * @seealso ons-modal\n *   [en]`<ons-modal>` component[/en]\n *   [ja]ons-modalコンポーネント[/ja]\n * @example\n * <ons-dialog id=\"dialog\">\n *   <p>This is a dialog!</p>\n * </ons-dialog>\n *\n * <script>\n *   document.getElementById('dialog').show();\n * </script>\n */\n\nvar DialogElement = function (_BaseDialogElement) {\n  inherits(DialogElement, _BaseDialogElement);\n\n  /**\n   * @event preshow\n   * @description\n   * [en]Fired just before the dialog is displayed.[/en]\n   * [ja]ダイアログが表示される直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.dialog\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the dialog from being shown.[/en]\n   *   [ja]この関数を実行すると、ダイアログの表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event postshow\n   * @description\n   * [en]Fired just after the dialog is displayed.[/en]\n   * [ja]ダイアログが表示された直後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.dialog\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event prehide\n   * @description\n   * [en]Fired just before the dialog is hidden.[/en]\n   * [ja]ダイアログが隠れる直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.dialog\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the dialog from being hidden.[/en]\n   *   [ja]この関数を実行すると、ダイアログの非表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event posthide\n   * @description\n   * [en]Fired just after the dialog is hidden.[/en]\n   * [ja]ダイアログが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.dialog\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the dialog.[/en]\n   *  [ja]ダイアログの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute cancelable\n   * @description\n   *  [en]If this attribute is set the dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *  [en]If this attribute is set the dialog is disabled.[/en]\n   *  [ja]この属性がある時、ダイアログはdisabled状態になります。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the dialog. Can be either `\"none\"` or `\"default\"`.[/en]\n   *  [ja]ダイアログを表示する際のアニメーション名を指定します。\"none\"もしくは\"default\"を指定できます。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]\n   */\n\n  /**\n   * @attribute mask-color\n   * @type {String}\n   * @default rgba(0, 0, 0, 0.2)\n   * @description\n   *  [en]Color of the background mask. Default is `\"rgba(0, 0, 0, 0.2)\"`.[/en]\n   *  [ja]背景のマスクの色を指定します。\"rgba(0, 0, 0, 0.2)\"がデフォルト値です。[/ja]\n   */\n\n  function DialogElement() {\n    classCallCheck(this, DialogElement);\n\n    var _this = possibleConstructorReturn(this, (DialogElement.__proto__ || Object.getPrototypeOf(DialogElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(DialogElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict$2,\n        baseClass: DialogAnimator,\n        baseClassName: 'DialogAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.style.display = 'none';\n      this.style.zIndex = 10001;\n\n      /* Expected result:\n       *   <ons-dialog>\n       *     <div class=\"dialog-mask\"></div>\n       *     <div class=\"dialog\">\n       *       <div class=\"dialog-container\">...</div>\n       *     </div>\n       *   </ons-dialog>\n       */\n\n      if (!this._dialog) {\n        var dialog = document.createElement('div');\n        dialog.classList.add('dialog');\n\n        var container = document.createElement('div');\n        container.classList.add('dialog-container');\n        while (this.firstChild) {\n          container.appendChild(this.firstChild);\n        }\n        dialog.appendChild(container);\n\n        this.appendChild(dialog);\n      }\n\n      if (!this._mask) {\n        var mask = document.createElement('div');\n        mask.classList.add('dialog-mask');\n        this.insertBefore(mask, this.firstChild);\n      }\n\n      this._dialog.style.zIndex = 20001;\n      this._mask.style.zIndex = 20000;\n\n      this.setAttribute('status-bar-fill', '');\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n    /**\n     * @method show\n     * @signature show([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"slide\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"slide\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the dialog has been revealed.[/en]\n     *   [ja]ダイアログが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *  [en]Show the dialog.[/en]\n     *  [ja]ダイアログを開きます。[/ja]\n     * @return {Promise} Resolves to the displayed element.\n     */\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"slide\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"slide\"のいずれかを指定できます。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This functions is called after the dialog has been hidden.[/en]\n     *   [ja]ダイアログが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Hide the dialog.[/en]\n     *   [ja]ダイアログを閉じます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the dialog is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the dialog is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property cancelable\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the dialog is cancelable or not. A cancelable dialog can be closed by tapping the background or by pressing the back button on Android devices.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @param {String} name\n     * @param {DialogAnimator} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$6;\n    }\n  }, {\n    key: '_mask',\n    get: function get$$1() {\n      return util$1.findChild(this, '.dialog-mask');\n    }\n  }, {\n    key: '_dialog',\n    get: function get$$1() {\n      return util$1.findChild(this, '.dialog');\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof DialogAnimator)) {\n        util$1.throwAnimator('Dialog');\n      }\n      _animatorDict$2[name] = Animator;\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$2;\n    }\n  }, {\n    key: 'DialogAnimator',\n    get: function get$$1() {\n      return DialogAnimator;\n    }\n  }]);\n  return DialogElement;\n}(BaseDialogElement);\n\nonsElements.Dialog = DialogElement;\ncustomElements.define('ons-dialog', DialogElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar defaultClassName$3 = 'fab';\n\nvar scheme$7 = {\n  '': 'fab--*',\n  '.fab__icon': 'fab--*__icon'\n};\n\n/**\n * @element ons-fab\n * @category form\n * @description\n *   [en]\n *     The Floating action button is a circular button defined in the [Material Design specification](https://www.google.com/design/spec/components/buttons-floating-action-button.html). They are often used to promote the primary action of the app.\n *\n *     It can be displayed either as an inline element or in one of the corners. Normally it will be positioned in the lower right corner of the screen.\n *   [/en]\n *   [ja][/ja]\n * @tutorial vanilla/Reference/fab\n * @modifier mini\n *   [en]Makes the `ons-fab` smaller.[/en]\n *   [ja][/ja]\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\n * @seealso ons-speed-dial\n *   [en]The `<ons-speed-dial>` component is a Floating action button that displays a menu when tapped.[/en]\n *   [ja][/ja]\n */\n\nvar FabElement = function (_BaseElement) {\n  inherits(FabElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the button.[/en]\n   *  [ja]ボタンの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute ripple\n   * @description\n   *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute position\n   * @type {String}\n   * @description\n   *  [en]The position of the button. Should be a string like `\"bottom right\"` or `\"top left\"`. If this attribute is not defined it will be displayed as an inline element.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]Specify if button should be disabled.[/en]\n   *   [ja]ボタンを無効化する場合は指定します。[/ja]\n   */\n\n  function FabElement() {\n    classCallCheck(this, FabElement);\n\n    // The following statements can be executed before contentReady\n    // since these do not access the children\n    var _this = possibleConstructorReturn(this, (FabElement.__proto__ || Object.getPrototypeOf(FabElement)).call(this));\n\n    _this._hide();\n    _this.classList.add(defaultClassName$3);\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(FabElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      if (!util$1.findChild(this, '.fab__icon')) {\n        var content = document.createElement('span');\n        content.classList.add('fab__icon');\n\n        util$1.arrayFrom(this.childNodes).forEach(function (element) {\n          if (!element.tagName || element.tagName.toLowerCase() !== 'ons-ripple') {\n            content.appendChild(element);\n          }\n        });\n        this.appendChild(content);\n      }\n\n      this._updateRipple();\n\n      ModifierUtil.initModifier(this, scheme$7);\n\n      this._updatePosition();\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      setImmediate(function () {\n        return _this2._show();\n      });\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$3, scheme$7);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$7);\n          break;\n        case 'ripple':\n          this._updateRipple();\n          break;\n        case 'position':\n          this._updatePosition();\n          break;\n      }\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      if (!this._manuallyHidden) {\n        // if user has not called ons-fab.hide()\n        this._toggle(true);\n      }\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      var _this3 = this;\n\n      setImmediate(function () {\n        return _this3._toggle(false);\n      });\n    }\n  }, {\n    key: '_updateRipple',\n    value: function _updateRipple() {\n      util$1.updateRipple(this);\n    }\n  }, {\n    key: '_updatePosition',\n    value: function _updatePosition() {\n      var position = this.getAttribute('position');\n      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');\n      switch (position) {\n        case 'top right':\n        case 'right top':\n          this.classList.add('fab--top__right');\n          break;\n        case 'top left':\n        case 'left top':\n          this.classList.add('fab--top__left');\n          break;\n        case 'bottom right':\n        case 'right bottom':\n          this.classList.add('fab--bottom__right');\n          break;\n        case 'bottom left':\n        case 'left bottom':\n          this.classList.add('fab--bottom__left');\n          break;\n        case 'center top':\n        case 'top center':\n          this.classList.add('fab--top__center');\n          break;\n        case 'center bottom':\n        case 'bottom center':\n          this.classList.add('fab--bottom__center');\n          break;\n        default:\n          break;\n      }\n    }\n\n    /**\n     * @method show\n     * @signature show()\n     * @description\n     *  [en]Show the floating action button.[/en]\n     *  [ja][/ja]\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      this.toggle(true);\n    }\n\n    /**\n     * @method hide\n     * @signature hide()\n     * @description\n     *  [en]Hide the floating action button.[/en]\n     *  [ja][/ja]\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.toggle(false);\n    }\n\n    /**\n     * @method toggle\n     * @signature toggle()\n     * @description\n     *   [en]Toggle the visibility of the button.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.visible;\n\n      this._manuallyHidden = !action;\n      this._toggle(action);\n    }\n  }, {\n    key: '_toggle',\n    value: function _toggle() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : !this.visible;\n\n      var isBottom = (this.getAttribute('position') || '').indexOf('bottom') >= 0;\n      var translate = isBottom ? 'translate3d(0px, -' + (util$1.globals.fabOffset || 0) + 'px, 0px)' : '';\n\n      styler(this, { transform: translate + ' scale(' + Number(action) + ')' });\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'visible',\n    get: function get$$1() {\n      return this.style.transform.indexOf('scale(0)') === -1 && this.style.display !== 'none';\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'ripple', 'position', 'class'];\n    }\n  }]);\n  return FabElement;\n}(BaseElement);\n\nonsElements.Fab = FabElement;\ncustomElements.define('ons-fab', FabElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-gesture-detector\n * @category gesture\n * @description\n *   [en]\n *     Component to detect finger gestures within the wrapped element. Following gestures are supported:\n *     - Drag gestures: `drag`, `dragleft`, `dragright`, `dragup`, `dragdown`\n *     - Hold gestures: `hold`, `release`\n *     - Swipe gestures: `swipe`, `swipeleft`, `swiperight`, `swipeup`, `swipedown`\n *     - Tap gestures: `tap`, `doubletap`\n *     - Pinch gestures: `pinch`, `pinchin`, `pinchout`\n *     - Other gestures: `touch`, `transform`, `rotate`\n *   [/en]\n *   [ja]要素内のジェスチャー操作を検知します。詳しくはガイドを参照してください。[/ja]\n * @guide features.html#gesture-detection\n *   [en]Detecting finger gestures[/en]\n *   [ja]ジェスチャー操作の検知[/ja]\n * @example\n * <ons-gesture-detector>\n *   <div id=\"detect-area\" style=\"width: 100px; height: 100px;\">\n *     Swipe Here\n *   </div>\n * </ons-gesture-detector>\n *\n * <script>\n *   document.addEventListener('swipeleft', function(event) {\n *     if (event.target.matches('#detect-area')) {\n *       console.log('Swipe left is detected.');\n *     }\n *   });\n * </script>\n */\n\nvar GestureDetectorElement = function (_BaseElement) {\n  inherits(GestureDetectorElement, _BaseElement);\n\n  function GestureDetectorElement() {\n    classCallCheck(this, GestureDetectorElement);\n\n    var _this = possibleConstructorReturn(this, (GestureDetectorElement.__proto__ || Object.getPrototypeOf(GestureDetectorElement)).call(this));\n\n    _this._gestureDetector = new GestureDetector(_this, { passive: true });\n    return _this;\n  }\n\n  return GestureDetectorElement;\n}(BaseElement);\n\nonsElements.GestureDetector = GestureDetectorElement;\ncustomElements.define('ons-gesture-detector', GestureDetectorElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar autoPrefix = 'fa'; // FIXME: To be removed in v3\n\n/**\n * @element ons-icon\n * @category visual\n * @description\n *   [en]\n *     Displays an icon. The following icon suites are available:\n *\n *     * [Font Awesome](https://fortawesome.github.io/Font-Awesome/)\n *     * [Ionicons](http://ionicons.com/)\n *     * [Material Design Iconic Font](http://zavoloklom.github.io/material-design-iconic-font/)\n *   [/en]\n *   [ja][/ja]\n * @codepen xAhvg\n * @tutorial vanilla/Reference/icon\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja][/ja]\n * @guide appsize.html#removing-icon-packs [en]Removing icon packs.[/en][ja][/ja]\n * @guide faq.html#how-can-i-use-custom-icon-packs [en]Adding custom icon packs.[/en][ja][/ja]\n * @example\n * <ons-icon\n *   icon=\"md-car\"\n *   size=\"20px\"\n *   style=\"color: red\">\n * </ons-icon>\n *\n * <ons-button>\n *   <ons-icon icon=\"md-car\"></ons-icon>\n *   Car\n * </ons-button>\n */\n\nvar IconElement = function (_BaseElement) {\n  inherits(IconElement, _BaseElement);\n\n  /**\n   * @attribute icon\n   * @type {String}\n   * @description\n   *   [en]\n   *     The icon name. `\"md-\"` prefix for Material Icons, `\"fa-\"` for Font Awesome and `\"ion-\"` prefix for Ionicons.\n   *\n   *     See all available icons on the element description (at the top).\n   *\n   *     Icons can also be styled based on modifier presence. Add comma-separated icons with `\"modifierName:\"` prefix.\n   *\n   *     The code `<ons-icon icon=\"ion-edit, material:md-edit\"></ons-icon>` will display `\"md-edit\"` for Material Design and `\"ion-edit\"` as the default icon.\n   *\n   *     `fa-` prefix is added automatically if none is provided. Check [See also](#seealso) section for more information.\n   *   [/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute size\n   * @type {String}\n   * @description\n   *   [en]\n   *     The sizes of the icon. Valid values are lg, 2x, 3x, 4x, 5x, or in the size in pixels.\n   *     Icons can also be styled based on modifier presence. Add comma-separated icons with `\"modifierName:\"` prefix.\n   *\n   *     The code:\n   *\n   *     ```\n   *     <ons-icon\n   *       icon=\"ion-edit\"\n   *       size=\"32px, material:24px\">\n   *     </ons-icon>\n   *     ```\n   *\n   *     will render as a `24px` icon if the `\"material\"` modifier is present and `32px` otherwise.\n   *   [/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute rotate\n   * @type {Number}\n   * @description\n   *   [en]Number of degrees to rotate the icon. Valid values are 90, 180 and 270.[/en]\n   *   [ja]アイコンを回転して表示します。90, 180, 270から指定できます。[/ja]\n   */\n\n  /**\n   * @attribute fixed-width\n   * @type {Boolean}\n   * @default false\n   * @description\n   *  [en]When used in a list, you want the icons to have the same width so that they align vertically by defining this attribute.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute spin\n   * @description\n   *   [en]Specify whether the icon should be spinning.[/en]\n   *   [ja]アイコンを回転するかどうかを指定します。[/ja]\n   */\n\n  function IconElement() {\n    classCallCheck(this, IconElement);\n\n    var _this = possibleConstructorReturn(this, (IconElement.__proto__ || Object.getPrototypeOf(IconElement)).call(this));\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(IconElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      this._cleanClassAttribute(name === 'icon' ? last : this.getAttribute('icon'), name === 'modifier' ? last : undefined);\n      this._update();\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this._update();\n    }\n  }, {\n    key: '_update',\n    value: function _update() {\n      var _this2 = this;\n\n      var _buildClassAndStyle2 = this._buildClassAndStyle(this._parseAttr('icon'), this._parseAttr('size')),\n          classList = _buildClassAndStyle2.classList,\n          style = _buildClassAndStyle2.style;\n\n      util$1.extend(this.style, style);\n\n      classList.forEach(function (className) {\n        return _this2.classList.add(className);\n      });\n    }\n  }, {\n    key: '_parseAttr',\n    value: function _parseAttr(attrName) {\n      var modifier = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getAttribute('modifier') || '';\n\n      var attr = this.getAttribute(attrName) || attrName || '';\n      var parts = attr.split(/\\s*,\\s*/);\n      var def = parts[0];\n      var md = parts[1];\n      md = (md || '').split(/\\s*:\\s*/);\n\n      return (modifier && RegExp('(^|\\\\s+)' + md[0] + '($|\\\\s+)', 'i').test(modifier) ? md[1] : def) || '';\n    }\n\n    /**\n     * Remove unneeded class value.\n     */\n\n  }, {\n    key: '_cleanClassAttribute',\n    value: function _cleanClassAttribute(lastIcon, lastModifier) {\n      var _this3 = this;\n\n      var _prefixIcon2 = this._prefixIcon(this._parseAttr(lastIcon, lastModifier)),\n          className = _prefixIcon2.className,\n          prefix = _prefixIcon2.prefix;\n\n      var customPrefixRE = className !== prefix ? '|' + prefix + '$|' + prefix + '-' : '|' + className + '$' || '';\n      var re = new RegExp('^(fa$|fa-|ion-|zmdi$|zmdi-|ons-icon--' + customPrefixRE + ')');\n\n      util$1.arrayFrom(this.classList).filter(function (className) {\n        return re.test(className);\n      }).forEach(function (className) {\n        return _this3.classList.remove(className);\n      });\n    }\n  }, {\n    key: '_prefixIcon',\n    value: function _prefixIcon(iconName) {\n      var className = autoPrefix + (autoPrefix ? '-' : '') + iconName;\n      return { className: className, prefix: className.split('-')[0] };\n    }\n  }, {\n    key: '_buildClassAndStyle',\n    value: function _buildClassAndStyle(iconName, size) {\n      var classList = ['ons-icon'];\n      var style = {};\n\n      // Icon\n      if (iconName.indexOf('ion-') === 0) {\n        classList.push(iconName);\n        classList.push('ons-icon--ion');\n      } else if (iconName.indexOf('fa-') === 0) {\n        classList.push(iconName);\n        // default icon style to Font Awesome Solid if icon style is not specified already\n        if (!(this.classList.contains('far') || this.classList.contains('fab') || this.classList.contains('fal'))) {\n          classList.push('fa');\n        }\n      } else if (iconName.indexOf('md-') === 0) {\n        classList.push('zmdi');\n        classList.push('zmdi-' + iconName.split(/-(.+)?/)[1]);\n      } else {\n        var _prefixIcon3 = this._prefixIcon(iconName),\n            className = _prefixIcon3.className,\n            prefix = _prefixIcon3.prefix;\n\n        prefix && classList.push(prefix);\n        className && classList.push(className);\n      }\n\n      // Size\n      if (size.match(/^[1-5]x|lg$/)) {\n        classList.push('ons-icon--' + size);\n        this.style.removeProperty('font-size');\n      } else {\n        style.fontSize = size;\n      }\n\n      return {\n        classList: classList,\n        style: style\n      };\n    }\n  }], [{\n    key: 'setAutoPrefix',\n    value: function setAutoPrefix(prefix) {\n      autoPrefix = prefix ? typeof prefix === 'string' && prefix || 'fa' : '';\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['icon', 'size', 'modifier', 'class'];\n    }\n  }]);\n  return IconElement;\n}(BaseElement);\n\nonsElements.Icon = IconElement;\ncustomElements.define('ons-icon', IconElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar LazyRepeatDelegate = function () {\n  function LazyRepeatDelegate(userDelegate) {\n    var templateElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, LazyRepeatDelegate);\n\n    if ((typeof userDelegate === 'undefined' ? 'undefined' : _typeof(userDelegate)) !== 'object' || userDelegate === null) {\n      util$1.throw('\"delegate\" parameter must be an object');\n    }\n    this._userDelegate = userDelegate;\n\n    if (!(templateElement instanceof Element) && templateElement !== null) {\n      util$1.throw('\"templateElement\" parameter must be an instance of Element or null');\n    }\n    this._templateElement = templateElement;\n  }\n\n  createClass(LazyRepeatDelegate, [{\n    key: 'hasRenderFunction',\n\n\n    /**\n     * @return {Boolean}\n     */\n    value: function hasRenderFunction() {\n      return this._userDelegate._render instanceof Function;\n    }\n\n    /**\n     * @return {void}\n     */\n\n  }, {\n    key: '_render',\n    value: function _render() {\n      this._userDelegate._render.apply(this._userDelegate, arguments);\n    }\n\n    /**\n     * @param {Number} index\n     * @param {Function} done A function that take item object as parameter.\n     */\n\n  }, {\n    key: 'loadItemElement',\n    value: function loadItemElement(index, done) {\n      if (this._userDelegate.loadItemElement instanceof Function) {\n        this._userDelegate.loadItemElement(index, done);\n      } else {\n        var element = this._userDelegate.createItemContent(index, this._templateElement);\n        if (!(element instanceof Element)) {\n          util$1.throw('\"createItemContent\" must return an instance of Element');\n        }\n\n        done({ element: element });\n      }\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'countItems',\n    value: function countItems() {\n      var count = this._userDelegate.countItems();\n      if (typeof count !== 'number') {\n        util$1.throw('\"countItems\" must return a number');\n      }\n      return count;\n    }\n\n    /**\n     * @param {Number} index\n     * @param {Object} item\n     * @param {Element} item.element\n     */\n\n  }, {\n    key: 'updateItem',\n    value: function updateItem(index, item) {\n      if (this._userDelegate.updateItemContent instanceof Function) {\n        this._userDelegate.updateItemContent(index, item);\n      }\n    }\n\n    /**\n     * @return {Number}\n     */\n\n  }, {\n    key: 'calculateItemHeight',\n    value: function calculateItemHeight(index) {\n      if (this._userDelegate.calculateItemHeight instanceof Function) {\n        var height = this._userDelegate.calculateItemHeight(index);\n\n        if (typeof height !== 'number') {\n          util$1.throw('\"calculateItemHeight\" must return a number');\n        }\n\n        return height;\n      }\n\n      return 0;\n    }\n\n    /**\n     * @param {Number} index\n     * @param {Object} item\n     */\n\n  }, {\n    key: 'destroyItem',\n    value: function destroyItem(index, item) {\n      if (this._userDelegate.destroyItem instanceof Function) {\n        this._userDelegate.destroyItem(index, item);\n      }\n    }\n\n    /**\n     * @return {void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._userDelegate.destroy instanceof Function) {\n        this._userDelegate.destroy();\n      }\n\n      this._userDelegate = this._templateElement = null;\n    }\n  }, {\n    key: 'itemHeight',\n    get: function get$$1() {\n      return this._userDelegate.itemHeight;\n    }\n  }]);\n  return LazyRepeatDelegate;\n}();\n\n/**\n * This class provide core functions for ons-lazy-repeat.\n */\nvar LazyRepeatProvider = function () {\n\n  /**\n   * @param {Element} wrapperElement\n   * @param {LazyRepeatDelegate} delegate\n   */\n  function LazyRepeatProvider(wrapperElement, delegate) {\n    classCallCheck(this, LazyRepeatProvider);\n\n    if (!(delegate instanceof LazyRepeatDelegate)) {\n      util$1.throw('\"delegate\" parameter must be an instance of LazyRepeatDelegate');\n    }\n\n    this._wrapperElement = wrapperElement;\n    this._delegate = delegate;\n    this._insertIndex = this._wrapperElement.children[0] && this._wrapperElement.children[0].tagName === 'ONS-LAZY-REPEAT' ? 1 : 0;\n\n    if (wrapperElement.tagName.toLowerCase() === 'ons-list') {\n      wrapperElement.classList.add('lazy-list');\n    }\n\n    this._pageContent = this._findPageContentElement(wrapperElement);\n\n    if (!this._pageContent) {\n      util$1.throw('LazyRepeat must be descendant of a Page element');\n    }\n\n    this.lastScrollTop = this._pageContent.scrollTop;\n    this.padding = 0;\n    this._topPositions = [0];\n    this._renderedItems = {};\n\n    if (!this._delegate.itemHeight && !this._delegate.calculateItemHeight(0)) {\n      this._unknownItemHeight = true;\n    }\n\n    this._addEventListeners();\n    this._onChange();\n  }\n\n  createClass(LazyRepeatProvider, [{\n    key: '_findPageContentElement',\n    value: function _findPageContentElement(wrapperElement) {\n      var pageContent = util$1.findParent(wrapperElement, '.page__content');\n\n      if (pageContent) {\n        return pageContent;\n      }\n\n      var page = util$1.findParent(wrapperElement, 'ons-page');\n      if (page) {\n        var content = util$1.findChild(page, '.content');\n        if (content) {\n          return content;\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: '_checkItemHeight',\n    value: function _checkItemHeight(callback) {\n      var _this = this;\n\n      this._delegate.loadItemElement(0, function (item) {\n        if (!_this._unknownItemHeight) {\n          util$1.throw('Invalid state');\n        }\n\n        _this._wrapperElement.appendChild(item.element);\n\n        var done = function done() {\n          _this._delegate.destroyItem(0, item);\n          item.element && item.element.remove();\n          delete _this._unknownItemHeight;\n          callback();\n        };\n\n        _this._itemHeight = item.element.offsetHeight;\n\n        if (_this._itemHeight > 0) {\n          done();\n          return;\n        }\n\n        // retry to measure offset height\n        // dirty fix for angular2 directive\n        _this._wrapperElement.style.visibility = 'hidden';\n        item.element.style.visibility = 'hidden';\n\n        setImmediate(function () {\n          _this._itemHeight = item.element.offsetHeight;\n          if (_this._itemHeight == 0) {\n            util$1.throw('Invalid state: \"itemHeight\" must be greater than zero');\n          }\n          _this._wrapperElement.style.visibility = '';\n          done();\n        });\n      });\n    }\n  }, {\n    key: '_countItems',\n    value: function _countItems() {\n      return this._delegate.countItems();\n    }\n  }, {\n    key: '_getItemHeight',\n    value: function _getItemHeight(i) {\n      // Item is rendered\n      if (this._renderedItems.hasOwnProperty(i)) {\n        if (!this._renderedItems[i].hasOwnProperty('height')) {\n          this._renderedItems[i].height = this._renderedItems[i].element.offsetHeight;\n        }\n        return this._renderedItems[i].height;\n      }\n\n      // Item is not rendered, scroll up\n      if (this._topPositions[i + 1] && this._topPositions[i]) {\n        return this._topPositions[i + 1] - this._topPositions[i];\n      }\n      // Item is not rendered, scroll down\n      return this.staticItemHeight || this._delegate.calculateItemHeight(i);\n    }\n  }, {\n    key: '_calculateRenderedHeight',\n    value: function _calculateRenderedHeight() {\n      var _this2 = this;\n\n      return Object.keys(this._renderedItems).reduce(function (a, b) {\n        return a + _this2._getItemHeight(+b);\n      }, 0);\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange() {\n      this._render();\n    }\n  }, {\n    key: '_lastItemRendered',\n    value: function _lastItemRendered() {\n      return Math.max.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));\n    }\n  }, {\n    key: '_firstItemRendered',\n    value: function _firstItemRendered() {\n      return Math.min.apply(Math, toConsumableArray(Object.keys(this._renderedItems)));\n    }\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      var forceRender = { forceScrollDown: true };\n      var firstItemIndex = this._firstItemRendered();\n\n      if (util$1.isInteger(firstItemIndex)) {\n        this._wrapperElement.style.height = this._topPositions[firstItemIndex] + this._calculateRenderedHeight() + 'px';\n        this.padding = this._topPositions[firstItemIndex];\n        forceRender.forceFirstIndex = firstItemIndex;\n      }\n\n      this._removeAllElements();\n      this._render(forceRender);\n      this._wrapperElement.style.height = 'inherit';\n    }\n  }, {\n    key: '_render',\n    value: function _render() {\n      var _this3 = this;\n\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$forceScrollDown = _ref.forceScrollDown,\n          forceScrollDown = _ref$forceScrollDown === undefined ? false : _ref$forceScrollDown,\n          forceFirstIndex = _ref.forceFirstIndex,\n          forceLastIndex = _ref.forceLastIndex;\n\n      if (this._unknownItemHeight) {\n        return this._checkItemHeight(this._render.bind(this, arguments[0]));\n      }\n\n      var isScrollUp = !forceScrollDown && this.lastScrollTop > this._pageContent.scrollTop;\n      this.lastScrollTop = this._pageContent.scrollTop;\n      var keep = {};\n\n      var offset = this._wrapperElement.getBoundingClientRect().top;\n      var limit = 4 * window.innerHeight - offset;\n      var count = this._countItems();\n\n      var start = forceFirstIndex || Math.max(0, this._calculateStartIndex(offset) - 30); // Recalculate for 0 or undefined\n      var i = start;\n\n      for (var top = this._topPositions[i]; i < count && top < limit; i++) {\n        if (i >= this._topPositions.length) {\n          // perf optimization\n          this._topPositions.length += 100;\n        }\n\n        this._topPositions[i] = top;\n        top += this._getItemHeight(i);\n      }\n\n      if (this._delegate.hasRenderFunction && this._delegate.hasRenderFunction()) {\n        return this._delegate._render(start, i, function () {\n          _this3.padding = _this3._topPositions[start];\n        });\n      }\n\n      if (isScrollUp) {\n        for (var j = i - 1; j >= start; j--) {\n          keep[j] = true;\n          this._renderElement(j, isScrollUp);\n        }\n      } else {\n        var lastIndex = forceLastIndex || Math.max.apply(Math, [i - 1].concat(toConsumableArray(Object.keys(this._renderedItems)))); // Recalculate for 0 or undefined\n        for (var _j = start; _j <= lastIndex; _j++) {\n          keep[_j] = true;\n          this._renderElement(_j, isScrollUp);\n        }\n      }\n\n      Object.keys(this._renderedItems).forEach(function (key) {\n        return keep[key] || _this3._removeElement(key, isScrollUp);\n      });\n    }\n\n    /**\n     * @param {Number} index\n     * @param {Boolean} isScrollUp\n     */\n\n  }, {\n    key: '_renderElement',\n    value: function _renderElement(index, isScrollUp) {\n      var _this4 = this;\n\n      var item = this._renderedItems[index];\n      if (item) {\n        this._delegate.updateItem(index, item); // update if it exists\n        return;\n      }\n\n      this._delegate.loadItemElement(index, function (item) {\n        if (isScrollUp) {\n          _this4._wrapperElement.insertBefore(item.element, _this4._wrapperElement.children[_this4._insertIndex]);\n          _this4.padding = _this4._topPositions[index];\n          item.height = _this4._topPositions[index + 1] - _this4._topPositions[index];\n        } else {\n          _this4._wrapperElement.appendChild(item.element);\n        }\n\n        _this4._renderedItems[index] = item;\n      });\n    }\n\n    /**\n     * @param {Number} index\n     * @param {Boolean} isScrollUp\n     */\n\n  }, {\n    key: '_removeElement',\n    value: function _removeElement(index) {\n      var isScrollUp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      index = +index;\n      var item = this._renderedItems[index];\n      this._delegate.destroyItem(index, item);\n\n      if (isScrollUp) {\n        this._topPositions[index + 1] = undefined;\n      } else {\n        this.padding = this.padding + this._getItemHeight(index);\n      }\n\n      if (item.element.parentElement) {\n        item.element.parentElement.removeChild(item.element);\n      }\n\n      delete this._renderedItems[index];\n    }\n  }, {\n    key: '_removeAllElements',\n    value: function _removeAllElements() {\n      var _this5 = this;\n\n      Object.keys(this._renderedItems).forEach(function (key) {\n        return _this5._removeElement(key);\n      });\n    }\n  }, {\n    key: '_recalculateTopPositions',\n    value: function _recalculateTopPositions(start, end) {\n      for (var i = start; i <= end; i++) {\n        this._topPositions[i + 1] = this._topPositions[i] + this._getItemHeight(i);\n      }\n    }\n  }, {\n    key: '_calculateStartIndex',\n    value: function _calculateStartIndex(current) {\n      var firstItemIndex = this._firstItemRendered();\n      var lastItemIndex = this._lastItemRendered();\n\n      // Fix for Safari scroll and Angular 2\n      this._recalculateTopPositions(firstItemIndex, lastItemIndex);\n\n      var start = 0;\n      var end = this._countItems() - 1;\n\n      // Binary search for index at top of screen so we can speed up rendering.\n      for (;;) {\n        var middle = Math.floor((start + end) / 2);\n        var value = current + this._topPositions[middle];\n\n        if (end < start) {\n          return 0;\n        } else if (value <= 0 && value + this._getItemHeight(middle) > 0) {\n          return middle;\n        } else if (isNaN(value) || value >= 0) {\n          end = middle - 1;\n        } else {\n          start = middle + 1;\n        }\n      }\n    }\n  }, {\n    key: '_debounce',\n    value: function _debounce(func, wait, immediate) {\n      var timeout = void 0;\n      return function () {\n        var _this6 = this,\n            _arguments = arguments;\n\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        if (callNow) {\n          func.apply(this, arguments);\n        } else {\n          timeout = setTimeout(function () {\n            timeout = null;\n            func.apply(_this6, _arguments);\n          }, wait);\n        }\n      };\n    }\n  }, {\n    key: '_doubleFireOnTouchend',\n    value: function _doubleFireOnTouchend() {\n      this._render();\n      this._debounce(this._render.bind(this), 100);\n    }\n  }, {\n    key: '_addEventListeners',\n    value: function _addEventListeners() {\n      util$1.bindListeners(this, ['_onChange', '_doubleFireOnTouchend']);\n\n      if (platform.isIOS()) {\n        this._boundOnChange = this._debounce(this._boundOnChange, 30);\n      }\n\n      this._pageContent.addEventListener('scroll', this._boundOnChange, true);\n\n      if (platform.isIOS()) {\n        util$1.addEventListener(this._pageContent, 'touchmove', this._boundOnChange, { capture: true, passive: true });\n        this._pageContent.addEventListener('touchend', this._boundDoubleFireOnTouchend, true);\n      }\n\n      window.document.addEventListener('resize', this._boundOnChange, true);\n    }\n  }, {\n    key: '_removeEventListeners',\n    value: function _removeEventListeners() {\n      this._pageContent.removeEventListener('scroll', this._boundOnChange, true);\n\n      if (platform.isIOS()) {\n        util$1.removeEventListener(this._pageContent, 'touchmove', this._boundOnChange, { capture: true, passive: true });\n        this._pageContent.removeEventListener('touchend', this._boundDoubleFireOnTouchend, true);\n      }\n\n      window.document.removeEventListener('resize', this._boundOnChange, true);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._removeAllElements();\n      this._delegate.destroy();\n      this._parentElement = this._delegate = this._renderedItems = null;\n      this._removeEventListeners();\n    }\n  }, {\n    key: 'padding',\n    get: function get$$1() {\n      return parseInt(this._wrapperElement.style.paddingTop, 10);\n    },\n    set: function set$$1(newValue) {\n      this._wrapperElement.style.paddingTop = newValue + 'px';\n    }\n  }, {\n    key: 'staticItemHeight',\n    get: function get$$1() {\n      return this._delegate.itemHeight || this._itemHeight;\n    }\n  }]);\n  return LazyRepeatProvider;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @element ons-lazy-repeat\n * @category list\n * @description\n *   [en]\n *     Using this component a list with millions of items can be rendered without a drop in performance.\n *     It does that by \"lazily\" loading elements into the DOM when they come into view and\n *     removing items from the DOM when they are not visible.\n *   [/en]\n *   [ja]\n *     このコンポーネント内で描画されるアイテムのDOM要素の読み込みは、画面に見えそうになった時まで自動的に遅延され、\n *     画面から見えなくなった場合にはその要素は動的にアンロードされます。\n *     このコンポーネントを使うことで、パフォーマンスを劣化させること無しに巨大な数の要素を描画できます。\n *   [/ja]\n * @codepen QwrGBm\n * @tutorial vanilla/Reference/lazy-repeat\n * @seealso ons-list\n *   [en]The `<ons-list>` element is used to render a list.[/en]\n *   [ja]`<ons-list>`要素はリストを描画するのに使われます。[/ja]\n * @example\n * <script>\n *   window.addEventListener('load', function() {\n *     var lazyRepeat = document.querySelector('#list');\n *     lazyRepeat.delegate = {\n *      createItemContent: function(i, template) {\n *        var dom = template.cloneNode(true);\n *        dom.innerText = i;\n *\n *        return dom;\n *      },\n *      countItems: function() {\n *        return 10000000;\n *      },\n *      destroyItem: function(index, item) {\n *        console.log('Destroyed item with index: ' + index);\n *      }\n *     };\n *   });\n * </script>\n *\n * <ons-list id=\"list\">\n *   <ons-lazy-repeat>\n *     <ons-list-item></ons-list-item>\n *   </ons-lazy-repeat>\n * </ons-list>\n */\n\nvar LazyRepeatElement = function (_BaseElement) {\n  inherits(LazyRepeatElement, _BaseElement);\n\n  function LazyRepeatElement() {\n    classCallCheck(this, LazyRepeatElement);\n    return possibleConstructorReturn(this, (LazyRepeatElement.__proto__ || Object.getPrototypeOf(LazyRepeatElement)).apply(this, arguments));\n  }\n\n  createClass(LazyRepeatElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      // not very good idea and also not documented\n      if (this.hasAttribute('delegate')) {\n        this.delegate = window[this.getAttribute('delegate')];\n      }\n    }\n\n    /**\n     * @property delegate\n     * @type {Object}\n     * @description\n     *  [en]Specify a delegate object to load and unload item elements.[/en]\n     *  [ja]要素のロード、アンロードなどの処理を委譲するオブジェクトを指定します。[/ja]\n     */\n\n    /**\n     * @property delegate.createItemContent\n     * @type {Function}\n     * @description\n     *   [en]\n     *     This function should return a `HTMLElement`.\n     *\n     *     To help rendering the element, the current index and a template is supplied as arguments. The template is the initial content of the `<ons-lazy-repeat>` element.\n     *   [/en]\n     *   [ja]\n     *     この関数は`HTMLElement`を返してください。\n     *     要素を生成しやすくするために、現在のアイテムのインデックスとテンプレートが引数に渡されます。\n     *     このテンプレートは、`<ons-lazy-repeat>`要素のコンテンツが渡されます。\n     *   [/ja]\n     */\n\n    /**\n     * @property delegate.countItems\n     * @type {Function}\n     * @description\n     *   [en]Should return the number of items in the list.[/en]\n     *   [ja]リスト内のアイテム数を返してください。[/ja]\n     */\n\n    /**\n     * @property delegate.calculateItemHeight\n     * @type {Function}\n     * @description\n     *   [en]\n     *     Should return the height of an item. The index is provided as an argument.\n     *\n     *     This is important when rendering lists where the items have different height.\n     *\n     *     The function is optional and if it isn't present the height of the first item will be automatically calculated and used for all other items.\n     *   [/en]\n     *   [ja]\n     *     アイテムの高さ(ピクセル)を返してください。アイテムのインデックス値は引数で渡されます。\n     *     この関数は、それぞれのアイムが違った高さを持つリストをレンダリングする際に重要です。\n     *     この関数はオプショナルです。もしこの関数が無い場合には、\n     *     最初のアイテムの高さが他のすべてのアイテムの高さとして利用されます。\n     *   [/ja]\n     */\n\n    /**\n     * @property delegate.destroyItem\n     * @type {Function}\n     * @description\n     *   [en]\n     *     This function is used called when an item is removed from the DOM. The index and DOM element is provided as arguments.\n     *\n     *     The function is optional but may be important in order to avoid memory leaks.\n     *   [/en]\n     *   [ja]\n     *     この関数は、あるアイテムがDOMツリーから除かれた時に呼び出されます。\n     *     アイテムのインデックス値とDOM要素が引数として渡されます。\n     *     この関数はオプショナルですが、各アイテムの後処理が必要な場合にはメモリーリークを避けるために重要です。\n     *   [/ja]\n     */\n\n  }, {\n    key: 'refresh',\n\n\n    /**\n     * @method refresh\n     * @signature refresh()\n     * @description\n     *   [en]Refresh the list. Use this method when the data has changed.[/en]\n     *   [ja]リストを更新します。もしデータが変わった場合にはこのメソッドを使ってください。[/ja]\n     */\n    value: function refresh() {\n      this._lazyRepeatProvider && this._lazyRepeatProvider.refresh();\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {}\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      if (this._lazyRepeatProvider) {\n        this._lazyRepeatProvider.destroy();\n        this._lazyRepeatProvider = null;\n      }\n    }\n  }, {\n    key: 'delegate',\n    set: function set$$1(userDelegate) {\n      this._lazyRepeatProvider && this._lazyRepeatProvider.destroy();\n\n      if (!this._templateElement && this.children[0]) {\n        this._templateElement = this.removeChild(this.children[0]);\n      }\n\n      var delegate = new LazyRepeatDelegate(userDelegate, this._templateElement || null);\n      this._lazyRepeatProvider = new LazyRepeatProvider(this.parentElement, delegate);\n    },\n    get: function get$$1() {\n      util$1.throw('No delegate getter');\n    }\n  }]);\n  return LazyRepeatElement;\n}(BaseElement);\n\ninternal$1.LazyRepeatDelegate = LazyRepeatDelegate;\ninternal$1.LazyRepeatProvider = LazyRepeatProvider;\n\nonsElements.LazyRepeat = LazyRepeatElement;\ncustomElements.define('ons-lazy-repeat', LazyRepeatElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$4 = 'list-header';\nvar scheme$8 = { '': 'list-header--*' };\n\n/**\n * @element ons-list-header\n * @category list\n * @description\n *   [en]Header element for list items. Must be put inside the `<ons-list>` component.[/en]\n *   [ja]リスト要素に使用するヘッダー用コンポーネント。ons-listと共に使用します。[/ja]\n * @seealso ons-list\n *   [en]The `<ons-list>` component[/en]\n *   [ja]ons-listコンポーネント[/ja]\n * @seealso ons-list-item\n *   [en]The `<ons-list-item>` component[/en]\n *   [ja]ons-list-itemコンポーネント[/ja]\n * @codepen yxcCt\n * @tutorial vanilla/Reference/list\n * @modifier material\n *   [en]Display a Material Design list header.[/en]\n *   [ja][/ja]\n * @example\n * <ons-list>\n *   <ons-list-header>Header Text</ons-list-header>\n *   <ons-list-item>Item</ons-list-item>\n *   <ons-list-item>Item</ons-list-item>\n * </ons-list>\n */\n\nvar ListHeaderElement = function (_BaseElement) {\n  inherits(ListHeaderElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the list header.[/en]\n   *   [ja]ヘッダーの表現を指定します。[/ja]\n   */\n\n  function ListHeaderElement() {\n    classCallCheck(this, ListHeaderElement);\n\n    var _this = possibleConstructorReturn(this, (ListHeaderElement.__proto__ || Object.getPrototypeOf(ListHeaderElement)).call(this));\n\n    _this._compile();\n    return _this;\n  }\n\n  createClass(ListHeaderElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$4);\n      ModifierUtil.initModifier(this, scheme$8);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$4, scheme$8);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$8);\n          break;\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return ListHeaderElement;\n}(BaseElement);\n\nonsElements.ListHeader = ListHeaderElement;\ncustomElements.define('ons-list-header', ListHeaderElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$5 = 'list-title';\nvar scheme$9 = { '': 'list-title--*' };\n\n/**\n * @element ons-list-title\n * @category list\n * @description\n *   [en]Represents a list title.[/en]\n *   [ja]リストのタイトルを表現します。[/ja]\n * @example\n * <ons-list-title>List Title</ons-list-title>\n * <ons-list>\n *   <ons-list-item>Item</ons-list-item>\n * </ons-list>\n * @modifier material\n *   [en]Display a Material Design list title.[/en]\n *   [ja][/ja]\n */\n\nvar ListTitleElement = function (_BaseElement) {\n  inherits(ListTitleElement, _BaseElement);\n\n  function ListTitleElement() {\n    classCallCheck(this, ListTitleElement);\n\n    var _this = possibleConstructorReturn(this, (ListTitleElement.__proto__ || Object.getPrototypeOf(ListTitleElement)).call(this));\n\n    _this._compile();\n    return _this;\n  }\n\n  createClass(ListTitleElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$5);\n      ModifierUtil.initModifier(this, scheme$9);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$5, scheme$9);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$9);\n          break;\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return ListTitleElement;\n}(BaseElement);\n\nonsElements.ListTitle = ListTitleElement;\ncustomElements.define('ons-list-title', ListTitleElement);\n\n/*\nCopyright 2013-2018 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar ListItemAnimator = function (_BaseAnimator) {\n  inherits(ListItemAnimator, _BaseAnimator);\n\n  function ListItemAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, ListItemAnimator);\n    return possibleConstructorReturn(this, (ListItemAnimator.__proto__ || Object.getPrototypeOf(ListItemAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  createClass(ListItemAnimator, [{\n    key: 'showExpansion',\n    value: function showExpansion(listItem, callback) {\n      callback();\n    }\n  }, {\n    key: 'hideExpansion',\n    value: function hideExpansion(listItem, callback) {\n      callback();\n    }\n  }]);\n  return ListItemAnimator;\n}(BaseAnimator);\n\nvar SlideListItemAnimator = function (_ListItemAnimator) {\n  inherits(SlideListItemAnimator, _ListItemAnimator);\n\n  function SlideListItemAnimator() {\n    classCallCheck(this, SlideListItemAnimator);\n    return possibleConstructorReturn(this, (SlideListItemAnimator.__proto__ || Object.getPrototypeOf(SlideListItemAnimator)).apply(this, arguments));\n  }\n\n  createClass(SlideListItemAnimator, [{\n    key: 'showExpansion',\n    value: function showExpansion(listItem, callback) {\n      this._animateExpansion(listItem, true, callback);\n    }\n  }, {\n    key: 'hideExpansion',\n    value: function hideExpansion(listItem, callback) {\n      this._animateExpansion(listItem, false, callback);\n    }\n  }, {\n    key: '_animateExpansion',\n    value: function _animateExpansion(listItem, shouldOpen, callback) {\n      var _animit;\n\n      // To animate the opening of the expansion panel correctly, we need to know its\n      // height. To calculate this, we set its height to auto, and then get the computed\n      // height and padding. Once this is done, we set the height back to its original value.\n      var oldHeight = listItem.expandableContent.style.height;\n      var oldDisplay = listItem.expandableContent.style.display;\n      listItem.expandableContent.style.height = 'auto';\n      listItem.expandableContent.style.display = 'block';\n      var computedStyle = window.getComputedStyle(listItem.expandableContent);\n\n      var expansionOpenTransition = [{ height: 0, paddingTop: 0, paddingBottom: 0 }, {\n        height: computedStyle.height,\n        paddingTop: computedStyle.paddingTop,\n        paddingBottom: computedStyle.paddingBottom\n      }];\n      var iconOpenTransition = [{ transform: 'rotate(45deg)' }, { transform: 'rotate(225deg)' }];\n\n      // Now that we have the values we need, reset the height back to its original state\n      listItem.expandableContent.style.height = oldHeight;\n\n      (_animit = Animit(listItem.expandableContent, { duration: this.duration, property: 'height padding-top padding-bottom' })).default.apply(_animit, toConsumableArray(shouldOpen ? expansionOpenTransition : expansionOpenTransition.reverse())).play(function () {\n        listItem.expandableContent.style.display = oldDisplay;\n        callback && callback();\n      });\n\n      if (listItem.expandChevron) {\n        var _animit2;\n\n        (_animit2 = Animit(listItem.expandChevron, { duration: this.duration, property: 'transform' })).default.apply(_animit2, toConsumableArray(shouldOpen ? iconOpenTransition : iconOpenTransition.reverse())).play();\n      }\n    }\n  }]);\n  return SlideListItemAnimator;\n}(ListItemAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$6 = 'list-item';\nvar scheme$10 = {\n  '.list-item': 'list-item--*',\n  '.list-item__left': 'list-item--*__left',\n  '.list-item__center': 'list-item--*__center',\n  '.list-item__right': 'list-item--*__right',\n  '.list-item__label': 'list-item--*__label',\n  '.list-item__title': 'list-item--*__title',\n  '.list-item__subtitle': 'list-item--*__subtitle',\n  '.list-item__thumbnail': 'list-item--*__thumbnail',\n  '.list-item__icon': 'list-item--*__icon'\n};\n\nvar _animatorDict$3 = {\n  'default': SlideListItemAnimator,\n  'none': ListItemAnimator\n};\n\n/**\n * @element ons-list-item\n * @category list\n * @modifier tappable\n *   [en]Make the list item change appearance when it's tapped. On iOS it is better to use the \"tappable\" and \"tap-background-color\" attribute for better behavior when scrolling.[/en]\n *   [ja]タップやクリックした時に効果が表示されるようになります。[/ja]\n * @modifier chevron\n *   [en]Display a chevron at the right end of the list item and make it change appearance when tapped.[/en]\n *   [ja][/ja]\n * @modifier longdivider\n *   [en]Displays a long horizontal divider between items.[/en]\n *   [ja][/ja]\n * @modifier nodivider\n *   [en]Removes the divider between list items.[/en]\n *   [ja][/ja]\n * @modifier material\n *   [en]Display a Material Design list item.[/en]\n *   [ja][/ja]\n * @description\n *   [en]\n *     Component that represents each item in a list. The list item is composed of four parts that are represented with the `left`, `center`, `right` and `expandable-content` classes. These classes can be used to ensure that the content of the list items is properly aligned.\n *\n *     ```\n *     <ons-list-item>\n *       <div class=\"left\">Left</div>\n *       <div class=\"center\">Center</div>\n *       <div class=\"right\">Right</div>\n *       <div class=\"expandable-content\">Expandable content</div>\n *     </ons-list-item>\n *     ```\n *\n *     There are also a number of classes (prefixed with `list-item__*`) that help when putting things like icons and thumbnails into the list items.\n *   [/en]\n *   [ja][/ja]\n * @seealso ons-list\n *   [en]ons-list component[/en]\n *   [ja]ons-listコンポーネント[/ja]\n * @seealso ons-list-header\n *   [en]ons-list-header component[/en]\n *   [ja]ons-list-headerコンポーネント[/ja]\n * @codepen yxcCt\n * @tutorial vanilla/Reference/list\n * @example\n * <ons-list-item>\n *   <div class=\"left\">\n *     <ons-icon icon=\"md-face\" class=\"list-item__icon\"></ons-icon>\n *   </div>\n *   <div class=\"center\">\n *     <div class=\"list-item__title\">Title</div>\n *     <div class=\"list-item__subtitle\">Subtitle</div>\n *   </div>\n *   <div class=\"right\">\n *     <ons-switch></ons-switch>\n *   </div>\n * </ons-list-item>\n */\n\nvar ListItemElement = function (_BaseElement) {\n  inherits(ListItemElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the list item.[/en]\n   *   [ja]各要素の表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute lock-on-drag\n   * @type {String}\n   * @description\n   *   [en]Prevent vertical scrolling when the user drags horizontally.[/en]\n   *   [ja]この属性があると、ユーザーがこの要素を横方向にドラッグしている時に、縦方向のスクロールが起きないようになります。[/ja]\n   */\n\n  /**\n   * @attribute tappable\n   * @type {Boolean}\n   * @description\n   *   [en]Makes the element react to taps. `prevent-tap` attribute can be added to child elements like buttons or inputs to prevent this effect. `ons-*` elements are ignored by default.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute tap-background-color\n   * @type {Color}\n   * @description\n   *   [en] Changes the background color when tapped. For this to work, the attribute \"tappable\" needs to be set. The default color is \"#d9d9d9\". It will display as a ripple effect on Android.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute expandable\n   * @type {Boolean}\n   * @description\n   *   [en]Makes the element able to be expanded to reveal extra content. For this to work, the expandable content must be defined in `div.expandable-content`.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the expandable content. Can be either `\"default\"` or `\"none\"`.[/en]\n   *  [ja][/ja]\n   */\n\n  function ListItemElement() {\n    classCallCheck(this, ListItemElement);\n\n    var _this = possibleConstructorReturn(this, (ListItemElement.__proto__ || Object.getPrototypeOf(ListItemElement)).call(this));\n\n    _this._animatorFactory = _this._updateAnimatorFactory();\n    _this.toggleExpansion = _this.toggleExpansion.bind(_this);\n\n    // Elements ignored when tapping\n    var re = /^ons-(?!col$|row$|if$)/i;\n    _this._shouldIgnoreTap = function (e) {\n      return e.hasAttribute('prevent-tap') || re.test(e.tagName);\n    };\n\n    // show and hide functions for Vue hidable mixin\n    _this.show = _this.showExpansion;\n    _this.hide = _this.hideExpansion;\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n    return _this;\n  }\n\n  /**\n   * Compiles the list item.\n   *\n   * Various elements are allowed in the body of a list item:\n   *\n   *  - div.left, div.right, and div.center are allowed as direct children\n   *  - if div.center is not defined, anything that isn't div.left, div.right or div.expandable-content will be put in a div.center\n   *  - if div.center is defined, anything that isn't div.left, div.right or div.expandable-content will be ignored\n   *  - if list item has expandable attribute:\n   *      - div.expandable-content is allowed as a direct child\n   *      - div.top is allowed as direct child\n   *      - if div.top is defined, anything that isn't div.expandable-content should be inside div.top - anything else will be ignored\n   *      - if div.right is not defined, a div.right will be created with a drop-down chevron\n   *\n   * See the tests for examples.\n   */\n\n\n  createClass(ListItemElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$6);\n\n      var top = void 0,\n          expandableContent = void 0;\n      var topContent = [];\n      Array.from(this.childNodes).forEach(function (node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          topContent.push(node);\n        } else if (node.classList.contains('top')) {\n          top = node;\n        } else if (node.classList.contains('expandable-content')) {\n          expandableContent = node;\n        } else {\n          topContent.push(node);\n        }\n\n        if (node.nodeName !== 'ONS-RIPPLE') {\n          node.remove();\n        }\n      });\n      topContent = top ? Array.from(top.childNodes) : topContent;\n\n      var left = void 0,\n          right = void 0,\n          center = void 0;\n      var centerContent = [];\n      topContent.forEach(function (node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          centerContent.push(node);\n        } else if (node.classList.contains('left')) {\n          left = node;\n        } else if (node.classList.contains('right')) {\n          right = node;\n        } else if (node.classList.contains('center')) {\n          center = node;\n        } else {\n          centerContent.push(node);\n        }\n      });\n\n      if (this.hasAttribute('expandable')) {\n        this.classList.add('list-item--expandable');\n\n        if (!top) {\n          top = document.createElement('div');\n          top.classList.add('top');\n        }\n        top.classList.add('list-item__top');\n        this.appendChild(top);\n        this._top = top;\n\n        if (expandableContent) {\n          expandableContent.classList.add('list-item__expandable-content');\n          this.appendChild(expandableContent);\n        }\n\n        if (!right) {\n          right = document.createElement('div');\n          right.classList.add('list-item__right', 'right');\n\n          // We cannot use a pseudo-element for this chevron, as we cannot animate it using\n          // JS. So, we make a chevron span instead.\n          var chevron = document.createElement('span');\n          chevron.classList.add('list-item__expand-chevron');\n          right.appendChild(chevron);\n        }\n      } else {\n        top = this;\n      }\n\n      if (!center) {\n        center = document.createElement('div');\n        center.classList.add('center');\n        centerContent.forEach(function (node) {\n          return center.appendChild(node);\n        });\n      }\n      center.classList.add('list-item__center');\n      top.appendChild(center);\n\n      if (left) {\n        left.classList.add('list-item__left');\n        top.appendChild(left);\n      }\n      if (right) {\n        right.classList.add('list-item__right');\n        top.appendChild(right);\n      }\n\n      util$1.updateRipple(this);\n      ModifierUtil.initModifier(this, scheme$10);\n    }\n\n    /**\n     * @method showExpansion\n     * @signature showExpansion()\n     * @description\n     *   [en]Show the expandable content if the element is expandable.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'showExpansion',\n    value: function showExpansion() {\n      var _this2 = this;\n\n      if (this.hasAttribute('expandable') && !this._expanding) {\n        this.expanded = true;\n        this._expanding = true;\n\n        var animator = this._animatorFactory.newAnimator();\n        animator.showExpansion(this, function () {\n          _this2.classList.add('expanded');\n          _this2._expanding = false;\n        });\n      }\n    }\n\n    /**\n     * @method hideExpansion\n     * @signature hideExpansion()\n     * @description\n     *   [en]Hide the expandable content if the element expandable.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'hideExpansion',\n    value: function hideExpansion() {\n      var _this3 = this;\n\n      if (this.hasAttribute('expandable') && !this._expanding) {\n        this.expanded = false;\n        this._expanding = true;\n\n        var animator = this._animatorFactory.newAnimator();\n        animator.hideExpansion(this, function () {\n          _this3.classList.remove('expanded');\n          _this3._expanding = false;\n        });\n      }\n    }\n  }, {\n    key: 'toggleExpansion',\n    value: function toggleExpansion() {\n      this.classList.contains('expanded') ? this.hideExpansion() : this.showExpansion();\n      this.dispatchEvent(new Event('expansion'));\n    }\n  }, {\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict$3,\n        baseClass: ListItemAnimator,\n        baseClassName: 'ListItemAnimator',\n        defaultAnimation: this.getAttribute('animation') || 'default'\n      });\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$6, scheme$10);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$10);\n          break;\n        case 'ripple':\n          util$1.updateRipple(this);\n          break;\n        case 'animation':\n          this._animatorFactory = this._updateAnimatorFactory();\n          break;\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this4 = this;\n\n      contentReady(this, function () {\n        _this4._setupListeners(true);\n        _this4._originalBackgroundColor = _this4.style.backgroundColor;\n        _this4.tapped = false;\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._setupListeners(false);\n    }\n  }, {\n    key: '_setupListeners',\n    value: function _setupListeners(add) {\n      var action = (add ? 'add' : 'remove') + 'EventListener';\n      util$1[action](this, 'touchstart', this._onTouch, { passive: true });\n      util$1[action](this, 'touchmove', this._onRelease, { passive: true });\n      this[action]('touchcancel', this._onRelease);\n      this[action]('touchend', this._onRelease);\n      this[action]('touchleave', this._onRelease);\n      this[action]('drag', this._onDrag);\n      this[action]('mousedown', this._onTouch);\n      this[action]('mouseup', this._onRelease);\n      this[action]('mouseout', this._onRelease);\n\n      if (this._top) {\n        this._top[action]('click', this.toggleExpansion);\n      }\n    }\n  }, {\n    key: '_onDrag',\n    value: function _onDrag(event) {\n      var gesture = event.gesture;\n      // Prevent vertical scrolling if the users pans left or right.\n      if (this.hasAttribute('lock-on-drag') && ['left', 'right'].indexOf(gesture.direction) > -1) {\n        gesture.preventDefault();\n      }\n    }\n  }, {\n    key: '_onTouch',\n    value: function _onTouch(e) {\n      var _this5 = this;\n\n      if (this.tapped || this !== e.target && (this._shouldIgnoreTap(e.target) || util$1.findParent(e.target, this._shouldIgnoreTap, function (p) {\n        return p === _this5;\n      }))) {\n        return; // Ignore tap\n      }\n\n      this.tapped = true;\n      var touchStyle = { transition: 'background-color 0.0s linear 0.02s, box-shadow 0.0s linear 0.02s' };\n\n      if (this.hasAttribute('tappable')) {\n        if (this.style.backgroundColor) {\n          this._originalBackgroundColor = this.style.backgroundColor;\n        }\n\n        touchStyle.backgroundColor = this.getAttribute('tap-background-color') || '#d9d9d9';\n        touchStyle.boxShadow = '0px -1px 0px 0px ' + touchStyle.backgroundColor;\n      }\n\n      styler(this, touchStyle);\n    }\n  }, {\n    key: '_onRelease',\n    value: function _onRelease() {\n      this.tapped = false;\n      this.style.backgroundColor = this._originalBackgroundColor || '';\n      styler.clear(this, 'transition boxShadow');\n    }\n  }, {\n    key: 'expandableContent',\n    get: function get$$1() {\n      return this.querySelector('.list-item__expandable-content');\n    }\n  }, {\n    key: 'expandChevron',\n    get: function get$$1() {\n      return this.querySelector('.list-item__expand-chevron');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class', 'ripple', 'animation'];\n    }\n  }]);\n  return ListItemElement;\n}(BaseElement);\n\nonsElements.ListItem = ListItemElement;\ncustomElements.define('ons-list-item', ListItemElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$7 = 'list';\nvar scheme$11 = { '': 'list--*' };\n\n/**\n * @element ons-list\n * @category list\n * @modifier inset\n *   [en]Inset list that doesn't cover the whole width of the parent.[/en]\n *   [ja]親要素の画面いっぱいに広がらないリストを表示します。[/ja]\n * @modifier noborder\n *   [en]A list with no borders at the top and bottom.[/en]\n *   [ja]リストの上下のボーダーが無いリストを表示します。[/ja]\n * @description\n *   [en]Component to define a list, and the container for ons-list-item(s).[/en]\n *   [ja]リストを表現するためのコンポーネント。ons-list-itemのコンテナとして使用します。[/ja]\n * @seealso ons-list-item\n *   [en]ons-list-item component[/en]\n *   [ja]ons-list-itemコンポーネント[/ja]\n * @seealso ons-list-header\n *   [en]ons-list-header component[/en]\n *   [ja]ons-list-headerコンポーネント[/ja]\n * @seealso ons-lazy-repeat\n *   [en]ons-lazy-repeat component[/en]\n *   [ja]ons-lazy-repeatコンポーネント[/ja]\n * @codepen yxcCt\n * @tutorial vanilla/Reference/list\n * @example\n * <ons-list>\n *   <ons-list-header>Header Text</ons-list-header>\n *   <ons-list-item>Item</ons-list-item>\n *   <ons-list-item>Item</ons-list-item>\n * </ons-list>\n */\n\nvar ListElement = function (_BaseElement) {\n  inherits(ListElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the list.[/en]\n   *   [ja]リストの表現を指定します。[/ja]\n   */\n\n  function ListElement() {\n    classCallCheck(this, ListElement);\n\n    var _this = possibleConstructorReturn(this, (ListElement.__proto__ || Object.getPrototypeOf(ListElement)).call(this));\n\n    _this._compile();\n    return _this;\n  }\n\n  createClass(ListElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$7);\n      ModifierUtil.initModifier(this, scheme$11);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$7, scheme$11);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$11);\n          break;\n      }\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return ListElement;\n}(BaseElement);\n\nonsElements.List = ListElement;\ncustomElements.define('ons-list', ListElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar INPUT_ATTRIBUTES = ['autocapitalize', 'autocomplete', 'autocorrect', 'autofocus', 'disabled', 'inputmode', 'max', 'maxlength', 'min', 'minlength', 'name', 'pattern', 'placeholder', 'readonly', 'required', 'size', 'spellcheck', 'step', 'validator', 'value'];\n\nvar BaseInputElement = function (_BaseElement) {\n  inherits(BaseInputElement, _BaseElement);\n  createClass(BaseInputElement, [{\n    key: '_update',\n    value: function _update() {} // Optionally implemented\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      util$1.throwMember();\n    }\n  }]);\n\n  function BaseInputElement() {\n    classCallCheck(this, BaseInputElement);\n\n    var _this = possibleConstructorReturn(this, (BaseInputElement.__proto__ || Object.getPrototypeOf(BaseInputElement)).call(this));\n\n    if (_this.constructor === BaseInputElement) {\n      util$1.throwAbstract();\n    }\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    _this._boundDelegateEvent = _this._delegateEvent.bind(_this);\n    return _this;\n  }\n\n  createClass(BaseInputElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this._defaultClassName && this.classList.add(this._defaultClassName);\n\n      if (this.children.length !== 0) {\n        return;\n      }\n\n      this.appendChild(util$1.createFragment(this._template));\n\n      this._setInputId();\n\n      this._updateBoundAttributes();\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n  }, {\n    key: '_updateBoundAttributes',\n    value: function _updateBoundAttributes() {\n      var _this2 = this;\n\n      INPUT_ATTRIBUTES.forEach(function (attr) {\n        if (_this2.hasAttribute(attr)) {\n          _this2._input.setAttribute(attr, _this2.getAttribute(attr));\n        } else {\n          _this2._input.removeAttribute(attr);\n        }\n      });\n\n      this._update();\n    }\n  }, {\n    key: '_delegateEvent',\n    value: function _delegateEvent(event) {\n      var e = new CustomEvent(event.type, {\n        bubbles: false,\n        cancelable: true\n      });\n\n      return this.dispatchEvent(e);\n    }\n  }, {\n    key: '_setInputId',\n    value: function _setInputId() {\n      if (this.hasAttribute('input-id')) {\n        this._input.id = this.getAttribute('input-id');\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this3 = this;\n\n      contentReady(this, function () {\n        _this3._input.addEventListener('focus', _this3._boundDelegateEvent);\n        _this3._input.addEventListener('blur', _this3._boundDelegateEvent);\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      var _this4 = this;\n\n      contentReady(this, function () {\n        _this4._input.removeEventListener('focus', _this4._boundDelegateEvent);\n        _this4._input.removeEventListener('blur', _this4._boundDelegateEvent);\n      });\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this5 = this;\n\n      switch (name) {\n        case 'modifier':\n          contentReady(this, function () {\n            return ModifierUtil.onModifierChanged(last, current, _this5, _this5._scheme);\n          });\n          break;\n        case 'input-id':\n          contentReady(this, function () {\n            return _this5._setInputId();\n          });\n          break;\n        case 'class':\n          util$1.restoreClass(this, this._defaultClassName, this._scheme);\n          break;\n      }\n\n      if (INPUT_ATTRIBUTES.indexOf(name) >= 0) {\n        contentReady(this, function () {\n          return _this5._updateBoundAttributes();\n        });\n      }\n    }\n  }, {\n    key: 'blur',\n    value: function blur() {\n      this._input.blur();\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this._input.focus();\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return '';\n    }\n  }, {\n    key: '_input',\n    get: function get$$1() {\n      return this.querySelector('input');\n    }\n  }, {\n    key: 'value',\n    get: function get$$1() {\n      return this._input === null ? this.getAttribute('value') : this._input.value;\n    },\n    set: function set$$1(val) {\n      var _this6 = this;\n\n      contentReady(this, function () {\n        if (val instanceof Date) {\n          val = val.toISOString().substring(0, 10);\n        }\n        _this6._input.value = val;\n        _this6._update();\n      });\n    }\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'input-id', 'class'].concat(INPUT_ATTRIBUTES);\n    }\n  }]);\n  return BaseInputElement;\n}(BaseElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar scheme$12 = {\n  '.text-input': 'text-input--*',\n  '.text-input__label': 'text-input--*__label'\n};\n\n/**\n * @element ons-input\n * @category form\n * @modifier material\n *  [en]Displays a Material Design input.[/en]\n *  [ja][/ja]\n * @modifier underbar\n *  [en]Displays a horizontal line underneath a text input.[/en]\n *  [ja][/ja]\n * @modifier transparent\n *  [en]Displays a transparent input. Works for Material Design.[/en]\n *  [ja][/ja]\n * @description\n *  [en]\n *    An input element. The `type` attribute can be used to change the input type. All text input types are supported.\n *\n *    The component will automatically render as a Material Design input on Android devices.\n *\n *    Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-input>` element.\n *  [/en]\n *  [ja][/ja]\n * @tutorial vanilla/Reference/input\n * @seealso ons-checkbox\n *   [en]The `<ons-checkbox>` element is used to display a checkbox.[/en]\n *   [ja][/ja]\n * @seealso ons-radio\n *   [en]The `<ons-radio>` element is used to display a radio button.[/en]\n *   [ja][/ja]\n * @seealso ons-range\n *   [en]The `<ons-range>` element is used to display a range slider.[/en]\n *   [ja][/ja]\n * @seealso ons-switch\n *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]\n *   [ja][/ja]\n * @seealso ons-select\n *   [en]The `<ons-select>` element is used to display a select box.[/en]\n *   [ja][/ja]\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-input placeholder=\"Username\" float></ons-input>\n */\n\nvar InputElement = function (_BaseInputElement) {\n  inherits(InputElement, _BaseInputElement);\n\n  function InputElement() {\n    classCallCheck(this, InputElement);\n\n    var _this = possibleConstructorReturn(this, (InputElement.__proto__ || Object.getPrototypeOf(InputElement)).call(this));\n\n    _this._boundOnInput = _this._update.bind(_this);\n    _this._boundOnFocusin = _this._update.bind(_this);\n    return _this;\n  }\n\n  /* Inherited props */\n\n  createClass(InputElement, [{\n    key: '_update',\n    value: function _update() {\n      this._updateLabel();\n      this._updateLabelClass();\n    }\n  }, {\n    key: '_updateLabel',\n\n\n    /* Own props */\n\n    value: function _updateLabel() {\n      var label = this.getAttribute('placeholder') || '';\n\n      if (typeof this._helper.textContent !== 'undefined') {\n        this._helper.textContent = label;\n      } else {\n        this._helper.innerText = label;\n      }\n    }\n  }, {\n    key: '_updateLabelClass',\n    value: function _updateLabelClass() {\n      if (this.value === '') {\n        this._helper.classList.remove('text-input--material__label--active');\n      } else {\n        this._helper.classList.add('text-input--material__label--active');\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      get(InputElement.prototype.__proto__ || Object.getPrototypeOf(InputElement.prototype), 'connectedCallback', this).call(this);\n\n      contentReady(this, function () {\n        _this2._input.addEventListener('input', _this2._boundOnInput);\n        _this2._input.addEventListener('focusin', _this2._boundOnFocusin);\n      });\n\n      var type = this.getAttribute('type');\n      if (['checkbox', 'radio'].indexOf(type) >= 0) {\n        util$1.warn('Warn: <ons-input type=\"' + type + '\"> is deprecated since v2.4.0. Use <ons-' + type + '> instead.');\n      }\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      var _this3 = this;\n\n      get(InputElement.prototype.__proto__ || Object.getPrototypeOf(InputElement.prototype), 'disconnectedCallback', this).call(this);\n\n      contentReady(this, function () {\n        _this3._input.removeEventListener('input', _this3._boundOnInput);\n        _this3._input.removeEventListener('focusin', _this3._boundOnFocusin);\n      });\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this4 = this;\n\n      switch (name) {\n        case 'type':\n          contentReady(this, function () {\n            return _this4._input.setAttribute('type', _this4.type);\n          });\n          break;\n        default:\n          get(InputElement.prototype.__proto__ || Object.getPrototypeOf(InputElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n      }\n    }\n\n    /**\n     * @attribute placeholder\n     * @type {String}\n     * @description\n     *   [en]Placeholder text. In Material Design, this placeholder will be a floating label.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @attribute float\n     * @description\n     *  [en]If this attribute is present, the placeholder will be animated in Material Design.[/en]\n     *  [ja]この属性が設定された時、ラベルはアニメーションするようになります。[/ja]\n     */\n\n    /**\n     * @attribute type\n     * @type {String}\n     * @description\n     *  [en]\n     *    Specify the input type. This is the same as the \"type\" attribute for normal inputs. It expects strict text types such as `text`, `password`, etc. For checkbox, radio button, select or range, please have a look at the corresponding elements.\n     *\n     *    Please take a look at [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-type) for an exhaustive list of possible values. Depending on the platform and browser version some of these might not work.\n     *  [/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @attribute input-id\n     * @type {String}\n     * @description\n     *  [en]Specify the \"id\" attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @property value\n     * @type {String}\n     * @description\n     *   [en]The current value of the input.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the input is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the input.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the input.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$12;\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      return '\\n      <input type=\"' + this.type + '\" class=\"text-input\">\\n      <span class=\"text-input__label\"></span>\\n    ';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      var type = this.getAttribute('type');\n      return ['checkbox', 'radio'].indexOf(type) < 0 && type || 'text';\n    }\n  }, {\n    key: '_helper',\n    get: function get$$1() {\n      return this.querySelector('span');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(InputElement.__proto__ || Object.getPrototypeOf(InputElement), 'observedAttributes', this)), ['type']);\n    }\n  }]);\n  return InputElement;\n}(BaseInputElement);\n\nonsElements.Input = InputElement;\ncustomElements.define('ons-input', InputElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar BaseCheckboxElement = function (_BaseInputElement) {\n  inherits(BaseCheckboxElement, _BaseInputElement);\n\n  function BaseCheckboxElement() {\n    classCallCheck(this, BaseCheckboxElement);\n\n    var _this = possibleConstructorReturn(this, (BaseCheckboxElement.__proto__ || Object.getPrototypeOf(BaseCheckboxElement)).call(this));\n\n    if (_this.constructor === BaseCheckboxElement) {\n      util.throwAbstract();\n    }\n\n    contentReady(_this, function () {\n      _this.attributeChangedCallback('checked', null, _this.getAttribute('checked'));\n    });\n    return _this;\n  }\n\n  /* Inherited props */\n\n  createClass(BaseCheckboxElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'checked':\n          this.checked = current !== null;\n          break;\n        default:\n          get(BaseCheckboxElement.prototype.__proto__ || Object.getPrototypeOf(BaseCheckboxElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n      }\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      return '\\n      <input type=\"' + this.type + '\" class=\"' + this._defaultClassName + '__input\">\\n      <span class=\"' + this._defaultClassName + '__checkmark\"></span>\\n    ';\n    }\n\n    /* Own props */\n\n  }, {\n    key: '_helper',\n    get: function get$$1() {\n      return this.querySelector('span');\n    }\n  }, {\n    key: 'checked',\n    get: function get$$1() {\n      return this._input.checked;\n    },\n    set: function set$$1(val) {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        _this2._input.checked = val;\n      });\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(BaseCheckboxElement.__proto__ || Object.getPrototypeOf(BaseCheckboxElement), 'observedAttributes', this)), ['checked']);\n    }\n  }]);\n  return BaseCheckboxElement;\n}(BaseInputElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar scheme$13 = {\n  '.checkbox': 'checkbox--*',\n  '.checkbox__input': 'checkbox--*__input',\n  '.checkbox__checkmark': 'checkbox--*__checkmark'\n};\n\n/**\n * @element ons-checkbox\n * @category form\n * @modifier material\n *  [en]Displays a Material Design checkbox.[/en]\n *  [ja][/ja]\n * @modifier noborder\n *  [en]iOS borderless checkbox.[/en]\n *  [ja][/ja]\n * @description\n *  [en]\n *    A checkbox element. The component will automatically render as a Material Design checkbox on Android devices.\n *\n *    Most attributes that can be used for a normal `<input type=\"checkbox\">` element can also be used on the `<ons-checkbox>` element.\n *  [/en]\n *  [ja][/ja]\n * @tutorial vanilla/Reference/checkbox\n * @seealso ons-switch\n *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]\n *   [ja][/ja]\n * @seealso ons-radio\n *   [en]The `<ons-radio>` element is used to display a radio button.[/en]\n *   [ja][/ja]\n * @seealso ons-input\n *   [en]The `<ons-input>` element is used to display a text input.[/en]\n *   [ja][/ja]\n * @seealso ons-search-input\n *   [en]The `<ons-search-input>` element is used to display a search input.[/en]\n *   [ja][/ja]\n * @seealso ons-range\n *   [en]The `<ons-range>` element is used to display a range slider.[/en]\n *   [ja][/ja]\n * @seealso ons-select\n *   [en]The `<ons-select>` element is used to display a select box.[/en]\n *   [ja][/ja]\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-checkbox checked></ons-checkbox>\n */\n\nvar CheckboxElement = function (_BaseCheckboxElement) {\n  inherits(CheckboxElement, _BaseCheckboxElement);\n\n  function CheckboxElement() {\n    classCallCheck(this, CheckboxElement);\n    return possibleConstructorReturn(this, (CheckboxElement.__proto__ || Object.getPrototypeOf(CheckboxElement)).apply(this, arguments));\n  }\n\n  createClass(CheckboxElement, [{\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$13;\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'checkbox';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return 'checkbox';\n    }\n\n    /**\n     * @attribute input-id\n     * @type {String}\n     * @description\n     *  [en]Specify the \"id\" attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @property value\n     * @type {String}\n     * @description\n     *   [en]The current value of the checkbox.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property checked\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the checkbox is checked or not.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the checkbox is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the checkbox.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the checkbox.[/en]\n     *   [ja][/ja]\n     */\n\n  }]);\n  return CheckboxElement;\n}(BaseCheckboxElement);\n\nonsElements.Checkbox = CheckboxElement;\ncustomElements.define('ons-checkbox', CheckboxElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar scheme$14 = {\n  '.radio-button': 'radio-button--*',\n  '.radio-button__input': 'radio-button--*__input',\n  '.radio-button__checkmark': 'radio-button--*__checkmark'\n};\n\n/**\n * @element ons-radio\n * @category form\n * @modifier material\n *  [en]Displays a Material Design radio button.[/en]\n *  [ja][/ja]\n * @description\n *  [en]\n *    A radio button element. The component will automatically render as a Material Design radio button on Android devices.\n *\n *    Most attributes that can be used for a normal `<input type=\"radio\">` element can also be used on the `<ons-radio>` element.\n *  [/en]\n *  [ja][/ja]\n * @tutorial vanilla/Reference/radio\n * @seealso ons-select\n *   [en]The `<ons-select>` element is used to display a select box.[/en]\n *   [ja][/ja]\n * @seealso ons-checkbox\n *   [en]The `<ons-checkbox>` element is used to display a checkbox.[/en]\n *   [ja][/ja]\n * @seealso ons-switch\n *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]\n *   [ja][/ja]\n * @seealso ons-input\n *   [en]The `<ons-input>` element is used to display a text input.[/en]\n *   [ja][/ja]\n * @seealso ons-search-input\n *   [en]The `<ons-search-input>` element is used to display a search input.[/en]\n *   [ja][/ja]\n * @seealso ons-range\n *   [en]The `<ons-range>` element is used to display a range slider.[/en]\n *   [ja][/ja]\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-radio checked></ons-radio>\n */\n\nvar RadioElement = function (_BaseCheckboxElement) {\n  inherits(RadioElement, _BaseCheckboxElement);\n\n  function RadioElement() {\n    classCallCheck(this, RadioElement);\n    return possibleConstructorReturn(this, (RadioElement.__proto__ || Object.getPrototypeOf(RadioElement)).apply(this, arguments));\n  }\n\n  createClass(RadioElement, [{\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$14;\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'radio-button';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return 'radio';\n    }\n\n    /**\n     * @attribute input-id\n     * @type {String}\n     * @description\n     *  [en]Specify the \"id\" attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @property value\n     * @type {String}\n     * @description\n     *   [en]The current value of the radio button.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property checked\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the radio button is checked or not.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the radio button is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the radio button.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the radio button.[/en]\n     *   [ja][/ja]\n     */\n\n  }]);\n  return RadioElement;\n}(BaseCheckboxElement);\n\nonsElements.Radio = RadioElement;\ncustomElements.define('ons-radio', RadioElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar scheme$15 = {\n  '.search-input': 'search-input--*'\n};\n\n/**\n * @element ons-search-input\n * @category form\n * @modifier material\n *  [en]Displays a Material Design search input.[/en]\n *  [ja][/ja]\n * @description\n *  [en]\n *    A search input element. The component will automatically render as a Material Design search input on Android devices.\n *\n *    Most attributes that can be used for a normal `<input>` element can also be used on the `<ons-search-input>` element.\n *  [/en]\n *  [ja][/ja]\n * @tutorial vanilla/Reference/search-input\n * @seealso ons-input\n *   [en]The `<ons-input>` element is used to display a text input.[/en]\n *   [ja][/ja]\n * @seealso ons-range\n *   [en]The `<ons-range>` element is used to display a range slider.[/en]\n *   [ja][/ja]\n * @seealso ons-switch\n *   [en]The `<ons-switch>` element is used to display a draggable toggle switch.[/en]\n *   [ja][/ja]\n * @seealso ons-select\n *   [en]The `<ons-select>` element is used to display a select box.[/en]\n *   [ja][/ja]\n * @seealso ons-checkbox\n *   [en]The `<ons-checkbox>` element is used to display a checkbox.[/en]\n *   [ja][/ja]\n * @seealso ons-radio\n *   [en]The `<ons-radio>` element is used to display a radio button.[/en]\n *   [ja][/ja]\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-search-input placeholder=\"Search\"></ons-search-input>\n */\n\nvar SearchInputElement = function (_BaseInputElement) {\n  inherits(SearchInputElement, _BaseInputElement);\n\n  function SearchInputElement() {\n    classCallCheck(this, SearchInputElement);\n    return possibleConstructorReturn(this, (SearchInputElement.__proto__ || Object.getPrototypeOf(SearchInputElement)).apply(this, arguments));\n  }\n\n  createClass(SearchInputElement, [{\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$15;\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      return '\\n      <input type=\"' + this.type + '\" class=\"search-input\">\\n    ';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return 'search';\n    }\n\n    /**\n     * @attribute input-id\n     * @type {String}\n     * @description\n     *  [en]Specify the \"id\" attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @property value\n     * @type {String}\n     * @description\n     *   [en]The current value of the input.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the input is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the input.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the input.[/en]\n     *   [ja][/ja]\n     */\n\n  }]);\n  return SearchInputElement;\n}(BaseInputElement);\n\nonsElements.SearchInput = SearchInputElement;\ncustomElements.define('ons-search-input', SearchInputElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar ModalAnimator = function (_BaseAnimator) {\n  inherits(ModalAnimator, _BaseAnimator);\n\n  /**\n   * @param {Object} options\n   * @param {String} options.timing\n   * @param {Number} options.duration\n   * @param {Number} options.delay\n   */\n  function ModalAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, ModalAnimator);\n    return possibleConstructorReturn(this, (ModalAnimator.__proto__ || Object.getPrototypeOf(ModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} modal\n   * @param {Function} callback\n   */\n\n\n  createClass(ModalAnimator, [{\n    key: 'show',\n    value: function show(modal, callback) {\n      callback();\n    }\n\n    /**\n     * @param {HTMLElement} modal\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(modal, callback) {\n      callback();\n    }\n  }]);\n  return ModalAnimator;\n}(BaseAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * iOS style animator for dialog.\n */\n\nvar FadeModalAnimator = function (_ModalAnimator) {\n  inherits(FadeModalAnimator, _ModalAnimator);\n\n  function FadeModalAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration;\n\n    classCallCheck(this, FadeModalAnimator);\n    return possibleConstructorReturn(this, (FadeModalAnimator.__proto__ || Object.getPrototypeOf(FadeModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} modal\n   * @param {Function} callback\n   */\n\n\n  createClass(FadeModalAnimator, [{\n    key: 'show',\n    value: function show(modal, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(modal, this.def).default({ opacity: 0 }, { opacity: 1 }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n\n    /**\n     * @param {HTMLElement} modal\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(modal, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(modal, this.def).default({ opacity: 1 }, { opacity: 0 }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n  }]);\n  return FadeModalAnimator;\n}(ModalAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * iOS style animator for modal.\n */\n\nvar LiftModalAnimator = function (_ModalAnimator) {\n  inherits(LiftModalAnimator, _ModalAnimator);\n\n  function LiftModalAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier( .1, .7, .1, 1)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\n\n    classCallCheck(this, LiftModalAnimator);\n    return possibleConstructorReturn(this, (LiftModalAnimator.__proto__ || Object.getPrototypeOf(LiftModalAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} modal\n   * @param {Function} callback\n   */\n\n\n  createClass(LiftModalAnimator, [{\n    key: 'show',\n    value: function show(modal, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(modal, this.def).default({ transform: 'translate3d(0, 100%, 0)' }, { transform: 'translate3d(0, 0, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n\n    /**\n     * @param {HTMLElement} modal\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(modal, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(modal, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(0, 100%, 0)' }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n  }]);\n  return LiftModalAnimator;\n}(ModalAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$16 = {\n  '': 'modal--*',\n  'modal__content': 'modal--*__content'\n};\n\nvar defaultClassName$8 = 'modal';\n\nvar _animatorDict$4 = {\n  'default': ModalAnimator,\n  'fade': FadeModalAnimator,\n  'lift': LiftModalAnimator,\n  'none': ModalAnimator\n};\n\n/**\n * @element ons-modal\n * @category dialog\n * @description\n *   [en]\n *     Modal component that masks current screen. Underlying components are not subject to any events while the modal component is shown.\n *\n *     This component can be used to block user input while some operation is running or to show some information to the user.\n *   [/en]\n *   [ja]\n *     画面全体をマスクするモーダル用コンポーネントです。下側にあるコンポーネントは、\n *     モーダルが表示されている間はイベント通知が行われません。\n *   [/ja]\n * @seealso ons-dialog\n *   [en]The `<ons-dialog>` component can be used to create a modal dialog.[/en]\n *   [ja][/ja]\n * @codepen devIg\n * @tutorial vanilla/reference/modal\n * @example\n * <ons-modal id=\"modal\">\n *   Modal content\n * </ons-modal>\n * <script>\n *   var modal = document.getElementById('modal');\n *   modal.show();\n * </script>\n */\n\nvar ModalElement = function (_BaseDialogElement) {\n  inherits(ModalElement, _BaseDialogElement);\n\n  /**\n   * @event preshow\n   * @description\n   * [en]Fired just before the modal is displayed.[/en]\n   * [ja]モーダルが表示される直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.modal\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the modal from being shown.[/en]\n   *   [ja]この関数を実行すると、ダイアログの表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event postshow\n   * @description\n   * [en]Fired just after the modal is displayed.[/en]\n   * [ja]モーダルが表示された直後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.modal\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event prehide\n   * @description\n   * [en]Fired just before the modal is hidden.[/en]\n   * [ja]モーダルが隠れる直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.modal\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Execute this function to stop the modal from being hidden.[/en]\n   *   [ja]この関数を実行すると、ダイアログの非表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event posthide\n   * @description\n   * [en]Fired just after the modal is hidden.[/en]\n   * [ja]モーダルが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.modal\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the modal. Can be either `\"none\"`, `\"fade\"` or `\"lift\"`.[/en]\n   *  [ja]モーダルを表示する際のアニメーション名を指定します。\"none\"もしくは\"fade\",\"lift\"を指定できます。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]\n   */\n\n  function ModalElement() {\n    classCallCheck(this, ModalElement);\n\n    var _this = possibleConstructorReturn(this, (ModalElement.__proto__ || Object.getPrototypeOf(ModalElement)).call(this));\n\n    _this._defaultDBB = function () {\n      return undefined;\n    };\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ModalElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict$4,\n        baseClass: ModalAnimator,\n        baseClassName: 'ModalAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      this.style.display = 'none';\n      this.style.zIndex = 10001;\n      this.classList.add(defaultClassName$8);\n\n      if (!util$1.findChild(this, '.modal__content')) {\n        var content = document.createElement('div');\n        content.classList.add('modal__content');\n\n        while (this.childNodes[0]) {\n          var node = this.childNodes[0];\n          this.removeChild(node);\n          content.insertBefore(node, null);\n        }\n\n        this.appendChild(content);\n      }\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n  }, {\n    key: '_toggleStyle',\n    value: function _toggleStyle(shouldShow) {\n      this.style.display = shouldShow ? 'table' : 'none';\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      get(ModalElement.prototype.__proto__ || Object.getPrototypeOf(ModalElement.prototype), 'connectedCallback', this).call(this);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      get(ModalElement.prototype.__proto__ || Object.getPrototypeOf(ModalElement.prototype), 'disconnectedCallback', this).call(this);\n    }\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @method show\n     * @signature show([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"fade\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"fade\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the modal has been revealed.[/en]\n     *   [ja]モーダルが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Show modal.[/en]\n     *   [ja]モーダルを表示します。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the displayed element[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method toggle\n     * @signature toggle([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"fade\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"fade\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the modal has been revealed.[/en]\n     *   [ja]モーダルが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Toggle modal visibility.[/en]\n     *   [ja]モーダルの表示を切り替えます。[/ja]\n     */\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"none\"` and `\"fade\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"none\", \"fade\"のいずれかを指定します。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the modal has been revealed.[/en]\n     *   [ja]モーダルが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Hide modal.[/en]\n     *   [ja]モーダルを非表示にします。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'class') {\n        util$1.restoreClass(this, defaultClassName$8, scheme$16);\n      } else {\n        get(ModalElement.prototype.__proto__ || Object.getPrototypeOf(ModalElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n      }\n    }\n\n    /**\n     * @param {String} name\n     * @param {Function} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$16;\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof ModalAnimator)) {\n        util$1.throwAnimator('Modal');\n      }\n      _animatorDict$4[name] = Animator;\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(ModalElement.__proto__ || Object.getPrototypeOf(ModalElement), 'observedAttributes', this)), ['class']);\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$4;\n    }\n  }, {\n    key: 'ModalAnimator',\n    get: function get$$1() {\n      return ModalAnimator;\n    }\n  }]);\n  return ModalElement;\n}(BaseDialogElement);\n\nonsElements.Modal = ModalElement;\ncustomElements.define('ons-modal', ModalElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar widthToPx = function widthToPx(width) {\n  var _ref = [parseInt(width, 10), /px/.test(width)],\n      value = _ref[0],\n      px = _ref[1];\n\n  return px ? value : Math.round(document.body.offsetWidth * value / 100);\n};\n\nvar SwipeReveal = function () {\n  function SwipeReveal(params) {\n    var _this = this;\n\n    classCallCheck(this, SwipeReveal);\n\n    'element ignoreSwipe isInitialState onDragCallback swipeMax swipeMin swipeMid'.split(/\\s+/).forEach(function (key) {\n      return _this[key] = params[key];\n    });\n\n    this.elementHandler = params.elementHandler || params.element;\n    this.getThreshold = params.getThreshold || function () {\n      return .5;\n    };\n    this.getSide = params.getSide || function () {\n      return 'left';\n    };\n\n    this.handleGesture = this.handleGesture.bind(this);\n\n    this._shouldFixScroll = util$1.globals.actualMobileOS === 'ios';\n  }\n\n  createClass(SwipeReveal, [{\n    key: 'update',\n    value: function update() {\n      var swipeable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.element.hasAttribute('swipeable');\n\n      if (!this.gestureDetector) {\n        this.gestureDetector = new GestureDetector(this.elementHandler, { dragMinDistance: 1, passive: !this._shouldFixScroll });\n      }\n\n      var action = swipeable ? 'on' : 'off';\n      this.gestureDetector[action]('drag dragstart dragend', this.handleGesture);\n    }\n  }, {\n    key: 'handleGesture',\n    value: function handleGesture(e) {\n      if (e.gesture) {\n        if (e.type === 'dragstart') {\n          this.onDragStart(e);\n        } else if (!this._ignoreDrag) {\n          e.type === 'dragend' ? this.onDragEnd(e) : this.onDrag(e);\n        }\n      }\n    }\n  }, {\n    key: 'onDragStart',\n    value: function onDragStart(event) {\n      var _this2 = this;\n\n      var getDistance = function getDistance() {\n        return _this2.getSide() === 'left' ? event.gesture.center.clientX : window.innerWidth - event.gesture.center.clientX;\n      };\n      this._ignoreDrag = event.consumed || !util$1.isValidGesture(event) || this.ignoreSwipe(event, getDistance());\n\n      if (!this._ignoreDrag) {\n        event.consume && event.consume();\n        event.consumed = true;\n\n        this._width = widthToPx(this.element.style.width || '100%');\n        this._startDistance = this._distance = !(this.isInitialState instanceof Function) || this.isInitialState() ? 0 : this._width;\n\n        util$1.iosPreventScroll(this.gestureDetector);\n      }\n    }\n  }, {\n    key: 'onDrag',\n    value: function onDrag(event) {\n      event.stopPropagation();\n\n      var delta = this.getSide() === 'left' ? event.gesture.deltaX : -event.gesture.deltaX;\n      var distance = Math.max(0, Math.min(this._width, this._startDistance + delta));\n      if (distance !== this._distance) {\n        this._distance = distance;\n        this.swipeMid(this._distance, this._width);\n      }\n    }\n  }, {\n    key: 'onDragEnd',\n    value: function onDragEnd(event) {\n      event.stopPropagation();\n\n      var direction = event.gesture.interimDirection;\n      var isSwipeMax = this.getSide() !== direction && this._distance > this._width * this.getThreshold();\n      isSwipeMax ? this.swipeMax() : this.swipeMin();\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.gestureDetector && this.gestureDetector.dispose();\n      this.gestureDetector = this.element = this.elementHandler = null;\n    }\n  }]);\n  return SwipeReveal;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar NavigatorAnimator = function (_BaseAnimator) {\n  inherits(NavigatorAnimator, _BaseAnimator);\n\n  /**\n   * @param {Object} options\n   * @param {String} options.timing\n   * @param {Number} options.duration\n   * @param {Number} options.delay\n   */\n  function NavigatorAnimator(options) {\n    classCallCheck(this, NavigatorAnimator);\n\n    options = util$1.extend({\n      timing: 'linear',\n      duration: '0.4',\n      delay: '0'\n    }, options || {});\n\n    return possibleConstructorReturn(this, (NavigatorAnimator.__proto__ || Object.getPrototypeOf(NavigatorAnimator)).call(this, options));\n  }\n\n  createClass(NavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      callback();\n    }\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      callback();\n    }\n  }, {\n    key: 'block',\n    value: function block(page) {\n      var blocker = util$1.createElement('\\n      <div style=\"position: absolute; background-color: transparent; width: 100%; height: 100%; z-index: 100000\"></div>\\n    ');\n      page.parentNode.appendChild(blocker);\n      return function () {\n        return blocker.remove();\n      };\n    }\n  }]);\n  return NavigatorAnimator;\n}(BaseAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Abstract swipe animator for iOS navigator transition.\n */\n\nvar IOSSwipeNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(IOSSwipeNavigatorAnimator, _NavigatorAnimator);\n  createClass(IOSSwipeNavigatorAnimator, null, [{\n    key: 'swipeable',\n    get: function get$$1() {\n      return true;\n    }\n  }]);\n\n  function IOSSwipeNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref$durationRestore = _ref.durationRestore,\n        durationRestore = _ref$durationRestore === undefined ? 0.1 : _ref$durationRestore,\n        _ref$durationSwipe = _ref.durationSwipe,\n        durationSwipe = _ref$durationSwipe === undefined ? 0.15 : _ref$durationSwipe,\n        _ref$timingSwipe = _ref.timingSwipe,\n        timingSwipe = _ref$timingSwipe === undefined ? 'linear' : _ref$timingSwipe,\n        rest = objectWithoutProperties(_ref, ['durationRestore', 'durationSwipe', 'timingSwipe']);\n    classCallCheck(this, IOSSwipeNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (IOSSwipeNavigatorAnimator.__proto__ || Object.getPrototypeOf(IOSSwipeNavigatorAnimator)).call(this, _extends({}, rest)));\n\n    if (_this.constructor === IOSSwipeNavigatorAnimator) {\n      util$1.throwAbstract();\n    }\n\n    _this.durationRestore = durationRestore;\n    _this.durationSwipe = durationSwipe;\n    _this.timingSwipe = timingSwipe;\n\n    _this.optSwipe = { timing: timingSwipe, duration: durationSwipe };\n    _this.optRestore = { timing: timingSwipe, duration: durationRestore };\n\n    _this.swipeShadow = util$1.createElement('<div style=\"position: absolute; height: 100%; width: 12px; right: 100%; top: 0; bottom: 0; z-index: -1;' + 'background: linear-gradient(to right, transparent 0, rgba(0,0,0,.04) 40%, rgba(0,0,0,.12) 80%, rgba(0,0,0,.16) 100%);\"></div>');\n\n    _this.isDragStart = true;\n    return _this;\n  }\n\n  createClass(IOSSwipeNavigatorAnimator, [{\n    key: '_decompose',\n    value: function _decompose() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_shouldAnimateToolbar',\n    value: function _shouldAnimateToolbar() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_calculateDelta',\n    value: function _calculateDelta() {\n      util$1.throwMember();\n    }\n  }, {\n    key: '_dragStartSetup',\n    value: function _dragStartSetup(enterPage, leavePage) {\n      this.isDragStart = false;\n\n      // Avoid content clicks\n      this.unblock = get(IOSSwipeNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSwipeNavigatorAnimator.prototype), 'block', this).call(this, leavePage);\n\n      // Mask\n      enterPage.parentElement.insertBefore(this.backgroundMask, enterPage);\n\n      // Decomposition\n      this.target = {\n        enter: util$1.findToolbarPage(enterPage) || enterPage,\n        leave: util$1.findToolbarPage(leavePage) || leavePage\n      };\n      this.decomp = {\n        enter: this._decompose(this.target.enter),\n        leave: this._decompose(this.target.leave)\n      };\n\n      // Animation values\n      this.delta = this._calculateDelta(leavePage, this.decomp.leave);\n      this.shouldAnimateToolbar = this._shouldAnimateToolbar(this.target.enter, this.target.leave);\n\n      // Shadow && styles\n      if (this.shouldAnimateToolbar) {\n        this.swipeShadow.style.top = this.decomp.leave.toolbar.offsetHeight + 'px';\n        this.target.leave.appendChild(this.swipeShadow);\n        this._saveStyle(this.target.enter, this.target.leave);\n      } else {\n        leavePage.appendChild(this.swipeShadow);\n        this._saveStyle(enterPage, leavePage);\n      }\n      leavePage.classList.add('overflow-visible');\n      this.overflowElement = leavePage;\n      this.decomp.leave.content.classList.add('content-swiping');\n    }\n  }, {\n    key: 'translate',\n    value: function translate(distance, maxWidth, enterPage, leavePage) {\n      this.isSwiping = true;\n\n      if (enterPage.style.display === 'none') {\n        enterPage.style.display = '';\n      }\n\n      if (this.isDragStart) {\n        this.maxWidth = maxWidth;\n        this._dragStartSetup(enterPage, leavePage);\n      }\n\n      var swipeRatio = (distance - maxWidth) / maxWidth;\n\n      if (this.shouldAnimateToolbar) {\n\n        Animit.runAll(\n\n        /* Enter page */\n\n        Animit([this.decomp.enter.content, this.decomp.enter.bottomToolbar, this.decomp.enter.background]).queue({\n          transform: 'translate3d(' + swipeRatio * 25 + '%, 0, 0)',\n          opacity: 1 + swipeRatio * 10 / 100 // 0.9 -> 1\n        }), Animit(this.decomp.enter.toolbarCenter).queue({\n          transform: 'translate3d(' + this.delta.title * swipeRatio + 'px, 0, 0)',\n          opacity: 1 + swipeRatio // 0 -> 1\n        }), Animit(this.decomp.enter.backButtonLabel).queue({\n          opacity: 1 + swipeRatio * 10 / 100, // 0.9 -> 1\n          transform: 'translate3d(' + this.delta.label * swipeRatio + 'px, 0, 0)'\n        }), Animit(this.decomp.enter.other).queue({\n          opacity: 1 + swipeRatio // 0 -> 1\n        }),\n\n        /* Leave page */\n\n        Animit([this.decomp.leave.content, this.decomp.leave.bottomToolbar, this.decomp.leave.background, this.swipeShadow]).queue({\n          transform: 'translate3d(' + distance + 'px, 0, 0)'\n        }), Animit(this.decomp.leave.toolbar).queue({\n          opacity: -1 * swipeRatio // 1 -> 0\n        }), Animit(this.decomp.leave.toolbarCenter).queue({\n          transform: 'translate3d(' + (1 + swipeRatio) * 125 + '%, 0, 0)'\n        }), Animit(this.decomp.leave.backButtonLabel).queue({\n          opacity: -1 * swipeRatio, // 1 -> 0\n          transform: 'translate3d(' + this.delta.title * (1 + swipeRatio) + 'px, 0, 0)'\n        }),\n\n        /* Other */\n\n        Animit(this.swipeShadow).queue({\n          opacity: -1 * swipeRatio // 1 -> 0\n        }));\n      } else {\n        Animit.runAll(Animit(leavePage).queue({\n          transform: 'translate3d(' + distance + 'px, 0, 0)'\n        }), Animit(enterPage).queue({\n          transform: 'translate3d(' + swipeRatio * 25 + '%, 0, 0)',\n          opacity: 1 + swipeRatio * 10 / 100 // 0.9 -> 1\n        }), Animit(this.swipeShadow).queue({\n          opacity: -1 * swipeRatio // 1 -> 0\n        }));\n      }\n    }\n  }, {\n    key: 'restore',\n    value: function restore(enterPage, leavePage, callback) {\n      var _this2 = this;\n\n      if (this.isDragStart) {\n        return;\n      }\n\n      if (this.shouldAnimateToolbar) {\n\n        Animit.runAll(\n\n        /* Enter page */\n\n        Animit([this.decomp.enter.content, this.decomp.enter.bottomToolbar, this.decomp.enter.background]).queue({\n          transform: 'translate3d(-25%, 0, 0)',\n          opacity: 0.9\n        }, this.optRestore), Animit(this.decomp.enter.toolbarCenter).queue({\n          transform: 'translate3d(-' + this.delta.title + 'px, 0, 0)',\n          transition: 'opacity ' + this.durationRestore + 's linear, transform ' + this.durationRestore + 's ' + this.timingSwipe,\n          opacity: 0\n        }), Animit(this.decomp.enter.backButtonLabel).queue({\n          transform: 'translate3d(-' + this.delta.label + 'px, 0, 0)'\n        }, this.optRestore), Animit(this.decomp.enter.other).queue({\n          opacity: 0\n        }, this.optRestore),\n\n        /* Leave page */\n\n        Animit([this.decomp.leave.content, this.decomp.leave.bottomToolbar, this.decomp.leave.background, this.swipeShadow]).queue({\n          transform: 'translate3d(0, 0, 0)'\n        }, this.optRestore), Animit(this.decomp.leave.toolbar).queue({\n          opacity: 1\n        }, this.optRestore), Animit(this.decomp.leave.toolbarCenter).queue({\n          transform: 'translate3d(0, 0, 0)'\n        }, this.optRestore), Animit(this.decomp.leave.backButtonLabel).queue({\n          opacity: 1,\n          transform: 'translate3d(0, 0, 0)',\n          transition: 'opacity ' + this.durationRestore + 's linear, transform ' + this.durationRestore + 's ' + this.timingSwipe\n        }),\n\n        /* Other */\n\n        Animit(this.swipeShadow).queue({\n          opacity: 0\n        }, this.optRestore).queue(function (done) {\n          _this2._reset(_this2.target.enter, _this2.target.leave);\n          enterPage.style.display = 'none';\n          callback && callback();\n          done();\n        }));\n      } else {\n        Animit.runAll(Animit(enterPage).queue({\n          transform: 'translate3D(-25%, 0, 0)',\n          opacity: 0.9\n        }, this.optRestore), Animit(leavePage).queue({\n          transform: 'translate3D(0, 0, 0)'\n        }, this.optRestore).queue(function (done) {\n          _this2._reset(enterPage, leavePage);\n          enterPage.style.display = 'none';\n          callback && callback();\n          done();\n        }));\n      }\n    }\n  }, {\n    key: 'popSwipe',\n    value: function popSwipe(enterPage, leavePage, callback) {\n      var _this3 = this;\n\n      if (this.isDragStart) {\n        return;\n      }\n\n      if (this.shouldAnimateToolbar) {\n\n        Animit.runAll(\n\n        /* Enter page */\n\n        Animit([this.decomp.enter.content, this.decomp.enter.bottomToolbar, this.decomp.enter.background]).queue({\n          transform: 'translate3d(0, 0, 0)',\n          opacity: 1\n        }, this.optSwipe), Animit(this.decomp.enter.toolbarCenter).queue({\n          transform: 'translate3d(0, 0, 0)',\n          transition: 'opacity ' + this.durationSwipe + 's linear, transform ' + this.durationSwipe + 's ' + this.timingSwipe,\n          opacity: 1\n        }), Animit(this.decomp.enter.backButtonLabel).queue({\n          transform: 'translate3d(0, 0, 0)'\n        }, this.optSwipe), Animit(this.decomp.enter.other).queue({\n          opacity: 1\n        }, this.optSwipe),\n\n        /* Leave page */\n\n        Animit([this.decomp.leave.content, this.decomp.leave.bottomToolbar, this.decomp.leave.background]).queue({\n          transform: 'translate3d(100%, 0, 0)'\n        }, this.optSwipe), Animit(this.decomp.leave.toolbar).queue({\n          opacity: 0\n        }, this.optSwipe), Animit(this.decomp.leave.toolbarCenter).queue({\n          transform: 'translate3d(125%, 0, 0)'\n        }, this.optSwipe), Animit(this.decomp.leave.backButtonLabel).queue({\n          opacity: 0,\n          transform: 'translate3d(' + this.delta.title + 'px, 0, 0)',\n          transition: 'opacity ' + this.durationSwipe + 's linear, transform ' + this.durationSwipe + 's ' + this.timingSwipe\n        }),\n\n        /* Other */\n\n        Animit(this.swipeShadow).queue({\n          opacity: 0,\n          transform: 'translate3d(' + this.maxWidth + 'px, 0, 0)'\n        }, this.optSwipe).queue(function (done) {\n          _this3._reset(_this3.target.enter, _this3.target.leave);\n          callback && callback();\n          done();\n        }));\n      } else {\n        Animit.runAll(Animit(enterPage).queue({\n          transform: 'translate3D(0, 0, 0)',\n          opacity: 1.0\n        }, this.optSwipe), Animit(leavePage).queue({\n          transform: 'translate3D(100%, 0, 0)'\n        }, this.optSwipe).queue(function (done) {\n          _this3._reset(enterPage, leavePage);\n          callback && callback();\n          done();\n        }));\n      }\n    }\n  }, {\n    key: '_saveStyle',\n    value: function _saveStyle() {\n      var _this4 = this;\n\n      this._savedStyle = new WeakMap();\n      var save = function save(el) {\n        return _this4._savedStyle.set(el, el.getAttribute('style'));\n      };\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      args.forEach(save);\n\n      Object.keys(this.decomp).forEach(function (p) {\n        Object.keys(_this4.decomp[p]).forEach(function (k) {\n          (_this4.decomp[p][k] instanceof Array ? _this4.decomp[p][k] : [_this4.decomp[p][k]]).forEach(save);\n        });\n      });\n    }\n  }, {\n    key: '_restoreStyle',\n    value: function _restoreStyle() {\n      var _this5 = this;\n\n      var restore = function restore(el) {\n        _this5._savedStyle.get(el) === null ? el.removeAttribute('style') : el.setAttribute('style', _this5._savedStyle.get(el));\n        _this5._savedStyle.delete(el);\n      };\n\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      args.forEach(restore);\n\n      Object.keys(this.decomp).forEach(function (p) {\n        Object.keys(_this5.decomp[p]).forEach(function (k) {\n          (_this5.decomp[p][k] instanceof Array ? _this5.decomp[p][k] : [_this5.decomp[p][k]]).forEach(restore);\n        });\n      });\n    }\n  }, {\n    key: '_reset',\n    value: function _reset() {\n      this.isSwiping = false;\n      this._savedStyle && this._restoreStyle.apply(this, arguments);\n      this.unblock && this.unblock();\n      this.swipeShadow.remove();\n      this.backgroundMask.remove();\n      this.overflowElement.classList.remove('overflow-visible');\n      this.decomp.leave.content.classList.remove('content-swiping');\n      this.decomp = this.target = this.overflowElement = this._savedStyle = null;\n      this.isDragStart = true;\n    }\n  }]);\n  return IOSSwipeNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar translate3d = function translate3d() {\n  var x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  return 'translate3d(' + x + ', ' + y + ', ' + z + ')';\n};\n\n/**\n * Slide animator for navigator transition like iOS's screen slide transition.\n */\n\nvar IOSSlideNavigatorAnimator = function (_IOSSwipeNavigatorAni) {\n  inherits(IOSSlideNavigatorAnimator, _IOSSwipeNavigatorAni);\n\n  function IOSSlideNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(0.3, .4, 0, .9)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration,\n        rest = objectWithoutProperties(_ref, ['timing', 'delay', 'duration']);\n    classCallCheck(this, IOSSlideNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (IOSSlideNavigatorAnimator.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorAnimator)).call(this, _extends({ timing: timing, delay: delay, duration: duration }, rest)));\n\n    _this.backgroundMask = util$1.createElement('<div style=\"position: absolute; width: 100%; height: 100%;' + 'background-color: black; z-index: 2\"></div>');\n    return _this;\n  }\n\n  createClass(IOSSlideNavigatorAnimator, [{\n    key: '_decompose',\n    value: function _decompose(page) {\n      var toolbar = page._getToolbarElement();\n      var left = toolbar._getToolbarLeftItemsElement();\n      var right = toolbar._getToolbarRightItemsElement();\n\n      var excludeBackButton = function excludeBackButton(elements) {\n        var result = [];\n\n        for (var i = 0; i < elements.length; i++) {\n          if (elements[i].nodeName.toLowerCase() !== 'ons-back-button') {\n            result.push(elements[i]);\n          }\n        }\n\n        return result;\n      };\n\n      var other = [].concat(left.children.length === 0 ? left : excludeBackButton(left.children)).concat(right.children.length === 0 ? right : excludeBackButton(right.children));\n\n      return {\n        toolbarCenter: toolbar._getToolbarCenterItemsElement(),\n        backButtonIcon: toolbar._getToolbarBackButtonIconElement(),\n        backButtonLabel: toolbar._getToolbarBackButtonLabelElement(),\n        other: other,\n        content: page._getContentElement(),\n        background: page._getBackgroundElement(),\n        toolbar: toolbar,\n        bottomToolbar: page._getBottomToolbarElement()\n      };\n    }\n  }, {\n    key: '_shouldAnimateToolbar',\n    value: function _shouldAnimateToolbar(enterPage, leavePage) {\n      var toolbars = enterPage._canAnimateToolbar() && leavePage._canAnimateToolbar();\n\n      var enterToolbar = enterPage._getToolbarElement();\n      var leaveToolbar = leavePage._getToolbarElement();\n\n      var isStatic = enterToolbar.hasAttribute('static') || leaveToolbar.hasAttribute('static');\n      var isMaterial = util$1.hasModifier(enterToolbar, 'material') || util$1.hasModifier(leaveToolbar, 'material');\n      var isTransparent = util$1.hasModifier(enterToolbar, 'transparent') || util$1.hasModifier(leaveToolbar, 'transparent');\n\n      return toolbars && !isStatic && !isMaterial && !isTransparent;\n    }\n  }, {\n    key: '_calculateDelta',\n    value: function _calculateDelta(element, decomposition) {\n      var title = void 0,\n          label = void 0;\n\n      var pageRect = element.getBoundingClientRect();\n      if (decomposition.backButtonLabel.classList.contains('back-button__label')) {\n        var labelRect = decomposition.backButtonLabel.getBoundingClientRect();\n        title = Math.round(pageRect.width / 2 - labelRect.width / 2 - labelRect.left);\n      } else {\n        title = Math.round(pageRect.width / 2 * 0.6);\n      }\n\n      if (decomposition.backButtonIcon.classList.contains('back-button__icon')) {\n        label = decomposition.backButtonIcon.getBoundingClientRect().right - 2;\n      }\n\n      return { title: title, label: label };\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var _this2 = this;\n\n      this.backgroundMask.remove();\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);\n\n      var unblock = get(IOSSlideNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      contentReady(enterPage, function () {\n        var enterPageTarget = util$1.findToolbarPage(enterPage) || enterPage;\n        var leavePageTarget = util$1.findToolbarPage(leavePage) || leavePage;\n        var enterPageDecomposition = _this2._decompose(enterPageTarget);\n        var leavePageDecomposition = _this2._decompose(leavePageTarget);\n\n        var delta = _this2._calculateDelta(leavePage, enterPageDecomposition);\n\n        var shouldAnimateToolbar = _this2._shouldAnimateToolbar(enterPageTarget, leavePageTarget);\n\n        if (shouldAnimateToolbar) {\n\n          Animit.runAll(Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background], _this2.def).default({ transform: translate3d('100%') }, { transform: translate3d() }), Animit(enterPageDecomposition.toolbar, _this2.def).default({ opacity: 0 }, { opacity: 1 }), Animit(enterPageDecomposition.toolbarCenter, _this2.def).default({ transform: translate3d('125%'), opacity: 1 }, { transform: translate3d(), opacity: 1 }), Animit(enterPageDecomposition.backButtonLabel, _this2.def).default({ transform: translate3d(delta.title + 'px'), opacity: 0 }, {\n            transform: translate3d(),\n            opacity: 1,\n            transition: 'opacity ' + _this2.duration + 's linear, transform ' + _this2.duration + 's ' + _this2.timing\n          }), Animit(enterPageDecomposition.other, _this2.def).default({ opacity: 0 }, { css: { opacity: 1 }, timing: 'linear' }), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background], _this2.def).default({ transform: translate3d(), opacity: 1 }, { transform: translate3d('-25%'), opacity: 0.9 }).queue(function (done) {\n            _this2.backgroundMask.remove();\n            unblock();\n            callback();\n            done();\n          }), Animit(leavePageDecomposition.toolbarCenter, _this2.def).default({ transform: translate3d(), opacity: 1 }, {\n            transform: translate3d('-' + delta.title + 'px'),\n            opacity: 0,\n            transition: 'opacity ' + _this2.duration + 's linear, transform ' + _this2.duration + 's ' + _this2.timing\n          }), Animit(leavePageDecomposition.backButtonLabel, _this2.def).default({ transform: translate3d(), opacity: 1 }, { transform: translate3d('-' + delta.label + 'px'), opacity: 0 }), Animit(leavePageDecomposition.other, _this2.def).default({ opacity: 1 }, { css: { opacity: 0 }, timing: 'linear' }));\n        } else {\n\n          Animit.runAll(Animit(enterPage, _this2.def).default({ transform: translate3d('100%') }, { transform: translate3d() }), Animit(leavePage, _this2.def).default({ transform: translate3d(), opacity: 1 }, { transform: translate3d('-25%'), opacity: .9 }).queue(function (done) {\n            _this2.backgroundMask.remove();\n            unblock();\n            callback();\n            done();\n          }));\n        }\n      });\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var _this3 = this;\n\n      if (this.isSwiping) {\n        return this.popSwipe(enterPage, leavePage, callback);\n      }\n\n      this.backgroundMask.remove();\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);\n\n      var unblock = get(IOSSlideNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSSlideNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      var enterPageTarget = util$1.findToolbarPage(enterPage) || enterPage;\n      var leavePageTarget = util$1.findToolbarPage(leavePage) || leavePage;\n      var enterPageDecomposition = this._decompose(enterPageTarget);\n      var leavePageDecomposition = this._decompose(leavePageTarget);\n\n      var delta = this._calculateDelta(leavePage, leavePageDecomposition);\n\n      var shouldAnimateToolbar = this._shouldAnimateToolbar(enterPageTarget, leavePageTarget);\n\n      if (shouldAnimateToolbar) {\n        Animit.runAll(Animit([enterPageDecomposition.content, enterPageDecomposition.bottomToolbar, enterPageDecomposition.background], this.def).default({ transform: translate3d('-25%'), opacity: .9 }, { transform: translate3d(), opacity: 1 }), Animit(enterPageDecomposition.toolbarCenter, this.def).default({ transform: translate3d('-' + delta.title + 'px'), opacity: 0 }, {\n          transform: translate3d(),\n          opacity: 1,\n          transition: 'opacity ' + this.duration + 's linear, transform ' + this.duration + 's ' + this.timing\n        }), Animit(enterPageDecomposition.backButtonLabel, this.def).default({ transform: translate3d('-' + delta.label + 'px') }, { transform: translate3d() }), Animit(enterPageDecomposition.other, this.def).default({ opacity: 0 }, { css: { opacity: 1 }, timing: 'linear' }), Animit([leavePageDecomposition.content, leavePageDecomposition.bottomToolbar, leavePageDecomposition.background], this.def).default({ transform: translate3d() }, { transform: translate3d('100%') }).wait(0).queue(function (done) {\n          _this3.backgroundMask.remove();\n          unblock();\n          callback();\n          done();\n        }), Animit(leavePageDecomposition.toolbar, this.def).default({ opacity: 1 }, { opacity: 0 }), Animit(leavePageDecomposition.toolbarCenter, this.def).default({ transform: translate3d() }, { transform: translate3d('125%') }), Animit(leavePageDecomposition.backButtonLabel, this.def).default({ transform: translate3d(), opacity: 1 }, {\n          transform: translate3d(delta.title + 'px'),\n          opacity: 0,\n          transition: 'opacity ' + this.duration + 's linear, transform ' + this.duration + 's ' + this.timing\n        }));\n      } else {\n        Animit.runAll(Animit(enterPage, this.def).default({ transform: translate3d('-25%'), opacity: .9 }, { transform: translate3d(), opacity: 1 }), Animit(leavePage, this.def).default({ transform: translate3d() }, { transform: translate3d('100%') }).queue(function (done) {\n          _this3.backgroundMask.remove();\n          unblock();\n          callback();\n          done();\n        }));\n      }\n    }\n  }]);\n  return IOSSlideNavigatorAnimator;\n}(IOSSwipeNavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Lift screen transition.\n */\n\nvar IOSLiftNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(IOSLiftNavigatorAnimator, _NavigatorAnimator);\n\n  function IOSLiftNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\n\n    classCallCheck(this, IOSLiftNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (IOSLiftNavigatorAnimator.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.backgroundMask = util$1.createElement('<div style=\"position: absolute; width: 100%; height: 100%;' + 'background: linear-gradient(black, white);\"></div>');\n    return _this;\n  }\n\n  /**\n   * @param {Object} enterPage\n   * @param {Object} leavePage\n   * @param {Function} callback\n   */\n\n\n  createClass(IOSLiftNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var _this2 = this;\n\n      this.backgroundMask.remove();\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);\n\n      var unblock = get(IOSLiftNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(enterPage, this.def).default({ transform: 'translate3D(0, 100%, 0)' }, { transform: 'translate3D(0, 0, 0)' }), Animit(leavePage, this.def).default({ transform: 'translate3D(0, 0, 0)', opacity: 1 }, { transform: 'translate3D(0, -10%, 0)', opacity: .9 }).queue(function (done) {\n        _this2.backgroundMask.remove();\n        unblock();\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var _this3 = this;\n\n      this.backgroundMask.remove();\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);\n\n      var unblock = get(IOSLiftNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSLiftNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(enterPage, this.def).default({ transform: 'translate3D(0, -43px, 0)', opacity: .9 }, { transform: 'translate3D(0, 0, 0)', opacity: 1 }).queue(function (done) {\n        _this3.backgroundMask.remove();\n        unblock();\n        callback();\n        done();\n      }), Animit(leavePage, this.def).default({ transform: 'translate3D(0, 0, 0)' }, { transform: 'translate3D(0, 100%, 0)' }));\n    }\n  }]);\n  return IOSLiftNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar transform = 'translate3d(0, 0, 0)';\n\n/**\n * Fade-in screen transition.\n */\n\nvar IOSFadeNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(IOSFadeNavigatorAnimator, _NavigatorAnimator);\n\n  function IOSFadeNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\n\n    classCallCheck(this, IOSFadeNavigatorAnimator);\n    return possibleConstructorReturn(this, (IOSFadeNavigatorAnimator.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {Object} enterPage\n   * @param {Object} leavePage\n   * @param {Function} callback\n   */\n\n\n  createClass(IOSFadeNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var unblock = get(IOSFadeNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(enterPage, this.def).default({ transform: transform, opacity: 0 }, { transform: transform, opacity: 1 }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var unblock = get(IOSFadeNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(IOSFadeNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(leavePage, this.def).default({ transform: transform, opacity: 1 }, { transform: transform, opacity: 0 }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return IOSFadeNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Slide animator for navigator transition.\n */\n\nvar MDSlideNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(MDSlideNavigatorAnimator, _NavigatorAnimator);\n\n  function MDSlideNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration;\n\n    classCallCheck(this, MDSlideNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (MDSlideNavigatorAnimator.__proto__ || Object.getPrototypeOf(MDSlideNavigatorAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.blackMaskOpacity = 0.4;\n    _this.backgroundMask = util$1.createElement('<div style=\"position: absolute; width: 100%; height: 100%; z-index: 2;' + 'background-color: black; opacity: 0;\"></div>');\n    return _this;\n  }\n\n  /**\n   * @param {Object} enterPage\n   * @param {Object} leavePage\n   * @param {Function} callback\n   */\n\n\n  createClass(MDSlideNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var _this2 = this;\n\n      this.backgroundMask.remove();\n      leavePage.parentElement.insertBefore(this.backgroundMask, leavePage.nextSibling);\n\n      var unblock = get(MDSlideNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(this.backgroundMask, this.def).default({ transform: 'translate3d(0, 0, 0)', opacity: 0 }, { opacity: this.blackMaskOpacity }).queue(function (done) {\n        _this2.backgroundMask.remove();\n        done();\n      }), Animit(enterPage, this.def).default({ transform: 'translate3d(100%, 0, 0)' }, { transform: 'translate3d(0, 0, 0)' }), Animit(leavePage, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(-45%, 0, 0)' }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var _this3 = this;\n\n      this.backgroundMask.remove();\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage.nextSibling);\n\n      var unblock = get(MDSlideNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDSlideNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(this.backgroundMask, this.def).default({ transform: 'translate3d(0, 0, 0)', opacity: this.blackMaskOpacity }, { opacity: 0 }).queue(function (done) {\n        _this3.backgroundMask.remove();\n        done();\n      }), Animit(enterPage, this.def).default({ transform: 'translate3d(-45%, 0, 0)', opacity: .9 }, { transform: 'translate3d(0, 0, 0)', opacity: 1 }), Animit(leavePage, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(100%, 0, 0)' }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return MDSlideNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Lift screen transition.\n */\n\nvar MDLiftNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(MDLiftNavigatorAnimator, _NavigatorAnimator);\n\n  function MDLiftNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0.05 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.4 : _ref$duration;\n\n    classCallCheck(this, MDLiftNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (MDLiftNavigatorAnimator.__proto__ || Object.getPrototypeOf(MDLiftNavigatorAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.backgroundMask = util$1.createElement('<div style=\"position: absolute; width: 100%; height: 100%;' + 'background-color: black;\"></div>');\n    return _this;\n  }\n\n  /**\n   * @param {Object} enterPage\n   * @param {Object} leavePage\n   * @param {Function} callback\n   */\n\n\n  createClass(MDLiftNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var _this2 = this;\n\n      this.backgroundMask.remove();\n      leavePage.parentNode.insertBefore(this.backgroundMask, leavePage);\n\n      var unblock = get(MDLiftNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      var maskClear = Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\n        _this2.backgroundMask.remove();\n        done();\n      });\n\n      Animit.runAll(maskClear, Animit(enterPage, this.def).default({ transform: 'translate3d(0, 100%, 0)' }, { transform: 'translate3d(0, 0, 0)' }), Animit(leavePage, this.def).default({ opacity: 1 }, { opacity: .4 }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var _this3 = this;\n\n      this.backgroundMask.remove();\n      enterPage.parentNode.insertBefore(this.backgroundMask, enterPage);\n\n      var unblock = get(MDLiftNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDLiftNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(this.backgroundMask).wait(this.delay + this.duration).queue(function (done) {\n        _this3.backgroundMask.remove();\n        done();\n      }), Animit(enterPage, this.def).default({ opacity: .4 }, { opacity: 1 }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }), Animit(leavePage, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(0, 100%, 0)' }));\n    }\n  }]);\n  return MDLiftNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Fade-in + Lift screen transition.\n */\n\nvar MDFadeNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(MDFadeNavigatorAnimator, _NavigatorAnimator);\n\n  function MDFadeNavigatorAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(0.4, 0, 0.2, 1)' : _ref$timing,\n        _ref$timingPop = _ref.timingPop,\n        timingPop = _ref$timingPop === undefined ? 'cubic-bezier(0.4, 0, 1, 1)' : _ref$timingPop,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, MDFadeNavigatorAnimator);\n\n    var _this = possibleConstructorReturn(this, (MDFadeNavigatorAnimator.__proto__ || Object.getPrototypeOf(MDFadeNavigatorAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.timingPop = timingPop;\n    return _this;\n  }\n\n  /**\n   * @param {Object} enterPage\n   * @param {Object} leavePage\n   * @param {Function} callback\n   */\n\n\n  createClass(MDFadeNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      var unblock = get(MDFadeNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(enterPage, this.def).default({ transform: 'translate3D(0, 42px, 0)', opacity: 0 }, { transform: 'translate3D(0, 0, 0)', opacity: 1 }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {Object} enterPage\n     * @param {Object} leavePage\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      var unblock = get(MDFadeNavigatorAnimator.prototype.__proto__ || Object.getPrototypeOf(MDFadeNavigatorAnimator.prototype), 'block', this).call(this, enterPage);\n\n      Animit.runAll(Animit(leavePage, this.def).default({ transform: 'translate3D(0, 0, 0)', opacity: 1 }, { css: { transform: 'translate3D(0, 38px, 0)', opacity: 0 }, timing: this.timingPop }).queue(function (done) {\n        unblock();\n        callback();\n        done();\n      }));\n    }\n  }]);\n  return MDFadeNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar NoneNavigatorAnimator = function (_NavigatorAnimator) {\n  inherits(NoneNavigatorAnimator, _NavigatorAnimator);\n\n  function NoneNavigatorAnimator(options) {\n    classCallCheck(this, NoneNavigatorAnimator);\n    return possibleConstructorReturn(this, (NoneNavigatorAnimator.__proto__ || Object.getPrototypeOf(NoneNavigatorAnimator)).call(this, options));\n  }\n\n  createClass(NoneNavigatorAnimator, [{\n    key: 'push',\n    value: function push(enterPage, leavePage, callback) {\n      callback();\n    }\n  }, {\n    key: 'pop',\n    value: function pop(enterPage, leavePage, callback) {\n      callback();\n    }\n  }]);\n  return NoneNavigatorAnimator;\n}(NavigatorAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar _animatorDict$5 = {\n  'default': function _default() {\n    return platform.isAndroid() ? MDFadeNavigatorAnimator : IOSSlideNavigatorAnimator;\n  },\n  'slide': function slide() {\n    return platform.isAndroid() ? MDSlideNavigatorAnimator : IOSSlideNavigatorAnimator;\n  },\n  'lift': function lift() {\n    return platform.isAndroid() ? MDLiftNavigatorAnimator : IOSLiftNavigatorAnimator;\n  },\n  'fade': function fade() {\n    return platform.isAndroid() ? MDFadeNavigatorAnimator : IOSFadeNavigatorAnimator;\n  },\n  'slide-ios': IOSSlideNavigatorAnimator,\n  'slide-md': MDSlideNavigatorAnimator,\n  'lift-ios': IOSLiftNavigatorAnimator,\n  'lift-md': MDLiftNavigatorAnimator,\n  'fade-ios': IOSFadeNavigatorAnimator,\n  'fade-md': MDFadeNavigatorAnimator,\n  'none': NoneNavigatorAnimator\n};\n\nvar rewritables = {\n  /**\n   * @param {Element} navigatorSideElement\n   * @param {Function} callback\n   */\n  ready: function ready(navigatorElement, callback) {\n    callback();\n  }\n};\n\nvar verifyPageElement = function verifyPageElement(el) {\n  return el.nodeName !== 'ONS-PAGE' && util$1.throw('Only page elements can be children of navigator');\n};\n\n/**\n * @element ons-navigator\n * @category navigation\n * @description\n *   [en]\n *     A component that provides page stack management and navigation. Stack navigation is the most common navigation pattern for mobile apps.\n *\n *     When a page is pushed on top of the stack it is displayed with a transition animation. When the user returns to the previous page the top page will be popped from the top of the stack and hidden with an opposite transition animation.\n *   [/en]\n *   [ja][/ja]\n * @codepen yrhtv\n * @tutorial vanilla/Reference/navigator\n * @guide lifecycle.html#events\n *   [en]Overview of page events[/en]\n *   [ja]Overview of page events[/ja]\n * @seealso ons-toolbar\n *   [en]The `<ons-toolbar>` component is used to display a toolbar on the top of a page.[/en]\n *   [ja][/ja]\n * @seealso ons-back-button\n *   [en]The `<ons-back-button>` component lets the user return to the previous page.[/en]\n *   [ja][/ja]\n * @example\n * <ons-navigator id=\"navigator\">\n *   <ons-page>\n *     <ons-toolbar>\n *       <div class=\"center\">\n *         Title\n *       </div>\n *     </ons-toolbar>\n *     <p>\n *       <ons-button\n *         onclick=\"document.getElementById('navigator').pushPage('page.html')\">\n *         Push page\n *       </ons-button>\n *     </p>\n *   </ons-page>\n * </ons-navigator>\n *\n * <template id=\"page.html\">\n *   <ons-page>\n *     <ons-toolbar>\n *       <div class=\"left\">\n *         <ons-back-button>Back</ons-back-button>\n *       </div>\n *       <div class=\"center\">\n *         Another page\n *       </div>\n *     </ons-toolbar>\n *   </ons-page>\n * </template>\n */\n\nvar NavigatorElement = function (_BaseElement) {\n  inherits(NavigatorElement, _BaseElement);\n  createClass(NavigatorElement, [{\n    key: 'animatorFactory',\n\n\n    /**\n     * @attribute page\n     * @initonly\n     * @type {String}\n     * @description\n     *   [en]First page to show when navigator is initialized.[/en]\n     *   [ja]ナビゲーターが初期化された時に表示するページを指定します。[/ja]\n     */\n\n    /**\n     * @attribute swipeable\n     * @type {Boolean}\n     * @description\n     *   [en]Enable iOS \"swipe to pop\" feature.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @attribute swipe-target-width\n     * @type {String}\n     * @default 20px\n     * @description\n     *   [en]The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge.[/en]\n     *   [ja]スワイプの判定領域をピクセル単位で指定します。画面の端から指定した距離に達するとページが表示されます。[/ja]\n     */\n\n    /**\n     * @attribute swipe-threshold\n     * @type {Number}\n     * @default 0.2\n     * @description\n     *  [en]Specify how much the page needs to be swiped before popping. A value between `0` and `1`.[/en]\n     *  [ja][/ja]\n     */\n\n    /**\n     * @attribute animation\n     * @type {String}\n     * @default default\n     * @description\n     *   [en]\n     *     Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n     *\n     *     These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"` depending on the platform.\n     *   [/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @attribute animation-options\n     * @type {Expression}\n     * @description\n     *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/en]\n     *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`[/ja]\n     */\n\n    /**\n     * @event prepush\n     * @description\n     *   [en]Fired just before a page is pushed.[/en]\n     *   [ja]pageがpushされる直前に発火されます。[/ja]\n     * @param {Object} event [en]Event object.[/en]\n     * @param {Object} event.navigator\n     *   [en]Component object.[/en]\n     *   [ja]コンポーネントのオブジェクト。[/ja]\n     * @param {Object} event.currentPage\n     *   [en]Current page object.[/en]\n     *   [ja]現在のpageオブジェクト。[/ja]\n     * @param {Function} event.cancel\n     *   [en]Call this function to cancel the push.[/en]\n     *   [ja]この関数を呼び出すと、push処理がキャンセルされます。[/ja]\n     */\n\n    /**\n     * @event prepop\n     * @description\n     *   [en]Fired just before a page is popped.[/en]\n     *   [ja]pageがpopされる直前に発火されます。[/ja]\n     * @param {Object} event [en]Event object.[/en]\n     * @param {Object} event.navigator\n     *   [en]Component object.[/en]\n     *   [ja]コンポーネントのオブジェクト。[/ja]\n     * @param {Object} event.currentPage\n     *   [en]Current page object.[/en]\n     *   [ja]現在のpageオブジェクト。[/ja]\n     * @param {Function} event.cancel\n     *   [en]Call this function to cancel the pop.[/en]\n     *   [ja]この関数を呼び出すと、pageのpopがキャンセルされます。[/ja]\n     */\n\n    /**\n     * @event postpush\n     * @description\n     *   [en]Fired just after a page is pushed.[/en]\n     *   [ja]pageがpushされてアニメーションが終了してから発火されます。[/ja]\n     * @param {Object} event [en]Event object.[/en]\n     * @param {Object} event.navigator\n     *   [en]Component object.[/en]\n     *   [ja]コンポーネントのオブジェクト。[/ja]\n     * @param {Object} event.enterPage\n     *   [en]Object of the next page.[/en]\n     *   [ja]pushされたpageオブジェクト。[/ja]\n     * @param {Object} event.leavePage\n     *   [en]Object of the previous page.[/en]\n     *   [ja]以前のpageオブジェクト。[/ja]\n     */\n\n    /**\n     * @event postpop\n     * @description\n     *   [en]Fired just after a page is popped.[/en]\n     *   [ja]pageがpopされてアニメーションが終わった後に発火されます。[/ja]\n     * @param {Object} event [en]Event object.[/en]\n     * @param {Object} event.navigator\n     *   [en]Component object.[/en]\n     *   [ja]コンポーネントのオブジェクト。[/ja]\n     * @param {Object} event.enterPage\n     *   [en]Object of the next page.[/en]\n     *   [ja]popされて表示されるページのオブジェクト。[/ja]\n     * @param {Object} event.leavePage\n     *   [en]Object of the previous page.[/en]\n     *   [ja]popされて消えるページのオブジェクト。[/ja]\n     */\n\n    get: function get$$1() {\n      return this._animatorFactory;\n    }\n  }]);\n\n  function NavigatorElement() {\n    classCallCheck(this, NavigatorElement);\n\n    var _this = possibleConstructorReturn(this, (NavigatorElement.__proto__ || Object.getPrototypeOf(NavigatorElement)).call(this));\n\n    _this._isRunning = false;\n    _this._initialized = false;\n    _this._pageLoader = defaultPageLoader;\n    _this._pageMap = new WeakMap();\n\n    _this._updateAnimatorFactory();\n    return _this;\n  }\n\n  /**\n   * @property pageLoader\n   * @type {PageLoader}\n   * @description\n   *   [en]PageLoader instance. It can be overriden to change the way pages are loaded by this element. Useful for lib developers.[/en]\n   *   [ja]PageLoaderインスタンスを格納しています。[/ja]\n   */\n\n\n  createClass(NavigatorElement, [{\n    key: '_getPageTarget',\n    value: function _getPageTarget() {\n      return this._page || this.getAttribute('page');\n    }\n\n    /**\n     * @property page\n     * @type {*}\n     * @description\n     *   [en]Specify the page to be loaded during initialization. This value takes precedence over the `page` attribute. Useful for lib developers.[/en]\n     *   [ja]初期化時に読み込むページを指定します。`page`属性で指定した値よりも`page`プロパティに指定した値を優先します。[/ja]\n     */\n\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\n\n      if (!platform.isAndroid() || this.getAttribute('swipeable') === 'force') {\n        var swipeAnimator = void 0;\n\n        this._swipe = new SwipeReveal({\n          element: this,\n          getThreshold: function getThreshold() {\n            return Math.max(0.2, parseFloat(_this2.getAttribute('swipe-threshold')) || 0);\n          },\n\n          swipeMax: function swipeMax() {\n            _this2._onSwipe && _this2._onSwipe(1, { duration: swipeAnimator.durationSwipe, timing: swipeAnimator.timingSwipe });\n            _this2[_this2.swipeMax ? 'swipeMax' : 'popPage']({ animator: swipeAnimator });\n            swipeAnimator = null;\n          },\n          swipeMid: function swipeMid(distance, width) {\n            _this2._onSwipe && _this2._onSwipe(distance / width);\n            swipeAnimator.translate(distance, width, _this2.topPage.previousElementSibling, _this2.topPage);\n          },\n          swipeMin: function swipeMin() {\n            _this2._onSwipe && _this2._onSwipe(0, { duration: swipeAnimator.durationRestore, timing: swipeAnimator.timingSwipe });\n            swipeAnimator.restore(_this2.topPage.previousElementSibling, _this2.topPage);\n            swipeAnimator = null;\n          },\n\n          ignoreSwipe: function ignoreSwipe(event, distance) {\n            // Basic conditions\n            if (!_this2._isRunning && _this2.children.length > 1) {\n\n              // Area or directional issues\n              var area = parseInt(_this2.getAttribute('swipe-target-width') || 25, 10);\n              if (event.gesture.direction === 'right' && area > distance) {\n\n                // Swipes on ons-back-button and its children\n                var isBB = function isBB(el) {\n                  return (/ons-back-button/i.test(el.tagName)\n                  );\n                };\n                if (!isBB(event.target) && !util$1.findParent(event.target, isBB, function (p) {\n                  return (/ons-page/i.test(p.tagName)\n                  );\n                })) {\n\n                  // Animator is swipeable\n                  var animation = (_this2.topPage.pushedOptions || {}).animation || _this2.animatorFactory._animation;\n                  var Animator = _animatorDict$5[animation] instanceof Function ? _animatorDict$5[animation].call() : _animatorDict$5[animation];\n\n                  if (typeof Animator !== 'undefined' && Animator.swipeable) {\n                    swipeAnimator = new Animator(); // Prepare for the swipe\n                    return false;\n                  }\n                }\n              }\n            }\n\n            return true; // Ignore swipe\n          }\n        });\n\n        this.attributeChangedCallback('swipeable');\n      }\n\n      if (this._initialized) {\n        return;\n      }\n\n      this._initialized = true;\n\n      var deferred = util$1.defer();\n      this.loaded = deferred.promise;\n\n      rewritables.ready(this, function () {\n        var show = !util$1.hasAnyComponentAsParent(_this2);\n        var options = { animation: 'none', show: show };\n\n        if (_this2.pages.length === 0 && _this2._getPageTarget()) {\n          _this2.pushPage(_this2._getPageTarget(), options).then(function () {\n            return deferred.resolve();\n          });\n        } else if (_this2.pages.length > 0) {\n          for (var i = 0; i < _this2.pages.length; i++) {\n            verifyPageElement(_this2.pages[i]);\n          }\n\n          if (_this2.topPage) {\n            contentReady(_this2.topPage, function () {\n              return setTimeout(function () {\n                deferred.resolve();\n                show && _this2.topPage._show();\n                _this2._updateLastPageBackButton();\n              }, 0);\n            });\n          }\n        } else {\n          contentReady(_this2, function () {\n            if (_this2.pages.length === 0 && _this2._getPageTarget()) {\n              _this2.pushPage(_this2._getPageTarget(), options).then(function () {\n                return deferred.resolve();\n              });\n            } else {\n              deferred.resolve();\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      this._animatorFactory = new AnimatorFactory({\n        animators: _animatorDict$5,\n        baseClass: NavigatorAnimator,\n        baseClassName: 'NavigatorAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._backButtonHandler.destroy();\n      this._backButtonHandler = null;\n\n      this._swipe && this._swipe.dispose();\n      this._swipe = null;\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'animation':\n          this._updateAnimatorFactory();\n          break;\n        case 'swipeable':\n          this._swipe && this._swipe.update();\n          break;\n      }\n    }\n\n    /**\n     * @method popPage\n     * @signature popPage([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]\n     *     Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n     *\n     *     These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"`.\n     *   [/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]Function that is called when the transition has ended.[/en]\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\n     * @param {Object} [options.data]\n     *   [en]Custom data that will be stored in the new page element.[/en]\n     *   [ja][/ja]\n     * @param {Number} [options.times]\n     *   [en]Number of pages to be popped. Only one animation will be shown.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Promise which resolves to the revealed page.[/en]\n     *   [ja]明らかにしたページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Pops the current page from the page stack. The previous page will be displayed.[/en]\n     *   [ja]現在表示中のページをページスタックから取り除きます。一つ前のページに戻ります。[/ja]\n     */\n\n  }, {\n    key: 'popPage',\n    value: function popPage() {\n      var _this3 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var _preparePageAndOption = this._preparePageAndOptions(null, options);\n\n      options = _preparePageAndOption.options;\n\n\n      if (util$1.isInteger(options.times) && options.times > 1) {\n        this._removePages(options.times);\n      }\n\n      var popUpdate = function popUpdate() {\n        return new Promise(function (resolve) {\n          _this3._pageLoader.unload(_this3.pages[_this3.pages.length - 1]);\n          resolve();\n        });\n      };\n\n      return this._popPage(options, popUpdate);\n    }\n  }, {\n    key: '_popPage',\n    value: function _popPage(options) {\n      var _this4 = this;\n\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return Promise.resolve();\n      };\n\n      if (this._isRunning) {\n        return Promise.reject('popPage is already running.');\n      }\n\n      if (this.pages.length <= 1) {\n        return Promise.reject('ons-navigator\\'s page stack is empty.');\n      }\n\n      if (this._emitPrePopEvent()) {\n        return Promise.reject('Canceled in prepop event.');\n      }\n\n      var length = this.pages.length;\n\n      this._isRunning = true;\n\n      this.pages[length - 2].updateBackButton(length - 2 > 0);\n\n      return new Promise(function (resolve) {\n        var leavePage = _this4.pages[length - 1];\n        var enterPage = _this4.pages[length - 2];\n\n        options = util$1.extend({}, _this4.options || {}, options);\n\n        if (options.data) {\n          enterPage.data = util$1.extend({}, enterPage.data || {}, options.data || {});\n        }\n\n        var done = function done() {\n          update().then(function () {\n            _this4._isRunning = false;\n\n            enterPage._show();\n            util$1.triggerElementEvent(_this4, 'postpop', { leavePage: leavePage, enterPage: enterPage, navigator: _this4 });\n\n            options.callback && options.callback(enterPage);\n\n            resolve(enterPage);\n          });\n        };\n\n        leavePage._hide();\n        enterPage.style.display = '';\n\n        var animator = options.animator || _this4._animatorFactory.newAnimator(options);\n        animator.pop(_this4.pages[length - 2], _this4.pages[length - 1], done);\n      }).catch(function () {\n        return _this4._isRunning = false;\n      });\n    }\n\n    /**\n     * @method pushPage\n     * @signature pushPage(page, [options])\n     * @param {String} page\n     *   [en]Page URL. Can be either a HTML document or a template defined with the `<template>` tag.[/en]\n     *   [ja]pageのURLか、もしくは`<template>`で宣言したテンプレートのid属性の値を指定できます。[/ja]\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.page]\n     *   [en]Page URL. Only necessary if `page` parameter is null or undefined.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.pageHTML]\n     *   [en]HTML code that will be computed as a new page. Overwrites `page` parameter.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]\n     *     Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n     *\n     *     These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"`.\n     *   [/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\n     * @param {Function} [options.callback]\n     *   [en]Function that is called when the transition has ended.[/en]\n     *   [ja]pushPage()による画面遷移が終了した時に呼び出される関数オブジェクトを指定します。[/ja]\n     * @param {Object} [options.data]\n     *   [en]Custom data that will be stored in the new page element.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Promise which resolves to the pushed page.[/en]\n     *   [ja]追加したページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Pushes the specified page into the stack.[/en]\n     *   [ja]指定したpageを新しいページスタックに追加します。新しいページが表示されます。[/ja]\n     */\n\n  }, {\n    key: 'pushPage',\n    value: function pushPage(page) {\n      var _this5 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _preparePageAndOption2 = this._preparePageAndOptions(page, options);\n\n      page = _preparePageAndOption2.page;\n      options = _preparePageAndOption2.options;\n\n\n      var prepare = function prepare(pageElement) {\n        verifyPageElement(pageElement);\n        _this5._pageMap.set(pageElement, page);\n        pageElement = util$1.extend(pageElement, {\n          data: options.data\n        });\n        pageElement.style.visibility = 'hidden';\n      };\n\n      if (options.pageHTML) {\n        return this._pushPage(options, function () {\n          return new Promise(function (resolve) {\n            instantPageLoader.load({ page: options.pageHTML, parent: _this5, params: options.data }, function (pageElement) {\n              prepare(pageElement);\n              resolve();\n            });\n          });\n        });\n      }\n\n      return this._pushPage(options, function () {\n        return new Promise(function (resolve) {\n          _this5._pageLoader.load({ page: page, parent: _this5, params: options.data }, function (pageElement) {\n            prepare(pageElement);\n            resolve();\n          }, function (error) {\n            _this5._isRunning = false;\n            throw error;\n          });\n        });\n      });\n    }\n  }, {\n    key: '_pushPage',\n    value: function _pushPage() {\n      var _this6 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var update = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return Promise.resolve();\n      };\n\n      if (this._isRunning) {\n        return Promise.reject('pushPage is already running.');\n      }\n\n      if (this._emitPrePushEvent()) {\n        return Promise.reject('Canceled in prepush event.');\n      }\n\n      this._isRunning = true;\n\n      var animationOptions = AnimatorFactory.parseAnimationOptionsString(this.getAttribute('animation-options'));\n      options = util$1.extend({}, this.options || {}, { animationOptions: animationOptions }, options);\n\n      var animator = this._animatorFactory.newAnimator(options);\n\n      return update().then(function () {\n        var pageLength = _this6.pages.length;\n\n        var enterPage = _this6.pages[pageLength - 1];\n        var leavePage = options.leavePage || _this6.pages[pageLength - 2];\n\n        verifyPageElement(enterPage);\n\n        enterPage.updateBackButton(pageLength > (options._replacePage ? 2 : 1));\n\n        enterPage.pushedOptions = util$1.extend({}, enterPage.pushedOptions || {}, options || {});\n        enterPage.data = util$1.extend({}, enterPage.data || {}, options.data || {});\n        enterPage.unload = enterPage.unload || options.unload;\n\n        return new Promise(function (resolve) {\n          var done = function done() {\n            _this6._isRunning = false;\n\n            options.show !== false && setImmediate(function () {\n              return enterPage._show();\n            });\n            util$1.triggerElementEvent(_this6, 'postpush', { leavePage: leavePage, enterPage: enterPage, navigator: _this6 });\n\n            if (leavePage) {\n              leavePage.style.display = 'none';\n            }\n\n            options.callback && options.callback(enterPage);\n\n            resolve(enterPage);\n          };\n\n          enterPage.style.visibility = '';\n          if (leavePage) {\n            leavePage._hide();\n            animator.push(enterPage, leavePage, done);\n          } else {\n            done();\n          }\n        });\n      }).catch(function (error) {\n        _this6._isRunning = false;\n        throw error;\n      });\n    }\n\n    /**\n     * @method replacePage\n     * @signature replacePage(page, [options])\n     * @return {Promise}\n     *   [en]Promise which resolves to the new page.[/en]\n     *   [ja]新しいページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Replaces the current top page with the specified one. Extends `pushPage()` parameters.[/en]\n     *   [ja]現在表示中のページをを指定したページに置き換えます。[/ja]\n     */\n\n  }, {\n    key: 'replacePage',\n    value: function replacePage(page) {\n      var _this7 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      return this.pushPage(page, options).then(function (resolvedValue) {\n        if (_this7.pages.length > 1) {\n          _this7._pageLoader.unload(_this7.pages[_this7.pages.length - 2]);\n        }\n        _this7._updateLastPageBackButton();\n\n        return Promise.resolve(resolvedValue);\n      });\n    }\n\n    /**\n     * @method insertPage\n     * @signature insertPage(index, page, [options])\n     * @param {Number} index\n     *   [en]The index where it should be inserted.[/en]\n     *   [ja]スタックに挿入する位置のインデックスを指定します。[/ja]\n     * @return {Promise}\n     *   [en]Promise which resolves to the inserted page.[/en]\n     *   [ja]指定したページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Insert the specified page into the stack with at a position defined by the `index` argument. Extends `pushPage()` parameters.[/en]\n     *   [ja]指定したpageをページスタックのindexで指定した位置に追加します。[/ja]\n     */\n\n  }, {\n    key: 'insertPage',\n    value: function insertPage(index, page) {\n      var _this8 = this;\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _preparePageAndOption3 = this._preparePageAndOptions(page, options);\n\n      page = _preparePageAndOption3.page;\n      options = _preparePageAndOption3.options;\n\n      index = this._normalizeIndex(index);\n\n      if (index >= this.pages.length) {\n        return this.pushPage(page, options);\n      }\n\n      page = typeof options.pageHTML === 'string' ? options.pageHTML : page;\n      var loader = typeof options.pageHTML === 'string' ? instantPageLoader : this._pageLoader;\n\n      return new Promise(function (resolve) {\n        loader.load({ page: page, parent: _this8 }, function (pageElement) {\n          verifyPageElement(pageElement);\n          _this8._pageMap.set(pageElement, page);\n          pageElement = util$1.extend(pageElement, {\n            data: options.data,\n            pushedOptions: options\n          });\n\n          options.animationOptions = util$1.extend({}, AnimatorFactory.parseAnimationOptionsString(_this8.getAttribute('animation-options')), options.animationOptions || {});\n\n          pageElement.style.display = 'none';\n          _this8.insertBefore(pageElement, _this8.pages[index]);\n          _this8.topPage.updateBackButton(true);\n\n          setTimeout(function () {\n            pageElement = null;\n            resolve(_this8.pages[index]);\n          }, 1000 / 60);\n        });\n      });\n    }\n\n    /**\n     * @method removePage\n     * @signature removePage(index, [options])\n     * @param {Number} index\n     *   [en]The index where it should be removed.[/en]\n     *   [ja]スタックから削除するページのインデックスを指定します。[/ja]\n     * @return {Promise}\n     *   [en]Promise which resolves to the revealed page.[/en]\n     *   [ja]削除によって表示されたページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Remove the specified page at a position in the stack defined by the `index` argument. Extends `popPage()` parameters.[/en]\n     *   [ja]指定したインデックスにあるページを削除します。[/ja]\n     */\n\n  }, {\n    key: 'removePage',\n    value: function removePage(index) {\n      var _this9 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      index = this._normalizeIndex(index);\n\n      if (index < this.pages.length - 1) {\n        return new Promise(function (resolve) {\n          var leavePage = _this9.pages[index];\n          var enterPage = _this9.topPage;\n\n          _this9._pageMap.delete(leavePage);\n          _this9._pageLoader.unload(leavePage);\n          if (_this9.pages.length === 1) {\n            // edge case\n            _this9.topPage.updateBackButton(false);\n          }\n\n          resolve(enterPage);\n        });\n      } else {\n        return this.popPage(options);\n      }\n    }\n\n    /**\n     * @method resetToPage\n     * @signature resetToPage(page, [options])\n     * @return {Promise}\n     *   [en]Promise which resolves to the new top page.[/en]\n     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]\n     * @param {Boolean} [options.pop]\n     *   [en]Performs 'pop' effect if `true` instead of 'push' or none. This also sets `options.animation` value to `default` instead of `none`.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Clears page stack and adds the specified page to the stack. Extends `pushPage()` parameters.[/en]\n     *   [ja]ページスタックをリセットし、指定したページを表示します。[/ja]\n     */\n\n  }, {\n    key: 'resetToPage',\n    value: function resetToPage(page) {\n      var _this10 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _preparePageAndOption4 = this._preparePageAndOptions(page, options);\n\n      page = _preparePageAndOption4.page;\n      options = _preparePageAndOption4.options;\n\n\n      if (!options.animator && !options.animation && !options.pop) {\n        options.animation = 'none';\n      }\n\n      if (!options.page && !options.pageHTML && this._getPageTarget()) {\n        page = options.page = this._getPageTarget();\n      }\n\n      if (options.pop) {\n        this._removePages();\n        return this.insertPage(0, page, { data: options.data }).then(function () {\n          return _this10.popPage(options);\n        });\n      }\n\n      // Tip: callback runs before resolved promise\n      var callback = options.callback;\n      options.callback = function (newPage) {\n        _this10._removePages();\n        newPage.updateBackButton(false);\n        callback && callback(newPage);\n      };\n\n      return this.pushPage(page, options);\n    }\n\n    /**\n     * @method bringPageTop\n     * @signature bringPageTop(item, [options])\n     * @param {String|Number} item\n     *   [en]Page URL or index of an existing page in navigator's stack.[/en]\n     *   [ja]ページのURLかもしくはons-navigatorのページスタックのインデックス値を指定します。[/ja]\n     * @return {Promise}\n     *   [en]Promise which resolves to the new top page.[/en]\n     *   [ja]新しいトップページを解決するPromiseを返します。[/ja]\n     * @description\n     *   [en]Brings the given page to the top of the page stack if it already exists or pushes it into the stack if doesn't. Extends `pushPage()` parameters.[/en]\n     *   [ja]指定したページをページスタックの一番上に移動します。もし指定したページが無かった場合新しくpushされます。[/ja]\n     */\n\n  }, {\n    key: 'bringPageTop',\n    value: function bringPageTop(item) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (['number', 'string'].indexOf(typeof item === 'undefined' ? 'undefined' : _typeof(item)) === -1) {\n        util$1.throw('First argument must be a page name or the index of an existing page. You supplied ' + item);\n      }\n      var index = typeof item === 'number' ? this._normalizeIndex(item) : this._lastIndexOfPage(item);\n      var page = this.pages[index];\n\n      if (index < 0) {\n        return this.pushPage(item, options);\n      }\n\n      var _preparePageAndOption5 = this._preparePageAndOptions(page, options);\n\n      options = _preparePageAndOption5.options;\n\n\n      if (index === this.pages.length - 1) {\n        return Promise.resolve(page);\n      }\n      if (!page) {\n        util$1.throw('Failed to find item ' + item);\n      }\n      if (this._isRunning) {\n        return Promise.reject('pushPage is already running.');\n      }\n      if (this._emitPrePushEvent()) {\n        return Promise.reject('Canceled in prepush event.');\n      }\n\n      page.style.display = '';\n      page.style.visibility = 'hidden';\n      page.parentNode.appendChild(page);\n      return this._pushPage(options);\n    }\n  }, {\n    key: '_preparePageAndOptions',\n    value: function _preparePageAndOptions(page) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) != 'object') {\n        util$1.throw('options must be an object. You supplied ' + options);\n      }\n\n      if ((page === null || page === undefined) && options.page) {\n        page = options.page;\n      }\n\n      options = util$1.extend({}, this.options || {}, options, { page: page });\n\n      return { page: page, options: options };\n    }\n  }, {\n    key: '_removePages',\n    value: function _removePages(times) {\n      var pages = this.pages;\n      var until = times === undefined ? 0 : pages.length - times;\n      until = until < 0 ? 1 : until;\n\n      for (var i = pages.length - 2; i >= until; i--) {\n        this._pageMap.delete(pages[i]);\n        this._pageLoader.unload(pages[i]);\n      }\n    }\n  }, {\n    key: '_updateLastPageBackButton',\n    value: function _updateLastPageBackButton() {\n      var index = this.pages.length - 1;\n      if (index >= 0) {\n        this.pages[index].updateBackButton(index > 0);\n      }\n    }\n  }, {\n    key: '_normalizeIndex',\n    value: function _normalizeIndex(index) {\n      return index >= 0 ? index : Math.abs(this.pages.length + index) % this.pages.length;\n    }\n  }, {\n    key: '_onDeviceBackButton',\n    value: function _onDeviceBackButton(event) {\n      if (this.pages.length > 1) {\n        this.popPage();\n      } else {\n        event.callParentHandler();\n      }\n    }\n  }, {\n    key: '_lastIndexOfPage',\n    value: function _lastIndexOfPage(pageName) {\n      var index = void 0;\n      for (index = this.pages.length - 1; index >= 0; index--) {\n        if (pageName === this._pageMap.get(this.pages[index])) {\n          break;\n        }\n      }\n      return index;\n    }\n  }, {\n    key: '_emitPreEvent',\n    value: function _emitPreEvent(name) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var isCanceled = false;\n\n      util$1.triggerElementEvent(this, 'pre' + name, util$1.extend({\n        navigator: this,\n        currentPage: this.pages[this.pages.length - 1],\n        cancel: function cancel() {\n          return isCanceled = true;\n        }\n      }, data));\n\n      return isCanceled;\n    }\n  }, {\n    key: '_emitPrePushEvent',\n    value: function _emitPrePushEvent() {\n      return this._emitPreEvent('push');\n    }\n  }, {\n    key: '_emitPrePopEvent',\n    value: function _emitPrePopEvent() {\n      var l = this.pages.length;\n      return this._emitPreEvent('pop', {\n        leavePage: this.pages[l - 1],\n        enterPage: this.pages[l - 2]\n      });\n    }\n\n    // TODO: 書き直す\n\n  }, {\n    key: '_createPageElement',\n    value: function _createPageElement(templateHTML) {\n      var pageElement = util$1.createElement(internal$1.normalizePageHTML(templateHTML));\n      verifyPageElement(pageElement);\n      return pageElement;\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: '_show',\n    value: function _show() {\n      var _this11 = this;\n\n      this.loaded.then(function () {\n        return _this11.topPage && _this11.topPage._show();\n      });\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      this.topPage && this.topPage._hide();\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      for (var i = this.pages.length - 1; i >= 0; i--) {\n        this._pageLoader.unload(this.pages[i]);\n      }\n\n      this.remove();\n    }\n\n    /**\n     * @param {String} name\n     * @param {Function} Animator\n     */\n\n  }, {\n    key: 'pageLoader',\n    get: function get$$1() {\n      return this._pageLoader;\n    },\n    set: function set$$1(pageLoader) {\n      if (!(pageLoader instanceof PageLoader)) {\n        util$1.throwPageLoader();\n      }\n      this._pageLoader = pageLoader;\n    }\n  }, {\n    key: 'page',\n    get: function get$$1() {\n      return this._page;\n    },\n    set: function set$$1(page) {\n      this._page = page;\n    }\n  }, {\n    key: 'onDeviceBackButton',\n    get: function get$$1() {\n      return this._backButtonHandler;\n    },\n    set: function set$$1(callback) {\n      if (this._backButtonHandler) {\n        this._backButtonHandler.destroy();\n      }\n\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n    }\n\n    /**\n     * @property topPage\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]Current top page element. Use this method to access options passed by `pushPage()`-like methods.[/en]\n     *   [ja]現在のページを取得します。pushPage()やresetToPage()メソッドの引数を取得できます。[/ja]\n     */\n\n  }, {\n    key: 'topPage',\n    get: function get$$1() {\n      var last = this.lastElementChild;\n      while (last && last.tagName !== 'ONS-PAGE') {\n        last = last.previousElementSibling;\n      }\n      return last;\n    }\n\n    /**\n     * @property pages\n     * @readonly\n     * @type {Array}\n     * @description\n     *   [en]Copy of the navigator's page stack.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'pages',\n    get: function get$$1() {\n      return util$1.arrayFrom(this.children).filter(function (element) {\n        return element.tagName === 'ONS-PAGE';\n      });\n    }\n\n    /**\n     * @property onSwipe\n     * @type {Function}\n     * @description\n     *   [en]Hook called whenever the user slides the navigator (swipe-to-pop). It gets a decimal ratio (0-1) and an animationOptions object as arguments.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'onSwipe',\n    get: function get$$1() {\n      return this._onSwipe;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        util$1.throw('\"onSwipe\" must be a function');\n      }\n      this._onSwipe = value;\n    }\n\n    /**\n     * @property options\n     * @type {Object}\n     * @description\n     *   [en]Default options object. Attributes have priority over this property.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property options.animation\n     * @type {String}\n     * @description\n     *   [en]\n     *     Animation name. Available animations are `\"slide\"`, `\"lift\"`, `\"fade\"` and `\"none\"`.\n     *     These are platform based animations. For fixed animations, add `\"-ios\"` or `\"-md\"` suffix to the animation name. E.g. `\"lift-ios\"`, `\"lift-md\"`. Defaults values are `\"slide-ios\"` and `\"fade-md\"`.\n     *   [/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property options.animationOptions\n     * @type {String}\n     * @description\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}` [/ja]\n     */\n\n    /**\n     * @property options.callback\n     * @type {String}\n     * @description\n     *   [en]Function that is called when the transition has ended.[/en]\n     *   [ja]このメソッドによる画面遷移が終了した際に呼び出される関数オブジェクトを指定します。[/ja]\n     */\n\n  }, {\n    key: 'options',\n    get: function get$$1() {\n      return this._options;\n    },\n    set: function set$$1(object) {\n      this._options = object;\n    }\n  }, {\n    key: '_isRunning',\n    set: function set$$1(value) {\n      this.setAttribute('_is-running', value ? 'true' : 'false');\n    },\n    get: function get$$1() {\n      return JSON.parse(this.getAttribute('_is-running'));\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof NavigatorAnimator)) {\n        util$1.throwAnimator('Navigator');\n      }\n\n      _animatorDict$5[name] = Animator;\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['animation', 'swipeable'];\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$5;\n    }\n  }, {\n    key: 'NavigatorAnimator',\n    get: function get$$1() {\n      return NavigatorAnimator;\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['prepush', 'postpush', 'prepop', 'postpop'];\n    }\n  }, {\n    key: 'rewritables',\n    get: function get$$1() {\n      return rewritables;\n    }\n  }]);\n  return NavigatorElement;\n}(BaseElement);\n\nonsElements.Navigator = NavigatorElement;\ncustomElements.define('ons-navigator', NavigatorElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$10 = 'toolbar';\n\nvar scheme$18 = {\n  '': 'toolbar--*',\n  '.toolbar__left': 'toolbar--*__left',\n  '.toolbar__center': 'toolbar--*__center',\n  '.toolbar__right': 'toolbar--*__right'\n};\n\n/**\n * @element ons-toolbar\n * @category page\n * @modifier material\n *   [en]Material Design toolbar.[/en]\n *   [ja][/ja]\n * @modifier transparent\n *   [en]Transparent toolbar.[/en]\n *   [ja]透明な背景を持つツールバーを表示します。[/ja]\n * @modifier cover-content\n *   [en]Displays the toolbar on top of the page's content. Should be combined with `transparent` modifier.[/en]\n *   [ja][/ja]\n * @modifier noshadow\n *   [en]Toolbar without shadow.[/en]\n *   [ja]ツールバーに影を付けずに表示します。[/ja]\n * @description\n *   [en]\n *     Toolbar component that can be used with navigation.\n *\n *     Left, center and right containers can be specified by class names.\n *\n *     This component will automatically display as a Material Design toolbar when running on Android devices.\n *   [/en]\n *   [ja]ナビゲーションで使用するツールバー用コンポーネントです。クラス名により、左、中央、右のコンテナを指定できます。[/ja]\n * @codepen aHmGL\n * @tutorial vanilla/Reference/toolbar\n * @guide compilation.html#toolbar-compilation [en]Adding a toolbar[/en][ja]ツールバーの追加[/ja]\n * @seealso ons-bottom-toolbar\n *   [en]The `<ons-bottom-toolbar>` displays a toolbar on the bottom of the page.[/en]\n *   [ja]ons-bottom-toolbarコンポーネント[/ja]\n * @seealso ons-back-button\n *   [en]The `<ons-back-button>` component displays a back button inside the toolbar.[/en]\n *   [ja]ons-back-buttonコンポーネント[/ja]\n * @seealso ons-toolbar-button\n *   [en]The `<ons-toolbar-button>` component displays a toolbar button inside the toolbar.[/en]\n *   [ja]ons-toolbar-buttonコンポーネント[/ja]\n * @example\n * <ons-page>\n *   <ons-toolbar>\n *     <div class=\"left\">\n *       <ons-back-button>\n *         Back\n *       </ons-back-button>\n *     </div>\n *     <div class=\"center\">\n *       Title\n *     </div>\n *     <div class=\"right\">\n *       <ons-toolbar-button>\n *         <ons-icon icon=\"md-menu\"></ons-icon>\n *       </ons-toolbar-button>\n *     </div>\n *   </ons-toolbar>\n * </ons-page>\n */\n\nvar ToolbarElement = function (_BaseElement) {\n  inherits(ToolbarElement, _BaseElement);\n\n  /**\n   * @attribute inline\n   * @initonly\n   * @description\n   *   [en]Display the toolbar as an inline element.[/en]\n   *   [ja]ツールバーをインラインに置きます。スクロール領域内にそのまま表示されます。[/ja]\n   */\n\n  /**\n   * @attribute static\n   * @description\n   *   [en]Static toolbars are not animated by `ons-navigator` when pushing or popping pages. This can be useful to improve performance in some situations.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @description\n   *   [en]The appearance of the toolbar.[/en]\n   *   [ja]ツールバーの表現を指定します。[/ja]\n   */\n\n  function ToolbarElement() {\n    classCallCheck(this, ToolbarElement);\n\n    var _this = possibleConstructorReturn(this, (ToolbarElement.__proto__ || Object.getPrototypeOf(ToolbarElement)).call(this));\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ToolbarElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$10, scheme$18);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$18);\n          break;\n      }\n    }\n\n    /**\n     * @method setVisibility\n     * @signature setVisibility(visible)\n     * @param {Boolean} visible\n     *   [en]Set to true to show the toolbar, false to hide it[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Shows the toolbar if visible is true, otherwise hides it.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'setVisibility',\n    value: function setVisibility(visible) {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        _this2.style.display = visible ? '' : 'none';\n\n        if (_this2.parentNode) {\n          var siblingBackground = util$1.findChild(_this2.parentNode, '.page__background');\n          if (siblingBackground) {\n            siblingBackground.style.top = visible ? null : 0;\n          }\n\n          var siblingContent = util$1.findChild(_this2.parentNode, '.page__content');\n          if (siblingContent) {\n            siblingContent.style.top = visible ? null : 0;\n          }\n        }\n      });\n    }\n\n    /**\n     * @method show\n     * @signature show()\n     * @description\n     *   [en]Show the toolbar.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      this.setVisibility(true);\n    }\n\n    /**\n     * @method hide\n     * @signature hide()\n     * @description\n     *   [en]Hide the toolbar.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.setVisibility(false);\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_getToolbarLeftItemsElement',\n    value: function _getToolbarLeftItemsElement() {\n      return this.querySelector('.left') || internal$1.nullElement;\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_getToolbarCenterItemsElement',\n    value: function _getToolbarCenterItemsElement() {\n      return this.querySelector('.center') || internal$1.nullElement;\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_getToolbarRightItemsElement',\n    value: function _getToolbarRightItemsElement() {\n      return this.querySelector('.right') || internal$1.nullElement;\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_getToolbarBackButtonLabelElement',\n    value: function _getToolbarBackButtonLabelElement() {\n      return this.querySelector('ons-back-button .back-button__label') || internal$1.nullElement;\n    }\n\n    /**\n     * @return {HTMLElement}\n     */\n\n  }, {\n    key: '_getToolbarBackButtonIconElement',\n    value: function _getToolbarBackButtonIconElement() {\n      return this.querySelector('ons-back-button .back-button__icon') || internal$1.nullElement;\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$10);\n      this._ensureToolbarItemElements();\n      ModifierUtil.initModifier(this, scheme$18);\n    }\n  }, {\n    key: '_ensureToolbarItemElements',\n    value: function _ensureToolbarItemElements() {\n      for (var i = this.childNodes.length - 1; i >= 0; i--) {\n        // case of not element\n        if (this.childNodes[i].nodeType != 1) {\n          this.removeChild(this.childNodes[i]);\n        }\n      }\n\n      var center = this._ensureToolbarElement('center');\n      center.classList.add('toolbar__title');\n\n      if (this.children.length !== 1 || !this.children[0].classList.contains('center')) {\n        var left = this._ensureToolbarElement('left');\n        var right = this._ensureToolbarElement('right');\n\n        if (this.children[0] !== left || this.children[1] !== center || this.children[2] !== right) {\n          this.appendChild(left);\n          this.appendChild(center);\n          this.appendChild(right);\n        }\n      }\n    }\n  }, {\n    key: '_ensureToolbarElement',\n    value: function _ensureToolbarElement(name) {\n      if (util$1.findChild(this, '.toolbar__' + name)) {\n        var _element = util$1.findChild(this, '.toolbar__' + name);\n        _element.classList.add(name);\n        return _element;\n      }\n\n      var element = util$1.findChild(this, '.' + name) || util$1.create('.' + name);\n      element.classList.add('toolbar__' + name);\n\n      return element;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'];\n    }\n  }]);\n  return ToolbarElement;\n}(BaseElement);\n\nonsElements.Toolbar = ToolbarElement;\ncustomElements.define('ons-toolbar', ToolbarElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$9 = 'page';\nvar scheme$17 = {\n  '': 'page--*',\n  '.page__content': 'page--*__content',\n  '.page__background': 'page--*__background'\n};\n\n/**\n * @element ons-page\n * @category page\n * @modifier material\n *   [en]Material Design style[/en]\n *   [ja][/ja]\n * @description\n *   [en]\n *     This component defines the root of each page. If the content is large it will become scrollable.\n *\n *     A navigation bar can be added to the top of the page using the `<ons-toolbar>` element.\n *   [/en]\n *   [ja]ページ定義のためのコンポーネントです。このコンポーネントの内容はスクロールが許可されます。[/ja]\n * @tutorial vanilla/Reference/page\n * @guide lifecycle.html#events\n *   [en]Overview of page events[/en]\n *   [ja]Overview of page events[/ja]\n * @guide fundamentals.html#managing-pages\n *   [en]Managing multiple pages[/en]\n *   [ja]複数のページを管理する[/ja]\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @seealso ons-toolbar\n *   [en]Use the `<ons-toolbar>` element to add a navigation bar to the top of the page.[/en]\n *   [ja][/ja]\n * @example\n * <ons-page>\n *   <ons-toolbar>\n *     <div class=\"left\">\n *       <ons-back-button>Back</ons-back-button>\n *     </div>\n *     <div class=\"center\">Title</div>\n *     <div class=\"right\">\n *       <ons-toolbar-button>\n *         <ons-icon icon=\"md-menu\"></ons-icon>\n *       </ons-toolbar-button>\n *     </div>\n *   </ons-toolbar>\n *\n *   <p>Page content</p>\n * </ons-page>\n *\n * @example\n * <script>\n *   myApp.handler = function(done) {\n *     loadMore().then(done);\n *   }\n * </script>\n *\n * <ons-page on-infinite-scroll=\"myApp.handler\">\n *   <ons-toolbar>\n *     <div class=\"center\">List</div>\n *   </ons-toolbar>\n *\n *   <ons-list>\n *     <ons-list-item>#1</ons-list-item>\n *     <ons-list-item>#2</ons-list-item>\n *     <ons-list-item>#3</ons-list-item>\n *     ...\n *   </ons-list>\n * </ons-page>\n */\n\nvar PageElement = function (_BaseElement) {\n  inherits(PageElement, _BaseElement);\n\n  /**\n   * @event init\n   * @description\n   *   [en]Fired right after the page is attached.[/en]\n   *   [ja]ページがアタッチされた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   */\n\n  /**\n   * @event show\n   * @description\n   *   [en]Fired right after the page is shown.[/en]\n   *   [ja]ページが表示された後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   */\n\n  /**\n   * @event hide\n   * @description\n   *   [en]Fired right after the page is hidden.[/en]\n   *   [ja]ページが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   */\n\n  /**\n   * @event destroy\n   * @description\n   *   [en]Fired right before the page is destroyed.[/en]\n   *   [ja]ページが破棄される前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]Specify modifier name to specify custom styles.[/en]\n   *   [ja]スタイル定義をカスタマイズするための名前を指定します。[/ja]\n   */\n\n  /**\n   * @attribute on-infinite-scroll\n   * @type {String}\n   * @description\n   *   [en]Path of the function to be executed on infinite scrolling. Example: `app.loadData`. The function receives a done callback that must be called when it's finished.[/en]\n   *   [ja][/ja]\n   */\n\n  function PageElement() {\n    classCallCheck(this, PageElement);\n\n    var _this = possibleConstructorReturn(this, (PageElement.__proto__ || Object.getPrototypeOf(PageElement)).call(this));\n\n    _this._deriveHooks();\n\n    _this._defaultClassName = defaultClassName$9;\n    _this.classList.add(defaultClassName$9);\n\n    _this._initialized = false;\n\n    contentReady(_this, function () {\n      _this._compile();\n\n      _this._isShown = false;\n      _this._contentElement = _this._getContentElement();\n      _this._backgroundElement = _this._getBackgroundElement();\n    });\n    return _this;\n  }\n\n  createClass(PageElement, [{\n    key: '_compile',\n    value: function _compile() {\n      var _this2 = this;\n\n      autoStyle.prepare(this);\n\n      var toolbar = util$1.findChild(this, 'ons-toolbar');\n\n      var background = util$1.findChild(this, '.page__background') || util$1.findChild(this, '.background') || document.createElement('div');\n      background.classList.add('page__background');\n      this.insertBefore(background, !toolbar && this.firstChild || toolbar && toolbar.nextSibling);\n\n      var content = util$1.findChild(this, '.page__content') || util$1.findChild(this, '.content') || document.createElement('div');\n      content.classList.add('page__content');\n      if (!content.parentElement) {\n        util$1.arrayFrom(this.childNodes).forEach(function (node) {\n          if (node.nodeType !== 1 || _this2._elementShouldBeMoved(node)) {\n            content.appendChild(node); // Can trigger detached connectedCallbacks\n          }\n        });\n      }\n\n      this._tryToFillStatusBar(content); // Must run before child pages try to fill status bar.\n      this.insertBefore(content, background.nextSibling); // Can trigger attached connectedCallbacks\n\n      if ((!toolbar || !util$1.hasModifier(toolbar, 'transparent')) && content.children.length === 1 && util$1.isPageControl(content.children[0])) {\n        this._defaultClassName += ' page--wrapper';\n        this.attributeChangedCallback('class');\n      }\n\n      var bottomToolbar = util$1.findChild(this, 'ons-bottom-toolbar');\n      if (bottomToolbar) {\n        this._defaultClassName += ' page-with-bottom-toolbar';\n        this.attributeChangedCallback('class');\n      }\n\n      ModifierUtil.initModifier(this, scheme$17);\n    }\n  }, {\n    key: '_elementShouldBeMoved',\n    value: function _elementShouldBeMoved(el) {\n      if (el.classList.contains('page__background')) {\n        return false;\n      }\n      var tagName = el.tagName.toLowerCase();\n      if (tagName === 'ons-fab') {\n        return !el.hasAttribute('position');\n      }\n      var fixedElements = ['script', 'ons-toolbar', 'ons-bottom-toolbar', 'ons-modal', 'ons-speed-dial', 'ons-dialog', 'ons-alert-dialog', 'ons-popover', 'ons-action-sheet'];\n      return el.hasAttribute('inline') || fixedElements.indexOf(tagName) === -1;\n    }\n  }, {\n    key: '_tryToFillStatusBar',\n    value: function _tryToFillStatusBar() {\n      var _this3 = this;\n\n      var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._contentElement;\n\n      internal$1.autoStatusBarFill(function () {\n        util$1.toggleAttribute(_this3, 'status-bar-fill', !util$1.findParent(_this3, function (e) {\n          return e.hasAttribute('status-bar-fill');\n        }) // Not already filled\n        && (_this3._canAnimateToolbar(content) || !util$1.findChild(content, util$1.isPageControl)) // Has toolbar or cannot delegate\n        );\n      });\n    }\n  }, {\n    key: '_canAnimateToolbar',\n    value: function _canAnimateToolbar() {\n      var content = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._contentElement;\n\n      if (util$1.findChild(this, 'ons-toolbar')) {\n        return true;\n      }\n\n      return !!util$1.findChild(content, function (el) {\n        return util$1.match(el, 'ons-toolbar') && !el.hasAttribute('inline');\n      });\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this4 = this;\n\n      if (!util$1.isAttached(this)) {\n        // Avoid detached calls\n        return;\n      }\n\n      contentReady(this, function () {\n        _this4._tryToFillStatusBar(); // Ensure status bar when the element was compiled before connected\n\n        if (_this4.hasAttribute('on-infinite-scroll')) {\n          _this4.attributeChangedCallback('on-infinite-scroll', null, _this4.getAttribute('on-infinite-scroll'));\n        }\n\n        if (!_this4._initialized) {\n          _this4._initialized = true;\n\n          setImmediate(function () {\n            _this4.onInit && _this4.onInit();\n            util$1.triggerElementEvent(_this4, 'init');\n          });\n\n          if (!util$1.hasAnyComponentAsParent(_this4)) {\n            setImmediate(function () {\n              return _this4._show();\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: 'updateBackButton',\n    value: function updateBackButton(show) {\n      if (this.backButton) {\n        show ? this.backButton.show() : this.backButton.hide();\n      }\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll() {\n      var _this5 = this;\n\n      var c = this._contentElement,\n          overLimit = (c.scrollTop + c.clientHeight) / c.scrollHeight >= this._infiniteScrollLimit;\n\n      if (this._onInfiniteScroll && !this._loadingContent && overLimit) {\n        this._loadingContent = true;\n        this._onInfiniteScroll(function () {\n          return _this5._loadingContent = false;\n        });\n      }\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: '_getContentElement',\n    value: function _getContentElement() {\n      var result = util$1.findChild(this, '.page__content');\n      if (result) {\n        return result;\n      }\n      util$1.throw('Fail to get \".page__content\" element');\n    }\n  }, {\n    key: '_getBackgroundElement',\n    value: function _getBackgroundElement() {\n      var result = util$1.findChild(this, '.page__background');\n      if (result) {\n        return result;\n      }\n      util$1.throw('Fail to get \".page__background\" element');\n    }\n  }, {\n    key: '_getBottomToolbarElement',\n    value: function _getBottomToolbarElement() {\n      return util$1.findChild(this, 'ons-bottom-toolbar') || internal$1.nullElement;\n    }\n  }, {\n    key: '_getToolbarElement',\n    value: function _getToolbarElement() {\n      return util$1.findChild(this, 'ons-toolbar') || document.createElement('ons-toolbar');\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this6 = this;\n\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, this._defaultClassName, scheme$17);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$17);\n          break;\n        case 'on-infinite-scroll':\n          if (current === null) {\n            this.onInfiniteScroll = null;\n          } else {\n            this.onInfiniteScroll = function (done) {\n              var f = util$1.findFromPath(current);\n              _this6.onInfiniteScroll = f;\n              f(done);\n            };\n          }\n          break;\n      }\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      if (!this._isShown && util$1.isAttached(this)) {\n        this._isShown = true;\n        this.setAttribute('shown', '');\n        this.onShow && this.onShow();\n        util$1.triggerElementEvent(this, 'show');\n        util$1.propagateAction(this, '_show');\n      }\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      if (this._isShown) {\n        this._isShown = false;\n        this.removeAttribute('shown');\n        this.onHide && this.onHide();\n        util$1.triggerElementEvent(this, 'hide');\n        util$1.propagateAction(this, '_hide');\n      }\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      this._hide();\n\n      this.onDestroy && this.onDestroy();\n      util$1.triggerElementEvent(this, 'destroy');\n\n      if (this.onDeviceBackButton) {\n        this.onDeviceBackButton.destroy();\n      }\n\n      util$1.propagateAction(this, '_destroy');\n\n      this.remove();\n    }\n  }, {\n    key: '_deriveHooks',\n    value: function _deriveHooks() {\n      var _this7 = this;\n\n      this.constructor.events.forEach(function (event) {\n        var key = 'on' + event.charAt(0).toUpperCase() + event.slice(1);\n        Object.defineProperty(_this7, key, {\n          configurable: true,\n          enumerable: true,\n          get: function get$$1() {\n            return _this7['_' + key];\n          },\n          set: function set$$1(value) {\n            if (!(value instanceof Function)) {\n              util$1.throw('\"' + key + '\" hook must be a function');\n            }\n            _this7['_' + key] = value.bind(_this7);\n          }\n        });\n      });\n    }\n  }, {\n    key: 'name',\n    set: function set$$1(str) {\n      this.setAttribute('name', str);\n    },\n    get: function get$$1() {\n      return this.getAttribute('name');\n    }\n  }, {\n    key: 'backButton',\n    get: function get$$1() {\n      return this.querySelector('ons-back-button');\n    }\n\n    /**\n     * @property onInfiniteScroll\n     * @description\n     *  [en]Function to be executed when scrolling to the bottom of the page. The function receives a done callback as an argument that must be called when it's finished.[/en]\n     *  [ja][/ja]\n     */\n\n  }, {\n    key: 'onInfiniteScroll',\n    set: function set$$1(value) {\n      var _this8 = this;\n\n      if (value && !(value instanceof Function)) {\n        util$1.throw('\"onInfiniteScroll\" must be function or null');\n      }\n\n      contentReady(this, function () {\n        if (!value) {\n          _this8._contentElement.removeEventListener('scroll', _this8._boundOnScroll);\n        } else if (!_this8._onInfiniteScroll) {\n          _this8._infiniteScrollLimit = 0.9;\n          _this8._boundOnScroll = _this8._onScroll.bind(_this8);\n          setImmediate(function () {\n            return _this8._contentElement.addEventListener('scroll', _this8._boundOnScroll);\n          });\n        }\n        _this8._onInfiniteScroll = value;\n      });\n    },\n    get: function get$$1() {\n      return this._onInfiniteScroll;\n    }\n  }, {\n    key: 'onDeviceBackButton',\n    get: function get$$1() {\n      return this._backButtonHandler;\n    },\n    set: function set$$1(callback) {\n      if (this._backButtonHandler) {\n        this._backButtonHandler.destroy();\n      }\n\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n    }\n  }, {\n    key: 'scrollTop',\n    get: function get$$1() {\n      return this._contentElement.scrollTop;\n    },\n    set: function set$$1(newValue) {\n      this._contentElement.scrollTop = newValue;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'on-infinite-scroll', 'class'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['init', 'show', 'hide', 'destroy'];\n    }\n\n    /**\n     * @property data\n     * @type {*}\n     * @description\n     *   [en]User's custom data passed to `pushPage()`-like methods.[/en]\n     *   [ja][/ja]\n     */\n\n  }]);\n  return PageElement;\n}(BaseElement);\n\nonsElements.Page = PageElement;\ncustomElements.define('ons-page', PageElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\nvar PopoverAnimator = function (_BaseAnimator) {\n  inherits(PopoverAnimator, _BaseAnimator);\n\n  /**\n   * @param {Object} options\n   * @param {String} options.timing\n   * @param {Number} options.duration\n   * @param {Number} options.delay\n   */\n  function PopoverAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .4, 1)' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, PopoverAnimator);\n    return possibleConstructorReturn(this, (PopoverAnimator.__proto__ || Object.getPrototypeOf(PopoverAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  createClass(PopoverAnimator, [{\n    key: 'show',\n    value: function show(popover, callback) {\n      callback();\n    }\n  }, {\n    key: 'hide',\n    value: function hide(popover, callback) {\n      callback();\n    }\n  }, {\n    key: '_animate',\n    value: function _animate(element, _ref2) {\n      var from = _ref2.from,\n          to = _ref2.to,\n          options = _ref2.options,\n          callback = _ref2.callback,\n          _ref2$restore = _ref2.restore,\n          restore = _ref2$restore === undefined ? false : _ref2$restore,\n          animation = _ref2.animation;\n\n      options = util$1.extend({}, this.options, options);\n\n      if (animation) {\n        from = animation.from;\n        to = animation.to;\n      }\n\n      animation = Animit(element);\n      if (restore) {\n        animation = animation.saveStyle();\n      }\n      animation = animation.queue(from).wait(this.delay).queue({\n        css: to,\n        duration: this.duration,\n        timing: this.timing\n      });\n      if (restore) {\n        animation = animation.restoreStyle();\n      }\n      if (callback) {\n        animation = animation.queue(function (done) {\n          callback();\n          done();\n        });\n      }\n      return animation;\n    }\n  }, {\n    key: '_animateAll',\n    value: function _animateAll(element, animations) {\n      var _this2 = this;\n\n      Object.keys(animations).forEach(function (key) {\n        return _this2._animate(element[key], animations[key]).play();\n      });\n    }\n  }]);\n  return PopoverAnimator;\n}(BaseAnimator);\n\nvar fade = {\n  out: {\n    from: { opacity: 1.0 },\n    to: { opacity: 0 }\n  },\n  in: {\n    from: { opacity: 0 },\n    to: { opacity: 1.0 }\n  }\n};\n\nvar MDFadePopoverAnimator = function (_PopoverAnimator) {\n  inherits(MDFadePopoverAnimator, _PopoverAnimator);\n\n  function MDFadePopoverAnimator() {\n    classCallCheck(this, MDFadePopoverAnimator);\n    return possibleConstructorReturn(this, (MDFadePopoverAnimator.__proto__ || Object.getPrototypeOf(MDFadePopoverAnimator)).apply(this, arguments));\n  }\n\n  createClass(MDFadePopoverAnimator, [{\n    key: 'show',\n    value: function show(popover, callback) {\n      this._animateAll(popover, {\n        _mask: fade.in,\n        _popover: { animation: fade.in, restore: true, callback: callback }\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide(popover, callback) {\n      this._animateAll(popover, {\n        _mask: fade.out,\n        _popover: { animation: fade.out, restore: true, callback: callback }\n      });\n    }\n  }]);\n  return MDFadePopoverAnimator;\n}(PopoverAnimator);\n\nvar IOSFadePopoverAnimator = function (_MDFadePopoverAnimato) {\n  inherits(IOSFadePopoverAnimator, _MDFadePopoverAnimato);\n\n  function IOSFadePopoverAnimator() {\n    classCallCheck(this, IOSFadePopoverAnimator);\n    return possibleConstructorReturn(this, (IOSFadePopoverAnimator.__proto__ || Object.getPrototypeOf(IOSFadePopoverAnimator)).apply(this, arguments));\n  }\n\n  createClass(IOSFadePopoverAnimator, [{\n    key: 'show',\n    value: function show(popover, callback) {\n      this._animateAll(popover, {\n        _mask: fade.in,\n        _popover: {\n          from: {\n            transform: 'scale3d(1.3, 1.3, 1.0)',\n            opacity: 0\n          },\n          to: {\n            transform: 'scale3d(1.0, 1.0,  1.0)',\n            opacity: 1.0\n          },\n          restore: true,\n          callback: callback\n        }\n      });\n    }\n  }]);\n  return IOSFadePopoverAnimator;\n}(MDFadePopoverAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$19 = {\n  '.popover': 'popover--*',\n  '.popover-mask': 'popover-mask--*',\n  '.popover__content': 'popover--*__content',\n  '.popover__arrow': 'popover--*__arrow'\n};\n\nvar _animatorDict$6 = {\n  'default': function _default() {\n    return platform.isAndroid() ? MDFadePopoverAnimator : IOSFadePopoverAnimator;\n  },\n  'none': PopoverAnimator,\n  'fade-ios': IOSFadePopoverAnimator,\n  'fade-md': MDFadePopoverAnimator\n};\n\nvar positions = {\n  up: 'bottom',\n  left: 'right',\n  down: 'top',\n  right: 'left'\n};\n\n/**\n * @element ons-popover\n * @category dialog\n * @description\n *  [en]\n *    A component that displays a popover next to an element. The popover can be used to display extra information about a component or a tooltip.\n *\n *    To use the element it can either be attached directly to the `<body>` element or dynamically created from a template using the `ons.createPopover(template)` utility function and the `<template>` tag.\n *\n *    Another common way to use the popover is to display a menu when a button on the screen is tapped. For Material Design, popover looks exactly as a dropdown menu.\n *  [/en]\n *  [ja]ある要素を対象とするポップオーバーを表示するコンポーネントです。[/ja]\n * @codepen ZYYRKo\n * @tutorial vanilla/Reference/popover\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-button onclick=\"showPopover(this)\">\n *   Click me!\n * </ons-button>\n *\n * <ons-popover direction=\"down\" id=\"popover\">\n *   <p>This is a popover!</p>\n * </ons-popover>\n *\n * <script>\n *   var showPopover = function(element) {\n *     var popover = document.getElementById('popover');\n *     popover.show(element);\n *   };\n * </script>\n */\n\nvar PopoverElement = function (_BaseDialogElement) {\n  inherits(PopoverElement, _BaseDialogElement);\n\n  /**\n   * @event preshow\n   * @description\n   *   [en]Fired just before the popover is displayed.[/en]\n   *   [ja]ポップオーバーが表示される直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.popover\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Call this function to stop the popover from being shown.[/en]\n   *   [ja]この関数を呼び出すと、ポップオーバーの表示がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event postshow\n   * @description\n   *   [en]Fired just after the popover is displayed.[/en]\n   *   [ja]ポップオーバーが表示された直後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.popover\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event prehide\n   * @description\n   *   [en]Fired just before the popover is hidden.[/en]\n   *   [ja]ポップオーバーが隠れる直前に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.popover\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Call this function to stop the popover from being hidden.[/en]\n   *   [ja]この関数を呼び出すと、ポップオーバーが隠れる処理をキャンセルします。[/ja]\n   */\n\n  /**\n   * @event posthide\n   * @description\n   *   [en]Fired just after the popover is hidden.[/en]\n   *   [ja]ポップオーバーが隠れた後に発火します。[/ja]\n   * @param {Object} event [en]Event object.[/en]\n   * @param {Object} event.popover\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the popover.[/en]\n   *  [ja]ポップオーバーの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute direction\n   * @type {String}\n   * @description\n   *  [en]\n   *    A space separated list of directions. If more than one direction is specified,\n   *    it will be chosen automatically. Valid directions are `\"up\"`, `\"down\"`, `\"left\"` and `\"right\"`.\n   *  [/en]\n   *  [ja]\n   *    ポップオーバーを表示する方向を空白区切りで複数指定できます。\n   *    指定できる方向は、\"up\", \"down\", \"left\", \"right\"の4つです。空白区切りで複数指定することもできます。\n   *    複数指定された場合、対象とする要素に合わせて指定した値から自動的に選択されます。\n   *  [/ja]\n   */\n\n  /**\n   * @attribute cancelable\n   * @description\n   *   [en]If this attribute is set the popover can be closed by tapping the background or by pressing the back button.[/en]\n   *   [ja]この属性があると、ポップオーバーが表示された時に、背景やバックボタンをタップした時にをポップオーバー閉じます。[/ja]\n   */\n\n  /**\n   * @attribute cover-target\n   * @description\n   *   [en]If set the popover will cover the target on the screen.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @description\n   *   [en]The animation used when showing an hiding the popover. Can be either `\"none\"`, `\"default\"`, `\"fade-ios\"` or `\"fade-md\"`.[/en]\n   *   [ja]ポップオーバーを表示する際のアニメーション名を指定します。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\n   */\n\n  /**\n   * @attribute mask-color\n   * @type {Color}\n   * @description\n   *   [en]Color of the background mask. Default is `\"rgba(0, 0, 0, 0.2)\"`.[/en]\n   *   [ja]背景のマスクの色を指定します。デフォルトは\"rgba(0, 0, 0, 0.2)\"です。[/ja]\n   */\n\n  function PopoverElement() {\n    classCallCheck(this, PopoverElement);\n\n    var _this = possibleConstructorReturn(this, (PopoverElement.__proto__ || Object.getPrototypeOf(PopoverElement)).call(this));\n\n    _this._boundOnChange = _this._onChange.bind(_this);\n\n    contentReady(_this, function () {\n      _this._compile();\n      _this.style.display = 'none';\n    });\n    return _this;\n  }\n\n  createClass(PopoverElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      return new AnimatorFactory({\n        animators: _animatorDict$6,\n        baseClass: PopoverAnimator,\n        baseClassName: 'PopoverAnimator',\n        defaultAnimation: this.getAttribute('animation') || 'default'\n      });\n    }\n  }, {\n    key: '_toggleStyle',\n    value: function _toggleStyle(shouldShow) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (shouldShow) {\n        this.style.display = 'block';\n        this._currentTarget = options.target;\n        this._positionPopover(options.target);\n      } else {\n        this.style.display = 'none';\n        this._clearStyles();\n      }\n    }\n  }, {\n    key: '_positionPopover',\n    value: function _positionPopover(target) {\n      var radius = this._radius,\n          contentElement = this._content,\n          margin = this._margin;\n\n      var safeAreaLengths = iPhoneXPatch.getSafeAreaLengths();\n      var safeAreaRect = iPhoneXPatch.getSafeAreaDOMRect();\n      var targetRect = target.getBoundingClientRect();\n      var isMD = util$1.hasModifier(this, 'material');\n      var cover = isMD && this.hasAttribute('cover-target');\n      var parent = util$1.findParent(this, 'ons-page') || document.body;\n      var parentDimensions = parent.getBoundingClientRect();\n      var maxPositions = {\n        top: Math.max(parentDimensions.top, safeAreaRect.top),\n        left: Math.max(parentDimensions.left, safeAreaRect.left),\n        bottom: Math.min(parentDimensions.bottom, safeAreaRect.bottom),\n        right: Math.min(parentDimensions.right, safeAreaRect.right)\n      };\n\n      // Distance from each side of the safe area (with margin) to the target element\n      var targetDistance = {\n        top: targetRect.top - (maxPositions.top + margin),\n        left: targetRect.left - (maxPositions.left + margin),\n        bottom: maxPositions.bottom - margin - targetRect.bottom,\n        right: maxPositions.right - margin - targetRect.right\n      };\n\n      // Distance from each side of the safe area (with margin) to the geometric center of the target element\n      var targetCenterDistanceFrom = {\n        top: targetRect.top + Math.round(targetRect.height / 2) - (maxPositions.top + margin),\n        left: targetRect.left + Math.round(targetRect.width / 2) - (maxPositions.left + margin),\n        bottom: maxPositions.bottom - margin - targetRect.bottom + Math.round(targetRect.height / 2),\n        right: maxPositions.right - margin - targetRect.right + Math.round(targetRect.width / 2)\n      };\n\n      var _calculateDirections2 = this._calculateDirections(targetDistance),\n          vertical = _calculateDirections2.vertical,\n          primaryDirection = _calculateDirections2.primary,\n          secondaryDirection = _calculateDirections2.secondary;\n\n      this._currentDirection = primaryDirection;\n      util$1.addModifier(this, primaryDirection);\n\n      var sizeName = vertical ? 'width' : 'height';\n      // Get .popover__content size\n      var contentSize = function (style) {\n        return {\n          width: parseInt(style.getPropertyValue('width'), 10),\n          height: parseInt(style.getPropertyValue('height'), 10)\n        };\n      }(window.getComputedStyle(contentElement));\n\n      // Setting .popover position.\n      var targetAndArrowLength = cover ? 0 : (vertical ? targetRect.height : targetRect.width) + (isMD ? 0 : 14);\n      var primaryOffset = Math.max(safeAreaLengths[primaryDirection] + margin, safeAreaLengths[primaryDirection] + margin + targetDistance[primaryDirection] + targetAndArrowLength);\n      var secondaryOffset = Math.max(safeAreaLengths[secondaryDirection] + margin, safeAreaLengths[secondaryDirection] + margin + targetCenterDistanceFrom[secondaryDirection] - contentSize[sizeName] / 2);\n      this._popover.style[primaryDirection] = primaryOffset + 'px';\n      this._popover.style[secondaryDirection] = secondaryOffset + 'px';\n\n      // Setting .popover__arrow position.\n      this._arrow.style[secondaryDirection] = Math.max(radius, safeAreaLengths[secondaryDirection] + margin + targetCenterDistanceFrom[secondaryDirection] - secondaryOffset) + 'px';\n    }\n  }, {\n    key: '_calculateDirections',\n    value: function _calculateDirections(distance) {\n      var options = (this.getAttribute('direction') || 'up down left right').split(/\\s+/).map(function (e) {\n        return positions[e];\n      });\n      var primary = options.sort(function (a, b) {\n        return distance[a] - distance[b];\n      })[0];\n      var vertical = 'top' == primary || 'bottom' == primary;\n      var secondary = void 0;\n\n      if (vertical) {\n        secondary = distance.left < distance.right ? 'left' : 'right';\n      } else {\n        secondary = distance.top < distance.bottom ? 'top' : 'bottom';\n      }\n\n      return { vertical: vertical, primary: primary, secondary: secondary };\n    }\n  }, {\n    key: '_clearStyles',\n    value: function _clearStyles() {\n      var _this2 = this;\n\n      this._currentDirection = null;\n      ['top', 'bottom', 'left', 'right'].forEach(function (e) {\n        _this2._arrow.style[e] = _this2._content.style[e] = _this2._popover.style[e] = '';\n        util$1.removeModifier(_this2, e);\n      });\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange() {\n      var _this3 = this;\n\n      setImmediate(function () {\n        if (_this3._currentTarget) {\n          _this3._positionPopover(_this3._currentTarget);\n        }\n      });\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      if (this._popover && this._mask) {\n        return;\n      }\n\n      var hasDefaultContainer = this._popover && this._content;\n\n      if (hasDefaultContainer) {\n\n        if (!this._mask) {\n          var mask = document.createElement('div');\n          mask.classList.add('popover-mask');\n          this.insertBefore(mask, this.firstChild);\n        }\n\n        if (!this._arrow) {\n          var arrow = document.createElement('div');\n          arrow.classList.add('popover__arrow');\n          this._popover.appendChild(arrow);\n        }\n      } else {\n\n        var template = util$1.createFragment('\\n        <div class=\"popover-mask\"></div>\\n        <div class=\"popover\">\\n          <div class=\"popover__content\"></div>\\n          <div class=\"popover__arrow\"></div>\\n        </div>\\n      ');\n        var content = template.querySelector('.popover__content');\n\n        while (this.childNodes[0]) {\n          content.appendChild(this.childNodes[0]);\n        }\n\n        this.appendChild(template);\n      }\n\n      // FIXME!\n      if (this.hasAttribute('style')) {\n        this._popover.setAttribute('style', this.getAttribute('style'));\n        this.removeAttribute('style');\n      }\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n\n    /**\n     * @method show\n     * @signature show(target, [options])\n     * @param {String|Event|HTMLElement} target\n     *   [en]Target element. Can be either a CSS selector, an event object or a DOM element. It can be also provided as 'options.target' instead. [/en]\n     *   [ja]ポップオーバーのターゲットとなる要素を指定します。CSSセレクタかeventオブジェクトかDOM要素のいずれかを渡せます。[/ja]\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name.  Use one of `\"fade-ios\"`, `\"fade-md\"`, `\"none\"` and `\"default\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"fade-ios\", \"fade-md\", \"none\", \"default\"のいずれかを指定できます。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function is called after the popover has been revealed.[/en]\n     *   [ja]ポップオーバーが表示され終わった後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Open the popover and point it at a target. The target can be either an event, a CSS selector or a DOM element..[/en]\n     *   [ja]対象とする要素にポップオーバーを表示します。target引数には、$eventオブジェクトやDOMエレメントやCSSセレクタを渡すことが出来ます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the displayed element[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'show',\n    value: function show(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      // Copy options and include options.target\n      if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && !(target instanceof Event) && !(target instanceof HTMLElement)) {\n        options = _extends({}, target);\n      } else {\n        options = _extends({}, options, { target: target });\n      }\n\n      if (typeof options.target === 'string') {\n        options.target = document.querySelector(options.target);\n      } else if (options.target instanceof Event) {\n        options.target = options.target.target;\n      }\n\n      if (!(options.target instanceof HTMLElement)) {\n        util$1.throw('Invalid target type or undefined');\n      }\n\n      return get(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'show', this).call(this, options);\n    }\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name.  Use one of `\"fade-ios\"`, `\"fade-md\"`, `\"none\"` and `\"default\"`.[/en]\n     *   [ja]アニメーション名を指定します。\"fade-ios\", \"fade-md\", \"none\", \"default\"のいずれかを指定できます。[/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This functions is called after the popover has been hidden.[/en]\n     *   [ja]ポップオーバーが隠れた後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Close the popover.[/en]\n     *   [ja]ポップオーバーを閉じます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @property cancelable\n     * @type {Boolean}\n     * @description\n     *   [en]\n     *     A boolean value that specifies whether the popover is cancelable or not.\n     *\n     *     When the popover is cancelable it can be closed by tapping the background or by pressing the back button on Android devices.\n     *   [/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this4 = this;\n\n      get(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'connectedCallback', this).call(this);\n\n      window.addEventListener('resize', this._boundOnChange, false);\n      this._margin = this._margin || parseInt(window.getComputedStyle(this).getPropertyValue('top'));\n      this._margin = this._margin || 6; // Fix for iframes\n\n      contentReady(this, function () {\n        _this4._radius = parseInt(window.getComputedStyle(_this4._content).getPropertyValue('border-top-left-radius'));\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      get(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'disconnectedCallback', this).call(this);\n      window.removeEventListener('resize', this._boundOnChange, false);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'direction') {\n        return this._boundOnChange();\n      } else if (name === 'modifier') {\n        this._currentDirection && util$1.addModifier(this, this._currentDirection);\n      }\n      get(PopoverElement.prototype.__proto__ || Object.getPrototypeOf(PopoverElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n    }\n\n    /**\n     * @param {String} name\n     * @param {PopoverAnimator} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$19;\n    }\n  }, {\n    key: '_mask',\n    get: function get$$1() {\n      return util$1.findChild(this, '.popover-mask');\n    }\n  }, {\n    key: '_popover',\n    get: function get$$1() {\n      return util$1.findChild(this, '.popover');\n    }\n  }, {\n    key: '_content',\n    get: function get$$1() {\n      return util$1.findChild(this._popover, '.popover__content');\n    }\n  }, {\n    key: '_arrow',\n    get: function get$$1() {\n      return util$1.findChild(this._popover, '.popover__arrow');\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof PopoverAnimator)) {\n        util$1.throwAnimator('Popover');\n      }\n      _animatorDict$6[name] = Animator;\n    }\n  }, {\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(PopoverElement.__proto__ || Object.getPrototypeOf(PopoverElement), 'observedAttributes', this)), ['direction']);\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$6;\n    }\n  }, {\n    key: 'PopoverAnimator',\n    get: function get$$1() {\n      return PopoverAnimator;\n    }\n  }]);\n  return PopoverElement;\n}(BaseDialogElement);\n\nonsElements.Popover = PopoverElement;\ncustomElements.define('ons-popover', PopoverElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$20 = {\n  '.progress-bar': 'progress-bar--*',\n  '.progress-bar__primary': 'progress-bar--*__primary',\n  '.progress-bar__secondary': 'progress-bar--*__secondary'\n};\n\nvar template = util$1.createElement('\\n  <div class=\"progress-bar\">\\n    <div class=\"progress-bar__secondary\"></div>\\n    <div class=\"progress-bar__primary\"></div>\\n  </div>\\n');\n\nvar INDET = 'indeterminate';\n\n/**\n * @element ons-progress-bar\n * @category visual\n * @modifier material\n *   [en]Display a Material Design progress bar.[/en]\n *   [ja]マテリアルデザインのスタイルでプログレスバーを表示します。[/ja]\n * @description\n *   [en]\n *     The component is used to display a linear progress bar. It can either display a progress bar that shows the user how much of a task has been completed. In the case where the percentage is not known it can be used to display an animated progress bar so the user can see that an operation is in progress.\n *   [/en]\n *   [ja][/ja]\n * @codepen zvQbGj\n * @tutorial vanilla/Reference/progress\n * @seealso ons-progress-circular\n *   [en]The `<ons-progress-circular>` component displays a circular progress indicator.[/en]\n *   [ja][/ja]\n * @example\n * <ons-progress-bar\n *  value=\"55\"\n *  secondary-value=\"87\">\n * </ons-progress-bar>\n *\n * <ons-progress-bar\n *  indeterminate>\n * </ons-progress-bar>\n */\n\nvar ProgressBarElement = function (_BaseElement) {\n  inherits(ProgressBarElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]Change the appearance of the progress indicator.[/en]\n   *   [ja]プログレスインジケータの見た目を変更します。[/ja]\n   */\n\n  /**\n   * @attribute value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute secondary-value\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute indeterminate\n   * @description\n   *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n\n  function ProgressBarElement() {\n    classCallCheck(this, ProgressBarElement);\n\n    var _this = possibleConstructorReturn(this, (ProgressBarElement.__proto__ || Object.getPrototypeOf(ProgressBarElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ProgressBarElement, [{\n    key: '_compile',\n    value: function _compile() {\n      if (!this._isCompiled()) {\n        this._template = template.cloneNode(true);\n      } else {\n        this._template = util$1.findChild(this, '.progress-bar');\n      }\n\n      this._primary = util$1.findChild(this._template, '.progress-bar__primary');\n      this._secondary = util$1.findChild(this._template, '.progress-bar__secondary');\n\n      this._updateDeterminate();\n      this._updateValue();\n\n      this.appendChild(this._template);\n\n      autoStyle.prepare(this);\n      ModifierUtil.initModifier(this, scheme$20);\n    }\n  }, {\n    key: '_isCompiled',\n    value: function _isCompiled() {\n      if (!util$1.findChild(this, '.progress-bar')) {\n        return false;\n      }\n\n      var barElement = util$1.findChild(this, '.progress-bar');\n\n      if (!util$1.findChild(barElement, '.progress-bar__secondary')) {\n        return false;\n      }\n\n      if (!util$1.findChild(barElement, '.progress-bar__primary')) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'modifier') {\n        ModifierUtil.onModifierChanged(last, current, this, scheme$20);\n        this.hasAttribute(INDET) && this._updateDeterminate();\n      } else if (name === 'value' || name === 'secondary-value') {\n        this._updateValue();\n      } else if (name === INDET) {\n        this._updateDeterminate();\n      }\n    }\n  }, {\n    key: '_updateDeterminate',\n    value: function _updateDeterminate() {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        return util$1.toggleModifier(_this2, INDET, { force: _this2.hasAttribute(INDET) });\n      });\n    }\n  }, {\n    key: '_updateValue',\n    value: function _updateValue() {\n      var _this3 = this;\n\n      contentReady(this, function () {\n        _this3._primary.style.width = _this3.hasAttribute('value') ? _this3.getAttribute('value') + '%' : '0%';\n        _this3._secondary.style.width = _this3.hasAttribute('secondary-value') ? _this3.getAttribute('secondary-value') + '%' : '0%';\n      });\n    }\n\n    /**\n     * @property value\n     * @type {Number}\n     * @description\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n     */\n\n  }, {\n    key: 'value',\n    set: function set$$1(value) {\n      if (typeof value !== 'number' || value < 0 || value > 100) {\n        util$1.throw('Invalid value');\n      }\n\n      this.setAttribute('value', Math.floor(value));\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('value') || '0');\n    }\n\n    /**\n     * @property secondaryValue\n     * @type {Number}\n     * @description\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n     */\n\n  }, {\n    key: 'secondaryValue',\n    set: function set$$1(value) {\n      if (typeof value !== 'number' || value < 0 || value > 100) {\n        util$1.throw('Invalid value');\n      }\n\n      this.setAttribute('secondary-value', Math.floor(value));\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('secondary-value') || '0');\n    }\n\n    /**\n     * @property indeterminate\n     * @type {Boolean}\n     * @description\n     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n     */\n\n  }, {\n    key: 'indeterminate',\n    set: function set$$1(value) {\n      if (value) {\n        this.setAttribute(INDET, '');\n      } else {\n        this.removeAttribute(INDET);\n      }\n    },\n    get: function get$$1() {\n      return this.hasAttribute(INDET);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'value', 'secondary-value', INDET];\n    }\n  }]);\n  return ProgressBarElement;\n}(BaseElement);\n\nonsElements.ProgressBar = ProgressBarElement;\ncustomElements.define('ons-progress-bar', ProgressBarElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$21 = {\n  '.progress-circular': 'progress-circular--*',\n  '.progress-circular__background': 'progress-circular--*__background',\n  '.progress-circular__primary': 'progress-circular--*__primary',\n  '.progress-circular__secondary': 'progress-circular--*__secondary'\n};\n\nvar template$1 = util$1.createElement('\\n  <svg class=\"progress-circular\">\\n    <circle class=\"progress-circular__background\" />\\n    <circle class=\"progress-circular__secondary\" cx=\"50%\" cy=\"50%\" r=\"40%\" />\\n    <circle class=\"progress-circular__primary\" cx=\"50%\" cy=\"50%\" r=\"40%\" />\\n  </svg>\\n');\n\nvar INDET$1 = 'indeterminate';\n\n/**\n * @element ons-progress-circular\n * @category visual\n * @description\n *   [en]\n *     This component displays a circular progress indicator. It can either be used to show how much of a task has been completed or to show a looping animation to indicate that an operation is currently running.\n *   [/en]\n *   [ja][/ja]\n * @codepen EVzMjR\n * @tutorial vanilla/Reference/progress-circular\n * @seealso ons-progress-bar\n *   [en]The `<ons-progress-bar>` component displays a bar progress indicator.[/en]\n *   [ja][/ja]\n * @example\n * <ons-progress-circular\n *  value=\"55\"\n *  secondary-value=\"87\">\n * </ons-progress-circular>\n *\n * <ons-progress-circular\n *  indeterminate>\n * </ons-progress-circular>\n */\n\nvar ProgressCircularElement = function (_BaseElement) {\n  inherits(ProgressCircularElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]Change the appearance of the progress indicator.[/en]\n   *   [ja]プログレスインジケータの見た目を変更します。[/ja]\n   */\n\n  /**\n   * @attribute value\n   * @type {Number}\n   * @description\n   *   [en]Current progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute secondary-value\n   * @type {Number}\n   * @description\n   *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n   *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n   */\n\n  /**\n   * @attribute indeterminate\n   * @description\n   *   [en]If this attribute is set, an infinite looping animation will be shown.[/en]\n   *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n   */\n\n  function ProgressCircularElement() {\n    classCallCheck(this, ProgressCircularElement);\n\n    var _this = possibleConstructorReturn(this, (ProgressCircularElement.__proto__ || Object.getPrototypeOf(ProgressCircularElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ProgressCircularElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'modifier') {\n        ModifierUtil.onModifierChanged(last, current, this, scheme$21);\n        this.hasAttribute(INDET$1) && this._updateDeterminate();\n      } else if (name === 'value' || name === 'secondary-value') {\n        this._updateValue();\n      } else if (name === INDET$1) {\n        this._updateDeterminate();\n      }\n    }\n  }, {\n    key: '_updateDeterminate',\n    value: function _updateDeterminate() {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        return util$1.toggleModifier(_this2, INDET$1, { force: _this2.hasAttribute(INDET$1) });\n      });\n    }\n  }, {\n    key: '_updateValue',\n    value: function _updateValue() {\n      var _this3 = this;\n\n      if (this.hasAttribute('value')) {\n        contentReady(this, function () {\n          var per = Math.ceil(_this3.getAttribute('value') * 251.32 * 0.01);\n          _this3._primary.style['stroke-dasharray'] = per + '%, 251.32%';\n        });\n      }\n      if (this.hasAttribute('secondary-value')) {\n        contentReady(this, function () {\n          var per = Math.ceil(_this3.getAttribute('secondary-value') * 251.32 * 0.01);\n          _this3._secondary.style.display = null;\n          _this3._secondary.style['stroke-dasharray'] = per + '%, 251.32%';\n        });\n      } else {\n        contentReady(this, function () {\n          _this3._secondary.style.display = 'none';\n        });\n      }\n    }\n\n    /**\n     * @property value\n     * @type {Number}\n     * @description\n     *   [en]Current progress. Should be a value between 0 and 100.[/en]\n     *   [ja]現在の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n     */\n\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      if (this._isCompiled()) {\n        this._template = util$1.findChild(this, '.progress-circular');\n      } else {\n        this._template = template$1.cloneNode(true);\n      }\n\n      this._primary = util$1.findChild(this._template, '.progress-circular__primary');\n      this._secondary = util$1.findChild(this._template, '.progress-circular__secondary');\n\n      this._updateDeterminate();\n      this._updateValue();\n\n      this.appendChild(this._template);\n\n      autoStyle.prepare(this);\n      ModifierUtil.initModifier(this, scheme$21);\n    }\n  }, {\n    key: '_isCompiled',\n    value: function _isCompiled() {\n      if (!util$1.findChild(this, '.progress-circular')) {\n        return false;\n      }\n\n      var svg = util$1.findChild(this, '.progress-circular');\n\n      if (!util$1.findChild(svg, '.progress-circular__secondary')) {\n        return false;\n      }\n\n      if (!util$1.findChild(svg, '.progress-circular__primary')) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: 'value',\n    set: function set$$1(value) {\n      if (typeof value !== 'number' || value < 0 || value > 100) {\n        util$1.throw('Invalid value');\n      }\n\n      this.setAttribute('value', Math.floor(value));\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('value') || '0');\n    }\n\n    /**\n     * @property secondaryValue\n     * @type {Number}\n     * @description\n     *   [en]Current secondary progress. Should be a value between 0 and 100.[/en]\n     *   [ja]現在の２番目の進行状況の値を指定します。0から100の間の値を指定して下さい。[/ja]\n     */\n\n  }, {\n    key: 'secondaryValue',\n    set: function set$$1(value) {\n      if (typeof value !== 'number' || value < 0 || value > 100) {\n        util$1.throw('Invalid value');\n      }\n\n      this.setAttribute('secondary-value', Math.floor(value));\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('secondary-value') || '0');\n    }\n\n    /**\n     * @property indeterminate\n     * @type {Boolean}\n     * @description\n     *   [en]If this property is `true`, an infinite looping animation will be shown.[/en]\n     *   [ja]この属性が設定された場合、ループするアニメーションが表示されます。[/ja]\n     */\n\n  }, {\n    key: 'indeterminate',\n    set: function set$$1(value) {\n      if (value) {\n        this.setAttribute(INDET$1, '');\n      } else {\n        this.removeAttribute(INDET$1);\n      }\n    },\n    get: function get$$1() {\n      return this.hasAttribute(INDET$1);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'value', 'secondary-value', INDET$1];\n    }\n  }]);\n  return ProgressCircularElement;\n}(BaseElement);\n\nonsElements.ProgressCircular = ProgressCircularElement;\ncustomElements.define('ons-progress-circular', ProgressCircularElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar STATE_INITIAL = 'initial';\nvar STATE_PREACTION = 'preaction';\nvar STATE_ACTION = 'action';\n\nvar throwType = function throwType(el, type) {\n  return util$1.throw('\"' + el + '\" must be ' + type);\n};\n\n/**\n * @element ons-pull-hook\n * @category control\n * @description\n *   [en]\n *     Component that adds **Pull to refresh** functionality to an `<ons-page>` element.\n *\n *     It can be used to perform a task when the user pulls down at the top of the page. A common usage is to refresh the data displayed in a page.\n *   [/en]\n *   [ja][/ja]\n * @codepen WbJogM\n * @tutorial vanilla/Reference/pull-hook\n * @example\n * <ons-page>\n *   <ons-pull-hook>\n *     Release to refresh\n *   </ons-pull-hook>\n * </ons-page>\n *\n * <script>\n *   document.querySelector('ons-pull-hook').onAction = function(done) {\n *     setTimeout(done, 1000);\n *   };\n * </script>\n */\n\nvar PullHookElement = function (_BaseElement) {\n  inherits(PullHookElement, _BaseElement);\n\n  /**\n   * @event changestate\n   * @description\n   *   [en]Fired when the state is changed. The state can be either \"initial\", \"preaction\" or \"action\".[/en]\n   *   [ja]コンポーネントの状態が変わった場合に発火します。状態は、\"initial\", \"preaction\", \"action\"のいずれかです。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクト。[/ja]\n   * @param {Object} event.pullHook\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {String} event.state\n   *   [en]Current state.[/en]\n   *   [ja]現在の状態名を参照できます。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]If this attribute is set the \"pull-to-refresh\" functionality is disabled.[/en]\n   *   [ja]この属性がある時、disabled状態になりアクションが実行されなくなります[/ja]\n   */\n\n  /**\n   * @attribute height\n   * @type {String}\n   * @description\n   *   [en]Specify the height of the component. When pulled down further than this value it will switch to the \"preaction\" state. The default value is \"64px\".[/en]\n   *   [ja]コンポーネントの高さを指定します。この高さ以上にpull downすると\"preaction\"状態に移行します。デフォルトの値は\"64px\"です。[/ja]\n   */\n\n  /**\n   * @attribute threshold-height\n   * @type {String}\n   * @description\n   *   [en]Specify the threshold height. The component automatically switches to the \"action\" state when pulled further than this value. The default value is \"96px\". A negative value will disable this property. If this value is lower than the height, it will skip \"preaction\" state.[/en]\n   *   [ja]閾値となる高さを指定します。この値で指定した高さよりもpull downすると、このコンポーネントは自動的に\"action\"状態に移行します。[/ja]\n   */\n\n  /**\n   * @attribute fixed-content\n   * @description\n   *   [en]If this attribute is set the content of the page will not move when pulling.[/en]\n   *   [ja]この属性がある時、プルフックが引き出されている時にもコンテンツは動きません。[/ja]\n   */\n\n  function PullHookElement() {\n    classCallCheck(this, PullHookElement);\n\n    var _this = possibleConstructorReturn(this, (PullHookElement.__proto__ || Object.getPrototypeOf(PullHookElement)).call(this));\n\n    _this._onDrag = _this._onDrag.bind(_this);\n    _this._onDragStart = _this._onDragStart.bind(_this);\n    _this._onDragEnd = _this._onDragEnd.bind(_this);\n    _this._onScroll = _this._onScroll.bind(_this);\n\n    _this._setState(STATE_INITIAL, true);\n    _this._hide(); // Fix for transparent toolbar transitions\n    return _this;\n  }\n\n  createClass(PullHookElement, [{\n    key: '_setStyle',\n    value: function _setStyle() {\n      var height = this.height + 'px';\n      styler(this, { height: height, lineHeight: height });\n      this.style.display === '' && this._show();\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(event) {\n      var element = this._pageElement;\n\n      if (element.scrollTop < 0) {\n        element.scrollTop = 0;\n      }\n    }\n  }, {\n    key: '_canConsumeGesture',\n    value: function _canConsumeGesture(gesture) {\n      return gesture.direction === 'up' || gesture.direction === 'down';\n    }\n  }, {\n    key: '_onDragStart',\n    value: function _onDragStart(event) {\n      var _this2 = this;\n\n      if (!event.gesture || this.disabled) {\n        return;\n      }\n\n      var tapY = event.gesture.center.clientY + this._pageElement.scrollTop;\n      var maxY = window.innerHeight;\n      // Only use drags that start near the pullHook to reduce flickerings\n      var draggableAreaRatio = 1;\n\n      this._ignoreDrag = event.consumed || tapY > maxY * draggableAreaRatio;\n\n      if (!this._ignoreDrag) {\n        var consume = event.consume;\n        event.consume = function () {\n          consume && consume();\n          _this2._ignoreDrag = true;\n          // This elements resizes .page__content so it is safer\n          // to hide it when other components are dragged.\n          _this2._hide();\n        };\n\n        if (this._canConsumeGesture(event.gesture)) {\n          consume && consume();\n          event.consumed = true;\n          this._show(); // Not enough due to 'dragLockAxis'\n        }\n      }\n\n      this._startScroll = this._pageElement.scrollTop;\n    }\n  }, {\n    key: '_onDrag',\n    value: function _onDrag(event) {\n      var _this3 = this;\n\n      if (!event.gesture || this.disabled || this._ignoreDrag || !this._canConsumeGesture(event.gesture)) {\n        return;\n      }\n\n      // Necessary due to 'dragLockAxis' (25px)\n      if (this.style.display === 'none') {\n        this._show();\n      }\n\n      event.stopPropagation();\n\n      var tapY = event.gesture.center.clientY + this._pageElement.scrollTop;\n      var maxY = window.innerHeight;\n\n      var scroll = Math.max(event.gesture.deltaY - this._startScroll, 0);\n      if (scroll !== this._currentTranslation) {\n\n        var th = this.thresholdHeight;\n        if (th > 0 && scroll >= th) {\n          event.gesture.stopDetect();\n          setImmediate(function () {\n            return _this3._finish();\n          });\n        } else if (scroll >= this.height) {\n          this._setState(STATE_PREACTION);\n        } else {\n          this._setState(STATE_INITIAL);\n        }\n\n        this._translateTo(scroll);\n      }\n    }\n  }, {\n    key: '_onDragEnd',\n    value: function _onDragEnd(event) {\n      if (!event.gesture || this.disabled || this._ignoreDrag) {\n        return;\n      }\n\n      event.stopPropagation();\n\n      if (this._currentTranslation > 0) {\n        var scroll = this._currentTranslation;\n\n        if (scroll > this.height) {\n          this._finish();\n        } else {\n          this._translateTo(0, { animate: true });\n        }\n      }\n    }\n\n    /**\n     * @property onAction\n     * @type {Function}\n     * @description\n     *   [en]This will be called in the `action` state if it exists. The function will be given a `done` callback as it's first argument.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_finish',\n    value: function _finish() {\n      var _this4 = this;\n\n      this._setState(STATE_ACTION);\n      this._translateTo(this.height, { animate: true });\n      var action = this.onAction || function (done) {\n        return done();\n      };\n      action(function () {\n        _this4._translateTo(0, { animate: true });\n        _this4._setState(STATE_INITIAL);\n      });\n    }\n\n    /**\n     * @property height\n     * @type {Number}\n     * @description\n     *   [en]The height of the pull hook in pixels. The default value is `64px`.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_setState',\n    value: function _setState(state, noEvent) {\n      var lastState = this.state;\n\n      this.setAttribute('state', state);\n\n      if (!noEvent && lastState !== this.state) {\n        util$1.triggerElementEvent(this, 'changestate', {\n          pullHook: this,\n          state: state,\n          lastState: lastState\n        });\n      }\n    }\n\n    /**\n     * @property state\n     * @readonly\n     * @type {String}\n     * @description\n     *   [en]Current state of the element.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_show',\n    value: function _show() {\n      var _this5 = this;\n\n      // Run asyncrhonously to avoid conflicts with Animit's style clean\n      setImmediate(function () {\n        _this5.style.display = '';\n        if (_this5._pageElement) {\n          _this5._pageElement.style.marginTop = '-' + _this5.height + 'px';\n        }\n      });\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      this.style.display = 'none';\n      if (this._pageElement) {\n        this._pageElement.style.marginTop = '';\n      }\n    }\n\n    /**\n     * @param {Number} scroll\n     * @param {Object} options\n     * @param {Function} [options.callback]\n     */\n\n  }, {\n    key: '_translateTo',\n    value: function _translateTo(scroll) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this._currentTranslation == 0 && scroll == 0) {\n        return;\n      }\n\n      this._currentTranslation = scroll;\n      var opt = options.animate ? { duration: .3, timing: 'cubic-bezier(.1, .7, .1, 1)' } : {};\n      this._onPull && this._onPull((scroll / this.height).toFixed(2), opt);\n      var scrollElement = this.hasAttribute('fixed-content') ? this : this._pageElement;\n\n      Animit(scrollElement).queue({ transform: 'translate3d(0px, ' + scroll + 'px, 0px)' }, opt).play(function () {\n        scroll === 0 && styler.clear(scrollElement, 'transition transform');\n        options.callback instanceof Function && options.callback();\n      });\n    }\n  }, {\n    key: '_disableDragLock',\n    value: function _disableDragLock() {\n      // e2e tests need it\n      this._dragLockDisabled = true;\n      this._setupListeners(true);\n    }\n  }, {\n    key: '_setupListeners',\n    value: function _setupListeners(add) {\n      var _this6 = this;\n\n      var scrollToggle = function scrollToggle(action) {\n        return _this6._pageElement[action + 'EventListener']('scroll', _this6._onScroll, false);\n      };\n      var gdToggle = function gdToggle(action) {\n        var passive = { passive: true };\n        _this6._gestureDetector[action]('drag', _this6._onDrag, passive);\n        _this6._gestureDetector[action]('dragstart', _this6._onDragStart, passive);\n        _this6._gestureDetector[action]('dragend', _this6._onDragEnd, passive);\n      };\n\n      if (this._gestureDetector) {\n        gdToggle('off');\n        this._gestureDetector.dispose();\n        this._gestureDetector = null;\n      }\n      scrollToggle('remove');\n\n      if (add) {\n        this._gestureDetector = new GestureDetector(this._pageElement, {\n          dragMinDistance: 1,\n          dragDistanceCorrection: false,\n          dragLockToAxis: !this._dragLockDisabled,\n          passive: true\n        });\n\n        gdToggle('on');\n        scrollToggle('add');\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this._currentTranslation = 0;\n      this._pageElement = this.parentNode;\n\n      this._setupListeners(true);\n      this._setStyle();\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._hide();\n      this._setupListeners(false);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'height' && this._pageElement) {\n        this._setStyle();\n      }\n    }\n  }, {\n    key: 'onAction',\n    get: function get$$1() {\n      return this._onAction;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        throwType('onAction', 'function or null');\n      }\n      this._onAction = value;\n    }\n\n    /**\n     * @property onPull\n     * @type {Function}\n     * @description\n     *   [en]Hook called whenever the user pulls the element. It gets the pulled distance ratio (scroll / height) and an animationOptions object as arguments.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'onPull',\n    get: function get$$1() {\n      return this._onPull;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        throwType('onPull', 'function or null');\n      }\n      this._onPull = value;\n    }\n  }, {\n    key: 'height',\n    set: function set$$1(value) {\n      if (!util$1.isInteger(value)) {\n        throwType('height', 'integer');\n      }\n\n      this.setAttribute('height', value + 'px');\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('height') || '64', 10);\n    }\n\n    /**\n     * @property thresholdHeight\n     * @type {Number}\n     * @description\n     *   [en]The thresholdHeight of the pull hook in pixels. The default value is `96px`.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'thresholdHeight',\n    set: function set$$1(value) {\n      if (!util$1.isInteger(value)) {\n        throwType('thresholdHeight', 'integer');\n      }\n\n      this.setAttribute('threshold-height', value + 'px');\n    },\n    get: function get$$1() {\n      return parseInt(this.getAttribute('threshold-height') || '96', 10);\n    }\n  }, {\n    key: 'state',\n    get: function get$$1() {\n      return this.getAttribute('state');\n    }\n\n    /**\n     * @property pullDistance\n     * @readonly\n     * @type {Number}\n     * @description\n     *   [en]The current number of pixels the pull hook has moved.[/en]\n     *   [ja]現在のプルフックが引き出された距離をピクセル数。[/ja]\n     */\n\n  }, {\n    key: 'pullDistance',\n    get: function get$$1() {\n      return this._currentTranslation;\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['height'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['changestate'];\n    }\n  }]);\n  return PullHookElement;\n}(BaseElement);\n\nonsElements.PullHook = PullHookElement;\ncustomElements.define('ons-pull-hook', PullHookElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar scheme$22 = {\n  '': 'range--*',\n  '.range__input': 'range--*__input',\n  '.range__focus-ring': 'range--*__focus-ring'\n};\n\nvar activeClassToken = 'range__input--active';\n\n/**\n * @element ons-range\n * @category form\n * @modifier material\n *   [en]Material Design slider[/en]\n *   [ja][/ja]\n * @description\n *   [en]\n *     Range input component. Used to display a draggable slider.\n *\n *     Works very similar to the `<input type=\"range\">` element.\n *   [/en]\n *   [ja][/ja]\n * @codepen xZQomM\n * @tutorial vanilla/Reference/range\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @seealso ons-input\n *   [en]The `<ons-input>` component is used to display text inputs, radio buttons and checkboxes.[/en]\n *   [ja][/ja]\n * @example\n * <ons-range value=\"20\"></ons-range>\n * <ons-range modifier=\"material\" value=\"10\"></range>\n */\n\nvar RangeElement = function (_BaseInputElement) {\n  inherits(RangeElement, _BaseInputElement);\n\n  function RangeElement() {\n    classCallCheck(this, RangeElement);\n\n    var _this = possibleConstructorReturn(this, (RangeElement.__proto__ || Object.getPrototypeOf(RangeElement)).call(this));\n\n    _this._onMouseDown = _this._onMouseDown.bind(_this);\n    _this._onMouseUp = _this._onMouseUp.bind(_this);\n    _this._onTouchStart = _this._onTouchStart.bind(_this);\n    _this._onTouchEnd = _this._onTouchEnd.bind(_this);\n    _this._onInput = _this._update.bind(_this);\n    _this._onDragstart = _this._onDragstart.bind(_this);\n    _this._onDragend = _this._onDragend.bind(_this);\n    return _this;\n  }\n\n  createClass(RangeElement, [{\n    key: '_compile',\n    value: function _compile() {\n      get(RangeElement.prototype.__proto__ || Object.getPrototypeOf(RangeElement.prototype), '_compile', this).call(this);\n      this._updateDisabled(this.hasAttribute('disabled'));\n    }\n\n    /* Inherited props */\n\n  }, {\n    key: '_update',\n    value: function _update() {\n      var input = this._input;\n      var focusRing = this._focusRing;\n\n      input.style.backgroundSize = 100 * this._ratio + '% 2px';\n      focusRing.value = this.value;\n\n      // NOTE: \"_zero\" attribute is used for CSS styling.\n      if (input.min === '' && input.value === '0' || input.min === input.value) {\n        input.setAttribute('_zero', '');\n      } else {\n        input.removeAttribute('_zero');\n      }\n\n      ['min', 'max'].forEach(function (attr) {\n        return focusRing[attr] = input[attr];\n      });\n    }\n  }, {\n    key: '_onMouseDown',\n\n\n    /* Own props */\n\n    value: function _onMouseDown(e) {\n      var _this2 = this;\n\n      this._input.classList.add(activeClassToken);\n      setImmediate(function () {\n        return _this2._input.focus();\n      });\n    }\n  }, {\n    key: '_onTouchStart',\n    value: function _onTouchStart(e) {\n      this._onMouseDown();\n    }\n  }, {\n    key: '_onMouseUp',\n    value: function _onMouseUp(e) {\n      this._input.classList.remove(activeClassToken);\n    }\n  }, {\n    key: '_onTouchEnd',\n    value: function _onTouchEnd(e) {\n      this._onMouseUp(e);\n    }\n  }, {\n    key: '_onDragstart',\n    value: function _onDragstart(e) {\n      e.consumed = true;\n      e.gesture.stopPropagation();\n      this._input.classList.add(activeClassToken);\n      this.addEventListener('drag', this._onDrag);\n    }\n  }, {\n    key: '_onDrag',\n    value: function _onDrag(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: '_onDragend',\n    value: function _onDragend(e) {\n      this._input.classList.remove(activeClassToken);\n      this.removeEventListener('drag', this._onDrag);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'disabled') {\n        this._updateDisabled(current);\n      }\n      get(RangeElement.prototype.__proto__ || Object.getPrototypeOf(RangeElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n    }\n\n    /**\n     * @param {boolean} disabled\n     */\n\n  }, {\n    key: '_updateDisabled',\n    value: function _updateDisabled(disabled) {\n      if (disabled) {\n        this.classList.add('range--disabled');\n      } else {\n        this.classList.remove('range--disabled');\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this._setupListeners(true);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._setupListeners(false);\n    }\n  }, {\n    key: '_setupListeners',\n    value: function _setupListeners(add) {\n      var action = (add ? 'add' : 'remove') + 'EventListener';\n      util$1[action](this, 'touchstart', this._onTouchStart, { passive: true });\n      this[action]('mousedown', this._onMouseDown);\n      this[action]('mouseup', this._onMouseUp);\n      this[action]('touchend', this._onTouchEnd);\n      this[action]('dragstart', this._onDragstart);\n      this[action]('dragend', this._onDragend);\n      this[action]('input', this._onInput);\n    }\n\n    /**\n     * @attribute disabled\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property value\n     * @type {Number}\n     * @description\n     *   [en]Current value.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the range.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the range.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$22;\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      return '\\n      <input type=\"' + this.type + '\" class=\"' + this._defaultClassName + '__input\">\\n      <input type=\"range\" class=\"range__focus-ring\" tabIndex=\"-1\">\\n    ';\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'range';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return 'range';\n    }\n  }, {\n    key: '_focusRing',\n    get: function get$$1() {\n      return this.children[1];\n    }\n  }, {\n    key: '_ratio',\n    get: function get$$1() {\n      // Returns the current ratio.\n      var min = this._input.min === '' ? 0 : parseInt(this._input.min);\n      var max = this._input.max === '' ? 100 : parseInt(this._input.max);\n\n      return (this.value - min) / (max - min);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['disabled'].concat(toConsumableArray(BaseInputElement.observedAttributes));\n    }\n  }]);\n  return RangeElement;\n}(BaseInputElement);\n\nonsElements.Range = RangeElement;\ncustomElements.define('ons-range', RangeElement);\n\n/*\nCopyright 2013-2016 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @class AnimatorCSS - implementation of Animator class using css transitions\n */\n\nvar AnimatorCSS = function () {\n  createClass(AnimatorCSS, [{\n    key: 'animate',\n\n\n    /**\n     * @method animate\n     * @desc main animation function\n     * @param {Element} element\n     * @param {Object} finalCSS\n     * @param {number} [duration=200] - duration in milliseconds\n     * @return {Object} result\n     * @return {Function} result.then(callback) - sets a callback to be executed after the animation has stopped\n     * @return {Function} result.stop(options) - stops the animation; if options.stopNext is true then it doesn't call the callback\n     * @return {Function} result.finish(ms) - finishes the animation in the specified time in milliseconds\n     * @return {Function} result.speed(ms) - sets the animation speed so that it finishes as if the original duration was the one specified here\n     * @example\n     * ````\n     *  var result = animator.animate(el, {opacity: 0.5}, 1000);\n     *\n     *  el.addEventListener('click', function(e){\n     *    result.speed(200).then(function(){\n     *      console.log('done');\n     *    });\n     *  }, 300);\n     * ````\n     */\n    value: function animate(el, final) {\n      var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200;\n\n      var start = new Date().getTime(),\n          initial = {},\n          stopped = false,\n          next = false,\n          timeout = false,\n          properties = Object.keys(final);\n\n      var updateStyles = function updateStyles() {\n        var s = window.getComputedStyle(el);\n        properties.forEach(s.getPropertyValue.bind(s));\n        s = el.offsetHeight;\n      };\n\n      var result = {\n        stop: function stop() {\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          timeout && clearTimeout(timeout);\n          var k = Math.min(1, (new Date().getTime() - start) / duration);\n          properties.forEach(function (i) {\n            el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');\n          });\n          el.style.transitionDuration = '0s';\n\n          if (options.stopNext) {\n            next = false;\n          } else if (!stopped) {\n            stopped = true;\n            next && next();\n          }\n          return result;\n        },\n        then: function then(cb) {\n          next = cb;\n          if (stopped) {\n            next && next();\n          }\n          return result;\n        },\n        speed: function speed(newDuration) {\n          if (internal$1.config.animationsDisabled) {\n            newDuration = 0;\n          }\n          if (!stopped) {\n            timeout && clearTimeout(timeout);\n\n            var passed = new Date().getTime() - start;\n            var k = passed / duration;\n            var remaining = newDuration * (1 - k);\n\n            properties.forEach(function (i) {\n              el.style[i] = (1 - k) * initial[i] + k * final[i] + (i == 'opacity' ? '' : 'px');\n            });\n\n            updateStyles();\n\n            start = el.speedUpTime;\n            duration = remaining;\n\n            el.style.transitionDuration = duration / 1000 + 's';\n\n            properties.forEach(function (i) {\n              el.style[i] = final[i] + (i == 'opacity' ? '' : 'px');\n            });\n\n            timeout = setTimeout(result.stop, remaining);\n          }\n          return result;\n        },\n        finish: function finish() {\n          var milliseconds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 50;\n\n          var k = (new Date().getTime() - start) / duration;\n\n          result.speed(milliseconds / (1 - k));\n          return result;\n        }\n      };\n\n      if (el.hasAttribute('disabled') || stopped || internal$1.config.animationsDisabled) {\n        return result;\n      }\n\n      var style = window.getComputedStyle(el);\n      properties.forEach(function (e) {\n        var v = parseFloat(style.getPropertyValue(e));\n        initial[e] = isNaN(v) ? 0 : v;\n      });\n\n      if (!stopped) {\n        el.style.transitionProperty = properties.join(',');\n        el.style.transitionDuration = duration / 1000 + 's';\n\n        properties.forEach(function (e) {\n          el.style[e] = final[e] + (e == 'opacity' ? '' : 'px');\n        });\n      }\n\n      timeout = setTimeout(result.stop, duration);\n      this._onStopAnimations(el, result.stop);\n\n      return result;\n    }\n  }]);\n\n  function AnimatorCSS() {\n    classCallCheck(this, AnimatorCSS);\n\n    this._queue = [];\n    this._index = 0;\n  }\n\n  createClass(AnimatorCSS, [{\n    key: '_onStopAnimations',\n    value: function _onStopAnimations(el, listener) {\n      var queue = this._queue;\n      var i = this._index++;\n      queue[el] = queue[el] || [];\n      queue[el][i] = function (options) {\n        delete queue[el][i];\n        if (queue[el] && queue[el].length == 0) {\n          delete queue[el];\n        }\n        return listener(options);\n      };\n    }\n\n    /**\n    * @method stopAnimations\n    * @desc stops active animations on a specified element\n    * @param {Element|Array} element - element or array of elements\n    * @param {Object} [options={}]\n    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true\n    */\n\n  }, {\n    key: 'stopAnimations',\n    value: function stopAnimations(el) {\n      var _this = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Array.isArray(el)) {\n        return el.forEach(function (el) {\n          _this.stopAnimations(el, options);\n        });\n      }\n\n      (this._queue[el] || []).forEach(function (e) {\n        e(options || {});\n      });\n    }\n\n    /**\n    * @method stopAll\n    * @desc stops all active animations\n    * @param {Object} [options={}]\n    * @param {Boolean} [options.stopNext] - the callbacks after the animations won't be called if this option is true\n    */\n\n  }, {\n    key: 'stopAll',\n    value: function stopAll() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.stopAnimations(Object.keys(this._queue), options);\n    }\n\n    /**\n    * @method fade\n    * @desc fades the element (short version for animate(el, {opacity: 0}))\n    * @param {Element} element\n    * @param {number} [duration=200]\n    */\n\n  }, {\n    key: 'fade',\n    value: function fade(el) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;\n\n      return this.animate(el, { opacity: 0 }, duration);\n    }\n  }]);\n  return AnimatorCSS;\n}();\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$11 = 'ripple';\nvar scheme$23 = {\n  '': 'ripple--*',\n  '.ripple__wave': 'ripple--*__wave',\n  '.ripple__background': 'ripple--*__background'\n};\n\n/**\n * @element ons-ripple\n * @category visual\n * @description\n *   [en]\n *     Adds a Material Design \"ripple\" effect to an element. The ripple effect will spread from the position where the user taps.\n *\n *     Some elements such as `<ons-button>` and `<ons-fab>`  support a `ripple` attribute.\n *   [/en]\n *   [ja]マテリアルデザインのリップル効果をDOM要素に追加します。[/ja]\n * @codepen wKQWdZ\n * @tutorial vanilla/Reference/ripple\n * @modifier light-gray\n *   [en]Change the color of effects to light gray.[/en]\n *   [ja]エフェクトの色が明るい灰色になります。[/ja]\n * @guide theming.html#cross-platform-styling-autostyling\n *  [en]Cross platform styling[/en]\n *  [ja]Cross platform styling[/ja]\n * @example\n * <div class=\"my-div\">\n *  <ons-ripple></ons-ripple>\n * </div>\n *\n * @example\n * <ons-button ripple>Click me!</ons-button>\n */\n\nvar RippleElement = function (_BaseElement) {\n  inherits(RippleElement, _BaseElement);\n\n  /**\n   * @attribute color\n   * @type {String}\n   * @description\n   *   [en]Color of the ripple effect.[/en]\n   *   [ja]リップルエフェクトの色を指定します。[/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the ripple effect.[/en]\n   *   [ja]エフェクトの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute background\n   * @type {String}\n   * @description\n   *   [en]Color of the background.[/en]\n   *   [ja]背景の色を設定します。[/ja]\n   */\n\n  /**\n   * @attribute size\n   * @type {String}\n   * @description\n   *   [en]Sizing of the wave on ripple effect. Set \"cover\" or \"contain\". Default is \"cover\".[/en]\n   *   [ja]エフェクトのサイズを指定します。\"cover\"もしくは\"contain\"を指定します。デフォルトは\"cover\"です。[/ja]\n   */\n\n  /**\n   * @attribute center\n   * @type {Boolean}\n   * @description\n   *   [en]If this attribute presents, change the position of wave effect to center of the target element.[/en]\n   *   [ja]この要素を設定すると、エフェクトの位置が要素の真ん中から始まります。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]If this attribute is set, the ripple effect will be disabled.[/en]\n   *   [ja]この属性が設定された場合、リップルエフェクトは無効になります。[/ja]\n   */\n\n  function RippleElement() {\n    classCallCheck(this, RippleElement);\n\n    var _this = possibleConstructorReturn(this, (RippleElement.__proto__ || Object.getPrototypeOf(RippleElement)).call(this));\n\n    _this._onTap = _this._onTap.bind(_this);\n    _this._onHold = _this._onHold.bind(_this);\n    _this._onDragStart = _this._onDragStart.bind(_this);\n    _this._onRelease = _this._onRelease.bind(_this);\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n\n    _this._animator = new AnimatorCSS();\n\n    ['color', 'center', 'start-radius', 'background', 'modifier'].forEach(function (e) {\n      _this.attributeChangedCallback(e, null, _this.getAttribute(e));\n    });\n    return _this;\n  }\n\n  createClass(RippleElement, [{\n    key: '_compile',\n    value: function _compile() {\n      this.classList.add(defaultClassName$11);\n\n      this._wave = this.getElementsByClassName('ripple__wave')[0];\n      this._background = this.getElementsByClassName('ripple__background')[0];\n\n      if (!(this._background && this._wave)) {\n        this._wave = util$1.create('.ripple__wave');\n        this._background = util$1.create('.ripple__background');\n\n        this.appendChild(this._wave);\n        this.appendChild(this._background);\n      }\n\n      ModifierUtil.initModifier(this, scheme$23);\n    }\n  }, {\n    key: '_getEffectSize',\n    value: function _getEffectSize() {\n      var sizes = ['cover', 'contain'];\n      if (this.hasAttribute('size')) {\n        var size = this.getAttribute('size');\n        if (sizes.indexOf(size) !== -1) {\n          return size;\n        }\n      }\n\n      return 'cover';\n    }\n  }, {\n    key: '_calculateCoords',\n    value: function _calculateCoords(e) {\n      var x = void 0,\n          y = void 0,\n          h = void 0,\n          w = void 0,\n          r = void 0;\n      var b = this.getBoundingClientRect();\n      var size = this._getEffectSize();\n      var error = function error() {\n        return util$1.throw('Ripple invalid state');\n      };\n\n      if (this._center) {\n        x = b.width / 2;\n        y = b.height / 2;\n\n        if (size === 'cover') {\n          r = Math.sqrt(x * x + y * y);\n        } else if (size === 'contain') {\n          r = Math.min(x, y);\n        } else {\n          error();\n        }\n      } else {\n        x = (typeof e.clientX === 'number' ? e.clientX : e.changedTouches[0].clientX) - b.left;\n        y = (typeof e.clientY === 'number' ? e.clientY : e.changedTouches[0].clientY) - b.top;\n        h = Math.max(y, b.height - y);\n        w = Math.max(x, b.width - x);\n\n        if (size === 'cover') {\n          r = Math.sqrt(h * h + w * w);\n        } else if (size === 'contain') {\n          r = Math.min(Math.round(h / 2), Math.round(w / 2));\n        } else {\n          error();\n        }\n      }\n\n      return { x: x, y: y, r: r };\n    }\n  }, {\n    key: '_rippleAnimation',\n    value: function _rippleAnimation(e) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 300;\n      var _animator = this._animator,\n          _wave = this._wave,\n          _background = this._background,\n          _minR = this._minR;\n\n      var _calculateCoords2 = this._calculateCoords(e),\n          x = _calculateCoords2.x,\n          y = _calculateCoords2.y,\n          r = _calculateCoords2.r;\n\n      _animator.stopAll({ stopNext: 1 });\n      _animator.animate(_background, { opacity: 1 }, duration);\n\n      util$1.extend(_wave.style, {\n        opacity: 1,\n        top: y - _minR + 'px',\n        left: x - _minR + 'px',\n        width: 2 * _minR + 'px',\n        height: 2 * _minR + 'px'\n      });\n\n      return _animator.animate(_wave, {\n        top: y - r,\n        left: x - r,\n        height: 2 * r,\n        width: 2 * r\n      }, duration);\n    }\n  }, {\n    key: '_updateParent',\n    value: function _updateParent() {\n      if (!this._parentUpdated && this.parentNode) {\n        var computedStyle = window.getComputedStyle(this.parentNode);\n        if (computedStyle.getPropertyValue('position') === 'static') {\n          this.parentNode.style.position = 'relative';\n        }\n        this._parentUpdated = true;\n      }\n    }\n  }, {\n    key: '_onTap',\n    value: function _onTap(e) {\n      var _this2 = this;\n\n      if (!this.disabled && !e.ripple) {\n        e.ripple = true;\n        this._updateParent();\n        this._rippleAnimation(e.gesture.srcEvent).then(function () {\n          _this2._animator.fade(_this2._wave);\n          _this2._animator.fade(_this2._background);\n        });\n      }\n    }\n  }, {\n    key: '_onHold',\n    value: function _onHold(e) {\n      if (!this.disabled && !e.ripple) {\n        e.ripple = true;\n        this._updateParent();\n        this._holding = this._rippleAnimation(e.gesture.srcEvent, 2000);\n        document.addEventListener('release', this._onRelease);\n      }\n    }\n  }, {\n    key: '_onRelease',\n    value: function _onRelease(e) {\n      var _this3 = this;\n\n      if (this._holding && !e.ripple) {\n        e.ripple = true;\n        this._holding.speed(300).then(function () {\n          _this3._animator.stopAll({ stopNext: true });\n          _this3._animator.fade(_this3._wave);\n          _this3._animator.fade(_this3._background);\n        });\n\n        this._holding = false;\n      }\n\n      document.removeEventListener('release', this._onRelease);\n    }\n  }, {\n    key: '_onDragStart',\n    value: function _onDragStart(e) {\n      if (this._holding) {\n        return this._onRelease(e);\n      }\n      if (['left', 'right'].indexOf(e.gesture.direction) != -1) {\n        this._onTap(e);\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this._parentNode = this.parentNode;\n\n      if (internal$1.config.animationsDisabled) {\n        this.disabled = true;\n      } else {\n        this._parentNode.addEventListener('tap', this._onTap);\n        this._parentNode.addEventListener('hold', this._onHold);\n        this._parentNode.addEventListener('dragstart', this._onDragStart);\n      }\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      var pn = this._parentNode || this.parentNode;\n      pn.removeEventListener('tap', this._onTap);\n      pn.removeEventListener('hold', this._onHold);\n      pn.removeEventListener('dragstart', this._onDragStart);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this4 = this;\n\n      switch (name) {\n\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$11, scheme$23);\n          break;\n\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$23);\n          break;\n\n        case 'start-radius':\n          this._minR = Math.max(0, parseFloat(current) || 0);\n          break;\n\n        case 'color':\n          if (current) {\n            contentReady(this, function () {\n              _this4._wave.style.background = current;\n              if (!_this4.hasAttribute('background')) {\n                _this4._background.style.background = current;\n              }\n            });\n          }\n          break;\n\n        case 'background':\n          if (current || last) {\n            if (current === 'none') {\n              contentReady(this, function () {\n                _this4._background.setAttribute('disabled', 'disabled');\n                _this4._background.style.background = 'transparent';\n              });\n            } else {\n              contentReady(this, function () {\n                if (_this4._background.hasAttribute('disabled')) {\n                  _this4._background.removeAttribute('disabled');\n                }\n                _this4._background.style.background = current;\n              });\n            }\n          }\n          break;\n\n        case 'center':\n          if (name === 'center') {\n            this._center = current != null && current != 'false';\n          }\n          break;\n\n      }\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['start-radius', 'color', 'background', 'center', 'class', 'modifier'];\n    }\n  }]);\n  return RippleElement;\n}(BaseElement);\n\nonsElements.Ripple = RippleElement;\ncustomElements.define('ons-ripple', RippleElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-row\n * @category grid\n * @description\n *   [en]Represents a row in the grid system. Use with `<ons-col>` to layout components.[/en]\n *   [ja]グリッドシステムにて行を定義します。ons-colとともに使用し、コンポーネントの配置に使用します。[/ja]\n * @codepen GgujC {wide}\n * @guide features.html\n *   [en]Layouting guide[/en]\n *   [ja]レイアウト調整[/ja]\n * @seealso ons-col\n *   [en]The `<ons-col>` component is used as children of `<ons-row>`.[/en]\n *   [ja]ons-colコンポーネント[/ja]\n * @note\n *   [en]For Android 4.3 and earlier, and iOS6 and earlier, when using mixed alignment with ons-row and ons-col, they may not be displayed correctly. You can use only one vertical-align.[/en]\n *   [ja]Android 4.3以前、もしくはiOS 6以前のOSの場合、ons-rowとons-colを組み合わせてそれぞれのons-col要素のvertical-align属性の値に別々の値を指定すると、描画が崩れる場合があります。vertical-align属性の値には一つの値だけを指定できます。[/ja]\n * @example\n * <ons-row>\n *   <ons-col width=\"50px\"><ons-icon icon=\"fa-twitter\"></ons-icon></ons-col>\n *   <ons-col>Text</ons-col>\n * </ons-row>\n */\n\n/**\n * @attribute vertical-align\n * @type {String}\n * @description\n *   [en]Short hand attribute for aligning vertically. Valid values are top, bottom, and center.[/en]\n *   [ja]縦に整列するために指定します。top、bottom、centerのいずれかを指定できます。[/ja]\n */\n\nvar RowElement = function (_BaseElement) {\n  inherits(RowElement, _BaseElement);\n\n  function RowElement() {\n    classCallCheck(this, RowElement);\n    return possibleConstructorReturn(this, (RowElement.__proto__ || Object.getPrototypeOf(RowElement)).apply(this, arguments));\n  }\n\n  return RowElement;\n}(BaseElement);\n\nonsElements.Row = RowElement;\ncustomElements.define('ons-row', RowElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$12 = 'segment';\nvar scheme$24 = {\n  '': 'segment--*',\n  '.segment__item': 'segment--*__item',\n  '.segment__input': 'segment--*__input',\n  '.segment__button': 'segment--*__button'\n};\n\nvar generateId$1 = function () {\n  var i = 0;\n  return function () {\n    return 'ons-segment-gen-' + i++;\n  };\n}();\n\n/**\n * @element ons-segment\n * @category control\n * @modifier material\n *   [en]Material Design segment[/en]\n *   [ja][/ja]\n * @description\n *   [en]\n *     Segment component. Use this component to have a button bar with automatic styles that switch on click of another button.\n *\n *     Will automatically display as a Material Design segment on Android.\n *   [/en]\n *   [ja][/ja]\n * @codepen hLayx\n * @tutorial vanilla/Reference/segment\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\n * @example\n * <ons-segment>\n *   <ons-button>Label 1</ons-button>\n *   <ons-button>Label 2</ons-button>\n *   <ons-button>Label 3</ons-button>\n * </ons-segment>\n */\n\nvar SegmentElement = function (_BaseElement) {\n  inherits(SegmentElement, _BaseElement);\n\n  /**\n   * @event postchange\n   * @description\n   *   [en]Fires after the active button is changed.[/en]\n   *   [ja][/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja][/ja]\n   * @param {Number} event.index\n   *   [en]Tapped button index.[/en]\n   *   [ja][/ja]\n   * @param {Object} event.segmentItem\n   *   [en]Segment item object.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *  [en]The appearance of the segment.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute tabbar-id\n   * @initonly\n   * @type {String}\n   * @description\n   *  [en]ID of the tabbar element to \"connect\" to the segment. Must be inside the same page.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute active-index\n   * @initonly\n   * @default 0\n   * @type {Number}\n   * @description\n   *  [en]Index of the first active button, only works if there is no connected tabbar (in which case the active tab sets the active button).[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]Specify if segment should be disabled.[/en]\n   *   [ja]ボタンを無効化する場合は指定します。[/ja]\n   */\n\n  function SegmentElement() {\n    classCallCheck(this, SegmentElement);\n\n    var _this = possibleConstructorReturn(this, (SegmentElement.__proto__ || Object.getPrototypeOf(SegmentElement)).call(this));\n\n    _this._segmentId = generateId$1();\n    _this._tabbar = null;\n    _this._onChange = _this._onChange.bind(_this);\n    _this._onTabbarPreChange = _this._onTabbarPreChange.bind(_this);\n\n    contentReady(_this, function () {\n      _this._compile();\n      setImmediate(function () {\n        return _this._lastActiveIndex = _this._tabbar ? _this._tabbar.getActiveTabIndex() : _this.getActiveButtonIndex();\n      });\n    });\n    return _this;\n  }\n\n  createClass(SegmentElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$12);\n\n      for (var index = this.children.length - 1; index >= 0; index--) {\n        var item = this.children[index];\n        item.classList.add('segment__item');\n\n        var input = util$1.findChild(item, '.segment__input') || util$1.create('input.segment__input');\n        input.type = 'radio';\n        input.value = index;\n        input.name = input.name || this._segmentId;\n        input.checked = !this.hasAttribute('tabbar-id') && index === (parseInt(this.getAttribute('active-index')) || 0);\n\n        var button = util$1.findChild(item, '.segment__button') || util$1.create('.segment__button');\n        if (button.parentElement !== item) {\n          while (item.firstChild) {\n            button.appendChild(item.firstChild);\n          }\n        }\n\n        item.appendChild(input);\n        item.appendChild(button);\n      }\n\n      ModifierUtil.initModifier(this, scheme$24);\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        if (_this2.hasAttribute('tabbar-id')) {\n          var page = util$1.findParent(_this2, 'ons-page');\n          _this2._tabbar = page && page.querySelector('#' + _this2.getAttribute('tabbar-id'));\n          if (!_this2._tabbar || _this2._tabbar.tagName !== 'ONS-TABBAR') {\n            util$1.throw('No tabbar with id ' + _this2.getAttribute('tabbar-id') + ' was found.');\n          }\n\n          _this2._tabbar.setAttribute('hide-tabs', '');\n          setImmediate(function () {\n            return _this2._setChecked(_this2._tabbar.getActiveTabIndex());\n          });\n\n          _this2._tabbar.addEventListener('prechange', _this2._onTabbarPreChange);\n        }\n      });\n\n      this.addEventListener('change', this._onChange);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      var _this3 = this;\n\n      contentReady(this, function () {\n        if (_this3._tabbar) {\n          _this3._tabbar.removeEventListener('prechange', _this3._onTabbarPreChange);\n          _this3._tabbar = null;\n        }\n      });\n      this.removeEventListener('change', this._onChange);\n    }\n  }, {\n    key: '_setChecked',\n    value: function _setChecked(index) {\n      this.children[index].firstElementChild.checked = true;\n    }\n\n    /**\n     * @method setActiveButton\n     * @signature setActiveButton(index, [options])\n     * @param {Number} index\n     *   [en]Button index.[/en]\n     *   [ja][/ja]\n     * @param {Object} [options]\n     *   [en]Parameter object, works only if there is a connected tabbar. Supports the same options as `ons-tabbar`'s `setActiveTab` method.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Make button with the specified index active. If there is a connected tabbar it shows the corresponding tab page. In this case animations and their options can be specified by the second parameter.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the selected index or to the new page element if there is a connected tabbar.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'setActiveButton',\n    value: function setActiveButton(index, options) {\n      if (this._tabbar) {\n        return this._tabbar.setActiveTab(index, options);\n      }\n\n      this._setChecked(index);\n      this._postChange(index);\n      return Promise.resolve(index);\n    }\n\n    /**\n     * @method getActiveButtonIndex\n     * @signature getActiveButtonIndex()\n     * @return {Number}\n     *   [en]The index of the currently active button.[/en]\n     *   [ja][/ja]\n     * @description\n     *   [en]Returns button index of current active button. If active button is not found, returns -1.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'getActiveButtonIndex',\n    value: function getActiveButtonIndex() {\n      for (var i = this.children.length - 1; i >= 0; i--) {\n        // Array.findIndex\n        if (this.children[i].firstElementChild.checked) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(event) {\n      event.stopPropagation();\n      this._tabbar ? this._tabbar.setActiveTab(this.getActiveButtonIndex(), { reject: false }) : this._postChange(this.getActiveButtonIndex());\n    }\n  }, {\n    key: '_onTabbarPreChange',\n    value: function _onTabbarPreChange(event) {\n      var _this4 = this;\n\n      setImmediate(function () {\n        if (!event.detail.canceled) {\n          _this4._setChecked(event.index);\n          _this4._postChange(event.index);\n        }\n      });\n    }\n  }, {\n    key: '_postChange',\n    value: function _postChange(index) {\n      util$1.triggerElementEvent(this, 'postchange', {\n        index: index,\n        activeIndex: index,\n        lastActiveIndex: this._lastActiveIndex,\n        segmentItem: this.children[index]\n      });\n      this._lastActiveIndex = index;\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the segment is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$12, scheme$24);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$24);\n          break;\n      }\n    }\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['class', 'modifier'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['postchange'];\n    }\n  }]);\n  return SegmentElement;\n}(BaseElement);\n\nonsElements.Segment = SegmentElement;\ncustomElements.define('ons-segment', SegmentElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$25 = {\n  '': 'select-* select--*',\n  '.select-input': 'select-input--*'\n};\n\nvar defaultClassName$13 = 'select';\n\nvar INPUT_ATTRIBUTES$1 = ['autofocus', 'disabled', 'form', 'multiple', 'name', 'required', 'size'];\n\n/**\n * @element ons-select\n * @category form\n * @modifier material\n *  [en]Displays a Material Design select input.[/en]\n *  [ja][/ja]\n * @modifier underbar\n *  [en]Displays a horizontal line underneath a select input.[/en]\n *  [ja][/ja]\n * @description\n *   [en]\n *     Select component. If you want to place a select with an ID of `my-id` on a page, use `<ons-select select-id=\"my-id\">`.\n *\n *     The component will automatically display as a Material Design select on Android.\n *\n *     Most attributes that can be used for a normal `<select>` element can also be used on the `<ons-select>` element.\n *   [/en]\n *   [ja]セレクトボックスを表示するコンポーネントです。`select` 要素に使用できる属性の多くが `ons-select` 要素でも利用できます。[/ja]\n * @codepen hLayx\n * @tutorial vanilla/Reference/select\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @guide theming.html#cross-platform-styling-autostyling [en]Information about cross platform styling[/en][ja]Information about cross platform styling[/ja]\n * @example\n * <ons-select>\n *   <option value=\"1\">1</option>\n *   <option value=\"2\">2nd</option>\n *   <option value=\"3\">3rd option</option>\n * </ons-select>\n */\n\nvar SelectElement = function (_BaseElement) {\n  inherits(SelectElement, _BaseElement);\n\n  /**\n   * @attribute autofocus\n   * @type {Boolean}\n   * @default false\n   * @description\n   *  [en]Element automatically gains focus on page load.[/en]\n   *  [ja]ページロード時にこのセレクトボックスにフォーカスが移るようにします。[/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @type {Boolean}\n   * @default false\n   * @description\n   *   [en]Specify if select input should be disabled.[/en]\n   *   [ja]このセレクトボックスを無効化する場合に指定します。[/ja]\n   */\n\n  /**\n   * @attribute form\n   * @type {String}\n   * @description\n   *   [en]Associate a select element to an existing form on the page, even if not nested.[/en]\n   *   [ja]このセレクトボックスを、指定した `form` 要素に紐付けます。セレクトボックスを `form` 要素の外側に配置する際に使用します。[/ja]\n   */\n\n  /**\n   * @attribute multiple\n   * @type {Boolean}\n   * @default false\n   * @description\n   *  [en]If this attribute is defined, multiple options can be selected at once.[/en]\n   *  [ja]選択肢の複数選択を有効にします。[/ja]\n   */\n\n  /**\n   * @attribute name\n   * @type {String}\n   * @description\n   *   [en]Name the select element, useful for instance if it is part of a form.[/en]\n   *   [ja]このセレクトボックスの名前を指定します。通常 `form` 要素と共に使用します。[/ja]\n   */\n\n  /**\n   * @attribute required\n   * @type {Boolean}\n   * @description\n   *   [en]Make the select input required for submitting the form it is part of.[/en]\n   *   [ja]このセレクトボックスを入力必須にする場合に指定します。通常 `form` 要素と共に使用します。[/ja]\n   */\n\n  /**\n   * @attribute select-id\n   * @type {String}\n   * @description\n   *   [en]ID given to the inner select, useful for dynamic manipulation.[/en]\n   *   [ja]このセレクトボックスが内部に持つ select 要素に与える ID を指定します。セレクトボックスの内容を動的に変更する必要がある場合に使用します。[/ja]\n   */\n\n  /**\n   * @attribute size\n   * @type {Number}\n   * @default 1\n   * @description\n   *   [en]How many options are displayed; if there are more than the size then a scroll appears to navigate them.[/en]\n   *   [ja]一度に表示する選択肢の個数を指定します。選択肢がこの属性で指定した個数よりも多い場合、スクロールが有効になります。[/ja]\n   */\n\n  function SelectElement() {\n    classCallCheck(this, SelectElement);\n\n    var _this = possibleConstructorReturn(this, (SelectElement.__proto__ || Object.getPrototypeOf(SelectElement)).call(this));\n\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n\n    _this._deriveGetters();\n    return _this;\n  }\n\n  createClass(SelectElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this2 = this;\n\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$13, scheme$25);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$25);\n          break;\n      }\n\n      if (INPUT_ATTRIBUTES$1.indexOf(name) >= 0) {\n        contentReady(this, function () {\n          return _this2._updateBoundAttributes();\n        });\n      }\n    }\n  }, {\n    key: '_updateBoundAttributes',\n    value: function _updateBoundAttributes() {\n      var _this3 = this;\n\n      INPUT_ATTRIBUTES$1.forEach(function (attr) {\n        if (_this3.hasAttribute(attr)) {\n          _this3._select.setAttribute(attr, _this3.getAttribute(attr));\n        } else {\n          _this3._select.removeAttribute(attr);\n        }\n      });\n    }\n\n    /**\n     * @property length\n     * @description\n     *   [en]Number of options in the select box.[/en]\n     *   [ja]このセレクトボックスに含まれる選択肢の個数を返します。 `select` 要素[/ja]\n     */\n\n    /**\n     * @property options\n     * @description\n     *   [en]Several options for handling the select DOM object.[/en]\n     *   [ja]このセレクトボックスに含まれる `option` 要素の配列を返します。[/ja]\n     */\n\n    /**\n     * @property selectedIndex\n     * @description\n     *   [en]Index of the currently selected option.[/en]\n     *   [ja]現在選択されている選択肢のインデックスを返します。[/ja]\n     */\n\n    /**\n     * @property value\n     * @description\n     *   [en]Value of the currently selected option.[/en]\n     *   [ja]現在選択されている選択肢の値を返します。[/ja]\n     */\n\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.classList.add(defaultClassName$13);\n      var sel = this._select || document.createElement('select');\n      if (!sel.id && this.hasAttribute('select-id')) {\n        sel.id = this.getAttribute('select-id');\n      }\n      sel.classList.add('select-input');\n      if (!this._select) {\n        util$1.arrayFrom(this.childNodes).forEach(function (element) {\n          return sel.appendChild(element);\n        });\n        this.appendChild(sel);\n      }\n\n      ModifierUtil.initModifier(this, scheme$25);\n    }\n  }, {\n    key: '_deriveGetters',\n    value: function _deriveGetters() {\n      var _this4 = this;\n\n      ['disabled', 'length', 'multiple', 'name', 'options', 'selectedIndex', 'size', 'value', 'form', 'type'].forEach(function (key) {\n        Object.defineProperty(_this4, key, {\n          configurable: true,\n          enumerable: true,\n          get: function get$$1() {\n            return _this4._select[key];\n          },\n          set: ['form', 'type'].indexOf(key) === -1 ? function (value) {\n            return contentReady(_this4, function () {\n              return _this4._select[key] = value;\n            });\n          } : undefined\n        });\n      });\n    }\n  }, {\n    key: 'add',\n    value: function add(option) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      this._select.add(option, index);\n    }\n  }, {\n    key: 'remove',\n    value: function remove(index) {\n      this._select.remove(index);\n    }\n  }, {\n    key: '_select',\n    get: function get$$1() {\n      return this.querySelector('select');\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'class'].concat(INPUT_ATTRIBUTES$1);\n    }\n  }]);\n  return SelectElement;\n}(BaseElement);\n\nonsElements.Select = SelectElement;\ncustomElements.define('ons-select', SelectElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar defaultClassName$14 = 'fab fab--mini speed-dial__item';\n\nvar scheme$26 = {\n  '': 'fab--* speed-dial__item--*'\n};\n\n/**\n * @element ons-speed-dial-item\n * @category control\n * @description\n *   [en]\n *     This component displays the child elements of the Material Design Speed dial component.\n *   [/en]\n *   [ja]\n *     Material DesignのSpeed dialの子要素を表現する要素です。\n *   [/ja]\n * @codepen dYQYLg\n * @tutorial vanilla/Reference/speed-dial\n * @seealso ons-speed-dial\n *   [en]The `<ons-speed-dial>` component.[/en]\n *   [ja]ons-speed-dialコンポーネント[/ja]\n * @seealso ons-fab\n *   [en]ons-fab component[/en]\n *   [ja]ons-fabコンポーネント[/ja]\n * @example\n * <ons-speed-dial position=\"left bottom\">\n *   <ons-fab>\n *     <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </ons-fab>\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\n * </ons-speed-dial>\n */\n\nvar SpeedDialItemElement = function (_BaseElement) {\n  inherits(SpeedDialItemElement, _BaseElement);\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the component.[/en]\n   *   [ja]このコンポーネントの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute ripple\n   * @description\n   *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  function SpeedDialItemElement() {\n    classCallCheck(this, SpeedDialItemElement);\n\n    var _this = possibleConstructorReturn(this, (SpeedDialItemElement.__proto__ || Object.getPrototypeOf(SpeedDialItemElement)).call(this));\n\n    _this._compile();\n    _this._boundOnClick = _this._onClick.bind(_this);\n    return _this;\n  }\n\n  createClass(SpeedDialItemElement, [{\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$14, scheme$26);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$26);\n          util$1.addModifier(this, 'mini');\n          break;\n        case 'ripple':\n          this._updateRipple();\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this.addEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: '_updateRipple',\n    value: function _updateRipple() {\n      util$1.updateRipple(this);\n    }\n  }, {\n    key: '_onClick',\n    value: function _onClick(e) {\n      e.stopPropagation();\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      var _this2 = this;\n\n      autoStyle.prepare(this);\n\n      defaultClassName$14.split(/\\s+/).forEach(function (token) {\n        return _this2.classList.add(token);\n      });\n\n      util$1.addModifier(this, 'mini');\n      this._updateRipple();\n\n      ModifierUtil.initModifier(this, scheme$26);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'ripple', 'class'];\n    }\n  }]);\n  return SpeedDialItemElement;\n}(BaseElement);\n\nonsElements.SpeedDialItem = SpeedDialItemElement;\ncustomElements.define('ons-speed-dial-item', SpeedDialItemElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nvar defaultClassName$15 = 'speed-dial';\nvar scheme$27 = {\n  '': 'speed-dial--*'\n};\n\n/**\n * @element ons-speed-dial\n * @category control\n * @description\n *   [en]\n *     Element that displays a Material Design Speed Dialog component. It is useful when there are more than one primary action that can be performed in a page.\n *\n *     The Speed dial looks like a `<ons-fab>` element but will expand a menu when tapped.\n *   [/en]\n *   [ja][/ja]\n * @codepen dYQYLg\n * @tutorial vanilla/Reference/speed-dial\n * @seealso ons-speed-dial-item\n *   [en]The `<ons-speed-dial-item>` represents a menu item.[/en]\n *   [ja]ons-speed-dial-itemコンポーネント[/ja]\n * @seealso ons-fab\n *   [en]ons-fab component[/en]\n *   [ja]ons-fabコンポーネント[/ja]\n * @example\n * <ons-speed-dial position=\"left bottom\">\n *   <ons-fab>\n *     <ons-icon icon=\"fa-twitter\"></ons-icon>\n *   </ons-fab>\n *   <ons-speed-dial-item>A</ons-speed-dial-item>\n *   <ons-speed-dial-item>B</ons-speed-dial-item>\n *   <ons-speed-dial-item>C</ons-speed-dial-item>\n * </ons-speed-dial>\n */\n\nvar SpeedDialElement = function (_BaseElement) {\n  inherits(SpeedDialElement, _BaseElement);\n\n  /**\n   * @event open\n   * @description\n   *   [en]Fired when the menu items are shown.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @event close\n   * @description\n   *   [en]Fired when the menu items are hidden.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the component.[/en]\n   *   [ja]このコンポーネントの表現を指定します。[/ja]\n   */\n\n  /**\n   * @attribute ripple\n   * @description\n   *  [en]If this attribute is defined, the button will have a ripple effect when tapped.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute position\n   * @type {String}\n   * @description\n   *   [en]\n   *     Specify the vertical and horizontal position of the component.\n   *     I.e. to display it in the top right corner specify \"right top\".\n   *     Choose from \"right\", \"left\", \"top\" and \"bottom\".\n   *   [/en]\n   *   [ja]\n   *     この要素を表示する左右と上下の位置を指定します。\n   *     例えば、右上に表示する場合には\"right top\"を指定します。\n   *     左右と上下の位置の指定には、rightとleft、topとbottomがそれぞれ指定できます。\n   *   [/ja]\n   */\n\n  /**\n   * @attribute direction\n   * @type {String}\n   * @description\n   *   [en]Specify the direction the items are displayed. Possible values are \"up\", \"down\", \"left\" and \"right\".[/en]\n   *   [ja]\n   *     要素が表示する方向を指定します。up, down, left, rightが指定できます。\n   *   [/ja]\n   */\n\n  /**\n   * @attribute disabled\n   * @description\n   *   [en]Specify if button should be disabled.[/en]\n   *   [ja]無効化する場合に指定します。[/ja]\n   */\n\n  function SpeedDialElement() {\n    classCallCheck(this, SpeedDialElement);\n\n    var _this = possibleConstructorReturn(this, (SpeedDialElement.__proto__ || Object.getPrototypeOf(SpeedDialElement)).call(this));\n\n    contentReady(_this, function () {\n      _this._compile();\n    });\n\n    _this._itemShown = false;\n    _this._boundOnClick = _this._onClick.bind(_this);\n    return _this;\n  }\n\n  createClass(SpeedDialElement, [{\n    key: '_compile',\n    value: function _compile() {\n      this.classList.add(defaultClassName$15);\n      autoStyle.prepare(this);\n      this._updateRipple();\n      ModifierUtil.initModifier(this, scheme$27);\n\n      if (this.hasAttribute('direction')) {\n        this._updateDirection(this.getAttribute('direction'));\n      } else {\n        this._updateDirection('up');\n      }\n\n      this._updatePosition();\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this2 = this;\n\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$15, scheme$27);\n          break;\n        case 'modifier':\n          ModifierUtil.onModifierChanged(last, current, this, scheme$27);\n          break;\n        case 'ripple':\n          contentReady(this, function () {\n            return _this2._updateRipple();\n          });\n          break;\n        case 'direction':\n          contentReady(this, function () {\n            return _this2._updateDirection(current);\n          });\n          break;\n        case 'position':\n          contentReady(this, function () {\n            return _this2._updatePosition();\n          });\n          break;\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this.addEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this._boundOnClick, false);\n    }\n  }, {\n    key: '_onClick',\n    value: function _onClick(e) {\n      if (this.onClick) {\n        this.onClick.apply(this);\n        return Promise.resolve();\n      } else if (!this.disabled && this.visible) {\n        return this.toggleItems();\n      }\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      if (!this.inline) {\n        return this.show();\n      }\n      return Promise.resolve();\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        if (!_this3.inline) {\n          setImmediate(function () {\n            return _this3.hide().then(resolve);\n          });\n        } else {\n          resolve();\n        }\n      });\n    }\n  }, {\n    key: '_updateRipple',\n    value: function _updateRipple() {\n      if (this._fab) {\n        this.hasAttribute('ripple') ? this._fab.setAttribute('ripple', '') : this._fab.removeAttribute('ripple');\n      }\n    }\n  }, {\n    key: '_updateDirection',\n    value: function _updateDirection(direction) {\n      var children = this.items;\n      for (var i = 0; i < children.length; i++) {\n        styler(children[i], {\n          transitionDelay: 25 * i + 'ms',\n          bottom: 'auto',\n          right: 'auto',\n          top: 'auto',\n          left: 'auto'\n        });\n      }\n      switch (direction) {\n        case 'up':\n          for (var _i = 0; _i < children.length; _i++) {\n            children[_i].style.bottom = 72 + 56 * _i + 'px';\n            children[_i].style.right = '8px';\n          }\n          break;\n        case 'down':\n          for (var _i2 = 0; _i2 < children.length; _i2++) {\n            children[_i2].style.top = 72 + 56 * _i2 + 'px';\n            children[_i2].style.left = '8px';\n          }\n          break;\n        case 'left':\n          for (var _i3 = 0; _i3 < children.length; _i3++) {\n            children[_i3].style.top = '8px';\n            children[_i3].style.right = 72 + 56 * _i3 + 'px';\n          }\n          break;\n        case 'right':\n          for (var _i4 = 0; _i4 < children.length; _i4++) {\n            children[_i4].style.top = '8px';\n            children[_i4].style.left = 72 + 56 * _i4 + 'px';\n          }\n          break;\n        default:\n          util$1.throw('Argument must be one of up, down, left or right.');\n      }\n    }\n  }, {\n    key: '_updatePosition',\n    value: function _updatePosition() {\n      var position = this.getAttribute('position');\n      this.classList.remove('fab--top__left', 'fab--bottom__right', 'fab--bottom__left', 'fab--top__right', 'fab--top__center', 'fab--bottom__center');\n      switch (position) {\n        case 'top right':\n        case 'right top':\n          this.classList.add('fab--top__right');\n          break;\n        case 'top left':\n        case 'left top':\n          this.classList.add('fab--top__left');\n          break;\n        case 'bottom right':\n        case 'right bottom':\n          this.classList.add('fab--bottom__right');\n          break;\n        case 'bottom left':\n        case 'left bottom':\n          this.classList.add('fab--bottom__left');\n          break;\n        case 'center top':\n        case 'top center':\n          this.classList.add('fab--top__center');\n          break;\n        case 'center bottom':\n        case 'bottom center':\n          this.classList.add('fab--bottom__center');\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: '_getTranslate',\n    value: function _getTranslate() {\n      var isBottom = (this.getAttribute('position') || '').indexOf('bottom') >= 0;\n      var translate = isBottom ? 'translate3d(0px, -' + (util$1.globals.fabOffset || 0) + 'px, 0px) ' : '';\n      return translate;\n    }\n\n    /**\n     * @method show\n     * @signature show()\n     * @description\n     *   [en]Show the speed dial.[/en]\n     *   [ja]Speed dialを表示します。[/ja]\n     */\n\n  }, {\n    key: 'show',\n    value: function show() {\n      this._fab.show();\n      styler(this, { transform: this._getTranslate });\n      return Promise.resolve();\n    }\n\n    /**\n     * @method hide\n     * @signature hide()\n     * @description\n     *   [en]Hide the speed dial.[/en]\n     *   [ja]Speed dialを非表示にします。[/ja]\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide() {\n      var _this4 = this;\n\n      return this.hideItems().then(function () {\n        return _this4._fab.hide();\n      });\n    }\n\n    /**\n     * @method showItems\n     * @signature showItems()\n     * @description\n     *   [en]Show the speed dial items.[/en]\n     *   [ja]Speed dialの子要素を表示します。[/ja]\n     */\n\n  }, {\n    key: 'showItems',\n    value: function showItems() {\n      if (this.hasAttribute('direction')) {\n        this._updateDirection(this.getAttribute('direction'));\n      } else {\n        this._updateDirection('up');\n      }\n\n      var totalDelay = 0;\n      if (!this._itemShown) {\n        var children = this.items;\n        for (var i = 0; i < children.length; i++) {\n          var delay = 25 * i;\n          totalDelay += delay;\n          styler(children[i], {\n            transform: 'scale(1)',\n            transitionDelay: delay + 'ms'\n          });\n        }\n        totalDelay += 50;\n\n        this._itemShown = true;\n        util$1.triggerElementEvent(this, 'open');\n      }\n\n      var deferred = util$1.defer();\n      setTimeout(deferred.resolve, totalDelay);\n      return deferred.promise;\n    }\n\n    /**\n     * @method hideItems\n     * @signature hideItems()\n     * @description\n     *   [en]Hide the speed dial items.[/en]\n     *   [ja]Speed dialの子要素を非表示にします。[/ja]\n     */\n\n  }, {\n    key: 'hideItems',\n    value: function hideItems() {\n      var totalDelay = 0;\n      if (this._itemShown) {\n        var children = this.items;\n        for (var i = 0; i < children.length; i++) {\n          var delay = 25 * (children.length - i);\n          totalDelay += delay;\n          styler(children[i], {\n            transform: 'scale(0)',\n            transitionDelay: delay + 'ms'\n          });\n        }\n        totalDelay += 50;\n\n        this._itemShown = false;\n        util$1.triggerElementEvent(this, 'close');\n      }\n\n      var deferred = util$1.defer();\n      setTimeout(deferred.resolve, totalDelay);\n      return deferred.promise;\n    }\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'isOpen',\n\n\n    /**\n     * @method isOpen\n     * @signature isOpen()\n     * @description\n     *   [en]Returns whether the menu is open or not.[/en]\n     *   [ja][/ja]\n     */\n    value: function isOpen() {\n      return this._itemShown;\n    }\n\n    /**\n     * @method toggle\n     * @signature toggle()\n     * @description\n     *   [en]Toggle visibility.[/en]\n     *   [ja]Speed dialの表示非表示を切り替えます。[/ja]\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      return this.visible ? this.hide() : this.show();\n    }\n\n    /**\n     * @method toggleItems\n     * @signature toggleItems()\n     * @description\n     *   [en]Toggle item visibility.[/en]\n     *   [ja]Speed dialの子要素の表示非表示を切り替えます。[/ja]\n     */\n\n  }, {\n    key: 'toggleItems',\n    value: function toggleItems() {\n      return this.isOpen() ? this.hideItems() : this.showItems();\n    }\n  }, {\n    key: 'items',\n    get: function get$$1() {\n      return util$1.arrayFrom(this.querySelectorAll('ons-speed-dial-item'));\n    }\n  }, {\n    key: '_fab',\n    get: function get$$1() {\n      return util$1.findChild(this, 'ons-fab');\n    }\n  }, {\n    key: 'disabled',\n    set: function set$$1(value) {\n      if (value) {\n        this.hideItems();\n      }\n      util$1.arrayFrom(this.children).forEach(function (e) {\n        util$1.match(e, '.fab') && util$1.toggleAttribute(e, 'disabled', value);\n      });\n\n      return util$1.toggleAttribute(this, 'disabled', value);\n    },\n    get: function get$$1() {\n      return this.hasAttribute('disabled');\n    }\n\n    /**\n     * @property inline\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is inline or not.[/en]\n     *   [ja]インライン要素の場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'inline',\n    get: function get$$1() {\n      return this.hasAttribute('inline');\n    }\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'visible',\n    get: function get$$1() {\n      return this._fab.visible && this.style.display !== 'none';\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['class', 'modifier', 'ripple', 'direction', 'position'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['open', 'close'];\n    }\n  }]);\n  return SpeedDialElement;\n}(BaseElement);\n\nonsElements.SpeedDial = SpeedDialElement;\ncustomElements.define('ons-speed-dial', SpeedDialElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar rewritables$1 = {\n  /**\n   * @param {Element} element\n   * @param {Function} callback\n   */\n  ready: function ready(element, callback) {\n    setImmediate(callback);\n  }\n};\n\n/**\n * @element ons-splitter-content\n * @category menu\n * @description\n *  [en]\n *    The `<ons-splitter-content>` element is used as a child element of `<ons-splitter>`.\n *\n *    It contains the main content of the page while `<ons-splitter-side>` contains the list.\n *  [/en]\n *  [ja]ons-splitter-content要素は、ons-splitter要素の子要素として利用します。[/ja]\n * @codepen rOQOML\n * @tutorial vanilla/Reference/splitter\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-splitter\n *  [en]The `<ons-splitter>` component is the parent element.[/en]\n *  [ja]ons-splitterコンポーネント[/ja]\n * @seealso ons-splitter-side\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\n *  [ja]ons-splitter-sideコンポーネント[/ja]\n * @example\n * <ons-splitter>\n *   <ons-splitter-content>\n *     ...\n *   </ons-splitter-content>\n *\n *   <ons-splitter-side side=\"left\" width=\"80%\" collapse>\n *     ...\n *   </ons-splitter-side>\n * </ons-splitter>\n */\n\nvar SplitterContentElement = function (_BaseElement) {\n  inherits(SplitterContentElement, _BaseElement);\n\n  /**\n   * @attribute page\n   * @type {String}\n   * @description\n   *   [en]\n   *     The url of the content page. If this attribute is used the content will be loaded from a `<template>` tag or a remote file.\n   *\n   *     It is also possible to put `<ons-page>` element as a child of the element.\n   *   [/en]\n   *   [ja]ons-splitter-content要素に表示するページのURLを指定します。[/ja]\n   */\n\n  function SplitterContentElement() {\n    classCallCheck(this, SplitterContentElement);\n\n    var _this = possibleConstructorReturn(this, (SplitterContentElement.__proto__ || Object.getPrototypeOf(SplitterContentElement)).call(this));\n\n    _this._page = null;\n    _this._pageLoader = defaultPageLoader;\n\n    contentReady(_this, function () {\n      rewritables$1.ready(_this, function () {\n        var page = _this._getPageTarget();\n\n        if (page) {\n          _this.load(page);\n        }\n      });\n    });\n    return _this;\n  }\n\n  createClass(SplitterContentElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      if (!util$1.match(this.parentNode, 'ons-splitter')) {\n        util$1.throw('\"ons-splitter-content\" must have \"ons-splitter\" as parent');\n      }\n    }\n  }, {\n    key: '_getPageTarget',\n    value: function _getPageTarget() {\n      return this._page || this.getAttribute('page');\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {}\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {}\n\n    /**\n     * @property page\n     * @type {HTMLElement}\n     * @description\n     *   [en]The page to load in the splitter content.[/en]\n     *   [ja]この要素内に表示するページを指定します。[/ja]\n     */\n\n  }, {\n    key: 'load',\n\n\n    /**\n     * @method load\n     * @signature load(page, [options])\n     * @param {String} page, [options]\n     *   [en]Page URL. Can be either an HTML document or an `<template>` id.[/en]\n     *   [ja]pageのURLか、`<template>`で宣言したテンプレートのid属性の値を指定します。[/ja]\n     * @param {Object} [options]\n     * @param {Function} [options.callback]\n     * @description\n     *   [en]Show the page specified in `page` in the content.[/en]\n     *   [ja]指定したURLをメインページを読み込みます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the new `<ons-page>` element[/en]\n     *   [ja]`<ons-page>`要素を解決するPromiseオブジェクトを返します。[/ja]\n     */\n    value: function load(page) {\n      var _this2 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._page = page;\n      var callback = options.callback || function () {};\n\n      return new Promise(function (resolve) {\n        var oldContent = _this2._content || null;\n\n        _this2._pageLoader.load({ page: page, parent: _this2 }, function (pageElement) {\n          if (oldContent) {\n            _this2._pageLoader.unload(oldContent);\n            oldContent = null;\n          }\n\n          setImmediate(function () {\n            return _this2._show();\n          });\n\n          callback(pageElement);\n          resolve(pageElement);\n        });\n      });\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      if (this._content) {\n        this._content._show();\n      }\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      if (this._content) {\n        this._content._hide();\n      }\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      if (this._content) {\n        this._pageLoader.unload(this._content);\n      }\n      this.remove();\n    }\n  }, {\n    key: 'page',\n    get: function get$$1() {\n      return this._page;\n    }\n\n    /**\n     * @param {*} page\n     */\n    ,\n    set: function set$$1(page) {\n      this._page = page;\n    }\n  }, {\n    key: '_content',\n    get: function get$$1() {\n      return this.children[0];\n    }\n\n    /**\n     * @property pageLoader\n     * @type {Function}\n     * @description\n     *   [en]Page element loaded in the splitter content.[/en]\n     *   [ja]この要素内に表示するページを指定します。[/ja]\n     */\n\n  }, {\n    key: 'pageLoader',\n    get: function get$$1() {\n      return this._pageLoader;\n    },\n    set: function set$$1(loader) {\n      if (!(loader instanceof PageLoader)) {\n        util$1.throwPageLoader();\n      }\n      this._pageLoader = loader;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [];\n    }\n  }, {\n    key: 'rewritables',\n    get: function get$$1() {\n      return rewritables$1;\n    }\n  }]);\n  return SplitterContentElement;\n}(BaseElement);\n\nonsElements.SplitterContent = SplitterContentElement;\ncustomElements.define('ons-splitter-content', SplitterContentElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar SplitterMaskElement = function (_BaseElement) {\n  inherits(SplitterMaskElement, _BaseElement);\n\n  function SplitterMaskElement() {\n    classCallCheck(this, SplitterMaskElement);\n\n    var _this = possibleConstructorReturn(this, (SplitterMaskElement.__proto__ || Object.getPrototypeOf(SplitterMaskElement)).call(this));\n\n    _this._boundOnClick = _this._onClick.bind(_this);\n    contentReady(_this, function () {\n      if (_this.parentNode._sides.every(function (side) {\n        return side.mode === 'split';\n      })) {\n        _this.setAttribute('style', 'display: none !important');\n      }\n    });\n    return _this;\n  }\n\n  createClass(SplitterMaskElement, [{\n    key: '_onClick',\n    value: function _onClick(event) {\n      if (this.onClick instanceof Function) {\n        this.onClick();\n      } else if (util$1.match(this.parentNode, 'ons-splitter')) {\n        this.parentNode._sides.forEach(function (side) {\n          return side.close('left').catch(function () {});\n        });\n      }\n      event.stopPropagation();\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {}\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this.addEventListener('click', this._boundOnClick);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this._boundOnClick);\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [];\n    }\n  }]);\n  return SplitterMaskElement;\n}(BaseElement);\n\nonsElements.SplitterMask = SplitterMaskElement;\ncustomElements.define('ons-splitter-mask', SplitterMaskElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar SplitterAnimator$1 = function (_BaseAnimator) {\n  inherits(SplitterAnimator, _BaseAnimator);\n\n  function SplitterAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'cubic-bezier(.1, .7, .1, 1)' : _ref$timing,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay;\n\n    classCallCheck(this, SplitterAnimator);\n    return possibleConstructorReturn(this, (SplitterAnimator.__proto__ || Object.getPrototypeOf(SplitterAnimator)).call(this, { timing: timing, duration: duration, delay: delay }));\n  }\n\n  createClass(SplitterAnimator, [{\n    key: 'updateOptions',\n    value: function updateOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      util$1.extend(this, {\n        timing: this.timing, duration: this.duration, delay: this.delay\n      }, options);\n    }\n\n    /**\n     * @param {Element} sideElement\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate(sideElement) {\n      var _this2 = this;\n\n      var splitter = sideElement.parentNode;\n\n      contentReady(splitter, function () {\n        _this2._side = sideElement;\n        _this2._oppositeSide = splitter.right !== sideElement && splitter.right || splitter.left !== sideElement && splitter.left;\n        _this2._content = splitter.content;\n        _this2._mask = splitter.mask;\n      });\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this.clearTransition();\n      this._mask && this.clearMask();\n      this._content = this._side = this._oppositeSide = this._mask = null;\n    }\n  }, {\n    key: 'clearTransition',\n    value: function clearTransition() {\n      var _this3 = this;\n\n      'side mask content'.split(/\\s+/).forEach(function (e) {\n        return _this3['_' + e] && styler.clear(_this3['_' + e], 'transform transition');\n      });\n    }\n  }, {\n    key: 'clearMask',\n    value: function clearMask() {\n      // Check if the other side needs the mask before clearing\n      if (!this._oppositeSide || this._oppositeSide.mode === 'split' || !this._oppositeSide.isOpen) {\n        this._mask.style.opacity = '';\n        this._mask.style.display = 'none';\n      }\n    }\n\n    /**\n     * @param {Number} distance\n     */\n\n  }, {\n    key: 'translate',\n    value: function translate(distance) {}\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'open',\n    value: function open(done) {\n      done();\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'close',\n    value: function close(done) {\n      done();\n    }\n  }, {\n    key: 'minus',\n    get: function get$$1() {\n      return this._side.side === 'right' ? '-' : '';\n    }\n  }]);\n  return SplitterAnimator;\n}(BaseAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar OverlaySplitterAnimator = function (_SplitterAnimator) {\n  inherits(OverlaySplitterAnimator, _SplitterAnimator);\n\n  function OverlaySplitterAnimator() {\n    classCallCheck(this, OverlaySplitterAnimator);\n    return possibleConstructorReturn(this, (OverlaySplitterAnimator.__proto__ || Object.getPrototypeOf(OverlaySplitterAnimator)).apply(this, arguments));\n  }\n\n  createClass(OverlaySplitterAnimator, [{\n    key: 'translate',\n    value: function translate(distance) {\n      this._mask.style.display = 'block'; // Avoid content clicks\n\n      Animit(this._side).queue({\n        transform: 'translate3d(' + (this.minus + distance) + 'px, 0, 0)'\n      }).play();\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'open',\n    value: function open(done) {\n      Animit.runAll(Animit(this._side).wait(this.delay).queue({\n        transform: 'translate3d(' + this.minus + '100%, 0, 0)'\n      }, this.def).queue(function (callback) {\n        callback();\n        done && done();\n      }), Animit(this._mask).wait(this.delay).queue({\n        display: 'block'\n      }).queue({\n        opacity: '1'\n      }, {\n        duration: this.duration,\n        timing: 'linear'\n      }));\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'close',\n    value: function close(done) {\n\n      Animit.runAll(Animit(this._side).wait(this.delay).queue({\n        transform: 'translate3d(0, 0, 0)'\n      }, this.def).queue(function (callback) {\n        done && done();\n        callback();\n      }), Animit(this._mask).wait(this.delay).queue({\n        opacity: '0'\n      }, {\n        duration: this.duration,\n        timing: 'linear'\n      }).queue({\n        display: 'none'\n      }));\n    }\n  }]);\n  return OverlaySplitterAnimator;\n}(SplitterAnimator$1);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar PushSplitterAnimator = function (_SplitterAnimator) {\n  inherits(PushSplitterAnimator, _SplitterAnimator);\n\n  function PushSplitterAnimator() {\n    classCallCheck(this, PushSplitterAnimator);\n    return possibleConstructorReturn(this, (PushSplitterAnimator.__proto__ || Object.getPrototypeOf(PushSplitterAnimator)).apply(this, arguments));\n  }\n\n  createClass(PushSplitterAnimator, [{\n    key: '_getSlidingElements',\n    value: function _getSlidingElements() {\n      var slidingElements = [this._side, this._content];\n      if (this._oppositeSide && this._oppositeSide.mode === 'split') {\n        slidingElements.push(this._oppositeSide);\n      }\n\n      return slidingElements;\n    }\n  }, {\n    key: 'translate',\n    value: function translate(distance) {\n      if (!this._slidingElements) {\n        this._slidingElements = this._getSlidingElements();\n      }\n\n      this._mask.style.display = 'block'; // Avoid content clicks\n\n      Animit(this._slidingElements).queue({\n        transform: 'translate3d(' + (this.minus + distance) + 'px, 0, 0)'\n      }).play();\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'open',\n    value: function open(done) {\n      var _this2 = this;\n\n      var max = this._side.offsetWidth;\n      this._slidingElements = this._getSlidingElements();\n\n      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({\n        transform: 'translate3d(' + (this.minus + max) + 'px, 0, 0)'\n      }, this.def).queue(function (callback) {\n        _this2._slidingElements = null;\n        callback();\n        done && done();\n      }), Animit(this._mask).wait(this.delay).queue({\n        display: 'block'\n      }));\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'close',\n    value: function close(done) {\n      var _this3 = this;\n\n      this._slidingElements = this._getSlidingElements();\n\n      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({\n        transform: 'translate3d(0, 0, 0)'\n      }, this.def).queue(function (callback) {\n        _this3._slidingElements = null;\n        get(PushSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(PushSplitterAnimator.prototype), 'clearTransition', _this3).call(_this3);\n        done && done();\n        callback();\n      }), Animit(this._mask).wait(this.delay).queue({\n        display: 'none'\n      }));\n    }\n  }]);\n  return PushSplitterAnimator;\n}(SplitterAnimator$1);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar RevealSplitterAnimator = function (_SplitterAnimator) {\n  inherits(RevealSplitterAnimator, _SplitterAnimator);\n\n  function RevealSplitterAnimator() {\n    classCallCheck(this, RevealSplitterAnimator);\n    return possibleConstructorReturn(this, (RevealSplitterAnimator.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator)).apply(this, arguments));\n  }\n\n  createClass(RevealSplitterAnimator, [{\n    key: '_getSlidingElements',\n    value: function _getSlidingElements() {\n      var slidingElements = [this._content, this._mask];\n      if (this._oppositeSide && this._oppositeSide.mode === 'split') {\n        slidingElements.push(this._oppositeSide);\n      }\n\n      return slidingElements;\n    }\n  }, {\n    key: 'activate',\n    value: function activate(sideElement) {\n      get(RevealSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator.prototype), 'activate', this).call(this, sideElement);\n      if (sideElement.mode === 'collapse') {\n        this._setStyles(sideElement);\n      }\n    }\n  }, {\n    key: 'deactivate',\n    value: function deactivate() {\n      this._side && this._unsetStyles(this._side);\n      get(RevealSplitterAnimator.prototype.__proto__ || Object.getPrototypeOf(RevealSplitterAnimator.prototype), 'deactivate', this).call(this);\n    }\n  }, {\n    key: '_setStyles',\n    value: function _setStyles(sideElement) {\n      styler(sideElement, {\n        left: sideElement.side === 'right' ? 'auto' : 0,\n        right: sideElement.side === 'right' ? 0 : 'auto',\n        zIndex: 0,\n        backgroundColor: 'black',\n        transform: this._generateBehindPageStyle(0).container.transform,\n        display: 'none'\n      });\n\n      var splitter = sideElement.parentElement;\n      contentReady(splitter, function () {\n        return splitter.content && styler(splitter.content, { boxShadow: '0 0 12px 0 rgba(0, 0, 0, 0.2)' });\n      });\n    }\n  }, {\n    key: '_unsetStyles',\n    value: function _unsetStyles(sideElement) {\n      styler.clear(sideElement, 'left right zIndex backgroundColor display');\n      if (sideElement._content) {\n        sideElement._content.style.opacity = '';\n      }\n\n      // Check if the other side needs the common styles\n      if (!this._oppositeSide || this._oppositeSide.mode === 'split') {\n        sideElement.parentElement.content && styler.clear(sideElement.parentElement.content, 'boxShadow');\n      }\n    }\n  }, {\n    key: '_generateBehindPageStyle',\n    value: function _generateBehindPageStyle(distance) {\n      var max = this.maxWidth;\n\n      var behindDistance = (distance - max) / max * 10;\n      behindDistance = isNaN(behindDistance) ? 0 : Math.max(Math.min(behindDistance, 0), -10);\n\n      var behindTransform = 'translate3d(' + (this.minus ? -1 : 1) * behindDistance + '%, 0, 0)';\n      var opacity = 1 + behindDistance / 100;\n\n      return {\n        content: {\n          opacity: opacity\n        },\n        container: {\n          transform: behindTransform\n        }\n      };\n    }\n  }, {\n    key: 'translate',\n    value: function translate(distance) {\n      this._side.style.display = '';\n      this._side.style.zIndex = 1;\n      this.maxWidth = this.maxWidth || this._getMaxWidth();\n      var menuStyle = this._generateBehindPageStyle(Math.min(distance, this.maxWidth));\n\n      if (!this._slidingElements) {\n        this._slidingElements = this._getSlidingElements();\n      }\n\n      this._mask.style.display = 'block'; // Avoid content clicks\n\n      Animit.runAll(Animit(this._slidingElements).queue({\n        transform: 'translate3d(' + (this.minus + distance) + 'px, 0, 0)'\n      }), Animit(this._side._content).queue(menuStyle.content), Animit(this._side).queue(menuStyle.container));\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'open',\n    value: function open(done) {\n      var _this2 = this;\n\n      this._side.style.display = '';\n      this._side.style.zIndex = 1;\n      this.maxWidth = this.maxWidth || this._getMaxWidth();\n      var menuStyle = this._generateBehindPageStyle(this.maxWidth);\n      this._slidingElements = this._getSlidingElements();\n\n      setTimeout(function () {\n        // Fix: Time to update previous translate3d after changing style.display\n        Animit.runAll(Animit(_this2._slidingElements).wait(_this2.delay).queue({\n          transform: 'translate3d(' + (_this2.minus + _this2.maxWidth) + 'px, 0, 0)'\n        }, _this2.def), Animit(_this2._mask).wait(_this2.delay).queue({\n          display: 'block'\n        }), Animit(_this2._side._content).wait(_this2.delay).queue(menuStyle.content, _this2.def), Animit(_this2._side).wait(_this2.delay).queue(menuStyle.container, _this2.def).queue(function (callback) {\n          _this2._slidingElements = null;\n          callback();\n          done && done();\n        }));\n      }, 1000 / 60);\n    }\n\n    /**\n     * @param {Function} done\n     */\n\n  }, {\n    key: 'close',\n    value: function close(done) {\n      var _this3 = this;\n\n      var menuStyle = this._generateBehindPageStyle(0);\n      this._slidingElements = this._getSlidingElements();\n\n      Animit.runAll(Animit(this._slidingElements).wait(this.delay).queue({\n        transform: 'translate3d(0, 0, 0)'\n      }, this.def), Animit(this._mask).wait(this.delay).queue({\n        display: 'none'\n      }), Animit(this._side._content).wait(this.delay).queue(menuStyle.content, this.def), Animit(this._side).wait(this.delay).queue(menuStyle.container, this.def).queue(function (callback) {\n        _this3._slidingElements = null;\n        _this3._side.style.zIndex = 0;\n        _this3._side.style.display = 'none';\n        _this3._side._content.style.opacity = '';\n        done && done();\n        callback();\n      }));\n    }\n  }, {\n    key: '_getMaxWidth',\n    value: function _getMaxWidth() {\n      return this._side.offsetWidth;\n    }\n  }]);\n  return RevealSplitterAnimator;\n}(SplitterAnimator$1);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar _animatorDict$7 = {\n  default: OverlaySplitterAnimator,\n  overlay: OverlaySplitterAnimator,\n  push: PushSplitterAnimator,\n  reveal: RevealSplitterAnimator\n};\n\n/**\n * @element ons-splitter\n * @category menu\n * @description\n *  [en]\n *    A component that enables responsive layout by implementing both a two-column layout and a sliding menu layout.\n *\n *    It can be configured to automatically expand into a column layout on large screens and collapse the menu on smaller screens. When the menu is collapsed the user can open it by swiping.\n *  [/en]\n *  [ja][/ja]\n * @codepen rOQOML\n * @tutorial vanilla/Reference/splitter\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-splitter-content\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\n *  [ja]ons-splitter-contentコンポーネント[/ja]\n * @seealso ons-splitter-side\n *  [en]The `<ons-splitter-side>` component contains the menu.[/en]\n *  [ja]ons-splitter-sideコンポーネント[/ja]\n * @example\n * <ons-splitter id=\"splitter\">\n *   <ons-splitter-content>\n *     ...\n *   </ons-splitter-content>\n *\n *   <ons-splitter-side side=\"left\" width=\"80%\" collapse swipeable>\n *     ...\n *   </ons-splitter-side>\n * </ons-splitter>\n *\n * <script>\n *   var splitter = document.getElementById('splitter');\n *   splitter.left.open();\n * </script>\n */\n\nvar SplitterElement = function (_BaseElement) {\n  inherits(SplitterElement, _BaseElement);\n  createClass(SplitterElement, [{\n    key: '_getSide',\n    value: function _getSide(side) {\n      var element = util$1.findChild(this, function (e) {\n        return util$1.match(e, 'ons-splitter-side') && e.getAttribute('side') === side;\n      });\n      return element;\n    }\n\n    /**\n     * @property left\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]Left `<ons-splitter-side>` element.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_onDeviceBackButton',\n    value: function _onDeviceBackButton(event) {\n      this._sides.some(function (s) {\n        return s.isOpen ? s.close() : false;\n      }) || event.callParentHandler();\n    }\n  }, {\n    key: '_onModeChange',\n    value: function _onModeChange(e) {\n      var _this2 = this;\n\n      if (e.target.parentNode) {\n        contentReady(this, function () {\n          _this2._layout();\n        });\n      }\n    }\n  }, {\n    key: '_layout',\n    value: function _layout() {\n      var _this3 = this;\n\n      this._sides.forEach(function (side) {\n        if (_this3.content) {\n          _this3.content.style[side.side] = side.mode === 'split' ? side.style.width : 0;\n        }\n      });\n    }\n  }, {\n    key: 'left',\n    get: function get$$1() {\n      return this._getSide('left');\n    }\n    /**\n     * @property right\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]Right `<ons-splitter-side>` element.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'right',\n    get: function get$$1() {\n      return this._getSide('right');\n    }\n\n    /**\n     * @property side\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]First `<ons-splitter-side>` element regardless the actual side.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'side',\n    get: function get$$1() {\n      return util$1.findChild(this, 'ons-splitter-side');\n    }\n  }, {\n    key: '_sides',\n    get: function get$$1() {\n      return [this.left, this.right].filter(function (e) {\n        return e;\n      });\n    }\n    /**\n     * @property content\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]The `<ons-splitter-content>` element.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'content',\n    get: function get$$1() {\n      return util$1.findChild(this, 'ons-splitter-content');\n    }\n  }, {\n    key: 'topPage',\n    get: function get$$1() {\n      return this.content._content;\n    }\n  }, {\n    key: 'mask',\n    get: function get$$1() {\n      return util$1.findChild(this, 'ons-splitter-mask');\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: 'onDeviceBackButton',\n    get: function get$$1() {\n      return this._backButtonHandler;\n    },\n    set: function set$$1(callback) {\n      if (this._backButtonHandler) {\n        this._backButtonHandler.destroy();\n      }\n\n      this._backButtonHandler = deviceBackButtonDispatcher.createHandler(this, callback);\n    }\n  }]);\n\n  function SplitterElement() {\n    classCallCheck(this, SplitterElement);\n\n    var _this = possibleConstructorReturn(this, (SplitterElement.__proto__ || Object.getPrototypeOf(SplitterElement)).call(this));\n\n    _this._onModeChange = _this._onModeChange.bind(_this);\n\n    contentReady(_this, function () {\n      !_this.mask && _this.appendChild(document.createElement('ons-splitter-mask'));\n      _this._layout();\n    });\n    return _this;\n  }\n\n  createClass(SplitterElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      this.onDeviceBackButton = this._onDeviceBackButton.bind(this);\n      this.addEventListener('modechange', this._onModeChange, false);\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._backButtonHandler.destroy();\n      this._backButtonHandler = null;\n      this.removeEventListener('modechange', this._onModeChange, false);\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {}\n  }, {\n    key: '_show',\n    value: function _show() {\n      util$1.propagateAction(this, '_show');\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      util$1.propagateAction(this, '_hide');\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      util$1.propagateAction(this, '_destroy');\n      this.remove();\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator instanceof SplitterAnimator)) {\n        util$1.throwAnimator('Splitter');\n      }\n      _animatorDict$7[name] = Animator;\n    }\n  }, {\n    key: 'SplitterAnimator',\n    get: function get$$1() {\n      return SplitterAnimator;\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$7;\n    }\n  }]);\n  return SplitterElement;\n}(BaseElement);\n\nonsElements.Splitter = SplitterElement;\ncustomElements.define('ons-splitter', SplitterElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar SPLIT_MODE = 'split';\nvar COLLAPSE_MODE = 'collapse';\nvar CLOSED_STATE = 'closed';\nvar OPEN_STATE = 'open';\nvar CHANGING_STATE = 'changing';\n\nvar rewritables$2 = {\n  /**\n   * @param {Element} splitterSideElement\n   * @param {Function} callback\n   */\n  ready: function ready(splitterSideElement, callback) {\n    setImmediate(callback);\n  }\n};\n\nvar CollapseDetection = function () {\n  function CollapseDetection(element, target) {\n    classCallCheck(this, CollapseDetection);\n\n    this._element = element;\n    this._onChange = this._onChange.bind(this);\n    target && this.changeTarget(target);\n  }\n\n  createClass(CollapseDetection, [{\n    key: 'changeTarget',\n    value: function changeTarget(target) {\n      this.disable();\n      this._target = target;\n      if (target) {\n        this._orientation = ['portrait', 'landscape'].indexOf(target) !== -1;\n        this.activate();\n      }\n    }\n  }, {\n    key: '_match',\n    value: function _match(value) {\n      if (this._orientation) {\n        return this._target === (value.isPortrait ? 'portrait' : 'landscape');\n      }\n      return value.matches;\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(value) {\n      this._element._updateMode(this._match(value) ? COLLAPSE_MODE : SPLIT_MODE);\n    }\n  }, {\n    key: 'activate',\n    value: function activate() {\n      if (this._orientation) {\n        orientation.on('change', this._onChange);\n        this._onChange({ isPortrait: orientation.isPortrait() });\n      } else {\n        this._queryResult = window.matchMedia(this._target);\n        this._queryResult.addListener(this._onChange);\n        this._onChange(this._queryResult);\n      }\n    }\n  }, {\n    key: 'disable',\n    value: function disable() {\n      if (this._orientation) {\n        orientation.off('change', this._onChange);\n      } else if (this._queryResult) {\n        this._queryResult.removeListener(this._onChange);\n        this._queryResult = null;\n      }\n    }\n  }]);\n  return CollapseDetection;\n}();\n\n/**\n * @element ons-splitter-side\n * @category menu\n * @description\n *  [en]\n *    The `<ons-splitter-side>` element is used as a child element of `<ons-splitter>`.\n *\n *    It will be displayed on either the left or right side of the `<ons-splitter-content>` element.\n *\n *    It supports two modes: collapsed and split. When it's in collapsed mode it will be hidden from view and can be displayed when the user swipes the screen or taps a button. In split mode the element is always shown. It can be configured to automatically switch between the two modes depending on the screen size.\n *  [/en]\n *  [ja]ons-splitter-side要素は、ons-splitter要素の子要素として利用します。[/ja]\n * @codepen rOQOML\n * @tutorial vanilla/Reference/splitter\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-splitter\n *  [en]The `<ons-splitter>` is the parent component.[/en]\n *  [ja]ons-splitterコンポーネント[/ja]\n * @seealso ons-splitter-content\n *  [en]The `<ons-splitter-content>` component contains the main content of the page.[/en]\n *  [ja]ons-splitter-contentコンポーネント[/ja]\n * @example\n * <ons-splitter>\n *   <ons-splitter-content>\n *     ...\n *   </ons-splitter-content>\n *\n *   <ons-splitter-side side=\"left\" width=\"80%\" collapse>\n *     ...\n *   </ons-splitter-side>\n * </ons-splitter>\n */\n\nvar SplitterSideElement = function (_BaseElement) {\n  inherits(SplitterSideElement, _BaseElement);\n\n  /**\n   * @event modechange\n   * @description\n   *   [en]Fired just after the component's mode changes.[/en]\n   *   [ja]この要素のモードが変化した際に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.side\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {String} event.mode\n   *   [en]Returns the current mode. Can be either `\"collapse\"` or `\"split\"`.[/en]\n   *   [ja]現在のモードを返します。[/ja]\n   */\n\n  /**\n   * @event preopen\n   * @description\n   *   [en]Fired just before the sliding menu is opened.[/en]\n   *   [ja]スライディングメニューが開く前に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Call to cancel opening sliding menu.[/en]\n   *   [ja]スライディングメニューが開くのをキャンセルします。[/ja]\n   * @param {Object} event.side\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event postopen\n   * @description\n   *   [en]Fired just after the sliding menu is opened.[/en]\n   *   [ja]スライディングメニューが開いた後に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.side\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @event preclose\n   * @description\n   *   [en]Fired just before the sliding menu is closed.[/en]\n   *   [ja]スライディングメニューが閉じる前に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.side\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Call to cancel opening sliding-menu.[/en]\n   *   [ja]スライディングメニューが閉じるのをキャンセルします。[/ja]\n   */\n\n  /**\n   * @event postclose\n   * @description\n   *   [en]Fired just after the sliding menu is closed.[/en]\n   *   [ja]スライディングメニューが閉じた後に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクトです。[/ja]\n   * @param {Object} event.side\n   *   [en]Component object.[/en]\n   *   [ja]コンポーネントのオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default  default\n   * @description\n   *  [en]Specify the animation. Use one of `overlay`, `push`, `reveal` or  `default`.[/en]\n   *  [ja]アニメーションを指定します。\"overlay\", \"push\", \"reveal\", \"default\"のいずれかを指定できます。[/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\n   */\n\n  /**\n   * @attribute open-threshold\n   * @type {Number}\n   * @default  0.3\n   * @description\n   *  [en]Specify how much the menu needs to be swiped before opening. A value between `0` and `1`.[/en]\n   *  [ja]どのくらいスワイプすればスライディングメニューを開くかどうかの割合を指定します。0から1の間の数値を指定します。スワイプの距離がここで指定した数値掛けるこの要素の幅よりも大きければ、スワイプが終わった時にこの要素を開きます。デフォルトは0.3です。[/ja]\n   */\n\n  /**\n   * @attribute collapse\n   * @type {String}\n   * @description\n   *   [en]\n   *     Specify the collapse behavior. Valid values are `\"portrait\"`, `\"landscape\"` or a media query.\n   *     The strings `\"portrait\"` and `\"landscape\"` means the view will collapse when device is in landscape or portrait orientation.\n   *     If the value is a media query, the view will collapse when the media query resolves to `true`.\n   *     If the value is not defined, the view always be in `\"collapse\"` mode.\n   *   [/en]\n   *   [ja]\n   *     左側のページを非表示にする条件を指定します。portrait, landscape、width #pxもしくはメディアクエリの指定が可能です。\n   *     portraitもしくはlandscapeを指定すると、デバイスの画面が縦向きもしくは横向きになった時に適用されます。\n   *     メディアクエリを指定すると、指定したクエリに適合している場合に適用されます。\n   *     値に何も指定しない場合には、常にcollapseモードになります。\n   *   [/ja]\n   */\n\n  /**\n   * @attribute swipe-target-width\n   * @type {String}\n   * @description\n   *   [en]The width of swipeable area calculated from the edge (in pixels). Use this to enable swipe only when the finger touch on the screen edge.[/en]\n   *   [ja]スワイプの判定領域をピクセル単位で指定します。画面の端から指定した距離に達するとページが表示されます。[/ja]\n   */\n\n  /**\n   * @attribute width\n   * @type {String}\n   * @description\n   *   [en]Can be specified in either pixels or as a percentage, e.g. `90%` or `200px`.[/en]\n   *   [ja]この要素の横幅を指定します。pxと%での指定が可能です。eg. 90%, 200px[/ja]\n   */\n\n  /**\n   * @attribute side\n   * @type {String}\n   * @default left\n   * @description\n   *   [en]Specify which side of the screen the `<ons-splitter-side>` element is located. Possible values are `\"left\"` and `\"right\"`.[/en]\n   *   [ja]この要素が左か右かを指定します。指定できる値は\"left\"か\"right\"のみです。[/ja]\n   */\n\n  /**\n   * @attribute mode\n   * @type {String}\n   * @description\n   *   [en]Current mode. Possible values are `\"collapse\"` or `\"split\"`. This attribute is read only.[/en]\n   *   [ja]現在のモードが設定されます。\"collapse\"もしくは\"split\"が指定されます。この属性は読み込み専用です。[/ja]\n   */\n\n  /**\n   * @attribute page\n   * @initonly\n   * @type {String}\n   * @description\n   *   [en]The URL of the menu page.[/en]\n   *   [ja]ons-splitter-side要素に表示するページのURLを指定します。[/ja]\n   */\n\n  /**\n   * @attribute swipeable\n   * @type {Boolean}\n   * @description\n   *   [en]Whether to enable swipe interaction on collapse mode.[/en]\n   *   [ja]collapseモード時にスワイプ操作を有効にする場合に指定します。[/ja]\n   */\n\n  function SplitterSideElement() {\n    classCallCheck(this, SplitterSideElement);\n\n    var _this = possibleConstructorReturn(this, (SplitterSideElement.__proto__ || Object.getPrototypeOf(SplitterSideElement)).call(this));\n\n    _this._page = null;\n    _this._state = CLOSED_STATE;\n    _this._lock = new DoorLock();\n    _this._pageLoader = defaultPageLoader;\n    _this._collapseDetection = new CollapseDetection(_this);\n\n    _this._animatorFactory = new AnimatorFactory({\n      animators: SplitterElement.animators,\n      baseClass: SplitterAnimator$1,\n      baseClassName: 'SplitterAnimator',\n      defaultAnimation: _this.getAttribute('animation')\n    });\n\n    contentReady(_this, function () {\n      // These attributes are used early by the parent element\n      _this.attributeChangedCallback('width');\n      if (!_this.hasAttribute('side')) {\n        _this.setAttribute('side', 'left');\n      }\n\n      rewritables$2.ready(_this, function () {\n        var page = _this._page || _this.getAttribute('page');\n        page && _this.load(page);\n      });\n    });\n    return _this;\n  }\n\n  createClass(SplitterSideElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      if (!util$1.match(this.parentNode, 'ons-splitter')) {\n        util$1.throw('Parent must be an ons-splitter element');\n      }\n\n      this._swipe = new SwipeReveal({\n        element: this,\n        elementHandler: this.parentElement,\n        swipeMax: function swipeMax() {\n          _this2._onSwipe && _this2._onSwipe(1, _this2._animationOpt);\n          _this2.open();\n        },\n        swipeMid: function swipeMid(distance, width) {\n          _this2._onSwipe && _this2._onSwipe(distance / width);\n          _this2._animator.translate(distance);\n        },\n        swipeMin: function swipeMin() {\n          _this2._onSwipe && _this2._onSwipe(0, _this2._animationOpt);\n          _this2.close();\n        },\n        getThreshold: function getThreshold() {\n          return Math.max(0, Math.min(1, parseFloat(_this2.getAttribute('open-threshold')) || 0.3));\n        },\n        getSide: function getSide() {\n          return _this2.side;\n        },\n        isInitialState: function isInitialState() {\n          var closed = _this2._state === CLOSED_STATE;\n          _this2._state = CHANGING_STATE;\n          return closed;\n        },\n        ignoreSwipe: function ignoreSwipe(event, distance) {\n          var isOpen = _this2.isOpen;\n          var validDrag = function validDrag(d) {\n            return _this2.side === 'left' ? d === 'left' && isOpen || d === 'right' && !isOpen : d === 'left' && !isOpen || d === 'right' && isOpen;\n          };\n\n          var area = Math.max(0, parseInt(_this2.getAttribute('swipe-target-width'), 10) || 0);\n\n          return _this2._mode === SPLIT_MODE || _this2._lock.isLocked() || _this2._isOtherSideOpen() || !validDrag(event.gesture.direction) || !isOpen && area !== 0 && distance > area;\n        }\n      });\n\n      this.attributeChangedCallback('swipeable');\n\n      contentReady(this, function () {\n        _this2.constructor.observedAttributes.forEach(function (attr) {\n          return _this2.attributeChangedCallback(attr, null, _this2.getAttribute(attr));\n        });\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this._swipe && this._swipe.dispose();\n      this._animator = this._animationOpt = this._swipe = null;\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      switch (name) {\n        case 'swipeable':\n          this._swipe && this._swipe.update();\n          break;\n        case 'width':\n          current = this.getAttribute('width'); // Sometimes undefined. CE bug?\n          this.style.width = /^\\d+(px|%)$/.test(current) ? current : '80%';\n          break;\n        default:\n          this[util$1.camelize('_update-' + name)](current);\n      }\n    }\n  }, {\n    key: '_emitEvent',\n    value: function _emitEvent(name) {\n      if (name.slice(0, 3) !== 'pre') {\n        return util$1.triggerElementEvent(this, name, { side: this });\n      }\n      var isCanceled = false;\n\n      util$1.triggerElementEvent(this, name, {\n        side: this,\n        cancel: function cancel() {\n          return isCanceled = true;\n        }\n      });\n\n      return isCanceled;\n    }\n  }, {\n    key: '_isOtherSideOpen',\n    value: function _isOtherSideOpen() {\n      var _this3 = this;\n\n      return !!util$1.findChild(this.parentElement, function (el) {\n        return el instanceof _this3.constructor && el !== _this3 && el._mode === COLLAPSE_MODE && el.isOpen;\n      });\n    }\n  }, {\n    key: '_updateCollapse',\n    value: function _updateCollapse() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('collapse');\n\n      if (value === null || value === 'split') {\n        this._collapseDetection.disable();\n        return this._updateMode(SPLIT_MODE);\n      }\n      if (value === '' || value === 'collapse') {\n        this._collapseDetection.disable();\n        return this._updateMode(COLLAPSE_MODE);\n      }\n\n      this._collapseDetection.changeTarget(value);\n    }\n  }, {\n    key: '_updateMode',\n    value: function _updateMode(mode) {\n      if (mode !== this._mode) {\n        this._mode = mode;\n        this.setAttribute('mode', mode); // readonly attribute for the users\n\n        if (mode === SPLIT_MODE) {\n          this._animator && this._animator.deactivate();\n          this._state = CLOSED_STATE;\n        } else {\n          this._animator && this._animator.activate(this);\n          this._state === OPEN_STATE && this._animator.open();\n        }\n\n        util$1.triggerElementEvent(this, 'modechange', { side: this, mode: mode });\n      }\n    }\n  }, {\n    key: '_updateAnimation',\n    value: function _updateAnimation() {\n      var animation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation');\n\n      if (this.parentNode) {\n        this._animator && this._animator.deactivate();\n        this._animator = this._animatorFactory.newAnimator({ animation: animation });\n        this._animator.activate(this);\n        this._animationOpt = {\n          timing: this._animator.duration,\n          duration: this._animator.duration\n        };\n      }\n    }\n  }, {\n    key: '_updateAnimationOptions',\n    value: function _updateAnimationOptions() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('animation-options');\n\n      this._animator.updateOptions(AnimatorFactory.parseAnimationOptionsString(value));\n    }\n\n    /**\n     * @property page\n     * @type {*}\n     * @description\n     *   [en]Page location to load in the splitter side.[/en]\n     *   [ja]この要素内に表示するページを指定します。[/ja]\n     */\n\n  }, {\n    key: 'open',\n\n\n    /**\n     * @method open\n     * @signature open([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function will be called after the menu has been opened.[/en]\n     *   [ja]メニューが開いた後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Open menu in collapse mode.[/en]\n     *   [ja]collapseモードになっているons-splitter-side要素を開きます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\n     *   [ja][/ja]\n     */\n    value: function open(options) {\n      return this.toggle(options, true);\n    }\n\n    /**\n     * @method close\n     * @signature close([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {Function} [options.callback]\n     *   [en]This function will be called after the menu has been closed.[/en]\n     *   [ja]メニューが閉じた後に呼び出される関数オブジェクトを指定します。[/ja]\n     * @description\n     *   [en]Close menu in collapse mode.[/en]\n     *   [ja]collapseモードになっているons-splitter-side要素を閉じます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'close',\n    value: function close(options) {\n      return this.toggle(options, false);\n    }\n\n    /**\n     * @method toggle\n     * @signature toggle([options])\n     * @param {Object} [options]\n     * @description\n     *   [en]Opens if it's closed. Closes if it's open.[/en]\n     *   [ja]開けている場合は要素を閉じますそして開けている場合は要素を開きます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the splitter side element or false if not in collapse mode[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      var _this4 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var force = arguments[1];\n\n      var shouldOpen = typeof force === 'boolean' ? force : !this.isOpen;\n      var action = shouldOpen ? 'open' : 'close';\n      var FINAL_STATE = shouldOpen ? OPEN_STATE : CLOSED_STATE;\n\n      if (this._mode === SPLIT_MODE) {\n        return Promise.resolve(false);\n      }\n      if (this._state === FINAL_STATE) {\n        return Promise.resolve(this);\n      }\n      if (this._lock.isLocked()) {\n        return Promise.reject('Another splitter-side action is already running.');\n      }\n      if (shouldOpen && this._isOtherSideOpen()) {\n        return Promise.reject('Another menu is already open.');\n      }\n      if (this._emitEvent('pre' + action)) {\n        return Promise.reject('Canceled in pre' + action + ' event.');\n      }\n\n      var unlock = this._lock.lock();\n      this._state = CHANGING_STATE;\n\n      if (options.animation) {\n        this._updateAnimation(options.animation);\n      }\n\n      return new Promise(function (resolve) {\n        _this4._animator[action](function () {\n          util$1.iosPageScrollFix(shouldOpen);\n          _this4._state = FINAL_STATE;\n          unlock();\n          _this4._emitEvent('post' + action);\n          options.callback instanceof Function && options.callback(_this4);\n          resolve(_this4);\n        });\n      });\n    }\n\n    /**\n     * @method load\n     * @signature load(page, [options])\n     * @param {String} page\n     *   [en]Page URL. Can be either an HTML document or a `<template>`.[/en]\n     *   [ja]pageのURLか、`<template>`で宣言したテンプレートのid属性の値を指定します。[/ja]\n     * @param {Object} [options]\n     * @param {Function} [options.callback]\n     * @description\n     *   [en]Show the page specified in pageUrl in the right section[/en]\n     *   [ja]指定したURLをメインページを読み込みます。[/ja]\n     * @return {Promise}\n     *   [en]Resolves to the new page element[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'load',\n    value: function load(page) {\n      var _this5 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this._page = page;\n      var callback = options.callback || function () {};\n\n      return new Promise(function (resolve) {\n        var oldContent = _this5._content || null;\n\n        _this5._pageLoader.load({ page: page, parent: _this5 }, function (pageElement) {\n          if (oldContent) {\n            _this5._pageLoader.unload(oldContent);\n            oldContent = null;\n          }\n\n          setImmediate(function () {\n            return _this5._show();\n          });\n\n          callback(pageElement);\n          resolve(pageElement);\n        });\n      });\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      if (this._content) {\n        this._content._show();\n      }\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      if (this._content) {\n        this._content._hide();\n      }\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      if (this._content) {\n        this._pageLoader.unload(this._content);\n      }\n      this.remove();\n    }\n  }, {\n    key: 'side',\n    get: function get$$1() {\n      return this.getAttribute('side') === 'right' ? 'right' : 'left';\n    }\n  }, {\n    key: 'page',\n    get: function get$$1() {\n      return this._page;\n    }\n\n    /**\n     * @param {*} page\n     */\n    ,\n    set: function set$$1(page) {\n      this._page = page;\n    }\n  }, {\n    key: '_content',\n    get: function get$$1() {\n      return this.children[0];\n    }\n\n    /**\n     * @property pageLoader\n     * @description\n     *   [en][/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'pageLoader',\n    get: function get$$1() {\n      return this._pageLoader;\n    },\n    set: function set$$1(loader) {\n      if (!(loader instanceof PageLoader)) {\n        util$1.throwPageLoader();\n      }\n      this._pageLoader = loader;\n    }\n\n    /**\n     * @property mode\n     * @readonly\n     * @type {String}\n     * @description\n     *   [en]Current mode. Possible values are \"split\", \"collapse\", \"closed\", \"open\" or \"changing\".[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'mode',\n    get: function get$$1() {\n      return this._mode;\n    }\n\n    /**\n     * @property onSwipe\n     * @type {Function}\n     * @description\n     *   [en]Hook called whenever the user slides the splitter. It gets a decimal ratio (0-1) and an animationOptions object as arguments.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'onSwipe',\n    get: function get$$1() {\n      return this._onSwipe;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        util$1.throw('\"onSwipe\" must be a function');\n      }\n      this._onSwipe = value;\n    }\n\n    /**\n     * @property isOpen\n     * @type {Boolean}\n     * @readonly\n     * @description\n     *   [en]This value is `true` when the menu is open.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'isOpen',\n    get: function get$$1() {\n      return this._mode === COLLAPSE_MODE && this._state !== CLOSED_STATE;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['animation', 'width', 'collapse', 'swipeable', 'animation-options'];\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['preopen', 'postopen', 'preclose', 'postclose', 'modechange'];\n    }\n  }, {\n    key: 'rewritables',\n    get: function get$$1() {\n      return rewritables$2;\n    }\n  }]);\n  return SplitterSideElement;\n}(BaseElement);\n\nonsElements.SplitterSide = SplitterSideElement;\ncustomElements.define('ons-splitter-side', SplitterSideElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$28 = {\n  '': 'switch--*',\n  '.switch__input': 'switch--*__input',\n  '.switch__handle': 'switch--*__handle',\n  '.switch__toggle': 'switch--*__toggle'\n};\n\nvar locations = {\n  ios: [1, 21],\n  material: [0, 16]\n};\n\n/**\n * @element ons-switch\n * @category form\n * @description\n *   [en]\n *     Switch component. The switch can be toggled both by dragging and tapping.\n *\n *     Will automatically displays a Material Design switch on Android devices.\n *   [/en]\n *   [ja]スイッチを表示するコンポーネントです。[/ja]\n * @modifier material\n *   [en]Material Design switch[/en]\n *   [ja][/ja]\n * @codepen LpXZQQ\n * @tutorial vanilla/Reference/switch\n * @guide theming.html#modifiers [en]More details about the `modifier` attribute[/en][ja]modifier属性の使い方[/ja]\n * @example\n * <ons-switch checked></ons-switch>\n * <ons-switch disabled></ons-switch>\n * <ons-switch modifier=\"material\"></ons-switch>\n */\n\nvar SwitchElement = function (_BaseCheckboxElement) {\n  inherits(SwitchElement, _BaseCheckboxElement);\n\n  function SwitchElement() {\n    classCallCheck(this, SwitchElement);\n\n    var _this = possibleConstructorReturn(this, (SwitchElement.__proto__ || Object.getPrototypeOf(SwitchElement)).call(this));\n\n    contentReady(_this, function () {\n      _this.attributeChangedCallback('modifier', null, _this.getAttribute('modifier'));\n    });\n\n    _this._onChange = _this._onChange.bind(_this);\n    _this._onRelease = _this._onRelease.bind(_this);\n    _this._lastTimeStamp = 0;\n    return _this;\n  }\n\n  createClass(SwitchElement, [{\n    key: '_getPosition',\n\n\n    /* Own props */\n\n    value: function _getPosition(e) {\n      var l = this._locations;\n      return Math.min(l[1], Math.max(l[0], this._startX + e.gesture.deltaX));\n    }\n  }, {\n    key: '_emitChangeEvent',\n    value: function _emitChangeEvent() {\n      util$1.triggerElementEvent(this, 'change', {\n        value: this.checked,\n        switch: this,\n        isInteractive: true\n      });\n    }\n  }, {\n    key: '_onChange',\n    value: function _onChange(event) {\n      if (event && event.stopPropagation) {\n        event.stopPropagation();\n      }\n\n      this._emitChangeEvent();\n    }\n  }, {\n    key: '_onClick',\n    value: function _onClick(ev) {\n      if (ev.target.classList.contains(this.defaultElementClass + '__touch') || ev.timeStamp - this._lastTimeStamp < 50 // Prevent second click triggered by <label>\n      ) {\n          ev.preventDefault();\n        }\n      this._lastTimeStamp = ev.timeStamp;\n    }\n  }, {\n    key: '_onHold',\n    value: function _onHold(e) {\n      if (!this.disabled) {\n        ModifierUtil.addModifier(this, 'active');\n        document.addEventListener('release', this._onRelease);\n      }\n    }\n  }, {\n    key: '_onDragStart',\n    value: function _onDragStart(e) {\n      if (this.disabled || ['left', 'right'].indexOf(e.gesture.direction) === -1) {\n        ModifierUtil.removeModifier(this, 'active');\n        return;\n      }\n\n      e.consumed = true;\n\n      ModifierUtil.addModifier(this, 'active');\n      this._startX = this._locations[this.checked ? 1 : 0]; // - e.gesture.deltaX;\n\n      this.addEventListener('drag', this._onDrag);\n      document.addEventListener('release', this._onRelease);\n    }\n  }, {\n    key: '_onDrag',\n    value: function _onDrag(e) {\n      e.stopPropagation();\n      this._handle.style.left = this._getPosition(e) + 'px';\n    }\n  }, {\n    key: '_onRelease',\n    value: function _onRelease(e) {\n      var l = this._locations;\n      var position = this._getPosition(e);\n      var previousValue = this.checked;\n\n      this.checked = position >= (l[0] + l[1]) / 2;\n\n      if (this.checked !== previousValue) {\n        this._emitChangeEvent();\n      }\n\n      this.removeEventListener('drag', this._onDrag);\n      document.removeEventListener('release', this._onRelease);\n\n      this._handle.style.left = '';\n      ModifierUtil.removeModifier(this, 'active');\n    }\n  }, {\n    key: 'click',\n    value: function click() {\n      var ev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.disabled) {\n        this.checked = !this.checked;\n        this._emitChangeEvent();\n        this._lastTimeStamp = ev.timeStamp || 0;\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      contentReady(this, function () {\n        _this2._input.addEventListener('change', _this2._onChange);\n      });\n\n      this.addEventListener('dragstart', this._onDragStart);\n      this.addEventListener('hold', this._onHold);\n      this.addEventListener('tap', this.click);\n      this.addEventListener('click', this._onClick);\n      this._gestureDetector = new GestureDetector(this, { dragMinDistance: 1, holdTimeout: 251, passive: true });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      var _this3 = this;\n\n      contentReady(this, function () {\n        _this3._input.removeEventListener('change', _this3._onChange);\n      });\n\n      this.removeEventListener('dragstart', this._onDragStart);\n      this.removeEventListener('hold', this._onHold);\n      this.removeEventListener('tap', this.click);\n      this.removeEventListener('click', this._onClick);\n      if (this._gestureDetector) {\n        this._gestureDetector.dispose();\n      }\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'modifier') {\n        var md = (current || '').indexOf('material') !== -1;\n        this._locations = locations[md ? 'material' : 'ios'];\n      }\n\n      get(SwitchElement.prototype.__proto__ || Object.getPrototypeOf(SwitchElement.prototype), 'attributeChangedCallback', this).call(this, name, last, current);\n    }\n\n    /**\n     * @event change\n     * @description\n     *   [en]Fired when the switch is toggled.[/en]\n     *   [ja]ON/OFFが変わった時に発火します。[/ja]\n     * @param {Object} event\n     *   [en]Event object.[/en]\n     *   [ja]イベントオブジェクト。[/ja]\n     * @param {Object} event.switch\n     *   [en]Switch object.[/en]\n     *   [ja]イベントが発火したSwitchオブジェクトを返します。[/ja]\n     * @param {Boolean} event.value\n     *   [en]Current value.[/en]\n     *   [ja]現在の値を返します。[/ja]\n     * @param {Boolean} event.isInteractive\n     *   [en]True if the change was triggered by the user clicking on the switch.[/en]\n     *   [ja]タップやクリックなどのユーザの操作によって変わった場合にはtrueを返します。[/ja]\n     */\n\n    /**\n     * @attribute modifier\n     * @type {String}\n     * @description\n     *  [en]The appearance of the switch.[/en]\n     *  [ja]スイッチの表現を指定します。[/ja]\n     */\n\n    /**\n     * @attribute disabled\n     * @description\n     *   [en]Whether the switch is be disabled.[/en]\n     *   [ja]スイッチを無効の状態にする場合に指定します。[/ja]\n     */\n\n    /**\n     * @attribute checked\n     * @description\n     *   [en]Whether the switch is checked.[/en]\n     *   [ja]スイッチがONの状態にするときに指定します。[/ja]\n     */\n\n    /**\n     * @attribute input-id\n     * @type {String}\n     * @description\n     *   [en]Specify the `id` attribute of the inner `<input>` element. This is useful when using `<label for=\"...\">` elements.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property checked\n     * @type {Boolean}\n     * @description\n     *   [en]This value is `true` if the switch is checked.[/en]\n     *   [ja]スイッチがONの場合に`true`。[/ja]\n     */\n\n    /**\n     * @property value\n     * @type {String}\n     * @description\n     *   [en]The current value of the input.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    /**\n     * @property checkbox\n     * @readonly\n     * @type {HTMLElement}\n     * @description\n     *   [en]The underlying checkbox element.[/en]\n     *   [ja]コンポーネント内部のcheckbox要素になります。[/ja]\n     */\n\n    /**\n     * @method focus\n     * @signature focus()\n     * @description\n     *   [en]Focuses the switch.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method blur\n     * @signature blur()\n     * @description\n     *   [en]Removes focus from the switch.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$28;\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'switch';\n    }\n  }, {\n    key: '_template',\n    get: function get$$1() {\n      return '\\n      <input type=\"' + this.type + '\" class=\"' + this._defaultClassName + '__input\">\\n      <div class=\"' + this._defaultClassName + '__toggle\">\\n        <div class=\"' + this._defaultClassName + '__handle\">\\n          <div class=\"' + this._defaultClassName + '__touch\"></div>\\n        </div>\\n      </div>\\n    ';\n    }\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return 'checkbox';\n    }\n  }, {\n    key: '_handle',\n    get: function get$$1() {\n      return this.querySelector('.' + this._defaultClassName + '__handle');\n    }\n  }, {\n    key: 'checkbox',\n    get: function get$$1() {\n      return this._input;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return [].concat(toConsumableArray(get(SwitchElement.__proto__ || Object.getPrototypeOf(SwitchElement), 'observedAttributes', this)), ['modifier']);\n    }\n  }]);\n  return SwitchElement;\n}(BaseCheckboxElement);\n\nonsElements.Switch = SwitchElement;\ncustomElements.define('ons-switch', SwitchElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$30 = {\n  '.tabbar__content': 'tabbar--*__content',\n  '.tabbar__border': 'tabbar--*__border',\n  '.tabbar': 'tabbar--*'\n};\n\nvar rewritables$3 = {\n  /**\n   * @param {Element} tabbarElement\n   * @param {Function} callback\n   */\n  ready: function ready(tabbarElement, callback) {\n    callback();\n  }\n};\n\nvar lerp = function lerp(x0, x1, t) {\n  return (1 - t) * x0 + t * x1;\n};\n\n/**\n * @element ons-tabbar\n * @category tabbar\n * @description\n *   [en]A component to display a tab bar on the bottom of a page. Used with `<ons-tab>` to manage pages using tabs.[/en]\n *   [ja]タブバーをページ下部に表示するためのコンポーネントです。ons-tabと組み合わせて使うことで、ページを管理できます。[/ja]\n * @codepen pGuDL\n * @tutorial vanilla/Reference/tabbar\n * @modifier material\n *   [en]A tabbar in Material Design.[/en]\n *   [ja][/ja]\n * @modifier autogrow\n *   [en]Tabs automatically grow depending on their content instead of having a fixed width.[/en]\n *   [ja][/ja]\n * @modifier top-border\n *   [en]Shows a static border-bottom in tabs for iOS top tabbars.[/en]\n *   [ja][/ja]\n * @guide fundamentals.html#managing-pages\n *  [en]Managing multiple pages.[/en]\n *  [ja]複数のページを管理する[/ja]\n * @seealso ons-tab\n *   [en]The `<ons-tab>` component.[/en]\n *   [ja]ons-tabコンポーネント[/ja]\n * @seealso ons-page\n *   [en]The `<ons-page>` component.[/en]\n *   [ja]ons-pageコンポーネント[/ja]\n * @example\n * <ons-tabbar>\n *   <ons-tab\n *     page=\"home.html\"\n *     label=\"Home\"\n *     active>\n *   </ons-tab>\n *   <ons-tab\n *     page=\"settings.html\"\n *     label=\"Settings\"\n *     active>\n *   </ons-tab>\n * </ons-tabbar>\n *\n * <template id=\"home.html\">\n *   ...\n * </template>\n *\n * <template id=\"settings.html\">\n *   ...\n * </template>\n */\n\nvar TabbarElement = function (_BaseElement) {\n  inherits(TabbarElement, _BaseElement);\n\n  /**\n   * @event prechange\n   * @description\n   *   [en]Fires just before the tab is changed.[/en]\n   *   [ja]アクティブなタブが変わる前に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクト。[/ja]\n   * @param {Number} event.index\n   *   [en]Current index.[/en]\n   *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\n   * @param {Object} event.tabItem\n   *   [en]Tab item object.[/en]\n   *   [ja]tabItemオブジェクト。[/ja]\n   * @param {Function} event.cancel\n   *   [en]Call this function to cancel the change event.[/en]\n   *   [ja]この関数を呼び出すと、アクティブなタブの変更がキャンセルされます。[/ja]\n   */\n\n  /**\n   * @event postchange\n   * @description\n   *   [en]Fires just after the tab is changed.[/en]\n   *   [ja]アクティブなタブが変わった後に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクト。[/ja]\n   * @param {Number} event.index\n   *   [en]Current index.[/en]\n   *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\n   * @param {Object} event.tabItem\n   *   [en]Tab item object.[/en]\n   *   [ja]tabItemオブジェクト。[/ja]\n   */\n\n  /**\n   * @event reactive\n   * @description\n   *   [en]Fires if the already open tab is tapped again.[/en]\n   *   [ja]すでにアクティブになっているタブがもう一度タップやクリックされた場合に発火します。[/ja]\n   * @param {Object} event\n   *   [en]Event object.[/en]\n   *   [ja]イベントオブジェクト。[/ja]\n   * @param {Number} event.index\n   *   [en]Current index.[/en]\n   *   [ja]現在アクティブになっているons-tabのインデックスを返します。[/ja]\n   * @param {Object} event.tabItem\n   *   [en]Tab item object.[/en]\n   *   [ja]tabItemオブジェクト。[/ja]\n   */\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default none\n   * @description\n   *   [en]If this attribute is set to `\"none\"` the transitions will not be animated.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. {duration: 0.2, delay: 1, timing: 'ease-in'}[/ja]\n   */\n\n  /**\n   * @attribute position\n   * @initonly\n   * @type {String}\n   * @default bottom\n   * @description\n   *   [en]Tabbar's position. Available values are `\"bottom\"` and `\"top\"`. Use `\"auto\"` to choose position depending on platform (bottom for iOS flat design, top for Material Design).[/en]\n   *   [ja]タブバーの位置を指定します。\"bottom\"もしくは\"top\"を選択できます。デフォルトは\"bottom\"です。[/ja]\n   */\n\n  /**\n   * @attribute swipeable\n   * @description\n   *   [en]If this attribute is set the tab bar can be scrolled by drag or swipe.[/en]\n   *   [ja]この属性がある時、タブバーをスワイプやドラッグで移動できるようになります。[/ja]\n   */\n\n  /**\n   * @attribute ignore-edge-width\n   * @type {Number}\n   * @default 20\n   * @description\n   *   [en]Distance in pixels from both edges. Swiping on these areas will prioritize parent components such as `ons-splitter` or `ons-navigator`.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute hide-tabs\n   * @description\n   *   [en]Whether to hide the tabs.[/en]\n   *   [ja]タブを非表示にする場合に指定します。[/ja]\n   */\n\n  /**\n   * @attribute tab-border\n   * @description\n   *   [en]If this attribute is set the tabs show a dynamic bottom border. Only works for iOS flat design since the border is always visible in Material Design.[/en]\n   *   [ja][/ja]\n   */\n\n  /**\n   * @attribute modifier\n   * @type {String}\n   * @description\n   *   [en]The appearance of the tabbar.[/en]\n   *   [ja]タブバーの表現を指定します。[/ja]\n   */\n\n  function TabbarElement() {\n    classCallCheck(this, TabbarElement);\n\n    var _this = possibleConstructorReturn(this, (TabbarElement.__proto__ || Object.getPrototypeOf(TabbarElement)).call(this));\n\n    _this._loadInactive = util$1.defer(); // Improves #2324\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(TabbarElement, [{\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this2 = this;\n\n      if (!this._swiper) {\n        this._swiper = new Swiper({\n          getElement: function getElement() {\n            return _this2._contentElement;\n          },\n          getInitialIndex: function getInitialIndex() {\n            return _this2.getAttribute('activeIndex') || _this2.getAttribute('active-index');\n          },\n          getAutoScrollRatio: this._getAutoScrollRatio.bind(this),\n          getBubbleWidth: function getBubbleWidth() {\n            return parseInt(_this2.getAttribute('ignore-edge-width') || 25, 10);\n          },\n          isAutoScrollable: function isAutoScrollable() {\n            return true;\n          },\n          preChangeHook: this._onPreChange.bind(this),\n          postChangeHook: this._onPostChange.bind(this),\n          refreshHook: this._onRefresh.bind(this),\n          scrollHook: this._onScroll.bind(this)\n        });\n\n        contentReady(this, function () {\n          _this2._tabbarBorder = util$1.findChild(_this2._tabbarElement, '.tabbar__border');\n          _this2._swiper.init({ swipeable: _this2.hasAttribute('swipeable') });\n        });\n      }\n\n      contentReady(this, function () {\n        _this2._updatePosition();\n\n        if (!util$1.findParent(_this2, 'ons-page', function (p) {\n          return p === document.body;\n        })) {\n          _this2._show(); // This tabbar is the top component\n        }\n      });\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      if (this._swiper && this._swiper.initialized) {\n        this._swiper.dispose();\n        this._swiper = null;\n        this._tabbarBorder = null;\n        this._tabsRect = null;\n      }\n    }\n  }, {\n    key: '_normalizeEvent',\n    value: function _normalizeEvent(event) {\n      return _extends({}, event, { index: event.activeIndex, tabItem: this.tabs[event.activeIndex] });\n    }\n  }, {\n    key: '_onPostChange',\n    value: function _onPostChange(event) {\n      event = this._normalizeEvent(event);\n      util$1.triggerElementEvent(this, 'postchange', event);\n      var page = event.tabItem.pageElement;\n      page && page._show();\n    }\n  }, {\n    key: '_onPreChange',\n    value: function _onPreChange(event) {\n      event = this._normalizeEvent(event);\n      event.cancel = function () {\n        return event.canceled = true;\n      };\n\n      util$1.triggerElementEvent(this, 'prechange', event);\n\n      if (!event.canceled) {\n        var _event = event,\n            activeIndex = _event.activeIndex,\n            lastActiveIndex = _event.lastActiveIndex;\n\n        var tabs = this.tabs;\n\n        tabs[activeIndex].setActive(true);\n        if (lastActiveIndex >= 0) {\n          var prevTab = tabs[lastActiveIndex];\n          prevTab.setActive(false);\n          prevTab.pageElement && prevTab.pageElement._hide();\n        }\n      }\n\n      return event.canceled;\n    }\n  }, {\n    key: '_onScroll',\n    value: function _onScroll(index) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (this._tabbarBorder) {\n        this._tabbarBorder.style.transition = 'all ' + (options.duration || 0) + 's ' + (options.timing || '');\n\n        if (this._autogrow && this._tabsRect.length > 0) {\n          var a = Math.floor(index),\n              b = Math.ceil(index),\n              r = index % 1;\n          this._tabbarBorder.style.width = lerp(this._tabsRect[a].width, this._tabsRect[b].width, r) + 'px';\n          this._tabbarBorder.style.transform = 'translate3d(' + lerp(this._tabsRect[a].left, this._tabsRect[b].left, r) + 'px, 0, 0)';\n        } else {\n          this._tabbarBorder.style.transform = 'translate3d(' + index * 100 + '%, 0, 0)';\n        }\n      }\n\n      this._onSwipe && this._onSwipe(index, options);\n    }\n  }, {\n    key: '_onRefresh',\n    value: function _onRefresh() {\n      this._autogrow = util$1.hasModifier(this, 'autogrow');\n      this._tabsRect = this.tabs.map(function (tab) {\n        return tab.getBoundingClientRect();\n      });\n      if (this._tabbarBorder) {\n        this._tabbarBorder.style.display = this.hasAttribute('tab-border') || util$1.hasModifier(this, 'material') ? 'block' : 'none';\n        var index = this.getActiveTabIndex();\n        if (this._tabsRect.length > 0 && index >= 0) {\n          this._tabbarBorder.style.width = this._tabsRect[index].width + 'px';\n        }\n      }\n    }\n  }, {\n    key: '_getAutoScrollRatio',\n    value: function _getAutoScrollRatio(matches, velocity, size) {\n      var ratio = .6; // Base ratio\n      var modifier = size / 300 * (matches ? -1 : 1); // Based on screen size\n      return Math.min(1, Math.max(0, ratio + velocity * modifier));\n    }\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      var content = this._contentElement || util$1.create('.tabbar__content');\n      content.classList.add('ons-tabbar__content');\n      var tabbar = this._tabbarElement || util$1.create('.tabbar');\n      tabbar.classList.add('ons-tabbar__footer');\n\n      if (!tabbar.parentNode) {\n        while (this.firstChild) {\n          tabbar.appendChild(this.firstChild);\n        }\n      }\n\n      var activeIndex = Number(this.getAttribute('activeIndex')); // 0 by default\n      if (tabbar.children.length > activeIndex && !util$1.findChild(tabbar, '[active]')) {\n        tabbar.children[activeIndex].setAttribute('active', '');\n      }\n\n      this._tabbarBorder = util$1.findChild(tabbar, '.tabbar__border') || util$1.create('.tabbar__border');\n      tabbar.appendChild(this._tabbarBorder);\n      tabbar.classList.add('ons-swiper-tabbar'); // Hides material border\n\n      !content.children[0] && content.appendChild(document.createElement('div'));\n      !content.children[1] && content.appendChild(document.createElement('div'));\n      content.appendChild = content.appendChild.bind(content.children[0]);\n      content.insertBefore = content.insertBefore.bind(content.children[0]);\n\n      this.appendChild(content);\n      this.appendChild(tabbar); // Triggers ons-tab connectedCallback\n\n      ModifierUtil.initModifier(this, scheme$30);\n    }\n  }, {\n    key: '_updatePosition',\n    value: function _updatePosition() {\n      var _this3 = this;\n\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getAttribute('position');\n\n      var top = this._top = position === 'top' || position === 'auto' && util$1.hasModifier(this, 'material');\n      var action = top ? util$1.addModifier : util$1.removeModifier;\n\n      action(this, 'top');\n\n      var page = util$1.findParent(this, 'ons-page');\n      if (page) {\n        contentReady(page, function () {\n          var p = 0;\n          if (page.children[0] && util$1.match(page.children[0], 'ons-toolbar')) {\n            action(page.children[0], 'noshadow');\n            p = 1; // Visual fix for some devices\n          }\n\n          var content = page._getContentElement();\n          var cs = window.getComputedStyle(page._getContentElement(), null);\n\n          _this3.style.top = top ? parseInt(cs.getPropertyValue('padding-top'), 10) - p + 'px' : '';\n\n          // Refresh content top - Fix for iOS 8\n          content.style.top = cs.top;\n          content.style.top = '';\n        });\n      }\n\n      internal$1.autoStatusBarFill(function () {\n        var filled = util$1.findParent(_this3, function (e) {\n          return e.hasAttribute('status-bar-fill');\n        });\n        util$1.toggleAttribute(_this3, 'status-bar-fill', top && !filled);\n      });\n    }\n  }, {\n    key: 'setActiveTab',\n\n\n    /**\n     * @method setActiveTab\n     * @signature setActiveTab(index, [options])\n     * @param {Number} index\n     *   [en]Tab index.[/en]\n     *   [ja]タブのインデックスを指定します。[/ja]\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {Function} [options.callback]\n     *   [en]Function that runs when the new page has loaded.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animation]\n     *   [en]If this option is \"none\", the transition won't slide.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @description\n     *   [en]Show specified tab page. Animations and their options can be specified by the second parameter.[/en]\n     *   [ja]指定したインデックスのタブを表示します。アニメーションなどのオプションを指定できます。[/ja]\n     * @return {Promise}\n     *   [en]A promise that resolves to the new page element.[/en]\n     *   [ja][/ja]\n     */\n    value: function setActiveTab(nextIndex) {\n      var _this4 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var prevIndex = this.getActiveTabIndex();\n      var prevTab = this.tabs[prevIndex],\n          nextTab = this.tabs[nextIndex];\n\n      if (!nextTab) {\n        return Promise.reject('Specified index does not match any tab.');\n      }\n\n      if (nextIndex === prevIndex) {\n        util$1.triggerElementEvent(this, 'reactive', { index: nextIndex, activeIndex: nextIndex, tabItem: nextTab });\n        return Promise.resolve(nextTab.pageElement);\n      }\n\n      // FIXME: nextTab.loaded is broken in Zone.js promises (Angular2)\n      var nextPage = nextTab.pageElement;\n      return (nextPage ? Promise.resolve(nextPage) : nextTab.loaded).then(function (nextPage) {\n        return _this4._swiper.setActiveIndex(nextIndex, _extends({\n          reject: true\n        }, options, {\n          animation: prevTab && nextPage ? options.animation || _this4.getAttribute('animation') : 'none',\n          animationOptions: util$1.extend({ duration: .3, timing: 'cubic-bezier(.4, .7, .5, 1)' }, _this4.hasAttribute('animation-options') ? util$1.animationOptionsParse(_this4.getAttribute('animation-options')) : {}, options.animationOptions || {})\n        })).then(function () {\n          options.callback instanceof Function && options.callback(nextPage);\n          return nextPage;\n        });\n      });\n    }\n\n    /**\n     * @method setTabbarVisibility\n     * @signature setTabbarVisibility(visible)\n     * @param {Boolean} visible\n     * @description\n     *   [en]Used to hide or show the tab bar.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'setTabbarVisibility',\n    value: function setTabbarVisibility(visible) {\n      var _this5 = this;\n\n      contentReady(this, function () {\n        _this5._contentElement.style[_this5._top ? 'top' : 'bottom'] = visible ? '' : '0px';\n        _this5._tabbarElement.style.display = visible ? '' : 'none';\n        visible && _this5._onRefresh();\n      });\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      this.setTabbarVisibility(true);\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      this.setTabbarVisibility(false);\n    }\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the tabbar is visible or not.[/en]\n     *   [ja]タブバーが見える場合に`true`。[/ja]\n     */\n\n  }, {\n    key: 'getActiveTabIndex',\n\n\n    /**\n     * @method getActiveTabIndex\n     * @signature getActiveTabIndex()\n     * @return {Number}\n     *   [en]The index of the currently active tab.[/en]\n     *   [ja]現在アクティブになっているタブのインデックスを返します。[/ja]\n     * @description\n     *   [en]Returns tab index on current active tab. If active tab is not found, returns -1.[/en]\n     *   [ja]現在アクティブになっているタブのインデックスを返します。現在アクティブなタブがない場合には-1を返します。[/ja]\n     */\n    value: function getActiveTabIndex() {\n      var tabs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.tabs;\n\n      for (var i = 0; i < tabs.length; i++) {\n        if (tabs[i] && tabs[i].tagName === 'ONS-TAB' && tabs[i].isActive()) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }, {\n    key: '_show',\n    value: function _show() {\n      var _this6 = this;\n\n      this._swiper.show();\n\n      setImmediate(function () {\n        var tabs = _this6.tabs;\n        var activeIndex = _this6.getActiveTabIndex(tabs);\n        _this6._loadInactive.resolve();\n        if (tabs.length > 0 && activeIndex >= 0) {\n          tabs[activeIndex].loaded.then(function (el) {\n            return el && setImmediate(function () {\n              return el._show();\n            });\n          });\n        }\n      });\n    }\n  }, {\n    key: '_hide',\n    value: function _hide() {\n      this._swiper.hide();\n      var topPage = this.topPage;\n      topPage && topPage._hide();\n    }\n  }, {\n    key: '_destroy',\n    value: function _destroy() {\n      this.tabs.forEach(function (tab) {\n        return tab.remove();\n      });\n      this.remove();\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      if (name === 'modifier') {\n        ModifierUtil.onModifierChanged(last, current, this, scheme$30);\n        var isTop = function isTop(m) {\n          return (/(^|\\s+)top($|\\s+)/i.test(m)\n          );\n        };\n        isTop(last) !== isTop(current) && this._updatePosition();\n      } else if (name === 'position') {\n        util$1.isAttached(this) && this._updatePosition();\n      } else if (name === 'swipeable') {\n        this._swiper && this._swiper.updateSwipeable(this.hasAttribute('swipeable'));\n      } else if (name === 'hide-tabs') {\n        this.setTabbarVisibility(!this.hasAttribute('hide-tabs') || current === 'false');\n      }\n    }\n  }, {\n    key: '_tabbarElement',\n    get: function get$$1() {\n      return util$1.findChild(this, '.tabbar');\n    }\n  }, {\n    key: '_contentElement',\n    get: function get$$1() {\n      return util$1.findChild(this, '.tabbar__content');\n    }\n  }, {\n    key: '_targetElement',\n    get: function get$$1() {\n      var content = this._contentElement;\n      return content && content.children[0] || null;\n    }\n  }, {\n    key: 'topPage',\n    get: function get$$1() {\n      var tabs = this.tabs,\n          index = this.getActiveTabIndex();\n      return tabs[index] ? tabs[index].pageElement || this.pages[0] || null : null;\n    }\n  }, {\n    key: 'pages',\n    get: function get$$1() {\n      return util$1.arrayFrom(this._targetElement.children);\n    }\n  }, {\n    key: 'tabs',\n    get: function get$$1() {\n      return Array.prototype.filter.call(this._tabbarElement.children, function (e) {\n        return e.tagName === 'ONS-TAB';\n      });\n    }\n  }, {\n    key: 'visible',\n    get: function get$$1() {\n      return this._tabbarElement.style.display !== 'none';\n    }\n\n    /**\n     * @property swipeable\n     * @type {Boolean}\n     * @description\n     *   [en]Enable swipe interaction.[/en]\n     *   [ja]swipeableであればtrueを返します。[/ja]\n     */\n\n  }, {\n    key: 'swipeable',\n    get: function get$$1() {\n      return this.hasAttribute('swipeable');\n    },\n    set: function set$$1(value) {\n      return util$1.toggleAttribute(this, 'swipeable', value);\n    }\n\n    /**\n     * @property onSwipe\n     * @type {Function}\n     * @description\n     *   [en]Hook called whenever the user slides the tabbar. It gets a decimal index and an animationOptions object as arguments.[/en]\n     *   [ja][/ja]\n     */\n\n  }, {\n    key: 'onSwipe',\n    get: function get$$1() {\n      return this._onSwipe;\n    },\n    set: function set$$1(value) {\n      if (value && !(value instanceof Function)) {\n        util$1.throw('\"onSwipe\" must be a function');\n      }\n      this._onSwipe = value;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'position', 'swipeable', 'tab-border', 'hide-tabs'];\n    }\n  }, {\n    key: 'rewritables',\n    get: function get$$1() {\n      return rewritables$3;\n    }\n  }, {\n    key: 'events',\n    get: function get$$1() {\n      return ['prechange', 'postchange', 'reactive'];\n    }\n  }]);\n  return TabbarElement;\n}(BaseElement);\n\nonsElements.Tabbar = TabbarElement;\ncustomElements.define('ons-tabbar', TabbarElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar defaultClassName$16 = 'tabbar__item';\n\nvar scheme$29 = {\n  '': 'tabbar--*__item',\n  '.tabbar__button': 'tabbar--*__button'\n};\n\n/**\n * @element ons-tab\n * @category tabbar\n * @description\n *   [en]Represents a tab inside tab bar. Each `<ons-tab>` represents a page.[/en]\n *   [ja]\n *     タブバーに配置される各アイテムのコンポーネントです。それぞれのons-tabはページを表します。\n *     ons-tab要素の中には、タブに表示されるコンテンツを直接記述することが出来ます。\n *   [/ja]\n * @codepen pGuDL\n * @tutorial vanilla/Reference/tabbar\n * @guide fundamentals.html#managing-pages\n *   [en]Managing multiple pages.[/en]\n *   [ja]複数のページを管理する[/ja]]\n * @guide appsize.html#removing-icon-packs [en]Removing icon packs.[/en][ja][/ja]\n * @guide faq.html#how-can-i-use-custom-icon-packs [en]Adding custom icon packs.[/en][ja][/ja]\n * @seealso ons-tabbar\n *   [en]ons-tabbar component[/en]\n *   [ja]ons-tabbarコンポーネント[/ja]\n * @seealso ons-page\n *   [en]ons-page component[/en]\n *   [ja]ons-pageコンポーネント[/ja]\n * @seealso ons-icon\n *   [en]ons-icon component[/en]\n *   [ja]ons-iconコンポーネント[/ja]\n * @example\n * <ons-tabbar>\n *   <ons-tab\n *     page=\"home.html\"\n *     label=\"Home\"\n *     active>\n *   </ons-tab>\n *   <ons-tab\n *     page=\"settings.html\"\n *     label=\"Settings\"\n *     active>\n *   </ons-tab>\n * </ons-tabbar>\n *\n * <template id=\"home.html\">\n *   ...\n * </template>\n *\n * <template id=\"settings.html\">\n *   ...\n * </template>\n\n */\n\nvar TabElement = function (_BaseElement) {\n  inherits(TabElement, _BaseElement);\n\n  /**\n   * @attribute page\n   * @initonly\n   * @type {String}\n   * @description\n   *   [en]The page that is displayed when the tab is tapped.[/en]\n   *   [ja]ons-tabが参照するページへのURLを指定します。[/ja]\n   */\n\n  /**\n   * @attribute icon\n   * @type {String}\n   * @description\n   *   [en]\n   *     The icon name for the tab. Can specify the same icon name as `<ons-icon>`. Check [See also](#seealso) section for more information.\n   *   [/en]\n   *   [ja]\n   *     アイコン名を指定します。ons-iconと同じアイコン名を指定できます。\n   *     個別にアイコンをカスタマイズする場合は、background-imageなどのCSSスタイルを用いて指定できます。\n   *   [/ja]\n   */\n\n  /**\n   * @attribute active-icon\n   * @type {String}\n   * @description\n   *   [en]The name of the icon when the tab is active.[/en]\n   *   [ja]アクティブの際のアイコン名を指定します。[/ja]\n   */\n\n  /**\n   * @attribute label\n   * @type {String}\n   * @description\n   *   [en]The label of the tab item.[/en]\n   *   [ja]アイコン下に表示されるラベルを指定します。[/ja]\n   */\n\n  /**\n   * @attribute badge\n   * @type {String}\n   * @description\n   *   [en]Display a notification badge on top of the tab.[/en]\n   *   [ja]バッジに表示する内容を指定します。[/ja]\n   */\n\n  /**\n   * @attribute active\n   * @description\n   *   [en]This attribute should be set to the tab that is active by default.[/en]\n   *   [ja][/ja]\n   */\n\n  function TabElement() {\n    classCallCheck(this, TabElement);\n\n    var _this = possibleConstructorReturn(this, (TabElement.__proto__ || Object.getPrototypeOf(TabElement)).call(this));\n\n    if (['label', 'icon', 'badge'].some(_this.hasAttribute.bind(_this))) {\n      _this._compile();\n    } else {\n      contentReady(_this, function () {\n        return _this._compile();\n      });\n    }\n\n    _this._pageLoader = defaultPageLoader;\n    _this._onClick = _this._onClick.bind(_this);\n    return _this;\n  }\n\n  createClass(TabElement, [{\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n      this.classList.add(defaultClassName$16);\n\n      if (this._button) {\n        return;\n      }\n\n      var button = util$1.create('button.tabbar__button');\n      while (this.childNodes[0]) {\n        button.appendChild(this.childNodes[0]);\n      }\n\n      var input = util$1.create('input', { display: 'none' });\n      input.type = 'radio';\n\n      this.appendChild(input);\n      this.appendChild(button);\n\n      this._updateButtonContent();\n      ModifierUtil.initModifier(this, scheme$29);\n      this._updateRipple();\n    }\n  }, {\n    key: '_updateRipple',\n    value: function _updateRipple() {\n      this._button && util$1.updateRipple(this._button, this.hasAttribute('ripple'));\n    }\n  }, {\n    key: '_updateButtonContent',\n    value: function _updateButtonContent() {\n      var _this2 = this;\n\n      var button = this._button;\n\n      var iconWrapper = this._icon;\n      if (this.hasAttribute('icon')) {\n        iconWrapper = iconWrapper || util$1.createElement('<div class=\"tabbar__icon\"><ons-icon></ons-icon></div>');\n        var icon = iconWrapper.children[0];\n        var fix = function (last) {\n          return function () {\n            return icon.attributeChangedCallback('icon', last, _this2.getAttribute('icon'));\n          };\n        }(icon.getAttribute('icon'));\n        if (this.hasAttribute('icon') && this.hasAttribute('active-icon')) {\n          icon.setAttribute('icon', this.getAttribute(this.isActive() ? 'active-icon' : 'icon'));\n        } else if (this.hasAttribute('icon')) {\n          icon.setAttribute('icon', this.getAttribute('icon'));\n        }\n        iconWrapper.parentElement !== button && button.insertBefore(iconWrapper, button.firstChild);\n\n        // dirty fix for https://github.com/OnsenUI/OnsenUI/issues/1654\n        icon.attributeChangedCallback instanceof Function ? fix() : setImmediate(function () {\n          return icon.attributeChangedCallback instanceof Function && fix();\n        });\n      } else {\n        iconWrapper && iconWrapper.remove();\n      }\n\n      ['label', 'badge'].forEach(function (attr, index) {\n        var prop = _this2.querySelector('.tabbar__' + attr);\n        if (_this2.hasAttribute(attr)) {\n          prop = prop || util$1.create('.tabbar__' + attr + (attr === 'badge' ? ' notification' : ''));\n          prop.textContent = _this2.getAttribute(attr);\n          prop.parentElement !== button && button.appendChild(prop);\n        } else {\n          prop && prop.remove();\n        }\n      });\n    }\n  }, {\n    key: '_onClick',\n    value: function _onClick() {\n      if (this.onClick instanceof Function) {\n        this.onClick();\n      } else {\n        this._tabbar.setActiveTab(this.index, { reject: false });\n      }\n    }\n  }, {\n    key: 'setActive',\n    value: function setActive() {\n      var active = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._input.checked = active;\n      this.classList.toggle('active', active);\n      util$1.toggleAttribute(this, 'active', active);\n\n      if (this.hasAttribute('icon') && this.hasAttribute('active-icon')) {\n        this._icon.children[0].setAttribute('icon', this.getAttribute(active ? 'active-icon' : 'icon'));\n      }\n    }\n  }, {\n    key: '_loadPageElement',\n    value: function _loadPageElement(parent, page) {\n      var _this3 = this;\n\n      this._hasLoaded = true;\n\n      return new Promise(function (resolve) {\n        _this3._pageLoader.load({ parent: parent, page: page }, function (pageElement) {\n          parent.replaceChild(pageElement, parent.children[_this3.index]); // Ensure position\n          _this3._loadedPage = pageElement;\n          resolve(pageElement);\n        });\n      });\n    }\n  }, {\n    key: 'isActive',\n\n\n    /**\n     * @return {Boolean}\n     */\n    value: function isActive() {\n      return this.classList.contains('active');\n    }\n  }, {\n    key: 'disconnectedCallback',\n    value: function disconnectedCallback() {\n      this.removeEventListener('click', this._onClick, false);\n      if (this._loadedPage) {\n        this._hasLoaded = false;\n        this.loaded = null;\n      }\n    }\n  }, {\n    key: 'connectedCallback',\n    value: function connectedCallback() {\n      var _this4 = this;\n\n      this.addEventListener('click', this._onClick, false);\n\n      if (!util$1.isAttached(this) || this.loaded) {\n        return; // ons-tabbar compilation may trigger this\n      }\n\n      var deferred = util$1.defer();\n      this.loaded = deferred.promise;\n\n      contentReady(this, function () {\n        var index = _this4.index;\n        var tabbar = _this4._tabbar;\n        if (!tabbar) {\n          util$1.throw('Tab elements must be children of Tabbar');\n        }\n\n        if (tabbar.hasAttribute('modifier')) {\n          util$1.addModifier(_this4, tabbar.getAttribute('modifier'));\n        }\n\n        if (!_this4._hasLoaded) {\n          if (_this4.hasAttribute('active')) {\n            _this4.setActive(true);\n            tabbar.setAttribute('activeIndex', index);\n          }\n\n          if (index === tabbar.tabs.length - 1) {\n            tabbar._onRefresh();\n            setImmediate(function () {\n              return tabbar._onRefresh();\n            });\n          }\n\n          TabbarElement.rewritables.ready(tabbar, function () {\n            var pageTarget = _this4.page || _this4.getAttribute('page');\n            if (!_this4.pageElement && pageTarget) {\n              var parentTarget = tabbar._targetElement;\n              var dummyPage = util$1.create('div', { height: '100%', width: '100%', visibility: 'hidden' });\n              parentTarget.insertBefore(dummyPage, parentTarget.children[index]); // Ensure position\n\n              var load = function load() {\n                return _this4._loadPageElement(parentTarget, pageTarget).then(deferred.resolve);\n              };\n              return _this4.isActive() ? load() : tabbar._loadInactive.promise.then(load);\n            }\n\n            return deferred.resolve(_this4.pageElement);\n          });\n        }\n      });\n    }\n  }, {\n    key: 'attributeChangedCallback',\n    value: function attributeChangedCallback(name, last, current) {\n      var _this5 = this;\n\n      switch (name) {\n        case 'class':\n          util$1.restoreClass(this, defaultClassName$16, scheme$29);\n          break;\n        case 'modifier':\n          contentReady(this, function () {\n            return ModifierUtil.onModifierChanged(last, current, _this5, scheme$29);\n          });\n          break;\n        case 'ripple':\n          contentReady(this, function () {\n            return _this5._updateRipple();\n          });\n          break;\n        case 'icon':\n        case 'label':\n        case 'badge':\n          contentReady(this, function () {\n            return _this5._updateButtonContent();\n          });\n          break;\n        case 'page':\n          this.page = current || '';\n          break;\n      }\n    }\n  }, {\n    key: 'pageLoader',\n    set: function set$$1(loader) {\n      if (!(loader instanceof PageLoader)) {\n        util$1.throwPageLoader();\n      }\n      this._pageLoader = loader;\n    },\n    get: function get$$1() {\n      return this._pageLoader;\n    }\n  }, {\n    key: '_input',\n    get: function get$$1() {\n      return util$1.findChild(this, 'input');\n    }\n  }, {\n    key: '_button',\n    get: function get$$1() {\n      return util$1.findChild(this, '.tabbar__button');\n    }\n  }, {\n    key: '_icon',\n    get: function get$$1() {\n      return this.querySelector('.tabbar__icon');\n    }\n  }, {\n    key: '_tabbar',\n    get: function get$$1() {\n      return util$1.findParent(this, 'ons-tabbar');\n    }\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return Array.prototype.indexOf.call(this.parentElement.children, this);\n    }\n  }, {\n    key: 'pageElement',\n    get: function get$$1() {\n      // It has been loaded by ons-tab\n      if (this._loadedPage) {\n        return this._loadedPage;\n      }\n      // Manually attached to DOM, 1 per tab\n      var tabbar = this._tabbar;\n      if (tabbar.pages.length === tabbar.tabs.length) {\n        return tabbar.pages[this.index];\n      }\n      // Loaded in another way\n      return null;\n    }\n  }], [{\n    key: 'observedAttributes',\n    get: function get$$1() {\n      return ['modifier', 'ripple', 'icon', 'label', 'page', 'badge', 'class'];\n    }\n  }]);\n  return TabElement;\n}(BaseElement);\n\nonsElements.Tab = TabElement;\ncustomElements.define('ons-tab', TabElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar ToastAnimator = function (_BaseAnimator) {\n  inherits(ToastAnimator, _BaseAnimator);\n\n  /**\n   * @param {Object} options\n   * @param {String} options.timing\n   * @param {Number} options.duration\n   * @param {Number} options.delay\n   */\n  function ToastAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.2 : _ref$duration;\n\n    classCallCheck(this, ToastAnimator);\n    return possibleConstructorReturn(this, (ToastAnimator.__proto__ || Object.getPrototypeOf(ToastAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} modal\n   * @param {Function} callback\n   */\n\n\n  createClass(ToastAnimator, [{\n    key: 'show',\n    value: function show(modal, callback) {\n      callback();\n    }\n\n    /**\n     * @param {HTMLElement} modal\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(modal, callback) {\n      callback();\n    }\n  }]);\n  return ToastAnimator;\n}(BaseAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * iOS style animator for dialog.\n */\n\nvar FadeToastAnimator = function (_ToastAnimator) {\n  inherits(FadeToastAnimator, _ToastAnimator);\n\n  function FadeToastAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'linear' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.3 : _ref$duration;\n\n    classCallCheck(this, FadeToastAnimator);\n    return possibleConstructorReturn(this, (FadeToastAnimator.__proto__ || Object.getPrototypeOf(FadeToastAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n  }\n\n  /**\n   * @param {HTMLElement} toast\n   * @param {Function} callback\n   */\n\n\n  createClass(FadeToastAnimator, [{\n    key: 'show',\n    value: function show(toast, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(toast, this.def).default({ opacity: 0 }, { opacity: 1 }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n\n    /**\n     * @param {HTMLElement} toast\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(toast, callback) {\n      callback = callback ? callback : function () {};\n\n      Animit(toast, this.def).default({ opacity: 1 }, { opacity: 0 }).queue(function (done) {\n        callback();\n        done();\n      }).play();\n    }\n  }]);\n  return FadeToastAnimator;\n}(ToastAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Ascend Toast Animator.\n */\n\nvar AscendToastAnimator = function (_ToastAnimator) {\n  inherits(AscendToastAnimator, _ToastAnimator);\n\n  function AscendToastAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'ease' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.25 : _ref$duration;\n\n    classCallCheck(this, AscendToastAnimator);\n\n    var _this = possibleConstructorReturn(this, (AscendToastAnimator.__proto__ || Object.getPrototypeOf(AscendToastAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.messageDelay = _this.duration * 0.4 + _this.delay; // Delay message opacity change\n    if (platform.isAndroid()) {\n      _this.ascension = 48; // Toasts are always 1 line\n    } else {\n      if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n        _this.ascension = 98; // 64 + 34\n      } else if (iPhoneXPatch.isIPhoneXLandscapePatchActive()) {\n        _this.ascension = 85; // 64 + 21\n      } else {\n        _this.ascension = 64;\n      }\n    }\n    return _this;\n  }\n\n  /**\n   * @param {HTMLElement} toast\n   * @param {Function} callback\n   */\n\n\n  createClass(AscendToastAnimator, [{\n    key: 'show',\n    value: function show(toast, callback) {\n      toast = toast._toast;\n      util$1.globals.fabOffset = this.ascension;\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, ' + this.ascension + 'px, 0)' }, { transform: 'translate3d(0, 0, 0)' }).queue(function (done) {\n        callback && callback();\n        done();\n      }), Animit(this._getFabs()).wait(this.delay).queue({ transform: 'translate3d(0, -' + this.ascension + 'px, 0) scale(1)' }, this.def), Animit(util$1.arrayFrom(toast.children), this.def).default({ opacity: 0 }, { opacity: 1 }));\n    }\n\n    /**\n     * @param {HTMLElement} toast\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(toast, callback) {\n      toast = toast._toast;\n      util$1.globals.fabOffset = 0;\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, 0, 0)' }, { transform: 'translate3d(0, ' + this.ascension + 'px, 0)' }).queue(function (done) {\n        callback && callback();\n        done();\n      }), Animit(this._getFabs(), this.def).wait(this.delay).queue({ transform: 'translate3d(0, 0, 0) scale(1)' }, this.def), Animit(util$1.arrayFrom(toast.children), this.def).default({ opacity: 1 }, { opacity: 0 }));\n    }\n  }, {\n    key: '_getFabs',\n    value: function _getFabs() {\n      return util$1.arrayFrom(document.querySelectorAll('ons-fab[position~=bottom], ons-speed-dial[position~=bottom]')).filter(function (fab) {\n        return fab.visible;\n      });\n    }\n  }]);\n  return AscendToastAnimator;\n}(ToastAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Lift-fade Toast Animator\n */\n\nvar LiftToastAnimator = function (_ToastAnimator) {\n  inherits(LiftToastAnimator, _ToastAnimator);\n\n  function LiftToastAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'ease' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.35 : _ref$duration;\n\n    classCallCheck(this, LiftToastAnimator);\n\n    var _this = possibleConstructorReturn(this, (LiftToastAnimator.__proto__ || Object.getPrototypeOf(LiftToastAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    _this.bodyHeight = document.body.clientHeight; // avoid Forced Synchronous Layout\n    if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n      _this.liftAmount = 'calc(100% + 34px)';\n    } else if (iPhoneXPatch.isIPhoneXLandscapePatchActive()) {\n      _this.liftAmount = 'calc(100% + 21px)';\n    } else {\n      _this.liftAmount = '100%';\n    }\n    return _this;\n  }\n\n  /**\n   * @param {HTMLElement} toast\n   * @param {Function} callback\n   */\n\n\n  createClass(LiftToastAnimator, [{\n    key: 'show',\n    value: function show(toast, callback) {\n      toast = toast._toast;\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, ' + this.liftAmount + ', 0)', opacity: 0 }, { transform: 'translate3d(0, 0, 0)', opacity: 1 }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {HTMLElement} toast\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(toast, callback) {\n      toast = toast._toast;\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, 0, 0)', opacity: 1 }, { transform: 'translate3d(0, ' + this.liftAmount + ', 0)', opacity: 0 }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n  }, {\n    key: '_updatePosition',\n    value: function _updatePosition(toast) {\n      if (parseInt(toast.style.top, 10) === 0) {\n        toast.style.top = toast.style.bottom = '';\n      }\n    }\n  }]);\n  return LiftToastAnimator;\n}(ToastAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * Fall-fade Toast Animator\n */\n\nvar FallToastAnimator = function (_ToastAnimator) {\n  inherits(FallToastAnimator, _ToastAnimator);\n\n  function FallToastAnimator() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$timing = _ref.timing,\n        timing = _ref$timing === undefined ? 'ease' : _ref$timing,\n        _ref$delay = _ref.delay,\n        delay = _ref$delay === undefined ? 0 : _ref$delay,\n        _ref$duration = _ref.duration,\n        duration = _ref$duration === undefined ? 0.35 : _ref$duration;\n\n    classCallCheck(this, FallToastAnimator);\n\n    var _this = possibleConstructorReturn(this, (FallToastAnimator.__proto__ || Object.getPrototypeOf(FallToastAnimator)).call(this, { timing: timing, delay: delay, duration: duration }));\n\n    if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n      _this.fallAmount = 'calc(-100% - 44px)';\n    } else {\n      _this.fallAmount = '-100%';\n    }\n    return _this;\n  }\n\n  /**\n   * @param {HTMLElement} toast\n   * @param {Function} callback\n   */\n\n\n  createClass(FallToastAnimator, [{\n    key: 'show',\n    value: function show(toast, callback) {\n      toast = toast._toast;\n      this._updatePosition(toast);\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, ' + this.fallAmount + ', 0)', opacity: 0 }, { transform: 'translate3d(0, 0, 0)', opacity: 1 }).queue(function (done) {\n        callback && callback();\n        done();\n      }));\n    }\n\n    /**\n     * @param {HTMLElement} toast\n     * @param {Function} callback\n     */\n\n  }, {\n    key: 'hide',\n    value: function hide(toast, callback) {\n      var _this2 = this;\n\n      toast = toast._toast;\n      this._updatePosition(toast);\n\n      Animit.runAll(Animit(toast, this.def).default({ transform: 'translate3d(0, 0, 0)', opacity: 1 }, { transform: 'translate3d(0, ' + this.fallAmount + ', 0)', opacity: 0 }).queue(function (done) {\n        _this2._updatePosition(toast, true);\n        callback && callback();\n        done();\n      }));\n    }\n  }, {\n    key: '_updatePosition',\n    value: function _updatePosition(toast, cleanUp) {\n      var correctTop = void 0;\n      if (iPhoneXPatch.isIPhoneXPortraitPatchActive()) {\n        correctTop = '44px';\n      } else {\n        correctTop = '0';\n      }\n\n      if (toast.style.top !== correctTop) {\n        toast.style.top = correctTop;\n        toast.style.bottom = 'initial';\n      }\n    }\n  }]);\n  return FallToastAnimator;\n}(ToastAnimator);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\nvar scheme$31 = {\n  '.toast': 'toast--*',\n  '.toast__message': 'toast--*__message',\n  '.toast__button': 'toast--*__button'\n};\n\nvar defaultClassName$17 = 'toast';\n\nvar _animatorDict$8 = {\n  'default': platform.isAndroid() ? AscendToastAnimator : LiftToastAnimator,\n  'fade': FadeToastAnimator,\n  'ascend': AscendToastAnimator,\n  'lift': LiftToastAnimator,\n  'fall': FallToastAnimator,\n  'none': ToastAnimator\n};\n\n/**\n * @element ons-toast\n * @category dialog\n * @description\n *   [en]\n *     The Toast or Snackbar component is useful for displaying dismissable information or simple actions at (normally) the bottom of the page.\n *\n *     This component does not block user input, allowing the app to continue its flow. For simple toasts, consider `ons.notification.toast` instead.\n *   [/en]\n *   [ja][/ja]\n * @tutorial vanilla/Reference/toast\n * @seealso ons-alert-dialog\n *   [en]The `<ons-alert-dialog>` component is preferred for displaying undismissable information.[/en]\n *   [ja][/ja]\n */\n\nvar ToastElement = function (_BaseDialogElement) {\n  inherits(ToastElement, _BaseDialogElement);\n\n  /**\n   * @attribute animation\n   * @type {String}\n   * @default default\n   * @description\n   *  [en]The animation used when showing and hiding the toast. Can be either `\"default\"`, `\"ascend\"` (Android), `\"lift\"` (iOS), `\"fall\"`, `\"fade\"` or `\"none\"`.[/en]\n   *  [ja][/ja]\n   */\n\n  /**\n   * @attribute animation-options\n   * @type {Expression}\n   * @description\n   *  [en]Specify the animation's duration, timing and delay with an object literal. E.g. `{duration: 0.2, delay: 1, timing: 'ease-in'}`.[/en]\n   *  [ja]アニメーション時のduration, timing, delayをオブジェクトリテラルで指定します。e.g. <code>{duration: 0.2, delay: 1, timing: 'ease-in'}</code>[/ja]\n   */\n\n  function ToastElement() {\n    classCallCheck(this, ToastElement);\n\n    var _this = possibleConstructorReturn(this, (ToastElement.__proto__ || Object.getPrototypeOf(ToastElement)).call(this));\n\n    _this._defaultDBB = null;\n    contentReady(_this, function () {\n      return _this._compile();\n    });\n    return _this;\n  }\n\n  createClass(ToastElement, [{\n    key: '_updateAnimatorFactory',\n    value: function _updateAnimatorFactory() {\n      // Reset position style\n      this._toast && (this._toast.style.top = this._toast.style.bottom = '');\n\n      return new AnimatorFactory({\n        animators: _animatorDict$8,\n        baseClass: ToastAnimator,\n        baseClassName: 'ToastAnimator',\n        defaultAnimation: this.getAttribute('animation')\n      });\n    }\n\n    /**\n     * @property onDeviceBackButton\n     * @type {Object}\n     * @description\n     *   [en]Back-button handler.[/en]\n     *   [ja]バックボタンハンドラ。[/ja]\n     */\n\n  }, {\n    key: '_compile',\n    value: function _compile() {\n      autoStyle.prepare(this);\n\n      this.style.display = 'none';\n      this.style.zIndex = 10000; // Lower than dialogs\n\n      var messageClassName = 'toast__message';\n      var buttonClassName = 'toast__button';\n\n      var toast = util$1.findChild(this, '.' + defaultClassName$17);\n      if (!toast) {\n        toast = document.createElement('div');\n        toast.classList.add(defaultClassName$17);\n        while (this.childNodes[0]) {\n          toast.appendChild(this.childNodes[0]);\n        }\n      }\n\n      var button = util$1.findChild(toast, '.' + buttonClassName);\n      if (!button) {\n        button = util$1.findChild(toast, function (e) {\n          return util$1.match(e, '.button') || util$1.match(e, 'button');\n        });\n        if (button) {\n          button.classList.remove('button');\n          button.classList.add(buttonClassName);\n          toast.appendChild(button);\n        }\n      }\n\n      if (!util$1.findChild(toast, '.' + messageClassName)) {\n        var message = util$1.findChild(toast, '.message');\n        if (!message) {\n          message = document.createElement('div');\n          for (var i = toast.childNodes.length - 1; i >= 0; i--) {\n            if (toast.childNodes[i] !== button) {\n              message.insertBefore(toast.childNodes[i], message.firstChild);\n            }\n          }\n        }\n        message.classList.add(messageClassName);\n\n        toast.insertBefore(message, toast.firstChild);\n      }\n\n      if (toast.parentNode !== this) {\n        this.appendChild(toast);\n      }\n\n      ModifierUtil.initModifier(this, this._scheme);\n    }\n\n    /**\n     * @property visible\n     * @readonly\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is visible or not.[/en]\n     *   [ja]要素が見える場合に`true`。[/ja]\n     */\n\n    /**\n     * @method show\n     * @signature show([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"default\"`, `\"ascend\"` (Android), `\"lift\"` (iOS), `\"fall\"`, `\"fade\"` or `\"none\"`.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @description\n     *   [en]Show the element.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the displayed element[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method toggle\n     * @signature toggle([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"default\"`, `\"ascend\"` (Android), `\"lift\"` (iOS), `\"fall\"`, `\"fade\"` or `\"none\"`.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @description\n     *   [en]Toggle toast visibility.[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @method hide\n     * @signature hide([options])\n     * @param {Object} [options]\n     *   [en]Parameter object.[/en]\n     *   [ja]オプションを指定するオブジェクト。[/ja]\n     * @param {String} [options.animation]\n     *   [en]Animation name. Available animations are `\"default\"`, `\"ascend\"` (Android), `\"lift\"` (iOS), `\"fall\"`, `\"fade\"` or `\"none\"`.[/en]\n     *   [ja][/ja]\n     * @param {String} [options.animationOptions]\n     *   [en]Specify the animation's duration, delay and timing. E.g. `{duration: 0.2, delay: 0.4, timing: 'ease-in'}`.[/en]\n     *   [ja]アニメーション時のduration, delay, timingを指定します。e.g. {duration: 0.2, delay: 0.4, timing: 'ease-in'}[/ja]\n     * @description\n     *   [en]Hide toast.[/en]\n     *   [ja][/ja]\n     * @return {Promise}\n     *   [en]Resolves to the hidden element[/en]\n     *   [ja][/ja]\n     */\n\n    /**\n     * @param {String} name\n     * @param {Function} Animator\n     */\n\n  }, {\n    key: '_scheme',\n    get: function get$$1() {\n      return scheme$31;\n    }\n  }, {\n    key: '_toast',\n    get: function get$$1() {\n      return util$1.findChild(this, '.' + defaultClassName$17);\n    }\n  }], [{\n    key: 'registerAnimator',\n    value: function registerAnimator(name, Animator) {\n      if (!(Animator.prototype instanceof ToastAnimator)) {\n        util$1.throw('\"Animator\" param must inherit OnsToastElement.ToastAnimator');\n      }\n      _animatorDict$8[name] = Animator;\n    }\n  }, {\n    key: 'animators',\n    get: function get$$1() {\n      return _animatorDict$8;\n    }\n  }, {\n    key: 'ToastAnimator',\n    get: function get$$1() {\n      return ToastAnimator;\n    }\n  }]);\n  return ToastElement;\n}(BaseDialogElement);\n\nonsElements.Toast = ToastElement;\ncustomElements.define('ons-toast', ToastElement);\n\n/*\nCopyright 2013-2015 ASIAL CORPORATION\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n*/\n\n/**\n * @element ons-toolbar-button\n * @category page\n * @modifier material\n *   [en]Material Design toolbar button.[/en]\n *   [ja][/ja]\n * @modifier outline\n *   [en]A button with an outline.[/en]\n *   [ja]アウトラインをもったボタンを表示します。[/ja]\n * @description\n *   [en]Button component for ons-toolbar and ons-bottom-toolbar.[/en]\n *   [ja]ons-toolbarあるいはons-bottom-toolbarに設置できるボタン用コンポーネントです。[/ja]\n * @codepen aHmGL\n * @tutorial vanilla/Reference/page\n * @guide compilation.html#toolbar-compilation\n *   [en]Adding a toolbar[/en]\n *   [ja]ツールバーの追加[/ja]\n * @seealso ons-toolbar\n *   [en]The `<ons-toolbar>` component displays a navigation bar at the top of a page.[/en]\n *   [ja]ons-toolbarコンポーネント[/ja]\n * @seealso ons-back-button\n *   [en]The `<ons-back-button>` displays a back button in the navigation bar.[/en]\n *   [ja]ons-back-buttonコンポーネント[/ja]\n * @example\n * <ons-toolbar>\n *   <div class=\"left\">\n *     <ons-toolbar-button>\n *       Button\n *     </ons-toolbar-button>\n *   </div>\n *   <div class=\"center\">\n *     Title\n *   </div>\n *   <div class=\"right\">\n *     <ons-toolbar-button>\n *       <ons-icon icon=\"ion-navicon\" size=\"28px\"></ons-icon>\n *     </ons-toolbar-button>\n *   </div>\n * </ons-toolbar>\n */\n\nvar ToolbarButtonElement = function (_BaseButtonElement) {\n  inherits(ToolbarButtonElement, _BaseButtonElement);\n\n  function ToolbarButtonElement() {\n    classCallCheck(this, ToolbarButtonElement);\n    return possibleConstructorReturn(this, (ToolbarButtonElement.__proto__ || Object.getPrototypeOf(ToolbarButtonElement)).apply(this, arguments));\n  }\n\n  createClass(ToolbarButtonElement, [{\n    key: '_scheme',\n\n\n    /**\n     * @attribute modifier\n     * @type {String}\n     * @description\n     *   [en]The appearance of the button.[/en]\n     *   [ja]ボタンの表現を指定します。[/ja]\n     */\n\n    /**\n     * @attribute icon\n     * @type {String}\n     * @description\n     *  [en]Creates an `ons-icon` component with this string.[/en]\n     *  [ja]`ons-icon`コンポーネントを悪性します。[/ja]\n     */\n\n    /**\n     * @attribute disabled\n     * @description\n     *   [en]Specify if button should be disabled.[/en]\n     *   [ja]ボタンを無効化する場合は指定してください。[/ja]\n     */\n\n    /**\n     * @property disabled\n     * @type {Boolean}\n     * @description\n     *   [en]Whether the element is disabled or not.[/en]\n     *   [ja]無効化されている場合に`true`。[/ja]\n     */\n\n    get: function get$$1() {\n      return { '': 'toolbar-button--*' };\n    }\n  }, {\n    key: '_defaultClassName',\n    get: function get$$1() {\n      return 'toolbar-button';\n    }\n  }, {\n    key: '_rippleOpt',\n    get: function get$$1() {\n      return [this, undefined, { center: '', 'size': 'contain', 'background': 'transparent' }];\n    }\n  }]);\n  return ToolbarButtonElement;\n}(BaseButtonElement);\n\nonsElements.ToolbarButton = ToolbarButtonElement;\ncustomElements.define('ons-toolbar-button', ToolbarButtonElement);\n\n// Add and register Custom Elements\nsetup(ons$1); // Setup initial listeners\nwindow._superSecretOns = ons$1;\n\nreturn ons$1;\n\n})));\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib25zZW51aS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vY29yZS9zcmMvb25zL3BsYXRmb3JtLmpzIiwiLi4vLi4vY29yZS9zcmMvcG9seWZpbGxzL3BvbHlmaWxsLXN3aXRjaGVzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZ2xvYmFsLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29yZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLW9iamVjdC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kb20tY3JlYXRlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1wcmltaXRpdmUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9wZXJ0eS1kZXNjLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faGlkZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hhcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VpZC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2xpYnJhcnkuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zaGFyZWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mdW5jdGlvbi10by1zdHJpbmcuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWRlZmluZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jdHguanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19leHBvcnQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faW9iamVjdC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RlZmluZWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pb2JqZWN0LmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdvcGQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtcHJvdG8uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9zZXQtcHJvdG90eXBlLW9mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlcmF0b3JzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC1rZXkuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qta2V5cy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcHMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19odG1sLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWNyZWF0ZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NldC10by1zdHJpbmctdGFnLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jcmVhdGUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ3BvLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hZGQtdG8tdW5zY29wYWJsZXMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLWluc3RhbmNlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZm9yLW9mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXNwZWNpZXMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19tZXRhLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdmFsaWRhdGUtY29sbGVjdGlvbi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24tc3Ryb25nLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZXRlY3QuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnNldC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWZyb20taXRlcmFibGUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXRvLWpzb24uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zZXQudG8tanNvbi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NldC1jb2xsZWN0aW9uLW9mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc2V0Lm9mLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LWNvbGxlY3Rpb24tZnJvbS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnNldC5mcm9tLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vc2V0LmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWFwLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcubWFwLnRvLWpzb24uanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXAub2YuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5tYXAuZnJvbS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL21hcC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BzLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWFzc2lnbi5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2NvbGxlY3Rpb24td2Vhay5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstbWFwLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcud2Vhay1tYXAub2YuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy53ZWFrLW1hcC5mcm9tLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vd2Vhay1tYXAuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mcm9tLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vYXJyYXkvZnJvbS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ab25zZW51aS9jdXN0b20tZWxlbWVudHMvc3JjL1V0aWxpdGllcy5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ab25zZW51aS9jdXN0b20tZWxlbWVudHMvc3JjL0N1c3RvbUVsZW1lbnRTdGF0ZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ab25zZW51aS9jdXN0b20tZWxlbWVudHMvc3JjL0N1c3RvbUVsZW1lbnRJbnRlcm5hbHMuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9Eb2N1bWVudENvbnN0cnVjdGlvbk9ic2VydmVyLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BvbnNlbnVpL2N1c3RvbS1lbGVtZW50cy9zcmMvRGVmZXJyZWQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9DdXN0b21FbGVtZW50UmVnaXN0cnkuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9QYXRjaC9OYXRpdmUuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9BbHJlYWR5Q29uc3RydWN0ZWRNYXJrZXIuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9QYXRjaC9IVE1MRWxlbWVudC5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ab25zZW51aS9jdXN0b20tZWxlbWVudHMvc3JjL1BhdGNoL0ludGVyZmFjZS9QYXJlbnROb2RlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BvbnNlbnVpL2N1c3RvbS1lbGVtZW50cy9zcmMvUGF0Y2gvRG9jdW1lbnQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9QYXRjaC9Ob2RlLmpzIiwiLi4vLi4vbm9kZV9tb2R1bGVzL0BvbnNlbnVpL2N1c3RvbS1lbGVtZW50cy9zcmMvUGF0Y2gvSW50ZXJmYWNlL0NoaWxkTm9kZS5qcyIsIi4uLy4uL25vZGVfbW9kdWxlcy9Ab25zZW51aS9jdXN0b20tZWxlbWVudHMvc3JjL1BhdGNoL0VsZW1lbnQuanMiLCIuLi8uLi9ub2RlX21vZHVsZXMvQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9jdXN0b20tZWxlbWVudHMuanMiLCIuLi8uLi9jb3JlL3NyYy9wb2x5ZmlsbHMvTXV0YXRpb25PYnNlcnZlckAwLjcuMjIvTXV0YXRpb25PYnNlcnZlci5qcyIsIi4uLy4uL2NvcmUvc3JjL3BvbHlmaWxscy9zZXRJbW1lZGlhdGVAMS4wLjIrbW9kL3NldEltbWVkaWF0ZS5qcyIsIi4uLy4uL2NvcmUvc3JjL3BvbHlmaWxscy9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL3ZlbmRvci92aWV3cG9ydC5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9taWNyb2V2ZW50LmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL2VsZW1lbnRzLmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL3N0eWxlci5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9hdXRvc3R5bGUuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbC5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9hbmltYXRpb24tb3B0aW9ucy1wYXJzZXIuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvdXRpbC5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9wYWdlLWF0dHJpYnV0ZS1leHByZXNzaW9uLmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL2ludGVybmFsL2ludGVybmFsLmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnkuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW50ZXJuYWwvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXIuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW50ZXJuYWwvaW5kZXguanMiLCIuLi8uLi9jb3JlL3NyYy9zZXR1cC5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9hbmltaXQuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvZ2VzdHVyZS1kZXRlY3Rvci5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9jb250ZW50LXJlYWR5LmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL2ludGVybmFsL3RvYXN0LXF1ZXVlLmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL25vdGlmaWNhdGlvbi5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9hY3Rpb24tc2hlZXQuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvb3JpZW50YXRpb24uanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvbW9kaWZpZXIuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvc29mdHdhcmUta2V5Ym9hcmQuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvZG9vcmxvY2suanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvcGFnZS1sb2FkZXIuanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW5kZXguanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9iYXNlL2Jhc2UtZWxlbWVudC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy10ZW1wbGF0ZS5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1pZi5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9iYXNlLWFuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvb25zL2lwaG9uZXgtcGF0Y2guanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtYWN0aW9uLXNoZWV0L2FuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvYmFzZS9iYXNlLWRpYWxvZy5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1hY3Rpb24tc2hlZXQvaW5kZXguanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9iYXNlL2Jhc2UtYnV0dG9uLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWFjdGlvbi1zaGVldC1idXR0b24uanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtYWxlcnQtZGlhbG9nL2FuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWFsZXJ0LWRpYWxvZy9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1hbGVydC1kaWFsb2ctYnV0dG9uLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWJhY2stYnV0dG9uLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWJvdHRvbS10b29sYmFyLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWJ1dHRvbi5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1jYXJkLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWNhcm91c2VsLWl0ZW0uanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW50ZXJuYWwvc3dpcGVyLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWNhcm91c2VsLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWNvbC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1kaWFsb2cvYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtZGlhbG9nL2luZGV4LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWZhYi5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1nZXN0dXJlLWRldGVjdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWljb24uanMiLCIuLi8uLi9jb3JlL3NyYy9vbnMvaW50ZXJuYWwvbGF6eS1yZXBlYXQuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbGF6eS1yZXBlYXQuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbGlzdC1oZWFkZXIuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbGlzdC10aXRsZS5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1saXN0LWl0ZW0vYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbGlzdC1pdGVtL2luZGV4LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLWxpc3QuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9iYXNlL2Jhc2UtaW5wdXQuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtaW5wdXQuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9iYXNlL2Jhc2UtY2hlY2tib3guanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtY2hlY2tib3guanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtcmFkaW8uanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtc2VhcmNoLWlucHV0LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLW1vZGFsL2FuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLW1vZGFsL2ZhZGUtYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbW9kYWwvbGlmdC1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1tb2RhbC9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL29ucy9pbnRlcm5hbC9zd2lwZS1yZXZlYWwuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbmF2aWdhdG9yL2FuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLW5hdmlnYXRvci9pb3Mtc3dpcGUtYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbmF2aWdhdG9yL2lvcy1zbGlkZS1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3IvaW9zLWxpZnQtYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtbmF2aWdhdG9yL2lvcy1mYWRlLWFuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLW5hdmlnYXRvci9tZC1zbGlkZS1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3IvbWQtbGlmdC1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3IvbWQtZmFkZS1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3Ivbm9uZS1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1uYXZpZ2F0b3IvaW5kZXguanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtdG9vbGJhci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1wYWdlLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXBvcG92ZXIvYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtcG9wb3Zlci9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1wcm9ncmVzcy1iYXIuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtcHJvZ3Jlc3MtY2lyY3VsYXIuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtcHVsbC1ob29rLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXJhbmdlLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXJpcHBsZS9hbmltYXRvci1jc3MuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtcmlwcGxlL2luZGV4LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXJvdy5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zZWdtZW50LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXNlbGVjdC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zcGVlZC1kaWFsLWl0ZW0uanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtc3BlZWQtZGlhbC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zcGxpdHRlci1jb250ZW50LmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXNwbGl0dGVyLW1hc2suanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtc3BsaXR0ZXIvYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtc3BsaXR0ZXIvb3ZlcmxheS1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zcGxpdHRlci9wdXNoLWFuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXNwbGl0dGVyL3JldmVhbC1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zcGxpdHRlci9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy1zcGxpdHRlci1zaWRlLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXN3aXRjaC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy10YWJiYXIvaW5kZXguanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtdGFiLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXRvYXN0L2FuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXRvYXN0L2ZhZGUtYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtdG9hc3QvYXNjZW5kLWFuaW1hdG9yLmpzIiwiLi4vLi4vY29yZS9zcmMvZWxlbWVudHMvb25zLXRvYXN0L2xpZnQtYW5pbWF0b3IuanMiLCIuLi8uLi9jb3JlL3NyYy9lbGVtZW50cy9vbnMtdG9hc3QvZmFsbC1hbmltYXRvci5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy10b2FzdC9pbmRleC5qcyIsIi4uLy4uL2NvcmUvc3JjL2VsZW1lbnRzL29ucy10b29sYmFyLWJ1dHRvbi5qcyIsIi4uLy4uL2NvcmUvc3JjL2luZGV4LnVtZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG4vLyBTYXZlIEhUTUxFbGVtZW50IG9iamVjdCBiZWZvcmUgQ3VzdG9tIEVsZW1lbnRzIHBvbHlmaWxsIHBhdGNoIGdsb2JhbCBIVE1MRWxlbWVudC5cbmNvbnN0IE5hdGl2ZUhUTUxFbGVtZW50ID0gd2luZG93LkhUTUxFbGVtZW50O1xuXG4vKipcbiAqIEBvYmplY3Qgb25zLnBsYXRmb3JtXG4gKiBAY2F0ZWdvcnkgdXRpbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1VdGlsaXR5IG1ldGhvZHMgdG8gZGV0ZWN0IGN1cnJlbnQgcGxhdGZvcm0uWy9lbl1cbiAqICAgW2phXeePvuWcqOWun+ihjOOBleOCjOOBpuOBhOOCi+ODl+ODqeODg+ODiOODleOCqeODvOODoOOCkuaknOefpeOBmeOCi+OBn+OCgeOBruODpuODvOODhuOCo+ODquODhuOCo+ODoeOCveODg+ODieOCkuWPjuOCgeOBn+OCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gKi9cbmNsYXNzIFBsYXRmb3JtIHtcblxuICAvKipcbiAgICogQWxsIGVsZW1lbnRzIHdpbGwgYmUgcmVuZGVyZWQgYXMgaWYgdGhlIGFwcCB3YXMgcnVubmluZyBvbiB0aGlzIHBsYXRmb3JtLlxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKi9cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5fc2VsZWN0ZWRQbGF0Zm9ybSA9IG51bGw7XG4gICAgdGhpcy5faWdub3JlUGxhdGZvcm1TZWxlY3QgPSBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNlbGVjdFxuICAgKiBAc2lnbmF0dXJlIHNlbGVjdChwbGF0Zm9ybSlcbiAgICogQHBhcmFtICB7c3RyaW5nfSBwbGF0Zm9ybSBOYW1lIG9mIHRoZSBwbGF0Zm9ybS5cbiAgICogICBbZW5dUG9zc2libGUgdmFsdWVzIGFyZTogXCJvcGVyYVwiLCBcImZpcmVmb3hcIiwgXCJzYWZhcmlcIiwgXCJjaHJvbWVcIiwgXCJpZVwiLCBcImFuZHJvaWRcIiwgXCJibGFja2JlcnJ5XCIsIFwiaW9zXCIgb3IgXCJ3cFwiLlsvZW5dXG4gICAqICAgW2phXVwib3BlcmFcIiwgXCJmaXJlZm94XCIsIFwic2FmYXJpXCIsIFwiY2hyb21lXCIsIFwiaWVcIiwgXCJhbmRyb2lkXCIsIFwiYmxhY2tiZXJyeVwiLCBcImlvc1wiLCBcIndwXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2V0cyB0aGUgcGxhdGZvcm0gdXNlZCB0byByZW5kZXIgdGhlIGVsZW1lbnRzLiBVc2VmdWwgZm9yIHRlc3RpbmcuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44KS5o+P55S744GZ44KL44Gf44KB44Gr5Yip55So44GZ44KL44OX44Op44OD44OI44OV44Kp44O844Og5ZCN44KS6Kit5a6a44GX44G+44GZ44CC44OG44K544OI44Gr5L6/5Yip44Gn44GZ44CCWy9qYV1cbiAgICovXG4gIHNlbGVjdChwbGF0Zm9ybSkge1xuICAgIGlmICh0eXBlb2YgcGxhdGZvcm0gPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLl9zZWxlY3RlZFBsYXRmb3JtID0gcGxhdGZvcm0udHJpbSgpLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxuICB9XG5cbiAgX2dldFNlbGVjdGVkUGxhdGZvcm0oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lnbm9yZVBsYXRmb3JtU2VsZWN0ID8gbnVsbCA6IHRoaXMuX3NlbGVjdGVkUGxhdGZvcm07XG4gIH1cblxuICBfcnVuT25BY3R1YWxQbGF0Zm9ybShmbikge1xuICAgIHRoaXMuX2lnbm9yZVBsYXRmb3JtU2VsZWN0ID0gdHJ1ZTtcbiAgICBjb25zdCByZXN1bHQgPSBmbigpO1xuICAgIHRoaXMuX2lnbm9yZVBsYXRmb3JtU2VsZWN0ID0gZmFsc2U7XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEdlbmVyYWxcbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzV2ViVmlld1xuICAgKiBAc2lnbmF0dXJlIGlzV2ViVmlldygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgYXBwIGlzIHJ1bm5pbmcgaW4gQ29yZG92YS5bL2VuXVxuICAgKiAgIFtqYV1Db3Jkb3Zh5YaF44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzV2ViVmlldygpIHtcbiAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnIHx8IGRvY3VtZW50LnJlYWR5U3RhdGUgPT0gJ3VuaW5pdGlhbGl6ZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2lzV2ViVmlldygpIG1ldGhvZCBpcyBhdmFpbGFibGUgYWZ0ZXIgZG9tIGNvbnRlbnRzIGxvYWRlZC4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gISEod2luZG93LmNvcmRvdmEgfHwgd2luZG93LnBob25lZ2FwIHx8IHdpbmRvdy5QaG9uZUdhcCk7XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gaU9TIGRldmljZXNcbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzSVBob25lXG4gICAqIEBzaWduYXR1cmUgaXNJUGhvbmUoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgaVBob25lLlsvZW5dXG4gICAqICAgW2phXWlQaG9uZeS4iuOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0lQaG9uZSgpIHtcbiAgICByZXR1cm4gL2lQaG9uZS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lQaG9uZVhcbiAgICogQHNpZ25hdHVyZSBpc0lQaG9uZVgoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgaVBob25lIFgsIFhTLCBYUyBNYXgsIFhSLCAxMSwgMTEgUHJvLCAxMSBQcm8gTWF4LCAxMiBNaW5pLCAxMiwgMTIgUHJvIG9yIDEyIFBybyBNYXguWy9lbl1cbiAgICogICBbamFdaVBob25lIFgg44KEIFhT44CBWFMgTWF444CBWFLjgIExMeOAgTExIFByb+OAgTExIFBybyBNYXjjgIExMiBNaW5p44CBMTLjgIExMiBQcm/jgIHjgb7jgZ/jga8xMiBQcm8gTWF45LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSVBob25lWCgpIHtcbiAgICAvLyBpT1MgV2ViVmlld3Mgb24gdGhlIHNhbWUgaU9TIHZlcnNpb24gaGF2ZSB0aGUgc2FtZSB1c2VyIGFnZW50LlxuICAgIC8vIFdlIGNhbm5vdCBhdm9pZCB1c2luZyB3aW5kb3cuc2NyZWVuLlxuICAgIC8vIFdlIGFsc28gY2Fubm90IHVzZSBjb3Jkb3ZhLXBsdWdpbi1kZXZpY2Ugc2luY2UgaXRzIGJlaGF2aW9yIGlzIGRpZmZlcmVudCBiZXR3ZWVuIHNpbXVsYXRvcnMgYW5kIHJlYWwgZGV2aWNlcy5cbiAgICAvLyBUaGlzIHdvcmtzIHdlbGwgYm90aCBpbiBpT1MgU2FmYXJpIGFuZCAoVUl8V0spV2ViVmlldyBvZiBpUGhvbmUgWC5cbiAgICByZXR1cm4gdGhpcy5pc0lQaG9uZSgpICYmXG4gICAgICAoXG4gICAgICAgIC8vIFgsIFhTLCAxMSBQcm8sIDEyIE1pbmlcbiAgICAgICAgd2luZG93LnNjcmVlbi53aWR0aCA9PT0gMzc1ICYmIHdpbmRvdy5zY3JlZW4uaGVpZ2h0ID09PSA4MTIgfHwgLy8gcG9ydHJhaXRcbiAgICAgICAgd2luZG93LnNjcmVlbi53aWR0aCA9PT0gODEyICYmIHdpbmRvdy5zY3JlZW4uaGVpZ2h0ID09PSAzNzUgfHwgLy8gbGFuZHNjYXBlXG5cbiAgICAgICAgLy8gWFMgTWF4LCBYUiwgMTEsIDExIFBybyBNYXhcbiAgICAgICAgd2luZG93LnNjcmVlbi53aWR0aCA9PT0gNDE0ICYmIHdpbmRvdy5zY3JlZW4uaGVpZ2h0ID09PSA4OTYgfHwgLy8gcG9ydHJhaXRcbiAgICAgICAgd2luZG93LnNjcmVlbi53aWR0aCA9PT0gODk2ICYmIHdpbmRvdy5zY3JlZW4uaGVpZ2h0ID09PSA0MTQgfHwgLy8gbGFuZHNjYXBlXG5cbiAgICAgICAgLy8gMTIsIDEyIFByb1xuICAgICAgICB3aW5kb3cuc2NyZWVuLndpZHRoID09PSAzOTAgJiYgd2luZG93LnNjcmVlbi5oZWlnaHQgPT09IDg0NCB8fCAvLyBwb3J0cmFpdFxuICAgICAgICB3aW5kb3cuc2NyZWVuLndpZHRoID09PSA4NDQgJiYgd2luZG93LnNjcmVlbi5oZWlnaHQgPT09IDM5MCB8fCAvLyBsYW5kc2NhcGVcblxuICAgICAgICAvLyAxMiBQcm8gTWF4XG4gICAgICAgIHdpbmRvdy5zY3JlZW4ud2lkdGggPT09IDQyOCAmJiB3aW5kb3cuc2NyZWVuLmhlaWdodCA9PT0gOTI2IHx8IC8vIHBvcnRyYWl0XG4gICAgICAgIHdpbmRvdy5zY3JlZW4ud2lkdGggPT09IDkyNiAmJiB3aW5kb3cuc2NyZWVuLmhlaWdodCA9PT0gNDI4ICAvLyBsYW5kc2NhcGVcbiAgICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lQYWRcbiAgICogQHNpZ25hdHVyZSBpc0lQYWQoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBkZXZpY2UgaXMgaVBhZC5bL2VuXVxuICAgKiAgIFtqYV1pUGFk5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSVBhZCgpIHtcbiAgICByZXR1cm4gL2lQYWQvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpIHx8IHRoaXMuaXNJUGFkT1MoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNJUG9kKCkge1xuICAgIHJldHVybiAvaVBvZC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gaU9TIHZlcnNpb25zXG4gIC8vLS0tLS0tLS0tLS0tLS0tLVxuICAvKipcbiAgICogQG1ldGhvZCBpc0lPU1xuICAgKiBAc2lnbmF0dXJlIGlzSU9TKFtmb3JjZUFjdHVhbFBsYXRmb3JtXSlcbiAgICogQHBhcmFtIHtCb29sZWFufSBmb3JjZUFjdHVhbFBsYXRmb3JtXG4gICAqICAgW2VuXUlmIHRydWUsIHNlbGVjdGVkIHBsYXRmb3JtIGlzIGlnbm9yZWQgYW5kIHRoZSBhY3R1YWwgcGxhdGZvcm0gaXMgcmV0dXJuZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgT1MgaXMgaU9TLiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1pT1PkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNJT1MoZm9yY2VBY3R1YWxQbGF0Zm9ybSkge1xuICAgIGlmICghZm9yY2VBY3R1YWxQbGF0Zm9ybSAmJiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkgPT09ICdpb3MnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAvaU9TL2kudGVzdChkZXZpY2UucGxhdGZvcm0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gL2lQaG9uZXxpUGFkfGlQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpIHx8IHRoaXMuaXNJUGFkT1MoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lPUzdhYm92ZVxuICAgKiBAc2lnbmF0dXJlIGlzSU9TN2Fib3ZlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgaU9TIHZlcnNpb24gaXMgNyBvciBhYm92ZS5bL2VuXVxuICAgKiAgIFtqYV1pT1M35Lul5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSU9TN2Fib3ZlKCkge1xuICAgIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAoL2lPUy9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKSAmJiAocGFyc2VJbnQoZGV2aWNlLnZlcnNpb24uc3BsaXQoJy4nKVswXSkgPj0gNykpO1xuICAgIH0gZWxzZSBpZiAoL2lQaG9uZXxpUGFkfGlQb2QvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICBjb25zdCB2ZXIgPSAobmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvXFxiWzAtOV0rX1swLTldKyg/Ol9bMC05XSspP1xcYi8pIHx8IFsnJ10pWzBdLnJlcGxhY2UoL18vZywgJy4nKTtcbiAgICAgIHJldHVybiAocGFyc2VJbnQodmVyLnNwbGl0KCcuJylbMF0pID49IDcpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lQYWRPU1xuICAgKiBAc2lnbmF0dXJlIGlzSVBhZE9TKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgT1MgaXMgaVBhZE9TLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0lQYWRPUygpIHtcbiAgICAvLyBUaGUgaVBhZE9TIFVzZXIgQWdlbnQgc3RyaW5nIGlzIHRoZSBzYW1lIGFzIE1hY09TIHNvIGFzIGFcbiAgICAvLyB3b3JrYXJvdW5kIHdlIHRlc3QgdGhlIG1heCB0b3VjaCBwb2ludHMsIHdoaWNoIGlzIDUgZm9yXG4gICAgLy8gaVBhZHMgYW5kIDAgZm9yIGRlc2t0b3AgYnJvd3NlcnMuXG4gICAgcmV0dXJuICEhKC9NYWNpbnRvc2gvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpICYmIG5hdmlnYXRvci5tYXhUb3VjaFBvaW50cyAmJiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPT09IDUpO1xuICB9XG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIGlPUyBicm93c2Vyc1xuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNJT1NTYWZhcmlcbiAgICogQHNpZ25hdHVyZSBpc0lPU1NhZmFyaSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgYXBwIGlzIHJ1bm5pbmcgaW4gaU9TIFNhZmFyaS5bL2VuXVxuICAgKiAgIFtqYV1pT1MgU2FmYXJp44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSU9TU2FmYXJpKCkge1xuICAgIGNvbnN0IG5hdmlnYXRvciA9IHdpbmRvdy5uYXZpZ2F0b3I7XG4gICAgY29uc3QgdWEgPSBuYXZpZ2F0b3IudXNlckFnZW50O1xuXG4gICAgcmV0dXJuICEhKHRoaXMuaXNJT1MoKSAmJiB1YS5pbmRleE9mKCdTYWZhcmknKSAhPT0gLTEgJiYgdWEuaW5kZXhPZignVmVyc2lvbicpICE9PSAtMSAmJiAhbmF2aWdhdG9yLnN0YW5kYWxvbmUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNXS1dlYlZpZXdcbiAgICogQHNpZ25hdHVyZSBpc1dLV2ViVmlldygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgYXBwIGlzIHJ1bm5pbmcgaW4gV0tXZWJWaWV3LlsvZW5dXG4gICAqICAgW2phXVdLV2ViVmlld+OBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc1dLV2ViVmlldygpIHtcbiAgICBjb25zdCBsdGU5ID0gL2NvbnN0cnVjdG9yL2kudGVzdChOYXRpdmVIVE1MRWxlbWVudCk7XG4gICAgcmV0dXJuICEhKHRoaXMuaXNJT1MoKSAmJiB3aW5kb3cud2Via2l0ICYmIHdpbmRvdy53ZWJraXQubWVzc2FnZUhhbmRsZXJzICYmIHdpbmRvdy5pbmRleGVkREIgJiYgIWx0ZTkpO1xuICB9XG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIEFuZHJvaWQgZGV2aWNlc1xuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNBbmRyb2lkUGhvbmVcbiAgICogQHNpZ25hdHVyZSBpc0FuZHJvaWRQaG9uZSgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGRldmljZSBpcyBBbmRyb2lkIHBob25lLlsvZW5dXG4gICAqICAgW2phXUFuZHJvaWTmkLrluK/kuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNBbmRyb2lkUGhvbmUoKSB7XG4gICAgcmV0dXJuIC9BbmRyb2lkL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSAmJiAvTW9iaWxlL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzQW5kcm9pZFRhYmxldFxuICAgKiBAc2lnbmF0dXJlIGlzQW5kcm9pZFRhYmxldCgpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGRldmljZSBpcyBBbmRyb2lkIHRhYmxldC5bL2VuXVxuICAgKiAgIFtqYV1BbmRyb2lk44K/44OW44Os44OD44OI5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzQW5kcm9pZFRhYmxldCgpIHtcbiAgICByZXR1cm4gL0FuZHJvaWQvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpICYmICEvTW9iaWxlL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgfVxuXG4gIC8vLS0tLS0tLS0tLS0tLS0tLVxuICAvLyBBbmRyb2lkIHZlcnNpb25zXG4gIC8vLS0tLS0tLS0tLS0tLS0tLVxuICAvKipcbiAgICogQG1ldGhvZCBpc0FuZHJvaWRcbiAgICogQHNpZ25hdHVyZSBpc0FuZHJvaWQoW2ZvcmNlQWN0dWFsUGxhdGZvcm1dKVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlQWN0dWFsUGxhdGZvcm1cbiAgICogICBbZW5dSWYgdHJ1ZSwgc2VsZWN0ZWQgcGxhdGZvcm0gaXMgaWdub3JlZCBhbmQgdGhlIGFjdHVhbCBwbGF0Zm9ybSBpcyByZXR1cm5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBPUyBpcyBBbmRyb2lkLiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1BbmRyb2lk5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzQW5kcm9pZChmb3JjZUFjdHVhbFBsYXRmb3JtKSB7XG4gICAgaWYgKCFmb3JjZUFjdHVhbFBsYXRmb3JtICYmIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSA9PT0gJ2FuZHJvaWQnO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAvQW5kcm9pZC9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIC9BbmRyb2lkL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbiAgICB9XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gT3RoZXIgZGV2aWNlc1xuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNXUFxuICAgKiBAc2lnbmF0dXJlIGlzV1AoW2ZvcmNlQWN0dWFsUGxhdGZvcm1dKVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlQWN0dWFsUGxhdGZvcm1cbiAgICogICBbZW5dSWYgdHJ1ZSwgc2VsZWN0ZWQgcGxhdGZvcm0gaXMgaWdub3JlZCBhbmQgdGhlIGFjdHVhbCBwbGF0Zm9ybSBpcyByZXR1cm5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBPUyBpcyBXaW5kb3dzIHBob25lLiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNXUChmb3JjZUFjdHVhbFBsYXRmb3JtKSB7XG4gICAgaWYgKCFmb3JjZUFjdHVhbFBsYXRmb3JtICYmIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSA9PT0gJ3dwJztcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGRldmljZSA9PT0gJ29iamVjdCcgJiYgIS9icm93c2VyL2kudGVzdChkZXZpY2UucGxhdGZvcm0pKSB7XG4gICAgICByZXR1cm4gL1dpbjMyTlR8V2luQ0UvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAvV2luZG93cyBQaG9uZXxJRU1vYmlsZXxXUERlc2t0b3AvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzQmxhY2tCZXJyeVxuICAgKiBAc2lnbmF0dXJlIGlzQmxhY2tCZXJyeShbZm9yY2VBY3R1YWxQbGF0Zm9ybV0pXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZm9yY2VBY3R1YWxQbGF0Zm9ybVxuICAgKiAgIFtlbl1JZiB0cnVlLCBzZWxlY3RlZCBwbGF0Zm9ybSBpcyBpZ25vcmVkIGFuZCB0aGUgYWN0dWFsIHBsYXRmb3JtIGlzIHJldHVybmVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGRldmljZSBpcyBCbGFja0JlcnJ5LiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1CbGFja0JlcnJ55LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzQmxhY2tCZXJyeShmb3JjZUFjdHVhbFBsYXRmb3JtKSB7XG4gICAgaWYgKCFmb3JjZUFjdHVhbFBsYXRmb3JtICYmIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSA9PT0gJ2JsYWNrYmVycnknO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0JyAmJiAhL2Jyb3dzZXIvaS50ZXN0KGRldmljZS5wbGF0Zm9ybSkpIHtcbiAgICAgIHJldHVybiAvQmxhY2tCZXJyeS9pLnRlc3QoZGV2aWNlLnBsYXRmb3JtKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIC9CbGFja0JlcnJ5fFJJTSBUYWJsZXQgT1N8QkIxMC9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCk7XG4gICAgfVxuICB9XG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIE90aGVyIGJyb3dzZXJzXG4gIC8vLS0tLS0tLS0tLS0tLS0tLVxuICAvKipcbiAgICogQG1ldGhvZCBpc09wZXJhXG4gICAqIEBzaWduYXR1cmUgaXNPcGVyYShbZm9yY2VBY3R1YWxQbGF0Zm9ybV0pXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZm9yY2VBY3R1YWxQbGF0Zm9ybVxuICAgKiAgIFtlbl1JZiB0cnVlLCBzZWxlY3RlZCBwbGF0Zm9ybSBpcyBpZ25vcmVkIGFuZCB0aGUgYWN0dWFsIHBsYXRmb3JtIGlzIHJldHVybmVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgT3BlcmEuIEJ5IGRlZmF1bHQgd2lsbCByZXR1cm4gbWFudWFsbHkgc2VsZWN0ZWQgcGxhdGZvcm0gaWYgaXQgaXMgc2V0LlsvZW5dXG4gICAqICAgW2phXU9wZXJh5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzT3BlcmEoZm9yY2VBY3R1YWxQbGF0Zm9ybSkge1xuICAgIGlmICghZm9yY2VBY3R1YWxQbGF0Zm9ybSAmJiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkgPT09ICdvcGVyYSc7XG4gICAgfVxuXG4gICAgcmV0dXJuICghIXdpbmRvdy5vcGVyYSB8fCBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJyBPUFIvJykgPj0gMCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0ZpcmVmb3hcbiAgICogQHNpZ25hdHVyZSBpc0ZpcmVmb3goW2ZvcmNlQWN0dWFsUGxhdGZvcm1dKVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlQWN0dWFsUGxhdGZvcm1cbiAgICogICBbZW5dSWYgdHJ1ZSwgc2VsZWN0ZWQgcGxhdGZvcm0gaXMgaWdub3JlZCBhbmQgdGhlIGFjdHVhbCBwbGF0Zm9ybSBpcyByZXR1cm5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBicm93c2VyIGlzIEZpcmVmb3guIEJ5IGRlZmF1bHQgd2lsbCByZXR1cm4gbWFudWFsbHkgc2VsZWN0ZWQgcGxhdGZvcm0gaWYgaXQgaXMgc2V0LlsvZW5dXG4gICAqICAgW2phXUZpcmVmb3jkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNGaXJlZm94KGZvcmNlQWN0dWFsUGxhdGZvcm0pIHtcbiAgICBpZiAoIWZvcmNlQWN0dWFsUGxhdGZvcm0gJiYgdGhpcy5fZ2V0U2VsZWN0ZWRQbGF0Zm9ybSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZ2V0U2VsZWN0ZWRQbGF0Zm9ybSgpID09PSAnZmlyZWZveCc7XG4gICAgfVxuXG4gICAgcmV0dXJuICh0eXBlb2YgSW5zdGFsbFRyaWdnZXIgIT09ICd1bmRlZmluZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzU2FmYXJpXG4gICAqIEBzaWduYXR1cmUgaXNTYWZhcmkoW2ZvcmNlQWN0dWFsUGxhdGZvcm1dKVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IGZvcmNlQWN0dWFsUGxhdGZvcm1cbiAgICogICBbZW5dSWYgdHJ1ZSwgc2VsZWN0ZWQgcGxhdGZvcm0gaXMgaWdub3JlZCBhbmQgdGhlIGFjdHVhbCBwbGF0Zm9ybSBpcyByZXR1cm5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBicm93c2VyIGlzIFNhZmFyaS4gQnkgZGVmYXVsdCB3aWxsIHJldHVybiBtYW51YWxseSBzZWxlY3RlZCBwbGF0Zm9ybSBpZiBpdCBpcyBzZXQuWy9lbl1cbiAgICogICBbamFdU2FmYXJp5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzU2FmYXJpKGZvcmNlQWN0dWFsUGxhdGZvcm0pIHtcbiAgICBpZiAoIWZvcmNlQWN0dWFsUGxhdGZvcm0gJiYgdGhpcy5fZ2V0U2VsZWN0ZWRQbGF0Zm9ybSgpKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZ2V0U2VsZWN0ZWRQbGF0Zm9ybSgpID09PSAnc2FmYXJpJztcbiAgICB9XG5cbiAgICByZXR1cm4gKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh3aW5kb3cuSFRNTEVsZW1lbnQpLmluZGV4T2YoJ0NvbnN0cnVjdG9yJykgPiAwKSB8fCAoZnVuY3Rpb24gKHApIHsgcmV0dXJuIHAudG9TdHJpbmcoKSA9PT0gJ1tvYmplY3QgU2FmYXJpUmVtb3RlTm90aWZpY2F0aW9uXScgfSkoIXdpbmRvd1snc2FmYXJpJ10gfHwgc2FmYXJpLnB1c2hOb3RpZmljYXRpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNDaHJvbWVcbiAgICogQHNpZ25hdHVyZSBpc0Nocm9tZShbZm9yY2VBY3R1YWxQbGF0Zm9ybV0pXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZm9yY2VBY3R1YWxQbGF0Zm9ybVxuICAgKiAgIFtlbl1JZiB0cnVlLCBzZWxlY3RlZCBwbGF0Zm9ybSBpcyBpZ25vcmVkIGFuZCB0aGUgYWN0dWFsIHBsYXRmb3JtIGlzIHJldHVybmVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgQ2hyb21lLiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1DaHJvbWXkuIrjgaflrp/ooYzjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaXNDaHJvbWUoZm9yY2VBY3R1YWxQbGF0Zm9ybSkge1xuICAgIGlmICghZm9yY2VBY3R1YWxQbGF0Zm9ybSAmJiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkgPT09ICdjaHJvbWUnO1xuICAgIH1cblxuICAgIHJldHVybiAoISF3aW5kb3cuY2hyb21lICYmICEoISF3aW5kb3cub3BlcmEgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCcgT1BSLycpID49IDApICYmICEobmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCcgRWRnZS8nKSA+PSAwKSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpc0lFXG4gICAqIEBzaWduYXR1cmUgaXNJRShbZm9yY2VBY3R1YWxQbGF0Zm9ybV0pXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZm9yY2VBY3R1YWxQbGF0Zm9ybVxuICAgKiAgIFtlbl1JZiB0cnVlLCBzZWxlY3RlZCBwbGF0Zm9ybSBpcyBpZ25vcmVkIGFuZCB0aGUgYWN0dWFsIHBsYXRmb3JtIGlzIHJldHVybmVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgSW50ZXJuZXQgRXhwbG9yZXIuIEJ5IGRlZmF1bHQgd2lsbCByZXR1cm4gbWFudWFsbHkgc2VsZWN0ZWQgcGxhdGZvcm0gaWYgaXQgaXMgc2V0LlsvZW5dXG4gICAqICAgW2phXUludGVybmV0IEV4cGxvcmVy5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzSUUoZm9yY2VBY3R1YWxQbGF0Zm9ybSkge1xuICAgIGlmICghZm9yY2VBY3R1YWxQbGF0Zm9ybSAmJiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkpIHtcbiAgICAgIHJldHVybiB0aGlzLl9nZXRTZWxlY3RlZFBsYXRmb3JtKCkgPT09ICdpZSc7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlIHx8ICEhZG9jdW1lbnQuZG9jdW1lbnRNb2RlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaXNFZGdlXG4gICAqIEBzaWduYXR1cmUgaXNFZGdlKFtmb3JjZUFjdHVhbFBsYXRmb3JtXSlcbiAgICogQHBhcmFtIHtCb29sZWFufSBmb3JjZUFjdHVhbFBsYXRmb3JtXG4gICAqICAgW2VuXUlmIHRydWUsIHNlbGVjdGVkIHBsYXRmb3JtIGlzIGlnbm9yZWQgYW5kIHRoZSBhY3R1YWwgcGxhdGZvcm0gaXMgcmV0dXJuZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgd2hldGhlciB0aGUgYnJvd3NlciBpcyBFZGdlLiBCeSBkZWZhdWx0IHdpbGwgcmV0dXJuIG1hbnVhbGx5IHNlbGVjdGVkIHBsYXRmb3JtIGlmIGl0IGlzIHNldC5bL2VuXVxuICAgKiAgIFtqYV1FZGdl5LiK44Gn5a6f6KGM44GV44KM44Gm44GE44KL44GL44Gp44GG44GL44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzRWRnZShmb3JjZUFjdHVhbFBsYXRmb3JtKSB7XG4gICAgaWYgKCFmb3JjZUFjdHVhbFBsYXRmb3JtICYmIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2dldFNlbGVjdGVkUGxhdGZvcm0oKSA9PT0gJ2VkZ2UnO1xuICAgIH1cblxuICAgIHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50LmluZGV4T2YoJyBFZGdlLycpID49IDA7XG4gIH1cblxuICAvLy0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gVXRpbGl0eSBmdW5jdGlvbnNcbiAgLy8tLS0tLS0tLS0tLS0tLS0tXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqL1xuICBnZXRNb2JpbGVPUygpIHtcbiAgICBpZiAodGhpcy5pc0FuZHJvaWQoKSkge1xuICAgICAgcmV0dXJuICdhbmRyb2lkJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lPUygpKSB7XG4gICAgICByZXR1cm4gJ2lvcyc7XG4gICAgfVxuICAgIGVsc2UgaWYgKHRoaXMuaXNXUCgpKSB7XG4gICAgICByZXR1cm4gJ3dwJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gJ290aGVyJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7U3RyaW5nfVxuICAgKi9cbiAgZ2V0SU9TRGV2aWNlKCkge1xuICAgIGlmICh0aGlzLmlzSVBob25lKCkpIHtcbiAgICAgIHJldHVybiAnaXBob25lJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lQYWQoKSkge1xuICAgICAgcmV0dXJuICdpcGFkJztcbiAgICB9XG4gICAgZWxzZSBpZiAodGhpcy5pc0lQb2QoKSkge1xuICAgICAgcmV0dXJuICdpcG9kJztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gJ25hJztcbiAgICB9XG4gIH1cbn1cblxuXG5leHBvcnQgZGVmYXVsdCBuZXcgUGxhdGZvcm0oKTtcbiIsIi8vIEZvciBAb25zZW51aS9jdXN0b20tZWxlbWVudHNcbmlmICh3aW5kb3cuY3VzdG9tRWxlbWVudHMpIHsgLy8gZXZlbiBpZiBuYXRpdmUgQ0UxIGltcGwgZXhpc3RzLCB1c2UgcG9seWZpbGxcbiAgICB3aW5kb3cuY3VzdG9tRWxlbWVudHMuZm9yY2VQb2x5ZmlsbCA9IHRydWU7XG59XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvODYjaXNzdWVjb21tZW50LTExNTc1OTAyOFxudmFyIGdsb2JhbCA9IG1vZHVsZS5leHBvcnRzID0gdHlwZW9mIHdpbmRvdyAhPSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuTWF0aCA9PSBNYXRoXG4gID8gd2luZG93IDogdHlwZW9mIHNlbGYgIT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5NYXRoID09IE1hdGggPyBzZWxmXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICA6IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5pZiAodHlwZW9mIF9fZyA9PSAnbnVtYmVyJykgX19nID0gZ2xvYmFsOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVuZGVmXG4iLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjEyJyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCIvLyA3LjEuMSBUb1ByaW1pdGl2ZShpbnB1dCBbLCBQcmVmZXJyZWRUeXBlXSlcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuLy8gaW5zdGVhZCBvZiB0aGUgRVM2IHNwZWMgdmVyc2lvbiwgd2UgZGlkbid0IGltcGxlbWVudCBAQHRvUHJpbWl0aXZlIGNhc2Vcbi8vIGFuZCB0aGUgc2Vjb25kIGFyZ3VtZW50IC0gZmxhZyAtIHByZWZlcnJlZCB0eXBlIGlzIGEgc3RyaW5nXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgUykge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIGl0O1xuICB2YXIgZm4sIHZhbDtcbiAgaWYgKFMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICh0eXBlb2YgKGZuID0gaXQudmFsdWVPZikgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAoIVMgJiYgdHlwZW9mIChmbiA9IGl0LnRvU3RyaW5nKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNvbnZlcnQgb2JqZWN0IHRvIHByaW1pdGl2ZSB2YWx1ZVwiKTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBkUCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuZXhwb3J0cy5mID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gZFAoTywgUCwgQXR0cmlidXRlcyk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoJ2dldCcgaW4gQXR0cmlidXRlcyB8fCAnc2V0JyBpbiBBdHRyaWJ1dGVzKSB0aHJvdyBUeXBlRXJyb3IoJ0FjY2Vzc29ycyBub3Qgc3VwcG9ydGVkIScpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChpdCwga2V5KTtcbn07XG4iLCJ2YXIgaWQgPSAwO1xudmFyIHB4ID0gTWF0aC5yYW5kb20oKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnLmNvbmNhdChrZXkgPT09IHVuZGVmaW5lZCA/ICcnIDoga2V5LCAnKV8nLCAoKytpZCArIHB4KS50b1N0cmluZygzNikpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZmFsc2U7XG4iLCJ2YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IChnbG9iYWxbU0hBUkVEXSA9IHt9KTtcblxuKG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIHN0b3JlW2tleV0gfHwgKHN0b3JlW2tleV0gPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB7fSk7XG59KSgndmVyc2lvbnMnLCBbXSkucHVzaCh7XG4gIHZlcnNpb246IGNvcmUudmVyc2lvbixcbiAgbW9kZTogcmVxdWlyZSgnLi9fbGlicmFyeScpID8gJ3B1cmUnIDogJ2dsb2JhbCcsXG4gIGNvcHlyaWdodDogJ8KpIDIwMjAgRGVuaXMgUHVzaGthcmV2ICh6bG9pcm9jay5ydSknXG59KTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ25hdGl2ZS1mdW5jdGlvbi10by1zdHJpbmcnLCBGdW5jdGlvbi50b1N0cmluZyk7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBTUkMgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi9fZnVuY3Rpb24tdG8tc3RyaW5nJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gfHwgKGdsb2JhbFtuYW1lXSA9IHt9KSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXSB8fCAoZXhwb3J0c1tQUk9UT1RZUEVdID0ge30pO1xuICB2YXIga2V5LCBvd24sIG91dCwgZXhwO1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gKG93biA/IHRhcmdldCA6IHNvdXJjZSlba2V5XTtcbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIGV4cCA9IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4dGVuZCBnbG9iYWxcbiAgICBpZiAodGFyZ2V0KSByZWRlZmluZSh0YXJnZXQsIGtleSwgb3V0LCB0eXBlICYgJGV4cG9ydC5VKTtcbiAgICAvLyBleHBvcnRcbiAgICBpZiAoZXhwb3J0c1trZXldICE9IG91dCkgaGlkZShleHBvcnRzLCBrZXksIGV4cCk7XG4gICAgaWYgKElTX1BST1RPICYmIGV4cFByb3RvW2tleV0gIT0gb3V0KSBleHBQcm90b1trZXldID0gb3V0O1xuICB9XG59O1xuZ2xvYmFsLmNvcmUgPSBjb3JlO1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCIvLyBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIGFuZCBub24tZW51bWVyYWJsZSBvbGQgVjggc3RyaW5nc1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXByb3RvdHlwZS1idWlsdGluc1xubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QoJ3onKS5wcm9wZXJ0eUlzRW51bWVyYWJsZSgwKSA/IE9iamVjdCA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY29mKGl0KSA9PSAnU3RyaW5nJyA/IGl0LnNwbGl0KCcnKSA6IE9iamVjdChpdCk7XG59O1xuIiwiLy8gNy4yLjEgUmVxdWlyZU9iamVjdENvZXJjaWJsZShhcmd1bWVudClcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PSB1bmRlZmluZWQpIHRocm93IFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uICBcIiArIGl0KTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCJ2YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIGdPUEQgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZ09QRCA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0lPYmplY3QoTyk7XG4gIFAgPSB0b1ByaW1pdGl2ZShQLCB0cnVlKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBnT1BEKE8sIFApO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhcyhPLCBQKSkgcmV0dXJuIGNyZWF0ZURlc2MoIXBJRS5mLmNhbGwoTywgUCksIE9bUF0pO1xufTtcbiIsIi8vIFdvcmtzIHdpdGggX19wcm90b19fIG9ubHkuIE9sZCB2OCBjYW4ndCB3b3JrIHdpdGggbnVsbCBwcm90byBvYmplY3RzLlxuLyogZXNsaW50LWRpc2FibGUgbm8tcHJvdG8gKi9cbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgY2hlY2sgPSBmdW5jdGlvbiAoTywgcHJvdG8pIHtcbiAgYW5PYmplY3QoTyk7XG4gIGlmICghaXNPYmplY3QocHJvdG8pICYmIHByb3RvICE9PSBudWxsKSB0aHJvdyBUeXBlRXJyb3IocHJvdG8gKyBcIjogY2FuJ3Qgc2V0IGFzIHByb3RvdHlwZSFcIik7XG59O1xubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHNldDogT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8ICgnX19wcm90b19fJyBpbiB7fSA/IC8vIGVzbGludC1kaXNhYmxlLWxpbmVcbiAgICBmdW5jdGlvbiAodGVzdCwgYnVnZ3ksIHNldCkge1xuICAgICAgdHJ5IHtcbiAgICAgICAgc2V0ID0gcmVxdWlyZSgnLi9fY3R4JykoRnVuY3Rpb24uY2FsbCwgcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKS5mKE9iamVjdC5wcm90b3R5cGUsICdfX3Byb3RvX18nKS5zZXQsIDIpO1xuICAgICAgICBzZXQodGVzdCwgW10pO1xuICAgICAgICBidWdneSA9ICEodGVzdCBpbnN0YW5jZW9mIEFycmF5KTtcbiAgICAgIH0gY2F0Y2ggKGUpIHsgYnVnZ3kgPSB0cnVlOyB9XG4gICAgICByZXR1cm4gZnVuY3Rpb24gc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pIHtcbiAgICAgICAgY2hlY2soTywgcHJvdG8pO1xuICAgICAgICBpZiAoYnVnZ3kpIE8uX19wcm90b19fID0gcHJvdG87XG4gICAgICAgIGVsc2Ugc2V0KE8sIHByb3RvKTtcbiAgICAgICAgcmV0dXJuIE87XG4gICAgICB9O1xuICAgIH0oe30sIGZhbHNlKSA6IHVuZGVmaW5lZCksXG4gIGNoZWNrOiBjaGVja1xufTtcbiIsIi8vIDE5LjEuMy4xOSBPYmplY3Quc2V0UHJvdG90eXBlT2YoTywgcHJvdG8pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7IHNldFByb3RvdHlwZU9mOiByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQgfSk7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNi5vYmplY3Quc2V0LXByb3RvdHlwZS1vZicpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LnNldFByb3RvdHlwZU9mO1xuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciB0ZXN0ID0ge307XG50ZXN0W3JlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpXSA9ICd6JztcbmlmICh0ZXN0ICsgJycgIT0gJ1tvYmplY3Qgel0nKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoT2JqZWN0LnByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xuICB9LCB0cnVlKTtcbn1cbiIsIi8vIDcuMS40IFRvSW50ZWdlclxudmFyIGNlaWwgPSBNYXRoLmNlaWw7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGlzTmFOKGl0ID0gK2l0KSA/IDAgOiAoaXQgPiAwID8gZmxvb3IgOiBjZWlsKShpdCk7XG59O1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgYXJyYXlJbmRleE9mID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKShmYWxzZSk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgbmFtZXMpIHtcbiAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBrZXk7XG4gIGZvciAoa2V5IGluIE8pIGlmIChrZXkgIT0gSUVfUFJPVE8pIGhhcyhPLCBrZXkpICYmIHJlc3VsdC5wdXNoKGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXMoTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+YXJyYXlJbmRleE9mKHJlc3VsdCwga2V5KSB8fCByZXN1bHQucHVzaChrZXkpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwidmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKE8sIFByb3BlcnRpZXMpIHtcbiAgYW5PYmplY3QoTyk7XG4gIHZhciBrZXlzID0gZ2V0S2V5cyhQcm9wZXJ0aWVzKTtcbiAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICB2YXIgaSA9IDA7XG4gIHZhciBQO1xuICB3aGlsZSAobGVuZ3RoID4gaSkgZFAuZihPLCBQID0ga2V5c1tpKytdLCBQcm9wZXJ0aWVzW1BdKTtcbiAgcmV0dXJuIE87XG59O1xuIiwidmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG5tb2R1bGUuZXhwb3J0cyA9IGRvY3VtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcbiIsIi8vIDE5LjEuMi4yIC8gMTUuMi4zLjUgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZFBzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi9fZW51bS1idWcta2V5cycpO1xudmFyIElFX1BST1RPID0gcmVxdWlyZSgnLi9fc2hhcmVkLWtleScpKCdJRV9QUk9UTycpO1xudmFyIEVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG4vLyBDcmVhdGUgb2JqZWN0IHdpdGggZmFrZSBgbnVsbGAgcHJvdG90eXBlOiB1c2UgaWZyYW1lIE9iamVjdCB3aXRoIGNsZWFyZWQgcHJvdG90eXBlXG52YXIgY3JlYXRlRGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gVGhyYXNoLCB3YXN0ZSBhbmQgc29kb215OiBJRSBHQyBidWdcbiAgdmFyIGlmcmFtZSA9IHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnaWZyYW1lJyk7XG4gIHZhciBpID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB2YXIgbHQgPSAnPCc7XG4gIHZhciBndCA9ICc+JztcbiAgdmFyIGlmcmFtZURvY3VtZW50O1xuICBpZnJhbWUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgcmVxdWlyZSgnLi9faHRtbCcpLmFwcGVuZENoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZS5zcmMgPSAnamF2YXNjcmlwdDonOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXNjcmlwdC11cmxcbiAgLy8gY3JlYXRlRGljdCA9IGlmcmFtZS5jb250ZW50V2luZG93Lk9iamVjdDtcbiAgLy8gaHRtbC5yZW1vdmVDaGlsZChpZnJhbWUpO1xuICBpZnJhbWVEb2N1bWVudCA9IGlmcmFtZS5jb250ZW50V2luZG93LmRvY3VtZW50O1xuICBpZnJhbWVEb2N1bWVudC5vcGVuKCk7XG4gIGlmcmFtZURvY3VtZW50LndyaXRlKGx0ICsgJ3NjcmlwdCcgKyBndCArICdkb2N1bWVudC5GPU9iamVjdCcgKyBsdCArICcvc2NyaXB0JyArIGd0KTtcbiAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTtcbiAgY3JlYXRlRGljdCA9IGlmcmFtZURvY3VtZW50LkY7XG4gIHdoaWxlIChpLS0pIGRlbGV0ZSBjcmVhdGVEaWN0W1BST1RPVFlQRV1bZW51bUJ1Z0tleXNbaV1dO1xuICByZXR1cm4gY3JlYXRlRGljdCgpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuY3JlYXRlIHx8IGZ1bmN0aW9uIGNyZWF0ZShPLCBQcm9wZXJ0aWVzKSB7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChPICE9PSBudWxsKSB7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eSgpO1xuICAgIEVtcHR5W1BST1RPVFlQRV0gPSBudWxsO1xuICAgIC8vIGFkZCBcIl9fcHJvdG9fX1wiIGZvciBPYmplY3QuZ2V0UHJvdG90eXBlT2YgcG9seWZpbGxcbiAgICByZXN1bHRbSUVfUFJPVE9dID0gTztcbiAgfSBlbHNlIHJlc3VsdCA9IGNyZWF0ZURpY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRQcyhyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsInZhciBkZWYgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgdGFnLCBzdGF0KSB7XG4gIGlmIChpdCAmJiAhaGFzKGl0ID0gc3RhdCA/IGl0IDogaXQucHJvdG90eXBlLCBUQUcpKSBkZWYoaXQsIFRBRywgeyBjb25maWd1cmFibGU6IHRydWUsIHZhbHVlOiB0YWcgfSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyICRpdGVyQ3JlYXRlID0gcmVxdWlyZSgnLi9faXRlci1jcmVhdGUnKTtcbnZhciBzZXRUb1N0cmluZ1RhZyA9IHJlcXVpcmUoJy4vX3NldC10by1zdHJpbmctdGFnJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBCVUdHWSA9ICEoW10ua2V5cyAmJiAnbmV4dCcgaW4gW10ua2V5cygpKTsgLy8gU2FmYXJpIGhhcyBidWdneSBpdGVyYXRvcnMgdy9vIGBuZXh0YFxudmFyIEZGX0lURVJBVE9SID0gJ0BAaXRlcmF0b3InO1xudmFyIEtFWVMgPSAna2V5cyc7XG52YXIgVkFMVUVTID0gJ3ZhbHVlcyc7XG5cbnZhciByZXR1cm5UaGlzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQmFzZSwgTkFNRSwgQ29uc3RydWN0b3IsIG5leHQsIERFRkFVTFQsIElTX1NFVCwgRk9SQ0VEKSB7XG4gICRpdGVyQ3JlYXRlKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KTtcbiAgdmFyIGdldE1ldGhvZCA9IGZ1bmN0aW9uIChraW5kKSB7XG4gICAgaWYgKCFCVUdHWSAmJiBraW5kIGluIHByb3RvKSByZXR1cm4gcHJvdG9ba2luZF07XG4gICAgc3dpdGNoIChraW5kKSB7XG4gICAgICBjYXNlIEtFWVM6IHJldHVybiBmdW5jdGlvbiBrZXlzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgICAgY2FzZSBWQUxVRVM6IHJldHVybiBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgfSByZXR1cm4gZnVuY3Rpb24gZW50cmllcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgfTtcbiAgdmFyIFRBRyA9IE5BTUUgKyAnIEl0ZXJhdG9yJztcbiAgdmFyIERFRl9WQUxVRVMgPSBERUZBVUxUID09IFZBTFVFUztcbiAgdmFyIFZBTFVFU19CVUcgPSBmYWxzZTtcbiAgdmFyIHByb3RvID0gQmFzZS5wcm90b3R5cGU7XG4gIHZhciAkbmF0aXZlID0gcHJvdG9bSVRFUkFUT1JdIHx8IHByb3RvW0ZGX0lURVJBVE9SXSB8fCBERUZBVUxUICYmIHByb3RvW0RFRkFVTFRdO1xuICB2YXIgJGRlZmF1bHQgPSAkbmF0aXZlIHx8IGdldE1ldGhvZChERUZBVUxUKTtcbiAgdmFyICRlbnRyaWVzID0gREVGQVVMVCA/ICFERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoJ2VudHJpZXMnKSA6IHVuZGVmaW5lZDtcbiAgdmFyICRhbnlOYXRpdmUgPSBOQU1FID09ICdBcnJheScgPyBwcm90by5lbnRyaWVzIHx8ICRuYXRpdmUgOiAkbmF0aXZlO1xuICB2YXIgbWV0aG9kcywga2V5LCBJdGVyYXRvclByb3RvdHlwZTtcbiAgLy8gRml4IG5hdGl2ZVxuICBpZiAoJGFueU5hdGl2ZSkge1xuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG90eXBlT2YoJGFueU5hdGl2ZS5jYWxsKG5ldyBCYXNlKCkpKTtcbiAgICBpZiAoSXRlcmF0b3JQcm90b3R5cGUgIT09IE9iamVjdC5wcm90b3R5cGUgJiYgSXRlcmF0b3JQcm90b3R5cGUubmV4dCkge1xuICAgICAgLy8gU2V0IEBAdG9TdHJpbmdUYWcgdG8gbmF0aXZlIGl0ZXJhdG9yc1xuICAgICAgc2V0VG9TdHJpbmdUYWcoSXRlcmF0b3JQcm90b3R5cGUsIFRBRywgdHJ1ZSk7XG4gICAgICAvLyBmaXggZm9yIHNvbWUgb2xkIGVuZ2luZXNcbiAgICAgIGlmICghTElCUkFSWSAmJiB0eXBlb2YgSXRlcmF0b3JQcm90b3R5cGVbSVRFUkFUT1JdICE9ICdmdW5jdGlvbicpIGhpZGUoSXRlcmF0b3JQcm90b3R5cGUsIElURVJBVE9SLCByZXR1cm5UaGlzKTtcbiAgICB9XG4gIH1cbiAgLy8gZml4IEFycmF5I3t2YWx1ZXMsIEBAaXRlcmF0b3J9Lm5hbWUgaW4gVjggLyBGRlxuICBpZiAoREVGX1ZBTFVFUyAmJiAkbmF0aXZlICYmICRuYXRpdmUubmFtZSAhPT0gVkFMVUVTKSB7XG4gICAgVkFMVUVTX0JVRyA9IHRydWU7XG4gICAgJGRlZmF1bHQgPSBmdW5jdGlvbiB2YWx1ZXMoKSB7IHJldHVybiAkbmF0aXZlLmNhbGwodGhpcyk7IH07XG4gIH1cbiAgLy8gRGVmaW5lIGl0ZXJhdG9yXG4gIGlmICgoIUxJQlJBUlkgfHwgRk9SQ0VEKSAmJiAoQlVHR1kgfHwgVkFMVUVTX0JVRyB8fCAhcHJvdG9bSVRFUkFUT1JdKSkge1xuICAgIGhpZGUocHJvdG8sIElURVJBVE9SLCAkZGVmYXVsdCk7XG4gIH1cbiAgLy8gUGx1ZyBmb3IgbGlicmFyeVxuICBJdGVyYXRvcnNbTkFNRV0gPSAkZGVmYXVsdDtcbiAgSXRlcmF0b3JzW1RBR10gPSByZXR1cm5UaGlzO1xuICBpZiAoREVGQVVMVCkge1xuICAgIG1ldGhvZHMgPSB7XG4gICAgICB2YWx1ZXM6IERFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChWQUxVRVMpLFxuICAgICAga2V5czogSVNfU0VUID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoS0VZUyksXG4gICAgICBlbnRyaWVzOiAkZW50cmllc1xuICAgIH07XG4gICAgaWYgKEZPUkNFRCkgZm9yIChrZXkgaW4gbWV0aG9kcykge1xuICAgICAgaWYgKCEoa2V5IGluIHByb3RvKSkgcmVkZWZpbmUocHJvdG8sIGtleSwgbWV0aG9kc1trZXldKTtcbiAgICB9IGVsc2UgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoQlVHR1kgfHwgVkFMVUVTX0JVRyksIE5BTUUsIG1ldGhvZHMpO1xuICB9XG4gIHJldHVybiBtZXRob2RzO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwiLy8gMjIuMS4zLjMxIEFycmF5LnByb3RvdHlwZVtAQHVuc2NvcGFibGVzXVxudmFyIFVOU0NPUEFCTEVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3Vuc2NvcGFibGVzJyk7XG52YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZTtcbmlmIChBcnJheVByb3RvW1VOU0NPUEFCTEVTXSA9PSB1bmRlZmluZWQpIHJlcXVpcmUoJy4vX2hpZGUnKShBcnJheVByb3RvLCBVTlNDT1BBQkxFUywge30pO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIEFycmF5UHJvdG9bVU5TQ09QQUJMRVNdW2tleV0gPSB0cnVlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFkZFRvVW5zY29wYWJsZXMgPSByZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xuXG4vLyAyMi4xLjMuNCBBcnJheS5wcm90b3R5cGUuZW50cmllcygpXG4vLyAyMi4xLjMuMTMgQXJyYXkucHJvdG90eXBlLmtleXMoKVxuLy8gMjIuMS4zLjI5IEFycmF5LnByb3RvdHlwZS52YWx1ZXMoKVxuLy8gMjIuMS4zLjMwIEFycmF5LnByb3RvdHlwZVtAQGl0ZXJhdG9yXSgpXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoQXJyYXksICdBcnJheScsIGZ1bmN0aW9uIChpdGVyYXRlZCwga2luZCkge1xuICB0aGlzLl90ID0gdG9JT2JqZWN0KGl0ZXJhdGVkKTsgLy8gdGFyZ2V0XG4gIHRoaXMuX2kgPSAwOyAgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAvLyBraW5kXG4vLyAyMi4xLjUuMi4xICVBcnJheUl0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIga2luZCA9IHRoaXMuX2s7XG4gIHZhciBpbmRleCA9IHRoaXMuX2krKztcbiAgaWYgKCFPIHx8IGluZGV4ID49IE8ubGVuZ3RoKSB7XG4gICAgdGhpcy5fdCA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gc3RlcCgxKTtcbiAgfVxuICBpZiAoa2luZCA9PSAna2V5cycpIHJldHVybiBzdGVwKDAsIGluZGV4KTtcbiAgaWYgKGtpbmQgPT0gJ3ZhbHVlcycpIHJldHVybiBzdGVwKDAsIE9baW5kZXhdKTtcbiAgcmV0dXJuIHN0ZXAoMCwgW2luZGV4LCBPW2luZGV4XV0pO1xufSwgJ3ZhbHVlcycpO1xuXG4vLyBhcmd1bWVudHNMaXN0W0BAaXRlcmF0b3JdIGlzICVBcnJheVByb3RvX3ZhbHVlcyUgKDkuNC40LjYsIDkuNC40LjcpXG5JdGVyYXRvcnMuQXJndW1lbnRzID0gSXRlcmF0b3JzLkFycmF5O1xuXG5hZGRUb1Vuc2NvcGFibGVzKCdrZXlzJyk7XG5hZGRUb1Vuc2NvcGFibGVzKCd2YWx1ZXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ2VudHJpZXMnKTtcbiIsInZhciAkaXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gSXRlcmF0b3JzLkFycmF5O1xuXG52YXIgRE9NSXRlcmFibGVzID0ge1xuICBDU1NSdWxlTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IGZhbHNlLFxuICBDU1NWYWx1ZUxpc3Q6IGZhbHNlLFxuICBDbGllbnRSZWN0TGlzdDogZmFsc2UsXG4gIERPTVJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NU3RyaW5nTGlzdDogZmFsc2UsXG4gIERPTVRva2VuTGlzdDogdHJ1ZSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IGZhbHNlLFxuICBGaWxlTGlzdDogZmFsc2UsXG4gIEhUTUxBbGxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MRm9ybUVsZW1lbnQ6IGZhbHNlLFxuICBIVE1MU2VsZWN0RWxlbWVudDogZmFsc2UsXG4gIE1lZGlhTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIE1pbWVUeXBlQXJyYXk6IGZhbHNlLFxuICBOYW1lZE5vZGVNYXA6IGZhbHNlLFxuICBOb2RlTGlzdDogdHJ1ZSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogZmFsc2UsXG4gIFBsdWdpbjogZmFsc2UsXG4gIFBsdWdpbkFycmF5OiBmYWxzZSxcbiAgU1ZHTGVuZ3RoTGlzdDogZmFsc2UsXG4gIFNWR051bWJlckxpc3Q6IGZhbHNlLFxuICBTVkdQYXRoU2VnTGlzdDogZmFsc2UsXG4gIFNWR1BvaW50TGlzdDogZmFsc2UsXG4gIFNWR1N0cmluZ0xpc3Q6IGZhbHNlLFxuICBTVkdUcmFuc2Zvcm1MaXN0OiBmYWxzZSxcbiAgU291cmNlQnVmZmVyTGlzdDogZmFsc2UsXG4gIFN0eWxlU2hlZXRMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgVGV4dFRyYWNrQ3VlTGlzdDogZmFsc2UsXG4gIFRleHRUcmFja0xpc3Q6IGZhbHNlLFxuICBUb3VjaExpc3Q6IGZhbHNlXG59O1xuXG5mb3IgKHZhciBjb2xsZWN0aW9ucyA9IGdldEtleXMoRE9NSXRlcmFibGVzKSwgaSA9IDA7IGkgPCBjb2xsZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IGNvbGxlY3Rpb25zW2ldO1xuICB2YXIgZXhwbGljaXQgPSBET01JdGVyYWJsZXNbTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICB2YXIga2V5O1xuICBpZiAocHJvdG8pIHtcbiAgICBpZiAoIXByb3RvW0lURVJBVE9SXSkgaGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZiAoIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlcztcbiAgICBpZiAoZXhwbGljaXQpIGZvciAoa2V5IGluICRpdGVyYXRvcnMpIGlmICghcHJvdG9ba2V5XSkgcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTtcbiAgfVxufVxuIiwidmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRhcmdldCwgc3JjLCBzYWZlKSB7XG4gIGZvciAodmFyIGtleSBpbiBzcmMpIHJlZGVmaW5lKHRhcmdldCwga2V5LCBzcmNba2V5XSwgc2FmZSk7XG4gIHJldHVybiB0YXJnZXQ7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIENvbnN0cnVjdG9yLCBuYW1lLCBmb3JiaWRkZW5GaWVsZCkge1xuICBpZiAoIShpdCBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSB8fCAoZm9yYmlkZGVuRmllbGQgIT09IHVuZGVmaW5lZCAmJiBmb3JiaWRkZW5GaWVsZCBpbiBpdCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IobmFtZSArICc6IGluY29ycmVjdCBpbnZvY2F0aW9uIScpO1xuICB9IHJldHVybiBpdDtcbn07XG4iLCIvLyBjYWxsIHNvbWV0aGluZyBvbiBpdGVyYXRvciBzdGVwIHdpdGggc2FmZSBjbG9zaW5nIG9uIGVycm9yXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhdG9yLCBmbiwgdmFsdWUsIGVudHJpZXMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZW50cmllcyA/IGZuKGFuT2JqZWN0KHZhbHVlKVswXSwgdmFsdWVbMV0pIDogZm4odmFsdWUpO1xuICAvLyA3LjQuNiBJdGVyYXRvckNsb3NlKGl0ZXJhdG9yLCBjb21wbGV0aW9uKVxuICB9IGNhdGNoIChlKSB7XG4gICAgdmFyIHJldCA9IGl0ZXJhdG9yWydyZXR1cm4nXTtcbiAgICBpZiAocmV0ICE9PSB1bmRlZmluZWQpIGFuT2JqZWN0KHJldC5jYWxsKGl0ZXJhdG9yKSk7XG4gICAgdGhyb3cgZTtcbiAgfVxufTtcbiIsIi8vIGNoZWNrIG9uIGRlZmF1bHQgQXJyYXkgaXRlcmF0b3JcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCAhPT0gdW5kZWZpbmVkICYmIChJdGVyYXRvcnMuQXJyYXkgPT09IGl0IHx8IEFycmF5UHJvdG9bSVRFUkFUT1JdID09PSBpdCk7XG59O1xuIiwidmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29yZScpLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCAhPSB1bmRlZmluZWQpIHJldHVybiBpdFtJVEVSQVRPUl1cbiAgICB8fCBpdFsnQEBpdGVyYXRvciddXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xudmFyIEJSRUFLID0ge307XG52YXIgUkVUVVJOID0ge307XG52YXIgZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZXJhYmxlLCBlbnRyaWVzLCBmbiwgdGhhdCwgSVRFUkFUT1IpIHtcbiAgdmFyIGl0ZXJGbiA9IElURVJBVE9SID8gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcmFibGU7IH0gOiBnZXRJdGVyRm4oaXRlcmFibGUpO1xuICB2YXIgZiA9IGN0eChmbiwgdGhhdCwgZW50cmllcyA/IDIgOiAxKTtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGxlbmd0aCwgc3RlcCwgaXRlcmF0b3IsIHJlc3VsdDtcbiAgaWYgKHR5cGVvZiBpdGVyRm4gIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ZXJhYmxlICsgJyBpcyBub3QgaXRlcmFibGUhJyk7XG4gIC8vIGZhc3QgY2FzZSBmb3IgYXJyYXlzIHdpdGggZGVmYXVsdCBpdGVyYXRvclxuICBpZiAoaXNBcnJheUl0ZXIoaXRlckZuKSkgZm9yIChsZW5ndGggPSB0b0xlbmd0aChpdGVyYWJsZS5sZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgIHJlc3VsdCA9IGVudHJpZXMgPyBmKGFuT2JqZWN0KHN0ZXAgPSBpdGVyYWJsZVtpbmRleF0pWzBdLCBzdGVwWzFdKSA6IGYoaXRlcmFibGVbaW5kZXhdKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfSBlbHNlIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChpdGVyYWJsZSk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTspIHtcbiAgICByZXN1bHQgPSBjYWxsKGl0ZXJhdG9yLCBmLCBzdGVwLnZhbHVlLCBlbnRyaWVzKTtcbiAgICBpZiAocmVzdWx0ID09PSBCUkVBSyB8fCByZXN1bHQgPT09IFJFVFVSTikgcmV0dXJuIHJlc3VsdDtcbiAgfVxufTtcbmV4cG9ydHMuQlJFQUsgPSBCUkVBSztcbmV4cG9ydHMuUkVUVVJOID0gUkVUVVJOO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIE1FVEEgPSByZXF1aXJlKCcuL191aWQnKSgnbWV0YScpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgc2V0RGVzYyA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaWQgPSAwO1xudmFyIGlzRXh0ZW5zaWJsZSA9IE9iamVjdC5pc0V4dGVuc2libGUgfHwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdHJ1ZTtcbn07XG52YXIgRlJFRVpFID0gIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gaXNFeHRlbnNpYmxlKE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyh7fSkpO1xufSk7XG52YXIgc2V0TWV0YSA9IGZ1bmN0aW9uIChpdCkge1xuICBzZXREZXNjKGl0LCBNRVRBLCB7IHZhbHVlOiB7XG4gICAgaTogJ08nICsgKytpZCwgLy8gb2JqZWN0IElEXG4gICAgdzoge30gICAgICAgICAgLy8gd2VhayBjb2xsZWN0aW9ucyBJRHNcbiAgfSB9KTtcbn07XG52YXIgZmFzdEtleSA9IGZ1bmN0aW9uIChpdCwgY3JlYXRlKSB7XG4gIC8vIHJldHVybiBwcmltaXRpdmUgd2l0aCBwcmVmaXhcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiB0eXBlb2YgaXQgPT0gJ3N5bWJvbCcgPyBpdCA6ICh0eXBlb2YgaXQgPT0gJ3N0cmluZycgPyAnUycgOiAnUCcpICsgaXQ7XG4gIGlmICghaGFzKGl0LCBNRVRBKSkge1xuICAgIC8vIGNhbid0IHNldCBtZXRhZGF0YSB0byB1bmNhdWdodCBmcm96ZW4gb2JqZWN0XG4gICAgaWYgKCFpc0V4dGVuc2libGUoaXQpKSByZXR1cm4gJ0YnO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiAnRSc7XG4gICAgLy8gYWRkIG1pc3NpbmcgbWV0YWRhdGFcbiAgICBzZXRNZXRhKGl0KTtcbiAgLy8gcmV0dXJuIG9iamVjdCBJRFxuICB9IHJldHVybiBpdFtNRVRBXS5pO1xufTtcbnZhciBnZXRXZWFrID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiB0cnVlO1xuICAgIC8vIG5vdCBuZWNlc3NhcnkgdG8gYWRkIG1ldGFkYXRhXG4gICAgaWYgKCFjcmVhdGUpIHJldHVybiBmYWxzZTtcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gaGFzaCB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IHJldHVybiBpdFtNRVRBXS53O1xufTtcbi8vIGFkZCBtZXRhZGF0YSBvbiBmcmVlemUtZmFtaWx5IG1ldGhvZHMgY2FsbGluZ1xudmFyIG9uRnJlZXplID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChGUkVFWkUgJiYgbWV0YS5ORUVEICYmIGlzRXh0ZW5zaWJsZShpdCkgJiYgIWhhcyhpdCwgTUVUQSkpIHNldE1ldGEoaXQpO1xuICByZXR1cm4gaXQ7XG59O1xudmFyIG1ldGEgPSBtb2R1bGUuZXhwb3J0cyA9IHtcbiAgS0VZOiBNRVRBLFxuICBORUVEOiBmYWxzZSxcbiAgZmFzdEtleTogZmFzdEtleSxcbiAgZ2V0V2VhazogZ2V0V2VhayxcbiAgb25GcmVlemU6IG9uRnJlZXplXG59O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgVFlQRSkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSB8fCBpdC5fdCAhPT0gVFlQRSkgdGhyb3cgVHlwZUVycm9yKCdJbmNvbXBhdGlibGUgcmVjZWl2ZXIsICcgKyBUWVBFICsgJyByZXF1aXJlZCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciAkaXRlckRlZmluZSA9IHJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJyk7XG52YXIgc3RlcCA9IHJlcXVpcmUoJy4vX2l0ZXItc3RlcCcpO1xudmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBmYXN0S2V5ID0gcmVxdWlyZSgnLi9fbWV0YScpLmZhc3RLZXk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgU0laRSA9IERFU0NSSVBUT1JTID8gJ19zJyA6ICdzaXplJztcblxudmFyIGdldEVudHJ5ID0gZnVuY3Rpb24gKHRoYXQsIGtleSkge1xuICAvLyBmYXN0IGNhc2VcbiAgdmFyIGluZGV4ID0gZmFzdEtleShrZXkpO1xuICB2YXIgZW50cnk7XG4gIGlmIChpbmRleCAhPT0gJ0YnKSByZXR1cm4gdGhhdC5faVtpbmRleF07XG4gIC8vIGZyb3plbiBvYmplY3QgY2FzZVxuICBmb3IgKGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubikge1xuICAgIGlmIChlbnRyeS5rID09IGtleSkgcmV0dXJuIGVudHJ5O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGNyZWF0ZShudWxsKTsgLy8gaW5kZXhcbiAgICAgIHRoYXQuX2YgPSB1bmRlZmluZWQ7ICAgIC8vIGZpcnN0IGVudHJ5XG4gICAgICB0aGF0Ll9sID0gdW5kZWZpbmVkOyAgICAvLyBsYXN0IGVudHJ5XG4gICAgICB0aGF0W1NJWkVdID0gMDsgICAgICAgICAvLyBzaXplXG4gICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgfSk7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIHtcbiAgICAgIC8vIDIzLjEuMy4xIE1hcC5wcm90b3R5cGUuY2xlYXIoKVxuICAgICAgLy8gMjMuMi4zLjIgU2V0LnByb3RvdHlwZS5jbGVhcigpXG4gICAgICBjbGVhcjogZnVuY3Rpb24gY2xlYXIoKSB7XG4gICAgICAgIGZvciAodmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKSwgZGF0YSA9IHRoYXQuX2ksIGVudHJ5ID0gdGhhdC5fZjsgZW50cnk7IGVudHJ5ID0gZW50cnkubikge1xuICAgICAgICAgIGVudHJ5LnIgPSB0cnVlO1xuICAgICAgICAgIGlmIChlbnRyeS5wKSBlbnRyeS5wID0gZW50cnkucC5uID0gdW5kZWZpbmVkO1xuICAgICAgICAgIGRlbGV0ZSBkYXRhW2VudHJ5LmldO1xuICAgICAgICB9XG4gICAgICAgIHRoYXQuX2YgPSB0aGF0Ll9sID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGF0W1NJWkVdID0gMDtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuMyBNYXAucHJvdG90eXBlLmRlbGV0ZShrZXkpXG4gICAgICAvLyAyMy4yLjMuNCBTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciB0aGF0ID0gdmFsaWRhdGUodGhpcywgTkFNRSk7XG4gICAgICAgIHZhciBlbnRyeSA9IGdldEVudHJ5KHRoYXQsIGtleSk7XG4gICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgIHZhciBuZXh0ID0gZW50cnkubjtcbiAgICAgICAgICB2YXIgcHJldiA9IGVudHJ5LnA7XG4gICAgICAgICAgZGVsZXRlIHRoYXQuX2lbZW50cnkuaV07XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKHByZXYpIHByZXYubiA9IG5leHQ7XG4gICAgICAgICAgaWYgKG5leHQpIG5leHQucCA9IHByZXY7XG4gICAgICAgICAgaWYgKHRoYXQuX2YgPT0gZW50cnkpIHRoYXQuX2YgPSBuZXh0O1xuICAgICAgICAgIGlmICh0aGF0Ll9sID09IGVudHJ5KSB0aGF0Ll9sID0gcHJldjtcbiAgICAgICAgICB0aGF0W1NJWkVdLS07XG4gICAgICAgIH0gcmV0dXJuICEhZW50cnk7XG4gICAgICB9LFxuICAgICAgLy8gMjMuMi4zLjYgU2V0LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4sIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gICAgICAvLyAyMy4xLjMuNSBNYXAucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoYXQgPSB1bmRlZmluZWQgKi8pIHtcbiAgICAgICAgdmFsaWRhdGUodGhpcywgTkFNRSk7XG4gICAgICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCAzKTtcbiAgICAgICAgdmFyIGVudHJ5O1xuICAgICAgICB3aGlsZSAoZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGlzLl9mKSB7XG4gICAgICAgICAgZihlbnRyeS52LCBlbnRyeS5rLCB0aGlzKTtcbiAgICAgICAgICAvLyByZXZlcnQgdG8gdGhlIGxhc3QgZXhpc3RpbmcgZW50cnlcbiAgICAgICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gMjMuMS4zLjcgTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuMi4zLjcgU2V0LnByb3RvdHlwZS5oYXModmFsdWUpXG4gICAgICBoYXM6IGZ1bmN0aW9uIGhhcyhrZXkpIHtcbiAgICAgICAgcmV0dXJuICEhZ2V0RW50cnkodmFsaWRhdGUodGhpcywgTkFNRSksIGtleSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgaWYgKERFU0NSSVBUT1JTKSBkUChDLnByb3RvdHlwZSwgJ3NpemUnLCB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIHZhbGlkYXRlKHRoaXMsIE5BTUUpW1NJWkVdO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBDO1xuICB9LFxuICBkZWY6IGZ1bmN0aW9uICh0aGF0LCBrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICB2YXIgcHJldiwgaW5kZXg7XG4gICAgLy8gY2hhbmdlIGV4aXN0aW5nIGVudHJ5XG4gICAgaWYgKGVudHJ5KSB7XG4gICAgICBlbnRyeS52ID0gdmFsdWU7XG4gICAgLy8gY3JlYXRlIG5ldyBlbnRyeVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGF0Ll9sID0gZW50cnkgPSB7XG4gICAgICAgIGk6IGluZGV4ID0gZmFzdEtleShrZXksIHRydWUpLCAvLyA8LSBpbmRleFxuICAgICAgICBrOiBrZXksICAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0ga2V5XG4gICAgICAgIHY6IHZhbHVlLCAgICAgICAgICAgICAgICAgICAgICAvLyA8LSB2YWx1ZVxuICAgICAgICBwOiBwcmV2ID0gdGhhdC5fbCwgICAgICAgICAgICAgLy8gPC0gcHJldmlvdXMgZW50cnlcbiAgICAgICAgbjogdW5kZWZpbmVkLCAgICAgICAgICAgICAgICAgIC8vIDwtIG5leHQgZW50cnlcbiAgICAgICAgcjogZmFsc2UgICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHJlbW92ZWRcbiAgICAgIH07XG4gICAgICBpZiAoIXRoYXQuX2YpIHRoYXQuX2YgPSBlbnRyeTtcbiAgICAgIGlmIChwcmV2KSBwcmV2Lm4gPSBlbnRyeTtcbiAgICAgIHRoYXRbU0laRV0rKztcbiAgICAgIC8vIGFkZCB0byBpbmRleFxuICAgICAgaWYgKGluZGV4ICE9PSAnRicpIHRoYXQuX2lbaW5kZXhdID0gZW50cnk7XG4gICAgfSByZXR1cm4gdGhhdDtcbiAgfSxcbiAgZ2V0RW50cnk6IGdldEVudHJ5LFxuICBzZXRTdHJvbmc6IGZ1bmN0aW9uIChDLCBOQU1FLCBJU19NQVApIHtcbiAgICAvLyBhZGQgLmtleXMsIC52YWx1ZXMsIC5lbnRyaWVzLCBbQEBpdGVyYXRvcl1cbiAgICAvLyAyMy4xLjMuNCwgMjMuMS4zLjgsIDIzLjEuMy4xMSwgMjMuMS4zLjEyLCAyMy4yLjMuNSwgMjMuMi4zLjgsIDIzLjIuMy4xMCwgMjMuMi4zLjExXG4gICAgJGl0ZXJEZWZpbmUoQywgTkFNRSwgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gICAgICB0aGlzLl90ID0gdmFsaWRhdGUoaXRlcmF0ZWQsIE5BTUUpOyAvLyB0YXJnZXRcbiAgICAgIHRoaXMuX2sgPSBraW5kOyAgICAgICAgICAgICAgICAgICAgIC8vIGtpbmRcbiAgICAgIHRoaXMuX2wgPSB1bmRlZmluZWQ7ICAgICAgICAgICAgICAgIC8vIHByZXZpb3VzXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHRoYXQgPSB0aGlzO1xuICAgICAgdmFyIGtpbmQgPSB0aGF0Ll9rO1xuICAgICAgdmFyIGVudHJ5ID0gdGhhdC5fbDtcbiAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgd2hpbGUgKGVudHJ5ICYmIGVudHJ5LnIpIGVudHJ5ID0gZW50cnkucDtcbiAgICAgIC8vIGdldCBuZXh0IGVudHJ5XG4gICAgICBpZiAoIXRoYXQuX3QgfHwgISh0aGF0Ll9sID0gZW50cnkgPSBlbnRyeSA/IGVudHJ5Lm4gOiB0aGF0Ll90Ll9mKSkge1xuICAgICAgICAvLyBvciBmaW5pc2ggdGhlIGl0ZXJhdGlvblxuICAgICAgICB0aGF0Ll90ID0gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gc3RlcCgxKTtcbiAgICAgIH1cbiAgICAgIC8vIHJldHVybiBzdGVwIGJ5IGtpbmRcbiAgICAgIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgZW50cnkuayk7XG4gICAgICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgZW50cnkudik7XG4gICAgICByZXR1cm4gc3RlcCgwLCBbZW50cnkuaywgZW50cnkudl0pO1xuICAgIH0sIElTX01BUCA/ICdlbnRyaWVzJyA6ICd2YWx1ZXMnLCAhSVNfTUFQLCB0cnVlKTtcblxuICAgIC8vIGFkZCBbQEBzcGVjaWVzXSwgMjMuMS4yLjIsIDIzLjIuMi4yXG4gICAgc2V0U3BlY2llcyhOQU1FKTtcbiAgfVxufTtcbiIsInZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIFNBRkVfQ0xPU0lORyA9IGZhbHNlO1xuXG50cnkge1xuICB2YXIgcml0ZXIgPSBbN11bSVRFUkFUT1JdKCk7XG4gIHJpdGVyWydyZXR1cm4nXSA9IGZ1bmN0aW9uICgpIHsgU0FGRV9DTE9TSU5HID0gdHJ1ZTsgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXRocm93LWxpdGVyYWxcbiAgQXJyYXkuZnJvbShyaXRlciwgZnVuY3Rpb24gKCkgeyB0aHJvdyAyOyB9KTtcbn0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjLCBza2lwQ2xvc2luZykge1xuICBpZiAoIXNraXBDbG9zaW5nICYmICFTQUZFX0NMT1NJTkcpIHJldHVybiBmYWxzZTtcbiAgdmFyIHNhZmUgPSBmYWxzZTtcbiAgdHJ5IHtcbiAgICB2YXIgYXJyID0gWzddO1xuICAgIHZhciBpdGVyID0gYXJyW0lURVJBVE9SXSgpO1xuICAgIGl0ZXIubmV4dCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHsgZG9uZTogc2FmZSA9IHRydWUgfTsgfTtcbiAgICBhcnJbSVRFUkFUT1JdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gaXRlcjsgfTtcbiAgICBleGVjKGFycik7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICByZXR1cm4gc2FmZTtcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBzZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX3NldC1wcm90bycpLnNldDtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIHRhcmdldCwgQykge1xuICB2YXIgUyA9IHRhcmdldC5jb25zdHJ1Y3RvcjtcbiAgdmFyIFA7XG4gIGlmIChTICE9PSBDICYmIHR5cGVvZiBTID09ICdmdW5jdGlvbicgJiYgKFAgPSBTLnByb3RvdHlwZSkgIT09IEMucHJvdG90eXBlICYmIGlzT2JqZWN0KFApICYmIHNldFByb3RvdHlwZU9mKSB7XG4gICAgc2V0UHJvdG90eXBlT2YodGhhdCwgUCk7XG4gIH0gcmV0dXJuIHRoYXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGZvck9mID0gcmVxdWlyZSgnLi9fZm9yLW9mJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgJGl0ZXJEZXRlY3QgPSByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTkFNRSwgd3JhcHBlciwgbWV0aG9kcywgY29tbW9uLCBJU19NQVAsIElTX1dFQUspIHtcbiAgdmFyIEJhc2UgPSBnbG9iYWxbTkFNRV07XG4gIHZhciBDID0gQmFzZTtcbiAgdmFyIEFEREVSID0gSVNfTUFQID8gJ3NldCcgOiAnYWRkJztcbiAgdmFyIHByb3RvID0gQyAmJiBDLnByb3RvdHlwZTtcbiAgdmFyIE8gPSB7fTtcbiAgdmFyIGZpeE1ldGhvZCA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgICB2YXIgZm4gPSBwcm90b1tLRVldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBLRVksXG4gICAgICBLRVkgPT0gJ2RlbGV0ZScgPyBmdW5jdGlvbiAoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2hhcycgPyBmdW5jdGlvbiBoYXMoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyBmYWxzZSA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2dldCcgPyBmdW5jdGlvbiBnZXQoYSkge1xuICAgICAgICByZXR1cm4gSVNfV0VBSyAmJiAhaXNPYmplY3QoYSkgPyB1bmRlZmluZWQgOiBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7XG4gICAgICB9IDogS0VZID09ICdhZGQnID8gZnVuY3Rpb24gYWRkKGEpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpOyByZXR1cm4gdGhpczsgfVxuICAgICAgICA6IGZ1bmN0aW9uIHNldChhLCBiKSB7IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhLCBiKTsgcmV0dXJuIHRoaXM7IH1cbiAgICApO1xuICB9O1xuICBpZiAodHlwZW9mIEMgIT0gJ2Z1bmN0aW9uJyB8fCAhKElTX1dFQUsgfHwgcHJvdG8uZm9yRWFjaCAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyBDKCkuZW50cmllcygpLm5leHQoKTtcbiAgfSkpKSB7XG4gICAgLy8gY3JlYXRlIGNvbGxlY3Rpb24gY29uc3RydWN0b3JcbiAgICBDID0gY29tbW9uLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpO1xuICAgIHJlZGVmaW5lQWxsKEMucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgICBtZXRhLk5FRUQgPSB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHZhciBpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgLy8gZWFybHkgaW1wbGVtZW50YXRpb25zIG5vdCBzdXBwb3J0cyBjaGFpbmluZ1xuICAgIHZhciBIQVNOVF9DSEFJTklORyA9IGluc3RhbmNlW0FEREVSXShJU19XRUFLID8ge30gOiAtMCwgMSkgIT0gaW5zdGFuY2U7XG4gICAgLy8gVjggfiAgQ2hyb21pdW0gNDAtIHdlYWstY29sbGVjdGlvbnMgdGhyb3dzIG9uIHByaW1pdGl2ZXMsIGJ1dCBzaG91bGQgcmV0dXJuIGZhbHNlXG4gICAgdmFyIFRIUk9XU19PTl9QUklNSVRJVkVTID0gZmFpbHMoZnVuY3Rpb24gKCkgeyBpbnN0YW5jZS5oYXMoMSk7IH0pO1xuICAgIC8vIG1vc3QgZWFybHkgaW1wbGVtZW50YXRpb25zIGRvZXNuJ3Qgc3VwcG9ydHMgaXRlcmFibGVzLCBtb3N0IG1vZGVybiAtIG5vdCBjbG9zZSBpdCBjb3JyZWN0bHlcbiAgICB2YXIgQUNDRVBUX0lURVJBQkxFUyA9ICRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7IG5ldyBDKGl0ZXIpOyB9KTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICAvLyBmb3IgZWFybHkgaW1wbGVtZW50YXRpb25zIC0wIGFuZCArMCBub3QgdGhlIHNhbWVcbiAgICB2YXIgQlVHR1lfWkVSTyA9ICFJU19XRUFLICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIFY4IH4gQ2hyb21pdW0gNDItIGZhaWxzIG9ubHkgd2l0aCA1KyBlbGVtZW50c1xuICAgICAgdmFyICRpbnN0YW5jZSA9IG5ldyBDKCk7XG4gICAgICB2YXIgaW5kZXggPSA1O1xuICAgICAgd2hpbGUgKGluZGV4LS0pICRpbnN0YW5jZVtBRERFUl0oaW5kZXgsIGluZGV4KTtcbiAgICAgIHJldHVybiAhJGluc3RhbmNlLmhhcygtMCk7XG4gICAgfSk7XG4gICAgaWYgKCFBQ0NFUFRfSVRFUkFCTEVTKSB7XG4gICAgICBDID0gd3JhcHBlcihmdW5jdGlvbiAodGFyZ2V0LCBpdGVyYWJsZSkge1xuICAgICAgICBhbkluc3RhbmNlKHRhcmdldCwgQywgTkFNRSk7XG4gICAgICAgIHZhciB0aGF0ID0gaW5oZXJpdElmUmVxdWlyZWQobmV3IEJhc2UoKSwgdGFyZ2V0LCBDKTtcbiAgICAgICAgaWYgKGl0ZXJhYmxlICE9IHVuZGVmaW5lZCkgZm9yT2YoaXRlcmFibGUsIElTX01BUCwgdGhhdFtBRERFUl0sIHRoYXQpO1xuICAgICAgICByZXR1cm4gdGhhdDtcbiAgICAgIH0pO1xuICAgICAgQy5wcm90b3R5cGUgPSBwcm90bztcbiAgICAgIHByb3RvLmNvbnN0cnVjdG9yID0gQztcbiAgICB9XG4gICAgaWYgKFRIUk9XU19PTl9QUklNSVRJVkVTIHx8IEJVR0dZX1pFUk8pIHtcbiAgICAgIGZpeE1ldGhvZCgnZGVsZXRlJyk7XG4gICAgICBmaXhNZXRob2QoJ2hhcycpO1xuICAgICAgSVNfTUFQICYmIGZpeE1ldGhvZCgnZ2V0Jyk7XG4gICAgfVxuICAgIGlmIChCVUdHWV9aRVJPIHx8IEhBU05UX0NIQUlOSU5HKSBmaXhNZXRob2QoQURERVIpO1xuICAgIC8vIHdlYWsgY29sbGVjdGlvbnMgc2hvdWxkIG5vdCBjb250YWlucyAuY2xlYXIgbWV0aG9kXG4gICAgaWYgKElTX1dFQUsgJiYgcHJvdG8uY2xlYXIpIGRlbGV0ZSBwcm90by5jbGVhcjtcbiAgfVxuXG4gIHNldFRvU3RyaW5nVGFnKEMsIE5BTUUpO1xuXG4gIE9bTkFNRV0gPSBDO1xuICAkZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChDICE9IEJhc2UpLCBPKTtcblxuICBpZiAoIUlTX1dFQUspIGNvbW1vbi5zZXRTdHJvbmcoQywgTkFNRSwgSVNfTUFQKTtcblxuICByZXR1cm4gQztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTRVQgPSAnU2V0JztcblxuLy8gMjMuMiBTZXQgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4yLjMuMSBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBTRVQpLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZyk7XG4iLCJ2YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlciwgSVRFUkFUT1IpIHtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBmb3JPZihpdGVyLCBmYWxzZSwgcmVzdWx0LnB1c2gsIHJlc3VsdCwgSVRFUkFUT1IpO1xuICByZXR1cm4gcmVzdWx0O1xufTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EYXZpZEJydWFudC9NYXAtU2V0LnByb3RvdHlwZS50b0pTT05cbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIGZyb20gPSByZXF1aXJlKCcuL19hcnJheS1mcm9tLWl0ZXJhYmxlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0b0pTT04oKSB7XG4gICAgaWYgKGNsYXNzb2YodGhpcykgIT0gTkFNRSkgdGhyb3cgVHlwZUVycm9yKE5BTUUgKyBcIiN0b0pTT04gaXNuJ3QgZ2VuZXJpY1wiKTtcbiAgICByZXR1cm4gZnJvbSh0aGlzKTtcbiAgfTtcbn07XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vRGF2aWRCcnVhbnQvTWFwLVNldC5wcm90b3R5cGUudG9KU09OXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ1NldCcsIHsgdG9KU09OOiByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXRvLWpzb24nKSgnU2V0JykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDT0xMRUNUSU9OKSB7XG4gICRleHBvcnQoJGV4cG9ydC5TLCBDT0xMRUNUSU9OLCB7IG9mOiBmdW5jdGlvbiBvZigpIHtcbiAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgQSA9IG5ldyBBcnJheShsZW5ndGgpO1xuICAgIHdoaWxlIChsZW5ndGgtLSkgQVtsZW5ndGhdID0gYXJndW1lbnRzW2xlbmd0aF07XG4gICAgcmV0dXJuIG5ldyB0aGlzKEEpO1xuICB9IH0pO1xufTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLXNldC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnU2V0Jyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChDT0xMRUNUSU9OKSB7XG4gICRleHBvcnQoJGV4cG9ydC5TLCBDT0xMRUNUSU9OLCB7IGZyb206IGZ1bmN0aW9uIGZyb20oc291cmNlIC8qICwgbWFwRm4sIHRoaXNBcmcgKi8pIHtcbiAgICB2YXIgbWFwRm4gPSBhcmd1bWVudHNbMV07XG4gICAgdmFyIG1hcHBpbmcsIEEsIG4sIGNiO1xuICAgIGFGdW5jdGlvbih0aGlzKTtcbiAgICBtYXBwaW5nID0gbWFwRm4gIT09IHVuZGVmaW5lZDtcbiAgICBpZiAobWFwcGluZykgYUZ1bmN0aW9uKG1hcEZuKTtcbiAgICBpZiAoc291cmNlID09IHVuZGVmaW5lZCkgcmV0dXJuIG5ldyB0aGlzKCk7XG4gICAgQSA9IFtdO1xuICAgIGlmIChtYXBwaW5nKSB7XG4gICAgICBuID0gMDtcbiAgICAgIGNiID0gY3R4KG1hcEZuLCBhcmd1bWVudHNbMl0sIDIpO1xuICAgICAgZm9yT2Yoc291cmNlLCBmYWxzZSwgZnVuY3Rpb24gKG5leHRJdGVtKSB7XG4gICAgICAgIEEucHVzaChjYihuZXh0SXRlbSwgbisrKSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yT2Yoc291cmNlLCBmYWxzZSwgQS5wdXNoLCBBKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyB0aGlzKEEpO1xuICB9IH0pO1xufTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vcHJvcG9zYWwtc2V0bWFwLW9mZnJvbS8jc2VjLXNldC5mcm9tXG5yZXF1aXJlKCcuL19zZXQtY29sbGVjdGlvbi1mcm9tJykoJ1NldCcpO1xuIiwicmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnRvLXN0cmluZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcuc2V0LnRvLWpzb24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM3LnNldC5vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcuc2V0LmZyb20nKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLlNldDtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE1BUCA9ICdNYXAnO1xuXG4vLyAyMy4xIE1hcCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShNQVAsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gc3Ryb25nLmdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSk7XG4gICAgcmV0dXJuIGVudHJ5ICYmIGVudHJ5LnY7XG4gIH0sXG4gIC8vIDIzLjEuMy45IE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZywgdHJ1ZSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vRGF2aWRCcnVhbnQvTWFwLVNldC5wcm90b3R5cGUudG9KU09OXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuUiwgJ01hcCcsIHsgdG9KU09OOiByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXRvLWpzb24nKSgnTWFwJykgfSk7XG4iLCIvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLXNldG1hcC1vZmZyb20vI3NlYy1tYXAub2ZcbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLW9mJykoJ01hcCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtbWFwLmZyb21cbnJlcXVpcmUoJy4vX3NldC1jb2xsZWN0aW9uLWZyb20nKSgnTWFwJyk7XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5tYXAudG8tanNvbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczcubWFwLm9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5tYXAuZnJvbScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi9tb2R1bGVzL19jb3JlJykuTWFwO1xuIiwiLy8gNy4yLjIgSXNBcnJheShhcmd1bWVudClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gQXJyYXkuaXNBcnJheSB8fCBmdW5jdGlvbiBpc0FycmF5KGFyZykge1xuICByZXR1cm4gY29mKGFyZykgPT0gJ0FycmF5Jztcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWwpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsKSkge1xuICAgIEMgPSBvcmlnaW5hbC5jb25zdHJ1Y3RvcjtcbiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFja1xuICAgIGlmICh0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpIEMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGlzT2JqZWN0KEMpKSB7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmIChDID09PSBudWxsKSBDID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gQXJyYXkgOiBDO1xufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCIvLyAwIC0+IEFycmF5I2ZvckVhY2hcbi8vIDEgLT4gQXJyYXkjbWFwXG4vLyAyIC0+IEFycmF5I2ZpbHRlclxuLy8gMyAtPiBBcnJheSNzb21lXG4vLyA0IC0+IEFycmF5I2V2ZXJ5XG4vLyA1IC0+IEFycmF5I2ZpbmRcbi8vIDYgLT4gQXJyYXkjZmluZEluZGV4XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgYXNjID0gcmVxdWlyZSgnLi9fYXJyYXktc3BlY2llcy1jcmVhdGUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRZUEUsICRjcmVhdGUpIHtcbiAgdmFyIElTX01BUCA9IFRZUEUgPT0gMTtcbiAgdmFyIElTX0ZJTFRFUiA9IFRZUEUgPT0gMjtcbiAgdmFyIElTX1NPTUUgPSBUWVBFID09IDM7XG4gIHZhciBJU19FVkVSWSA9IFRZUEUgPT0gNDtcbiAgdmFyIElTX0ZJTkRfSU5ERVggPSBUWVBFID09IDY7XG4gIHZhciBOT19IT0xFUyA9IFRZUEUgPT0gNSB8fCBJU19GSU5EX0lOREVYO1xuICB2YXIgY3JlYXRlID0gJGNyZWF0ZSB8fCBhc2M7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQpIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgc2VsZiA9IElPYmplY3QoTyk7XG4gICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgdGhhdCwgMyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKHNlbGYubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciByZXN1bHQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgPyBjcmVhdGUoJHRoaXMsIDApIDogdW5kZWZpbmVkO1xuICAgIHZhciB2YWwsIHJlcztcbiAgICBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKE5PX0hPTEVTIHx8IGluZGV4IGluIHNlbGYpIHtcbiAgICAgIHZhbCA9IHNlbGZbaW5kZXhdO1xuICAgICAgcmVzID0gZih2YWwsIGluZGV4LCBPKTtcbiAgICAgIGlmIChUWVBFKSB7XG4gICAgICAgIGlmIChJU19NQVApIHJlc3VsdFtpbmRleF0gPSByZXM7ICAgLy8gbWFwXG4gICAgICAgIGVsc2UgaWYgKHJlcykgc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgLy8gc29tZVxuICAgICAgICAgIGNhc2UgNTogcmV0dXJuIHZhbDsgICAgICAgICAgICAgIC8vIGZpbmRcbiAgICAgICAgICBjYXNlIDY6IHJldHVybiBpbmRleDsgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHJlc3VsdC5wdXNoKHZhbCk7ICAgICAgICAvLyBmaWx0ZXJcbiAgICAgICAgfSBlbHNlIGlmIChJU19FVkVSWSkgcmV0dXJuIGZhbHNlOyAvLyBldmVyeVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gSVNfRklORF9JTkRFWCA/IC0xIDogSVNfU09NRSB8fCBJU19FVkVSWSA/IElTX0VWRVJZIDogcmVzdWx0O1xuICB9O1xufTtcbiIsImV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4iLCIndXNlIHN0cmljdCc7XG4vLyAxOS4xLjIuMSBPYmplY3QuYXNzaWduKHRhcmdldCwgc291cmNlLCAuLi4pXG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgJGFzc2lnbiA9IE9iamVjdC5hc3NpZ247XG5cbi8vIHNob3VsZCB3b3JrIHdpdGggc3ltYm9scyBhbmQgc2hvdWxkIGhhdmUgZGV0ZXJtaW5pc3RpYyBwcm9wZXJ0eSBvcmRlciAoVjggYnVnKVxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgdmFyIEEgPSB7fTtcbiAgdmFyIEIgPSB7fTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gIHZhciBTID0gU3ltYm9sKCk7XG4gIHZhciBLID0gJ2FiY2RlZmdoaWprbG1ub3BxcnN0JztcbiAgQVtTXSA9IDc7XG4gIEsuc3BsaXQoJycpLmZvckVhY2goZnVuY3Rpb24gKGspIHsgQltrXSA9IGs7IH0pO1xuICByZXR1cm4gJGFzc2lnbih7fSwgQSlbU10gIT0gNyB8fCBPYmplY3Qua2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT0gSztcbn0pID8gZnVuY3Rpb24gYXNzaWduKHRhcmdldCwgc291cmNlKSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdmFyIFQgPSB0b09iamVjdCh0YXJnZXQpO1xuICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRTeW1ib2xzID0gZ09QUy5mO1xuICB2YXIgaXNFbnVtID0gcElFLmY7XG4gIHdoaWxlIChhTGVuID4gaW5kZXgpIHtcbiAgICB2YXIgUyA9IElPYmplY3QoYXJndW1lbnRzW2luZGV4KytdKTtcbiAgICB2YXIga2V5cyA9IGdldFN5bWJvbHMgPyBnZXRLZXlzKFMpLmNvbmNhdChnZXRTeW1ib2xzKFMpKSA6IGdldEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSB7XG4gICAgICBrZXkgPSBrZXlzW2orK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGlzRW51bS5jYWxsKFMsIGtleSkpIFRba2V5XSA9IFNba2V5XTtcbiAgICB9XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIGdldFdlYWsgPSByZXF1aXJlKCcuL19tZXRhJykuZ2V0V2VhaztcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBjcmVhdGVBcnJheU1ldGhvZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKTtcbnZhciAkaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgYXJyYXlGaW5kID0gY3JlYXRlQXJyYXlNZXRob2QoNSk7XG52YXIgYXJyYXlGaW5kSW5kZXggPSBjcmVhdGVBcnJheU1ldGhvZCg2KTtcbnZhciBpZCA9IDA7XG5cbi8vIGZhbGxiYWNrIGZvciB1bmNhdWdodCBmcm96ZW4ga2V5c1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAodGhhdCkge1xuICByZXR1cm4gdGhhdC5fbCB8fCAodGhhdC5fbCA9IG5ldyBVbmNhdWdodEZyb3plblN0b3JlKCkpO1xufTtcbnZhciBVbmNhdWdodEZyb3plblN0b3JlID0gZnVuY3Rpb24gKCkge1xuICB0aGlzLmEgPSBbXTtcbn07XG52YXIgZmluZFVuY2F1Z2h0RnJvemVuID0gZnVuY3Rpb24gKHN0b3JlLCBrZXkpIHtcbiAgcmV0dXJuIGFycmF5RmluZChzdG9yZS5hLCBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gaXRbMF0gPT09IGtleTtcbiAgfSk7XG59O1xuVW5jYXVnaHRGcm96ZW5TdG9yZS5wcm90b3R5cGUgPSB7XG4gIGdldDogZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmIChlbnRyeSkgcmV0dXJuIGVudHJ5WzFdO1xuICB9LFxuICBoYXM6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICByZXR1cm4gISFmaW5kVW5jYXVnaHRGcm96ZW4odGhpcywga2V5KTtcbiAgfSxcbiAgc2V0OiBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICAgIHZhciBlbnRyeSA9IGZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICAgIGlmIChlbnRyeSkgZW50cnlbMV0gPSB2YWx1ZTtcbiAgICBlbHNlIHRoaXMuYS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0sXG4gICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGluZGV4ID0gYXJyYXlGaW5kSW5kZXgodGhpcy5hLCBmdW5jdGlvbiAoaXQpIHtcbiAgICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICAgIH0pO1xuICAgIGlmICh+aW5kZXgpIHRoaXMuYS5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHJldHVybiAhIX5pbmRleDtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldENvbnN0cnVjdG9yOiBmdW5jdGlvbiAod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUikge1xuICAgIHZhciBDID0gd3JhcHBlcihmdW5jdGlvbiAodGhhdCwgaXRlcmFibGUpIHtcbiAgICAgIGFuSW5zdGFuY2UodGhhdCwgQywgTkFNRSwgJ19pJyk7XG4gICAgICB0aGF0Ll90ID0gTkFNRTsgICAgICAvLyBjb2xsZWN0aW9uIHR5cGVcbiAgICAgIHRoYXQuX2kgPSBpZCsrOyAgICAgIC8vIGNvbGxlY3Rpb24gaWRcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7IC8vIGxlYWsgc3RvcmUgZm9yIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RzXG4gICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgfSk7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIHtcbiAgICAgIC8vIDIzLjMuMy4yIFdlYWtNYXAucHJvdG90eXBlLmRlbGV0ZShrZXkpXG4gICAgICAvLyAyMy40LjMuMyBXZWFrU2V0LnByb3RvdHlwZS5kZWxldGUodmFsdWUpXG4gICAgICAnZGVsZXRlJzogZnVuY3Rpb24gKGtleSkge1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGtleSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSlbJ2RlbGV0ZSddKGtleSk7XG4gICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSkgJiYgZGVsZXRlIGRhdGFbdGhpcy5faV07XG4gICAgICB9LFxuICAgICAgLy8gMjMuMy4zLjQgV2Vha01hcC5wcm90b3R5cGUuaGFzKGtleSlcbiAgICAgIC8vIDIzLjQuMy40IFdlYWtTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGtleSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICAgIGlmIChkYXRhID09PSB0cnVlKSByZXR1cm4gdW5jYXVnaHRGcm96ZW5TdG9yZSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSkuaGFzKGtleSk7XG4gICAgICAgIHJldHVybiBkYXRhICYmICRoYXMoZGF0YSwgdGhpcy5faSk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZGF0YSA9IGdldFdlYWsoYW5PYmplY3Qoa2V5KSwgdHJ1ZSk7XG4gICAgaWYgKGRhdGEgPT09IHRydWUpIHVuY2F1Z2h0RnJvemVuU3RvcmUodGhhdCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIGVsc2UgZGF0YVt0aGF0Ll9pXSA9IHZhbHVlO1xuICAgIHJldHVybiB0aGF0O1xuICB9LFxuICB1ZnN0b3JlOiB1bmNhdWdodEZyb3plblN0b3JlXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgYXNzaWduID0gcmVxdWlyZSgnLi9fb2JqZWN0LWFzc2lnbicpO1xudmFyIHdlYWsgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXdlYWsnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE5BVElWRV9XRUFLX01BUCA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBJU19JRTExID0gIWdsb2JhbC5BY3RpdmVYT2JqZWN0ICYmICdBY3RpdmVYT2JqZWN0JyBpbiBnbG9iYWw7XG52YXIgV0VBS19NQVAgPSAnV2Vha01hcCc7XG52YXIgZ2V0V2VhayA9IG1ldGEuZ2V0V2VhaztcbnZhciBpc0V4dGVuc2libGUgPSBPYmplY3QuaXNFeHRlbnNpYmxlO1xudmFyIHVuY2F1Z2h0RnJvemVuU3RvcmUgPSB3ZWFrLnVmc3RvcmU7XG52YXIgSW50ZXJuYWxNYXA7XG5cbnZhciB3cmFwcGVyID0gZnVuY3Rpb24gKGdldCkge1xuICByZXR1cm4gZnVuY3Rpb24gV2Vha01hcCgpIHtcbiAgICByZXR1cm4gZ2V0KHRoaXMsIGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgfTtcbn07XG5cbnZhciBtZXRob2RzID0ge1xuICAvLyAyMy4zLjMuMyBXZWFrTWFwLnByb3RvdHlwZS5nZXQoa2V5KVxuICBnZXQ6IGZ1bmN0aW9uIGdldChrZXkpIHtcbiAgICBpZiAoaXNPYmplY3Qoa2V5KSkge1xuICAgICAgdmFyIGRhdGEgPSBnZXRXZWFrKGtleSk7XG4gICAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgcmV0dXJuIHVuY2F1Z2h0RnJvemVuU3RvcmUodmFsaWRhdGUodGhpcywgV0VBS19NQVApKS5nZXQoa2V5KTtcbiAgICAgIHJldHVybiBkYXRhID8gZGF0YVt0aGlzLl9pXSA6IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0sXG4gIC8vIDIzLjMuMy41IFdlYWtNYXAucHJvdG90eXBlLnNldChrZXksIHZhbHVlKVxuICBzZXQ6IGZ1bmN0aW9uIHNldChrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIHdlYWsuZGVmKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSwga2V5LCB2YWx1ZSk7XG4gIH1cbn07XG5cbi8vIDIzLjMgV2Vha01hcCBPYmplY3RzXG52YXIgJFdlYWtNYXAgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShXRUFLX01BUCwgd3JhcHBlciwgbWV0aG9kcywgd2VhaywgdHJ1ZSwgdHJ1ZSk7XG5cbi8vIElFMTEgV2Vha01hcCBmcm96ZW4ga2V5cyBmaXhcbmlmIChOQVRJVkVfV0VBS19NQVAgJiYgSVNfSUUxMSkge1xuICBJbnRlcm5hbE1hcCA9IHdlYWsuZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgV0VBS19NQVApO1xuICBhc3NpZ24oSW50ZXJuYWxNYXAucHJvdG90eXBlLCBtZXRob2RzKTtcbiAgbWV0YS5ORUVEID0gdHJ1ZTtcbiAgZWFjaChbJ2RlbGV0ZScsICdoYXMnLCAnZ2V0JywgJ3NldCddLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIHByb3RvID0gJFdlYWtNYXAucHJvdG90eXBlO1xuICAgIHZhciBtZXRob2QgPSBwcm90b1trZXldO1xuICAgIHJlZGVmaW5lKHByb3RvLCBrZXksIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICAvLyBzdG9yZSBmcm96ZW4gb2JqZWN0cyBvbiBpbnRlcm5hbCB3ZWFrbWFwIHNoaW1cbiAgICAgIGlmIChpc09iamVjdChhKSAmJiAhaXNFeHRlbnNpYmxlKGEpKSB7XG4gICAgICAgIGlmICghdGhpcy5fZikgdGhpcy5fZiA9IG5ldyBJbnRlcm5hbE1hcCgpO1xuICAgICAgICB2YXIgcmVzdWx0ID0gdGhpcy5fZltrZXldKGEsIGIpO1xuICAgICAgICByZXR1cm4ga2V5ID09ICdzZXQnID8gdGhpcyA6IHJlc3VsdDtcbiAgICAgIC8vIHN0b3JlIGFsbCB0aGUgcmVzdCBvbiBuYXRpdmUgd2Vha21hcFxuICAgICAgfSByZXR1cm4gbWV0aG9kLmNhbGwodGhpcywgYSwgYik7XG4gICAgfSk7XG4gIH0pO1xufVxuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha21hcC5vZlxucmVxdWlyZSgnLi9fc2V0LWNvbGxlY3Rpb24tb2YnKSgnV2Vha01hcCcpO1xuIiwiLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9wcm9wb3NhbC1zZXRtYXAtb2Zmcm9tLyNzZWMtd2Vha21hcC5mcm9tXG5yZXF1aXJlKCcuL19zZXQtY29sbGVjdGlvbi1mcm9tJykoJ1dlYWtNYXAnKTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYud2Vhay1tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM3LndlYWstbWFwLm9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy53ZWFrLW1hcC5mcm9tJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvX2NvcmUnKS5XZWFrTWFwO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgaW5kZXgsIHZhbHVlKSB7XG4gIGlmIChpbmRleCBpbiBvYmplY3QpICRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuL19pdGVyLWNhbGwnKTtcbnZhciBpc0FycmF5SXRlciA9IHJlcXVpcmUoJy4vX2lzLWFycmF5LWl0ZXInKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG52YXIgZ2V0SXRlckZuID0gcmVxdWlyZSgnLi9jb3JlLmdldC1pdGVyYXRvci1tZXRob2QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKShmdW5jdGlvbiAoaXRlcikgeyBBcnJheS5mcm9tKGl0ZXIpOyB9KSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjIuMSBBcnJheS5mcm9tKGFycmF5TGlrZSwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG4gIGZyb206IGZ1bmN0aW9uIGZyb20oYXJyYXlMaWtlIC8qICwgbWFwZm4gPSB1bmRlZmluZWQsIHRoaXNBcmcgPSB1bmRlZmluZWQgKi8pIHtcbiAgICB2YXIgTyA9IHRvT2JqZWN0KGFycmF5TGlrZSk7XG4gICAgdmFyIEMgPSB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5O1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgaXRlckZuID0gZ2V0SXRlckZuKE8pO1xuICAgIHZhciBsZW5ndGgsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKG1hcHBpbmcpIG1hcGZuID0gY3R4KG1hcGZuLCBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZCwgMik7XG4gICAgLy8gaWYgb2JqZWN0IGlzbid0IGl0ZXJhYmxlIG9yIGl0J3MgYXJyYXkgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yIC0gdXNlIHNpbXBsZSBjYXNlXG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIShDID09IEFycmF5ICYmIGlzQXJyYXlJdGVyKGl0ZXJGbikpKSB7XG4gICAgICBmb3IgKGl0ZXJhdG9yID0gaXRlckZuLmNhbGwoTyksIHJlc3VsdCA9IG5ldyBDKCk7ICEoc3RlcCA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gY2FsbChpdGVyYXRvciwgbWFwZm4sIFtzdGVwLnZhbHVlLCBpbmRleF0sIHRydWUpIDogc3RlcC52YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICAgIGZvciAocmVzdWx0ID0gbmV3IEMobGVuZ3RoKTsgbGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IG1hcGZuKE9baW5kZXhdLCBpbmRleCkgOiBPW2luZGV4XSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJlc3VsdC5sZW5ndGggPSBpbmRleDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuYXJyYXkuZnJvbScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZnJvbTtcbiIsImNvbnN0IHJlc2VydmVkVGFnTGlzdCA9IG5ldyBTZXQoW1xuICAnYW5ub3RhdGlvbi14bWwnLFxuICAnY29sb3ItcHJvZmlsZScsXG4gICdmb250LWZhY2UnLFxuICAnZm9udC1mYWNlLXNyYycsXG4gICdmb250LWZhY2UtdXJpJyxcbiAgJ2ZvbnQtZmFjZS1mb3JtYXQnLFxuICAnZm9udC1mYWNlLW5hbWUnLFxuICAnbWlzc2luZy1nbHlwaCcsXG5dKTtcblxuLyoqXG4gKiBAcGFyYW0ge3N0cmluZ30gbG9jYWxOYW1lXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRDdXN0b21FbGVtZW50TmFtZShsb2NhbE5hbWUpIHtcbiAgY29uc3QgcmVzZXJ2ZWQgPSByZXNlcnZlZFRhZ0xpc3QuaGFzKGxvY2FsTmFtZSk7XG4gIGNvbnN0IHZhbGlkRm9ybSA9IC9eW2Etel1bLjAtOV9hLXpdKi1bXFwtLjAtOV9hLXpdKiQvLnRlc3QobG9jYWxOYW1lKTtcbiAgcmV0dXJuICFyZXNlcnZlZCAmJiB2YWxpZEZvcm07XG59XG5cbi8qKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7IU5vZGV9IG5vZGVcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Nvbm5lY3RlZChub2RlKSB7XG4gIC8vIFVzZSBgTm9kZSNpc0Nvbm5lY3RlZGAsIGlmIGRlZmluZWQuXG4gIGNvbnN0IG5hdGl2ZVZhbHVlID0gbm9kZS5pc0Nvbm5lY3RlZDtcbiAgaWYgKG5hdGl2ZVZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gbmF0aXZlVmFsdWU7XG4gIH1cblxuICAvKiogQHR5cGUgez9Ob2RlfHVuZGVmaW5lZH0gKi9cbiAgbGV0IGN1cnJlbnQgPSBub2RlO1xuICB3aGlsZSAoY3VycmVudCAmJiAhKGN1cnJlbnQuX19DRV9pc0ltcG9ydERvY3VtZW50IHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBEb2N1bWVudCkpIHtcbiAgICBjdXJyZW50ID0gY3VycmVudC5wYXJlbnROb2RlIHx8ICh3aW5kb3cuU2hhZG93Um9vdCAmJiBjdXJyZW50IGluc3RhbmNlb2YgU2hhZG93Um9vdCA/IGN1cnJlbnQuaG9zdCA6IHVuZGVmaW5lZCk7XG4gIH1cbiAgcmV0dXJuICEhKGN1cnJlbnQgJiYgKGN1cnJlbnQuX19DRV9pc0ltcG9ydERvY3VtZW50IHx8IGN1cnJlbnQgaW5zdGFuY2VvZiBEb2N1bWVudCkpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7IU5vZGV9IHJvb3RcbiAqIEBwYXJhbSB7IU5vZGV9IHN0YXJ0XG4gKiBAcmV0dXJuIHs/Tm9kZX1cbiAqL1xuZnVuY3Rpb24gbmV4dFNpYmxpbmdPckFuY2VzdG9yU2libGluZyhyb290LCBzdGFydCkge1xuICBsZXQgbm9kZSA9IHN0YXJ0O1xuICB3aGlsZSAobm9kZSAmJiBub2RlICE9PSByb290ICYmICFub2RlLm5leHRTaWJsaW5nKSB7XG4gICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgfVxuICByZXR1cm4gKCFub2RlIHx8IG5vZGUgPT09IHJvb3QpID8gbnVsbCA6IG5vZGUubmV4dFNpYmxpbmc7XG59XG5cbi8qKlxuICogQHBhcmFtIHshTm9kZX0gcm9vdFxuICogQHBhcmFtIHshTm9kZX0gc3RhcnRcbiAqIEByZXR1cm4gez9Ob2RlfVxuICovXG5mdW5jdGlvbiBuZXh0Tm9kZShyb290LCBzdGFydCkge1xuICByZXR1cm4gc3RhcnQuZmlyc3RDaGlsZCA/IHN0YXJ0LmZpcnN0Q2hpbGQgOiBuZXh0U2libGluZ09yQW5jZXN0b3JTaWJsaW5nKHJvb3QsIHN0YXJ0KTtcbn1cblxuLyoqXG4gKiBAcGFyYW0geyFOb2RlfSByb290XG4gKiBAcGFyYW0geyFmdW5jdGlvbighRWxlbWVudCl9IGNhbGxiYWNrXG4gKiBAcGFyYW0geyFTZXQ8Tm9kZT49fSB2aXNpdGVkSW1wb3J0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gd2Fsa0RlZXBEZXNjZW5kYW50RWxlbWVudHMocm9vdCwgY2FsbGJhY2ssIHZpc2l0ZWRJbXBvcnRzID0gbmV3IFNldCgpKSB7XG4gIGxldCBub2RlID0gcm9vdDtcbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSAvKiogQHR5cGUgeyFFbGVtZW50fSAqLyhub2RlKTtcblxuICAgICAgY2FsbGJhY2soZWxlbWVudCk7XG5cbiAgICAgIGNvbnN0IGxvY2FsTmFtZSA9IGVsZW1lbnQubG9jYWxOYW1lO1xuICAgICAgaWYgKGxvY2FsTmFtZSA9PT0gJ2xpbmsnICYmIGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdyZWwnKSA9PT0gJ2ltcG9ydCcpIHtcbiAgICAgICAgLy8gSWYgdGhpcyBpbXBvcnQgKHBvbHlmaWxsZWQgb3Igbm90KSBoYXMgaXQncyByb290IG5vZGUgYXZhaWxhYmxlLFxuICAgICAgICAvLyB3YWxrIGl0LlxuICAgICAgICBjb25zdCBpbXBvcnROb2RlID0gLyoqIEB0eXBlIHshTm9kZX0gKi8gKGVsZW1lbnQuaW1wb3J0KTtcbiAgICAgICAgaWYgKGltcG9ydE5vZGUgaW5zdGFuY2VvZiBOb2RlICYmICF2aXNpdGVkSW1wb3J0cy5oYXMoaW1wb3J0Tm9kZSkpIHtcbiAgICAgICAgICAvLyBQcmV2ZW50IG11bHRpcGxlIHdhbGtzIG9mIHRoZSBzYW1lIGltcG9ydCByb290LlxuICAgICAgICAgIHZpc2l0ZWRJbXBvcnRzLmFkZChpbXBvcnROb2RlKTtcblxuICAgICAgICAgIGZvciAobGV0IGNoaWxkID0gaW1wb3J0Tm9kZS5maXJzdENoaWxkOyBjaGlsZDsgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZykge1xuICAgICAgICAgICAgd2Fsa0RlZXBEZXNjZW5kYW50RWxlbWVudHMoY2hpbGQsIGNhbGxiYWNrLCB2aXNpdGVkSW1wb3J0cyk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWdub3JlIGRlc2NlbmRhbnRzIG9mIGltcG9ydCBsaW5rcyB0byBwcmV2ZW50IGF0dGVtcHRpbmcgdG8gd2FsayB0aGVcbiAgICAgICAgLy8gZWxlbWVudHMgY3JlYXRlZCBieSB0aGUgSFRNTCBJbXBvcnRzIHBvbHlmaWxsIHRoYXQgd2UganVzdCB3YWxrZWRcbiAgICAgICAgLy8gYWJvdmUuXG4gICAgICAgIG5vZGUgPSBuZXh0U2libGluZ09yQW5jZXN0b3JTaWJsaW5nKHJvb3QsIGVsZW1lbnQpO1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH0gZWxzZSBpZiAobG9jYWxOYW1lID09PSAndGVtcGxhdGUnKSB7XG4gICAgICAgIC8vIElnbm9yZSBkZXNjZW5kYW50cyBvZiB0ZW1wbGF0ZXMuIFRoZXJlIHNob3VsZG4ndCBiZSBhbnkgZGVzY2VuZGFudHNcbiAgICAgICAgLy8gYmVjYXVzZSB0aGV5IHdpbGwgYmUgbW92ZWQgaW50byBgLmNvbnRlbnRgIGR1cmluZyBjb25zdHJ1Y3Rpb24gaW5cbiAgICAgICAgLy8gYnJvd3NlcnMgdGhhdCBzdXBwb3J0IHRlbXBsYXRlIGJ1dCwgaW4gY2FzZSB0aGV5IGV4aXN0IGFuZCBhcmUgc3RpbGxcbiAgICAgICAgLy8gd2FpdGluZyB0byBiZSBtb3ZlZCBieSBhIHBvbHlmaWxsLCB0aGV5IHdpbGwgYmUgaWdub3JlZC5cbiAgICAgICAgbm9kZSA9IG5leHRTaWJsaW5nT3JBbmNlc3RvclNpYmxpbmcocm9vdCwgZWxlbWVudCk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICAvLyBXYWxrIHNoYWRvdyByb290cy5cbiAgICAgIGNvbnN0IHNoYWRvd1Jvb3QgPSBlbGVtZW50Ll9fQ0Vfc2hhZG93Um9vdDtcbiAgICAgIGlmIChzaGFkb3dSb290KSB7XG4gICAgICAgIGZvciAobGV0IGNoaWxkID0gc2hhZG93Um9vdC5maXJzdENoaWxkOyBjaGlsZDsgY2hpbGQgPSBjaGlsZC5uZXh0U2libGluZykge1xuICAgICAgICAgIHdhbGtEZWVwRGVzY2VuZGFudEVsZW1lbnRzKGNoaWxkLCBjYWxsYmFjaywgdmlzaXRlZEltcG9ydHMpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgbm9kZSA9IG5leHROb2RlKHJvb3QsIG5vZGUpO1xuICB9XG59XG5cbi8qKlxuICogVXNlZCB0byBzdXBwcmVzcyBDbG9zdXJlJ3MgXCJNb2RpZnlpbmcgdGhlIHByb3RvdHlwZSBpcyBvbmx5IGFsbG93ZWQgaWYgdGhlXG4gKiBjb25zdHJ1Y3RvciBpcyBpbiB0aGUgc2FtZSBzY29wZVwiIHdhcm5pbmcgd2l0aG91dCB1c2luZ1xuICogYEBzdXBwcmVzcyB7bmV3Q2hlY2tUeXBlcywgZHVwbGljYXRlfWAgYmVjYXVzZSBgbmV3Q2hlY2tUeXBlc2AgaXMgdG9vIGJyb2FkLlxuICpcbiAqIEBwYXJhbSB7IU9iamVjdH0gZGVzdGluYXRpb25cbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcGFyYW0geyp9IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBzZXRQcm9wZXJ0eVVuY2hlY2tlZChkZXN0aW5hdGlvbiwgbmFtZSwgdmFsdWUpIHtcbiAgZGVzdGluYXRpb25bbmFtZV0gPSB2YWx1ZTtcbn1cbiIsIi8qKlxuICogQGVudW0ge251bWJlcn1cbiAqL1xuY29uc3QgQ3VzdG9tRWxlbWVudFN0YXRlID0ge1xuICBjdXN0b206IDEsXG4gIGZhaWxlZDogMixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEN1c3RvbUVsZW1lbnRTdGF0ZTtcbiIsImltcG9ydCAqIGFzIFV0aWxpdGllcyBmcm9tICcuL1V0aWxpdGllcy5qcyc7XG5pbXBvcnQgQ0VTdGF0ZSBmcm9tICcuL0N1c3RvbUVsZW1lbnRTdGF0ZS5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICAvKiogQHR5cGUgeyFNYXA8c3RyaW5nLCAhQ3VzdG9tRWxlbWVudERlZmluaXRpb24+fSAqL1xuICAgIHRoaXMuX2xvY2FsTmFtZVRvRGVmaW5pdGlvbiA9IG5ldyBNYXAoKTtcblxuICAgIC8qKiBAdHlwZSB7IU1hcDwhRnVuY3Rpb24sICFDdXN0b21FbGVtZW50RGVmaW5pdGlvbj59ICovXG4gICAgdGhpcy5fY29uc3RydWN0b3JUb0RlZmluaXRpb24gPSBuZXcgTWFwKCk7XG5cbiAgICAvKiogQHR5cGUgeyFBcnJheTwhZnVuY3Rpb24oIU5vZGUpPn0gKi9cbiAgICB0aGlzLl9wYXRjaGVzID0gW107XG5cbiAgICAvKiogQHR5cGUge2Jvb2xlYW59ICovXG4gICAgdGhpcy5faGFzUGF0Y2hlcyA9IGZhbHNlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhbE5hbWVcbiAgICogQHBhcmFtIHshQ3VzdG9tRWxlbWVudERlZmluaXRpb259IGRlZmluaXRpb25cbiAgICovXG4gIHNldERlZmluaXRpb24obG9jYWxOYW1lLCBkZWZpbml0aW9uKSB7XG4gICAgdGhpcy5fbG9jYWxOYW1lVG9EZWZpbml0aW9uLnNldChsb2NhbE5hbWUsIGRlZmluaXRpb24pO1xuICAgIHRoaXMuX2NvbnN0cnVjdG9yVG9EZWZpbml0aW9uLnNldChkZWZpbml0aW9uLmNvbnN0cnVjdG9yLCBkZWZpbml0aW9uKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gbG9jYWxOYW1lXG4gICAqIEByZXR1cm4geyFDdXN0b21FbGVtZW50RGVmaW5pdGlvbnx1bmRlZmluZWR9XG4gICAqL1xuICBsb2NhbE5hbWVUb0RlZmluaXRpb24obG9jYWxOYW1lKSB7XG4gICAgcmV0dXJuIHRoaXMuX2xvY2FsTmFtZVRvRGVmaW5pdGlvbi5nZXQobG9jYWxOYW1lKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gY29uc3RydWN0b3JcbiAgICogQHJldHVybiB7IUN1c3RvbUVsZW1lbnREZWZpbml0aW9ufHVuZGVmaW5lZH1cbiAgICovXG4gIGNvbnN0cnVjdG9yVG9EZWZpbml0aW9uKGNvbnN0cnVjdG9yKSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnN0cnVjdG9yVG9EZWZpbml0aW9uLmdldChjb25zdHJ1Y3Rvcik7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshZnVuY3Rpb24oIU5vZGUpfSBsaXN0ZW5lclxuICAgKi9cbiAgYWRkUGF0Y2gobGlzdGVuZXIpIHtcbiAgICB0aGlzLl9oYXNQYXRjaGVzID0gdHJ1ZTtcbiAgICB0aGlzLl9wYXRjaGVzLnB1c2gobGlzdGVuZXIpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU5vZGV9IG5vZGVcbiAgICovXG4gIHBhdGNoVHJlZShub2RlKSB7XG4gICAgaWYgKCF0aGlzLl9oYXNQYXRjaGVzKSByZXR1cm47XG5cbiAgICBVdGlsaXRpZXMud2Fsa0RlZXBEZXNjZW5kYW50RWxlbWVudHMobm9kZSwgZWxlbWVudCA9PiB0aGlzLnBhdGNoKGVsZW1lbnQpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFOb2RlfSBub2RlXG4gICAqL1xuICBwYXRjaChub2RlKSB7XG4gICAgaWYgKCF0aGlzLl9oYXNQYXRjaGVzKSByZXR1cm47XG5cbiAgICBpZiAobm9kZS5fX0NFX3BhdGNoZWQpIHJldHVybjtcbiAgICBub2RlLl9fQ0VfcGF0Y2hlZCA9IHRydWU7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3BhdGNoZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuX3BhdGNoZXNbaV0obm9kZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7IU5vZGV9IHJvb3RcbiAgICovXG4gIGNvbm5lY3RUcmVlKHJvb3QpIHtcbiAgICBjb25zdCBlbGVtZW50cyA9IFtdO1xuXG4gICAgVXRpbGl0aWVzLndhbGtEZWVwRGVzY2VuZGFudEVsZW1lbnRzKHJvb3QsIGVsZW1lbnQgPT4gZWxlbWVudHMucHVzaChlbGVtZW50KSk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gZWxlbWVudHNbaV07XG4gICAgICBpZiAoZWxlbWVudC5fX0NFX3N0YXRlID09PSBDRVN0YXRlLmN1c3RvbSkge1xuICAgICAgICBpZiAoVXRpbGl0aWVzLmlzQ29ubmVjdGVkKGVsZW1lbnQpKSB7XG4gICAgICAgICAgdGhpcy5jb25uZWN0ZWRDYWxsYmFjayhlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy51cGdyYWRlRWxlbWVudChlbGVtZW50KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshTm9kZX0gcm9vdFxuICAgKi9cbiAgZGlzY29ubmVjdFRyZWUocm9vdCkge1xuICAgIGNvbnN0IGVsZW1lbnRzID0gW107XG5cbiAgICBVdGlsaXRpZXMud2Fsa0RlZXBEZXNjZW5kYW50RWxlbWVudHMocm9vdCwgZWxlbWVudCA9PiBlbGVtZW50cy5wdXNoKGVsZW1lbnQpKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGVsZW1lbnQgPSBlbGVtZW50c1tpXTtcbiAgICAgIGlmIChlbGVtZW50Ll9fQ0Vfc3RhdGUgPT09IENFU3RhdGUuY3VzdG9tKSB7XG4gICAgICAgIHRoaXMuZGlzY29ubmVjdGVkQ2FsbGJhY2soZWxlbWVudCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFVwZ3JhZGVzIGFsbCB1bmN1c3RvbWl6ZWQgY3VzdG9tIGVsZW1lbnRzIGF0IGFuZCBiZWxvdyBhIHJvb3Qgbm9kZSBmb3JcbiAgICogd2hpY2ggdGhlcmUgaXMgYSBkZWZpbml0aW9uLiBXaGVuIGN1c3RvbSBlbGVtZW50IHJlYWN0aW9uIGNhbGxiYWNrcyBhcmVcbiAgICogYXNzdW1lZCB0byBiZSBjYWxsZWQgc3luY2hyb25vdXNseSAod2hpY2gsIGJ5IHRoZSBjdXJyZW50IERPTSAvIEhUTUwgc3BlY1xuICAgKiBkZWZpbml0aW9ucywgdGhleSBhcmUgKm5vdCopLCBjYWxsYmFja3MgZm9yIGJvdGggZWxlbWVudHMgY3VzdG9taXplZFxuICAgKiBzeW5jaHJvbm91c2x5IGJ5IHRoZSBwYXJzZXIgYW5kIGVsZW1lbnRzIGJlaW5nIHVwZ3JhZGVkIG9jY3VyIGluIHRoZSBzYW1lXG4gICAqIHJlbGF0aXZlIG9yZGVyLlxuICAgKlxuICAgKiBOT1RFOiBUaGlzIGZ1bmN0aW9uLCB3aGVuIHVzZWQgdG8gc2ltdWxhdGUgdGhlIGNvbnN0cnVjdGlvbiBvZiBhIHRyZWUgdGhhdFxuICAgKiBpcyBhbHJlYWR5IGNyZWF0ZWQgYnV0IG5vdCBjdXN0b21pemVkIChpLmUuIGJ5IHRoZSBwYXJzZXIpLCBkb2VzICpub3QqXG4gICAqIHByZXZlbnQgdGhlIGVsZW1lbnQgZnJvbSByZWFkaW5nIHRoZSAnZmluYWwnICh0cnVlKSBzdGF0ZSBvZiB0aGUgdHJlZS4gRm9yXG4gICAqIGV4YW1wbGUsIHRoZSBlbGVtZW50LCBkdXJpbmcgdHJ1bHkgc3luY2hyb25vdXMgcGFyc2luZyAvIGNvbnN0cnVjdGlvbiB3b3VsZFxuICAgKiBzZWUgdGhhdCBpdCBjb250YWlucyBubyBjaGlsZHJlbiBhcyB0aGV5IGhhdmUgbm90IHlldCBiZWVuIGluc2VydGVkLlxuICAgKiBIb3dldmVyLCB0aGlzIGZ1bmN0aW9uIGRvZXMgbm90IG1vZGlmeSB0aGUgdHJlZSwgdGhlIGVsZW1lbnQgd2lsbFxuICAgKiAoaW5jb3JyZWN0bHkpIGhhdmUgY2hpbGRyZW4uIEFkZGl0aW9uYWxseSwgc2VsZi1tb2RpZmljYXRpb24gcmVzdHJpY3Rpb25zXG4gICAqIGZvciBjdXN0b20gZWxlbWVudCBjb25zdHJ1Y3RvcnMgaW1wb3NlZCBieSB0aGUgRE9NIHNwZWMgYXJlICpub3QqIGVuZm9yY2VkLlxuICAgKlxuICAgKlxuICAgKiBUaGUgZm9sbG93aW5nIG5lc3RlZCBsaXN0IHNob3dzIHRoZSBzdGVwcyBleHRlbmRpbmcgZG93biBmcm9tIHRoZSBIVE1MXG4gICAqIHNwZWMncyBwYXJzaW5nIHNlY3Rpb24gdGhhdCBjYXVzZSBlbGVtZW50cyB0byBiZSBzeW5jaHJvbm91c2x5IGNyZWF0ZWQgYW5kXG4gICAqIHVwZ3JhZGVkOlxuICAgKlxuICAgKiBUaGUgXCJpbiBib2R5XCIgaW5zZXJ0aW9uIG1vZGU6XG4gICAqIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI3BhcnNpbmctbWFpbi1pbmJvZHlcbiAgICogLSBTd2l0Y2ggb24gdG9rZW46XG4gICAqICAgLi4gb3RoZXIgY2FzZXMgLi5cbiAgICogICAtPiBBbnkgb3RoZXIgc3RhcnQgdGFnXG4gICAqICAgICAgLSBbSW5zZXJ0IGFuIEhUTUwgZWxlbWVudF0oYmVsb3cpIGZvciB0aGUgdG9rZW4uXG4gICAqXG4gICAqIEluc2VydCBhbiBIVE1MIGVsZW1lbnQ6XG4gICAqIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2luc2VydC1hbi1odG1sLWVsZW1lbnRcbiAgICogLSBJbnNlcnQgYSBmb3JlaWduIGVsZW1lbnQgZm9yIHRoZSB0b2tlbiBpbiB0aGUgSFRNTCBuYW1lc3BhY2U6XG4gICAqICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjaW5zZXJ0LWEtZm9yZWlnbi1lbGVtZW50XG4gICAqICAgLSBDcmVhdGUgYW4gZWxlbWVudCBmb3IgYSB0b2tlbjpcbiAgICogICAgIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2NyZWF0ZS1hbi1lbGVtZW50LWZvci10aGUtdG9rZW5cbiAgICogICAgIC0gV2lsbCBleGVjdXRlIHNjcmlwdCBmbGFnIGlzIHRydWU/XG4gICAqICAgICAgIC0gKEVsZW1lbnQgcXVldWUgcHVzaGVkIHRvIHRoZSBjdXN0b20gZWxlbWVudCByZWFjdGlvbnMgc3RhY2suKVxuICAgKiAgICAgLSBDcmVhdGUgYW4gZWxlbWVudDpcbiAgICogICAgICAgaHR0cHM6Ly9kb20uc3BlYy53aGF0d2cub3JnLyNjb25jZXB0LWNyZWF0ZS1lbGVtZW50XG4gICAqICAgICAgIC0gU3luYyBDRSBmbGFnIGlzIHRydWU/XG4gICAqICAgICAgICAgLSBDb25zdHJ1Y3RvciBjYWxsZWQuXG4gICAqICAgICAgICAgLSBTZWxmLW1vZGlmaWNhdGlvbiByZXN0cmljdGlvbnMgZW5mb3JjZWQuXG4gICAqICAgICAgIC0gU3luYyBDRSBmbGFnIGlzIGZhbHNlP1xuICAgKiAgICAgICAgIC0gKFVwZ3JhZGUgcmVhY3Rpb24gZW5xdWV1ZWQuKVxuICAgKiAgICAgLSBBdHRyaWJ1dGVzIGFwcGVuZGVkIHRvIGVsZW1lbnQuXG4gICAqICAgICAgIChgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrYCByZWFjdGlvbnMgZW5xdWV1ZWQuKVxuICAgKiAgICAgLSBXaWxsIGV4ZWN1dGUgc2NyaXB0IGZsYWcgaXMgdHJ1ZT9cbiAgICogICAgICAgLSAoRWxlbWVudCBxdWV1ZSBwb3BwZWQgZnJvbSB0aGUgY3VzdG9tIGVsZW1lbnQgcmVhY3Rpb25zIHN0YWNrLlxuICAgKiAgICAgICAgIFJlYWN0aW9ucyBpbiB0aGUgcG9wcGVkIHN0YWNrIGFyZSBpbnZva2VkLilcbiAgICogICAtIChFbGVtZW50IHF1ZXVlIHB1c2hlZCB0byB0aGUgY3VzdG9tIGVsZW1lbnQgcmVhY3Rpb25zIHN0YWNrLilcbiAgICogICAtIEluc2VydCB0aGUgZWxlbWVudDpcbiAgICogICAgIGh0dHBzOi8vZG9tLnNwZWMud2hhdHdnLm9yZy8jY29uY2VwdC1ub2RlLWluc2VydFxuICAgKiAgICAgLSBTaGFkb3ctaW5jbHVkaW5nIGRlc2NlbmRhbnRzIGFyZSBjb25uZWN0ZWQuIER1cmluZyBwYXJzaW5nXG4gICAqICAgICAgIGNvbnN0cnVjdGlvbiwgdGhlcmUgYXJlIG5vIHNoYWRvdy0qZXhjbHVkaW5nKiBkZXNjZW5kYW50cy5cbiAgICogICAgICAgSG93ZXZlciwgdGhlIGNvbnN0cnVjdG9yIG1heSBoYXZlIHZhbGlkbHkgYXR0YWNoZWQgYSBzaGFkb3dcbiAgICogICAgICAgdHJlZSB0byBpdHNlbGYgYW5kIGFkZGVkIGRlc2NlbmRhbnRzIHRvIHRoYXQgc2hhZG93IHRyZWUuXG4gICAqICAgICAgIChgY29ubmVjdGVkQ2FsbGJhY2tgIHJlYWN0aW9ucyBlbnF1ZXVlZC4pXG4gICAqICAgLSAoRWxlbWVudCBxdWV1ZSBwb3BwZWQgZnJvbSB0aGUgY3VzdG9tIGVsZW1lbnQgcmVhY3Rpb25zIHN0YWNrLlxuICAgKiAgICAgUmVhY3Rpb25zIGluIHRoZSBwb3BwZWQgc3RhY2sgYXJlIGludm9rZWQuKVxuICAgKlxuICAgKiBAcGFyYW0geyFOb2RlfSByb290XG4gICAqIEBwYXJhbSB7IVNldDxOb2RlPj19IHZpc2l0ZWRJbXBvcnRzXG4gICAqL1xuICBwYXRjaEFuZFVwZ3JhZGVUcmVlKHJvb3QsIHZpc2l0ZWRJbXBvcnRzID0gbmV3IFNldCgpKSB7XG4gICAgY29uc3QgZWxlbWVudHMgPSBbXTtcblxuICAgIGNvbnN0IGdhdGhlckVsZW1lbnRzID0gZWxlbWVudCA9PiB7XG4gICAgICBpZiAoZWxlbWVudC5sb2NhbE5hbWUgPT09ICdsaW5rJyAmJiBlbGVtZW50LmdldEF0dHJpYnV0ZSgncmVsJykgPT09ICdpbXBvcnQnKSB7XG4gICAgICAgIC8vIFRoZSBIVE1MIEltcG9ydHMgcG9seWZpbGwgc2V0cyBhIGRlc2NlbmRhbnQgZWxlbWVudCBvZiB0aGUgbGluayB0b1xuICAgICAgICAvLyB0aGUgYGltcG9ydGAgcHJvcGVydHksIHNwZWNpZmljYWxseSB0aGlzIGlzICpub3QqIGEgRG9jdW1lbnQuXG4gICAgICAgIGNvbnN0IGltcG9ydE5vZGUgPSAvKiogQHR5cGUgez9Ob2RlfSAqLyAoZWxlbWVudC5pbXBvcnQpO1xuXG4gICAgICAgIGlmIChpbXBvcnROb2RlIGluc3RhbmNlb2YgTm9kZSAmJiBpbXBvcnROb2RlLnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgICAgICBpbXBvcnROb2RlLl9fQ0VfaXNJbXBvcnREb2N1bWVudCA9IHRydWU7XG5cbiAgICAgICAgICAvLyBDb25uZWN0ZWQgbGlua3MgYXJlIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVnaXN0cnkuXG4gICAgICAgICAgaW1wb3J0Tm9kZS5fX0NFX2hhc1JlZ2lzdHJ5ID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBJZiB0aGlzIGxpbmsncyBpbXBvcnQgcm9vdCBpcyBub3QgYXZhaWxhYmxlLCBpdHMgY29udGVudHMgY2FuJ3QgYmVcbiAgICAgICAgICAvLyB3YWxrZWQuIFdhaXQgZm9yICdsb2FkJyBhbmQgd2FsayBpdCB3aGVuIGl0J3MgcmVhZHkuXG4gICAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaW1wb3J0Tm9kZSA9IC8qKiBAdHlwZSB7IU5vZGV9ICovIChlbGVtZW50LmltcG9ydCk7XG5cbiAgICAgICAgICAgIGlmIChpbXBvcnROb2RlLl9fQ0VfZG9jdW1lbnRMb2FkSGFuZGxlZCkgcmV0dXJuO1xuICAgICAgICAgICAgaW1wb3J0Tm9kZS5fX0NFX2RvY3VtZW50TG9hZEhhbmRsZWQgPSB0cnVlO1xuXG4gICAgICAgICAgICBpbXBvcnROb2RlLl9fQ0VfaXNJbXBvcnREb2N1bWVudCA9IHRydWU7XG5cbiAgICAgICAgICAgIC8vIENvbm5lY3RlZCBsaW5rcyBhcmUgYXNzb2NpYXRlZCB3aXRoIHRoZSByZWdpc3RyeS5cbiAgICAgICAgICAgIGltcG9ydE5vZGUuX19DRV9oYXNSZWdpc3RyeSA9IHRydWU7XG5cbiAgICAgICAgICAgIC8vIENsb25lIHRoZSBgdmlzaXRlZEltcG9ydHNgIHNldCB0aGF0IHdhcyBwb3B1bGF0ZWQgc3luYyBkdXJpbmdcbiAgICAgICAgICAgIC8vIHRoZSBgcGF0Y2hBbmRVcGdyYWRlVHJlZWAgY2FsbCB0aGF0IGNhdXNlZCB0aGlzICdsb2FkJyBoYW5kbGVyIHRvXG4gICAgICAgICAgICAvLyBiZSBhZGRlZC4gVGhlbiwgcmVtb3ZlICp0aGlzKiBsaW5rJ3MgaW1wb3J0IG5vZGUgc28gdGhhdCB3ZSBjYW5cbiAgICAgICAgICAgIC8vIHdhbGsgdGhhdCBpbXBvcnQgYWdhaW4sIGV2ZW4gaWYgaXQgd2FzIHBhcnRpYWxseSB3YWxrZWQgbGF0ZXJcbiAgICAgICAgICAgIC8vIGR1cmluZyB0aGUgc2FtZSBgcGF0Y2hBbmRVcGdyYWRlVHJlZWAgY2FsbC5cbiAgICAgICAgICAgIGNvbnN0IGNsb25lZFZpc2l0ZWRJbXBvcnRzID0gbmV3IFNldCh2aXNpdGVkSW1wb3J0cyk7XG4gICAgICAgICAgICB2aXNpdGVkSW1wb3J0cy5kZWxldGUoaW1wb3J0Tm9kZSk7XG5cbiAgICAgICAgICAgIHRoaXMucGF0Y2hBbmRVcGdyYWRlVHJlZShpbXBvcnROb2RlLCB2aXNpdGVkSW1wb3J0cyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVsZW1lbnRzLnB1c2goZWxlbWVudCk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIC8vIGB3YWxrRGVlcERlc2NlbmRhbnRFbGVtZW50c2AgcG9wdWxhdGVzIChhbmQgaW50ZXJuYWxseSBjaGVja3MgYWdhaW5zdClcbiAgICAvLyBgdmlzaXRlZEltcG9ydHNgIHdoZW4gdHJhdmVyc2luZyBhIGxvYWRlZCBpbXBvcnQuXG4gICAgVXRpbGl0aWVzLndhbGtEZWVwRGVzY2VuZGFudEVsZW1lbnRzKHJvb3QsIGdhdGhlckVsZW1lbnRzLCB2aXNpdGVkSW1wb3J0cyk7XG5cbiAgICBpZiAodGhpcy5faGFzUGF0Y2hlcykge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICB0aGlzLnBhdGNoKGVsZW1lbnRzW2ldKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnVwZ3JhZGVFbGVtZW50KGVsZW1lbnRzW2ldKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshRWxlbWVudH0gZWxlbWVudFxuICAgKi9cbiAgdXBncmFkZUVsZW1lbnQoZWxlbWVudCkge1xuICAgIGNvbnN0IGN1cnJlbnRTdGF0ZSA9IGVsZW1lbnQuX19DRV9zdGF0ZTtcbiAgICBpZiAoY3VycmVudFN0YXRlICE9PSB1bmRlZmluZWQpIHJldHVybjtcblxuICAgIGNvbnN0IGRlZmluaXRpb24gPSB0aGlzLmxvY2FsTmFtZVRvRGVmaW5pdGlvbihlbGVtZW50LmxvY2FsTmFtZSk7XG4gICAgaWYgKCFkZWZpbml0aW9uKSByZXR1cm47XG5cbiAgICBkZWZpbml0aW9uLmNvbnN0cnVjdGlvblN0YWNrLnB1c2goZWxlbWVudCk7XG5cbiAgICBjb25zdCBjb25zdHJ1Y3RvciA9IGRlZmluaXRpb24uY29uc3RydWN0b3I7XG4gICAgdHJ5IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgKGNvbnN0cnVjdG9yKSgpO1xuICAgICAgICBpZiAocmVzdWx0ICE9PSBlbGVtZW50KSB7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgY3VzdG9tIGVsZW1lbnQgY29uc3RydWN0b3IgZGlkIG5vdCBwcm9kdWNlIHRoZSBlbGVtZW50IGJlaW5nIHVwZ3JhZGVkLicpO1xuICAgICAgICB9XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICBkZWZpbml0aW9uLmNvbnN0cnVjdGlvblN0YWNrLnBvcCgpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGVsZW1lbnQuX19DRV9zdGF0ZSA9IENFU3RhdGUuZmFpbGVkO1xuICAgICAgdGhyb3cgZTtcbiAgICB9XG5cbiAgICBlbGVtZW50Ll9fQ0Vfc3RhdGUgPSBDRVN0YXRlLmN1c3RvbTtcbiAgICBlbGVtZW50Ll9fQ0VfZGVmaW5pdGlvbiA9IGRlZmluaXRpb247XG5cbiAgICBpZiAoZGVmaW5pdGlvbi5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2spIHtcbiAgICAgIGNvbnN0IG9ic2VydmVkQXR0cmlidXRlcyA9IGRlZmluaXRpb24ub2JzZXJ2ZWRBdHRyaWJ1dGVzO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBvYnNlcnZlZEF0dHJpYnV0ZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG9ic2VydmVkQXR0cmlidXRlc1tpXTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBlbGVtZW50LmdldEF0dHJpYnV0ZShuYW1lKTtcbiAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soZWxlbWVudCwgbmFtZSwgbnVsbCwgdmFsdWUsIG51bGwpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKFV0aWxpdGllcy5pc0Nvbm5lY3RlZChlbGVtZW50KSkge1xuICAgICAgdGhpcy5jb25uZWN0ZWRDYWxsYmFjayhlbGVtZW50KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHshRWxlbWVudH0gZWxlbWVudFxuICAgKi9cbiAgY29ubmVjdGVkQ2FsbGJhY2soZWxlbWVudCkge1xuICAgIGNvbnN0IGRlZmluaXRpb24gPSBlbGVtZW50Ll9fQ0VfZGVmaW5pdGlvbjtcbiAgICBpZiAoZGVmaW5pdGlvbi5jb25uZWN0ZWRDYWxsYmFjaykge1xuICAgICAgZGVmaW5pdGlvbi5jb25uZWN0ZWRDYWxsYmFjay5jYWxsKGVsZW1lbnQpO1xuICAgIH1cblxuICAgIGVsZW1lbnQuX19DRV9pc0Nvbm5lY3RlZENhbGxiYWNrQ2FsbGVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFFbGVtZW50fSBlbGVtZW50XG4gICAqL1xuICBkaXNjb25uZWN0ZWRDYWxsYmFjayhlbGVtZW50KSB7XG4gICAgaWYgKCFlbGVtZW50Ll9fQ0VfaXNDb25uZWN0ZWRDYWxsYmFja0NhbGxlZCkge1xuICAgICAgdGhpcy5jb25uZWN0ZWRDYWxsYmFjayhlbGVtZW50KTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZpbml0aW9uID0gZWxlbWVudC5fX0NFX2RlZmluaXRpb247XG4gICAgaWYgKGRlZmluaXRpb24uZGlzY29ubmVjdGVkQ2FsbGJhY2spIHtcbiAgICAgIGRlZmluaXRpb24uZGlzY29ubmVjdGVkQ2FsbGJhY2suY2FsbChlbGVtZW50KTtcbiAgICB9XG5cbiAgICBlbGVtZW50Ll9fQ0VfaXNDb25uZWN0ZWRDYWxsYmFja0NhbGxlZCA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7P3N0cmluZ30gb2xkVmFsdWVcbiAgICogQHBhcmFtIHs/c3RyaW5nfSBuZXdWYWx1ZVxuICAgKiBAcGFyYW0gez9zdHJpbmd9IG5hbWVzcGFjZVxuICAgKi9cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKGVsZW1lbnQsIG5hbWUsIG9sZFZhbHVlLCBuZXdWYWx1ZSwgbmFtZXNwYWNlKSB7XG4gICAgY29uc3QgZGVmaW5pdGlvbiA9IGVsZW1lbnQuX19DRV9kZWZpbml0aW9uO1xuICAgIGlmIChcbiAgICAgIGRlZmluaXRpb24uYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrICYmXG4gICAgICBkZWZpbml0aW9uLm9ic2VydmVkQXR0cmlidXRlcy5pbmRleE9mKG5hbWUpID4gLTFcbiAgICApIHtcbiAgICAgIGRlZmluaXRpb24uYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrLmNhbGwoZWxlbWVudCwgbmFtZSwgb2xkVmFsdWUsIG5ld1ZhbHVlLCBuYW1lc3BhY2UpO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMgZnJvbSAnLi9DdXN0b21FbGVtZW50SW50ZXJuYWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRG9jdW1lbnRDb25zdHJ1Y3Rpb25PYnNlcnZlciB7XG4gIGNvbnN0cnVjdG9yKGludGVybmFscywgZG9jKSB7XG4gICAgLyoqXG4gICAgICogQHR5cGUgeyFDdXN0b21FbGVtZW50SW50ZXJuYWxzfVxuICAgICAqL1xuICAgIHRoaXMuX2ludGVybmFscyA9IGludGVybmFscztcblxuICAgIC8qKlxuICAgICAqIEB0eXBlIHshRG9jdW1lbnR9XG4gICAgICovXG4gICAgdGhpcy5fZG9jdW1lbnQgPSBkb2M7XG5cbiAgICAvKipcbiAgICAgKiBAdHlwZSB7TXV0YXRpb25PYnNlcnZlcnx1bmRlZmluZWR9XG4gICAgICovXG4gICAgdGhpcy5fb2JzZXJ2ZXIgPSB1bmRlZmluZWQ7XG5cblxuICAgIC8vIFNpbXVsYXRlIHRyZWUgY29uc3RydWN0aW9uIGZvciBhbGwgY3VycmVudGx5IGFjY2Vzc2libGUgbm9kZXMgaW4gdGhlXG4gICAgLy8gZG9jdW1lbnQuXG4gICAgdGhpcy5faW50ZXJuYWxzLnBhdGNoQW5kVXBncmFkZVRyZWUodGhpcy5fZG9jdW1lbnQpO1xuXG4gICAgaWYgKHRoaXMuX2RvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdsb2FkaW5nJykge1xuICAgICAgdGhpcy5fb2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcih0aGlzLl9oYW5kbGVNdXRhdGlvbnMuYmluZCh0aGlzKSk7XG5cbiAgICAgIC8vIE5vZGVzIGNyZWF0ZWQgYnkgdGhlIHBhcnNlciBhcmUgZ2l2ZW4gdG8gdGhlIG9ic2VydmVyICpiZWZvcmUqIHRoZSBuZXh0XG4gICAgICAvLyB0YXNrIHJ1bnMuIElubGluZSBzY3JpcHRzIGFyZSBydW4gaW4gYSBuZXcgdGFzay4gVGhpcyBtZWFucyB0aGF0IHRoZVxuICAgICAgLy8gb2JzZXJ2ZXIgd2lsbCBiZSBhYmxlIHRvIGhhbmRsZSB0aGUgbmV3bHkgcGFyc2VkIG5vZGVzIGJlZm9yZSB0aGUgaW5saW5lXG4gICAgICAvLyBzY3JpcHQgaXMgcnVuLlxuICAgICAgdGhpcy5fb2JzZXJ2ZXIub2JzZXJ2ZSh0aGlzLl9kb2N1bWVudCwge1xuICAgICAgICBjaGlsZExpc3Q6IHRydWUsXG4gICAgICAgIHN1YnRyZWU6IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBkaXNjb25uZWN0KCkge1xuICAgIGlmICh0aGlzLl9vYnNlcnZlcikge1xuICAgICAgdGhpcy5fb2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0geyFBcnJheTwhTXV0YXRpb25SZWNvcmQ+fSBtdXRhdGlvbnNcbiAgICovXG4gIF9oYW5kbGVNdXRhdGlvbnMobXV0YXRpb25zKSB7XG4gICAgLy8gT25jZSB0aGUgZG9jdW1lbnQncyBgcmVhZHlTdGF0ZWAgaXMgJ2ludGVyYWN0aXZlJyBvciAnY29tcGxldGUnLCBhbGwgbmV3XG4gICAgLy8gbm9kZXMgY3JlYXRlZCB3aXRoaW4gdGhhdCBkb2N1bWVudCB3aWxsIGJlIHRoZSByZXN1bHQgb2Ygc2NyaXB0IGFuZFxuICAgIC8vIHNob3VsZCBiZSBoYW5kbGVkIGJ5IHBhdGNoaW5nLlxuICAgIGNvbnN0IHJlYWR5U3RhdGUgPSB0aGlzLl9kb2N1bWVudC5yZWFkeVN0YXRlO1xuICAgIGlmIChyZWFkeVN0YXRlID09PSAnaW50ZXJhY3RpdmUnIHx8IHJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgIHRoaXMuZGlzY29ubmVjdCgpO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbXV0YXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBhZGRlZE5vZGVzID0gbXV0YXRpb25zW2ldLmFkZGVkTm9kZXM7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGFkZGVkTm9kZXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IGFkZGVkTm9kZXNbal07XG4gICAgICAgIHRoaXMuX2ludGVybmFscy5wYXRjaEFuZFVwZ3JhZGVUcmVlKG5vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiLyoqXG4gKiBAdGVtcGxhdGUgVFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEZWZlcnJlZCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUge1R8dW5kZWZpbmVkfVxuICAgICAqL1xuICAgIHRoaXMuX3ZhbHVlID0gdW5kZWZpbmVkO1xuXG4gICAgLyoqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAdHlwZSB7RnVuY3Rpb258dW5kZWZpbmVkfVxuICAgICAqL1xuICAgIHRoaXMuX3Jlc29sdmUgPSB1bmRlZmluZWQ7XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHshUHJvbWlzZTxUPn1cbiAgICAgKi9cbiAgICB0aGlzLl9wcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICB0aGlzLl9yZXNvbHZlID0gcmVzb2x2ZTtcblxuICAgICAgaWYgKHRoaXMuX3ZhbHVlKSB7XG4gICAgICAgIHJlc29sdmUodGhpcy5fdmFsdWUpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VH0gdmFsdWVcbiAgICovXG4gIHJlc29sdmUodmFsdWUpIHtcbiAgICBpZiAodGhpcy5fdmFsdWUpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQWxyZWFkeSByZXNvbHZlZC4nKTtcbiAgICB9XG5cbiAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xuXG4gICAgaWYgKHRoaXMuX3Jlc29sdmUpIHtcbiAgICAgIHRoaXMuX3Jlc29sdmUodmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHshUHJvbWlzZTxUPn1cbiAgICovXG4gIHRvUHJvbWlzZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fcHJvbWlzZTtcbiAgfVxufVxuIiwiaW1wb3J0IEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMgZnJvbSAnLi9DdXN0b21FbGVtZW50SW50ZXJuYWxzLmpzJztcbmltcG9ydCBEb2N1bWVudENvbnN0cnVjdGlvbk9ic2VydmVyIGZyb20gJy4vRG9jdW1lbnRDb25zdHJ1Y3Rpb25PYnNlcnZlci5qcyc7XG5pbXBvcnQgRGVmZXJyZWQgZnJvbSAnLi9EZWZlcnJlZC5qcyc7XG5pbXBvcnQgKiBhcyBVdGlsaXRpZXMgZnJvbSAnLi9VdGlsaXRpZXMuanMnO1xuXG4vKipcbiAqIEB1bnJlc3RyaWN0ZWRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3VzdG9tRWxlbWVudFJlZ2lzdHJ5IHtcblxuICAvKipcbiAgICogQHBhcmFtIHshQ3VzdG9tRWxlbWVudEludGVybmFsc30gaW50ZXJuYWxzXG4gICAqL1xuICBjb25zdHJ1Y3RvcihpbnRlcm5hbHMpIHtcbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAqL1xuICAgIHRoaXMuX2VsZW1lbnREZWZpbml0aW9uSXNSdW5uaW5nID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHshQ3VzdG9tRWxlbWVudEludGVybmFsc31cbiAgICAgKi9cbiAgICB0aGlzLl9pbnRlcm5hbHMgPSBpbnRlcm5hbHM7XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHshTWFwPHN0cmluZywgIURlZmVycmVkPHVuZGVmaW5lZD4+fVxuICAgICAqL1xuICAgIHRoaXMuX3doZW5EZWZpbmVkRGVmZXJyZWQgPSBuZXcgTWFwKCk7XG5cbiAgICAvKipcbiAgICAgKiBUaGUgZGVmYXVsdCBmbHVzaCBjYWxsYmFjayB0cmlnZ2VycyB0aGUgZG9jdW1lbnQgd2FsayBzeW5jaHJvbm91c2x5LlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUgeyFGdW5jdGlvbn1cbiAgICAgKi9cbiAgICB0aGlzLl9mbHVzaENhbGxiYWNrID0gZm4gPT4gZm4oKTtcblxuICAgIC8qKlxuICAgICAqIEBwcml2YXRlXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgdGhpcy5fZmx1c2hQZW5kaW5nID0gZmFsc2U7XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHshQXJyYXk8c3RyaW5nPn1cbiAgICAgKi9cbiAgICB0aGlzLl91bmZsdXNoZWRMb2NhbE5hbWVzID0gW107XG5cbiAgICAvKipcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEB0eXBlIHshRG9jdW1lbnRDb25zdHJ1Y3Rpb25PYnNlcnZlcn1cbiAgICAgKi9cbiAgICB0aGlzLl9kb2N1bWVudENvbnN0cnVjdGlvbk9ic2VydmVyID0gbmV3IERvY3VtZW50Q29uc3RydWN0aW9uT2JzZXJ2ZXIoaW50ZXJuYWxzLCBkb2N1bWVudCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxvY2FsTmFtZVxuICAgKiBAcGFyYW0geyFGdW5jdGlvbn0gY29uc3RydWN0b3JcbiAgICovXG4gIGRlZmluZShsb2NhbE5hbWUsIGNvbnN0cnVjdG9yKSB7XG4gICAgaWYgKCEoY29uc3RydWN0b3IgaW5zdGFuY2VvZiBGdW5jdGlvbikpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0N1c3RvbSBlbGVtZW50IGNvbnN0cnVjdG9ycyBtdXN0IGJlIGZ1bmN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICBpZiAoIVV0aWxpdGllcy5pc1ZhbGlkQ3VzdG9tRWxlbWVudE5hbWUobG9jYWxOYW1lKSkge1xuICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKGBUaGUgZWxlbWVudCBuYW1lICcke2xvY2FsTmFtZX0nIGlzIG5vdCB2YWxpZC5gKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5faW50ZXJuYWxzLmxvY2FsTmFtZVRvRGVmaW5pdGlvbihsb2NhbE5hbWUpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEEgY3VzdG9tIGVsZW1lbnQgd2l0aCBuYW1lICcke2xvY2FsTmFtZX0nIGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZC5gKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZWxlbWVudERlZmluaXRpb25Jc1J1bm5pbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignQSBjdXN0b20gZWxlbWVudCBpcyBhbHJlYWR5IGJlaW5nIGRlZmluZWQuJyk7XG4gICAgfVxuICAgIHRoaXMuX2VsZW1lbnREZWZpbml0aW9uSXNSdW5uaW5nID0gdHJ1ZTtcblxuICAgIGxldCBjb25uZWN0ZWRDYWxsYmFjaztcbiAgICBsZXQgZGlzY29ubmVjdGVkQ2FsbGJhY2s7XG4gICAgbGV0IGFkb3B0ZWRDYWxsYmFjaztcbiAgICBsZXQgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrO1xuICAgIGxldCBvYnNlcnZlZEF0dHJpYnV0ZXM7XG4gICAgdHJ5IHtcbiAgICAgIC8qKiBAdHlwZSB7IU9iamVjdH0gKi9cbiAgICAgIGNvbnN0IHByb3RvdHlwZSA9IGNvbnN0cnVjdG9yLnByb3RvdHlwZTtcbiAgICAgIGlmICghKHByb3RvdHlwZSBpbnN0YW5jZW9mIE9iamVjdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIGN1c3RvbSBlbGVtZW50IGNvbnN0cnVjdG9yXFwncyBwcm90b3R5cGUgaXMgbm90IGFuIG9iamVjdC4nKTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gZ2V0Q2FsbGJhY2sobmFtZSkge1xuICAgICAgICBjb25zdCBjYWxsYmFja1ZhbHVlID0gcHJvdG90eXBlW25hbWVdO1xuICAgICAgICBpZiAoY2FsbGJhY2tWYWx1ZSAhPT0gdW5kZWZpbmVkICYmICEoY2FsbGJhY2tWYWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlICcke25hbWV9JyBjYWxsYmFjayBtdXN0IGJlIGEgZnVuY3Rpb24uYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrVmFsdWU7XG4gICAgICB9XG5cbiAgICAgIGNvbm5lY3RlZENhbGxiYWNrID0gZ2V0Q2FsbGJhY2soJ2Nvbm5lY3RlZENhbGxiYWNrJyk7XG4gICAgICBkaXNjb25uZWN0ZWRDYWxsYmFjayA9IGdldENhbGxiYWNrKCdkaXNjb25uZWN0ZWRDYWxsYmFjaycpO1xuICAgICAgYWRvcHRlZENhbGxiYWNrID0gZ2V0Q2FsbGJhY2soJ2Fkb3B0ZWRDYWxsYmFjaycpO1xuICAgICAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrID0gZ2V0Q2FsbGJhY2soJ2F0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjaycpO1xuICAgICAgb2JzZXJ2ZWRBdHRyaWJ1dGVzID0gY29uc3RydWN0b3JbJ29ic2VydmVkQXR0cmlidXRlcyddIHx8IFtdO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgdGhpcy5fZWxlbWVudERlZmluaXRpb25Jc1J1bm5pbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZpbml0aW9uID0ge1xuICAgICAgbG9jYWxOYW1lLFxuICAgICAgY29uc3RydWN0b3IsXG4gICAgICBjb25uZWN0ZWRDYWxsYmFjayxcbiAgICAgIGRpc2Nvbm5lY3RlZENhbGxiYWNrLFxuICAgICAgYWRvcHRlZENhbGxiYWNrLFxuICAgICAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrLFxuICAgICAgb2JzZXJ2ZWRBdHRyaWJ1dGVzLFxuICAgICAgY29uc3RydWN0aW9uU3RhY2s6IFtdLFxuICAgIH07XG5cbiAgICB0aGlzLl9pbnRlcm5hbHMuc2V0RGVmaW5pdGlvbihsb2NhbE5hbWUsIGRlZmluaXRpb24pO1xuXG4gICAgdGhpcy5fdW5mbHVzaGVkTG9jYWxOYW1lcy5wdXNoKGxvY2FsTmFtZSk7XG5cbiAgICAvLyBJZiB3ZSd2ZSBhbHJlYWR5IGNhbGxlZCB0aGUgZmx1c2ggY2FsbGJhY2sgYW5kIGl0IGhhc24ndCBjYWxsZWQgYmFjayB5ZXQsXG4gICAgLy8gZG9uJ3QgY2FsbCBpdCBhZ2Fpbi5cbiAgICBpZiAoIXRoaXMuX2ZsdXNoUGVuZGluZykge1xuICAgICAgdGhpcy5fZmx1c2hQZW5kaW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuX2ZsdXNoQ2FsbGJhY2soKCkgPT4gdGhpcy5fZmx1c2goKSk7XG4gICAgfVxuICB9XG5cbiAgX2ZsdXNoKCkge1xuICAgIC8vIElmIG5vIG5ldyBkZWZpbml0aW9ucyB3ZXJlIGRlZmluZWQsIGRvbid0IGF0dGVtcHQgdG8gZmx1c2guIFRoaXMgY291bGRcbiAgICAvLyBoYXBwZW4gaWYgYSBmbHVzaCBjYWxsYmFjayBrZWVwcyB0aGUgZnVuY3Rpb24gaXQgaXMgZ2l2ZW4gYW5kIGNhbGxzIGl0XG4gICAgLy8gbXVsdGlwbGUgdGltZXMuXG4gICAgaWYgKHRoaXMuX2ZsdXNoUGVuZGluZyA9PT0gZmFsc2UpIHJldHVybjtcblxuICAgIHRoaXMuX2ZsdXNoUGVuZGluZyA9IGZhbHNlO1xuICAgIHRoaXMuX2ludGVybmFscy5wYXRjaEFuZFVwZ3JhZGVUcmVlKGRvY3VtZW50KTtcblxuICAgIHdoaWxlICh0aGlzLl91bmZsdXNoZWRMb2NhbE5hbWVzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IGxvY2FsTmFtZSA9IHRoaXMuX3VuZmx1c2hlZExvY2FsTmFtZXMuc2hpZnQoKTtcbiAgICAgIGNvbnN0IGRlZmVycmVkID0gdGhpcy5fd2hlbkRlZmluZWREZWZlcnJlZC5nZXQobG9jYWxOYW1lKTtcbiAgICAgIGlmIChkZWZlcnJlZCkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBsb2NhbE5hbWVcbiAgICogQHJldHVybiB7RnVuY3Rpb258dW5kZWZpbmVkfVxuICAgKi9cbiAgZ2V0KGxvY2FsTmFtZSkge1xuICAgIGNvbnN0IGRlZmluaXRpb24gPSB0aGlzLl9pbnRlcm5hbHMubG9jYWxOYW1lVG9EZWZpbml0aW9uKGxvY2FsTmFtZSk7XG4gICAgaWYgKGRlZmluaXRpb24pIHtcbiAgICAgIHJldHVybiBkZWZpbml0aW9uLmNvbnN0cnVjdG9yO1xuICAgIH1cblxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtzdHJpbmd9IGxvY2FsTmFtZVxuICAgKiBAcmV0dXJuIHshUHJvbWlzZTx1bmRlZmluZWQ+fVxuICAgKi9cbiAgd2hlbkRlZmluZWQobG9jYWxOYW1lKSB7XG4gICAgaWYgKCFVdGlsaXRpZXMuaXNWYWxpZEN1c3RvbUVsZW1lbnROYW1lKGxvY2FsTmFtZSkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgU3ludGF4RXJyb3IoYCcke2xvY2FsTmFtZX0nIGlzIG5vdCBhIHZhbGlkIGN1c3RvbSBlbGVtZW50IG5hbWUuYCkpO1xuICAgIH1cblxuICAgIGNvbnN0IHByaW9yID0gdGhpcy5fd2hlbkRlZmluZWREZWZlcnJlZC5nZXQobG9jYWxOYW1lKTtcbiAgICBpZiAocHJpb3IpIHtcbiAgICAgIHJldHVybiBwcmlvci50b1Byb21pc2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCBkZWZlcnJlZCA9IG5ldyBEZWZlcnJlZCgpO1xuICAgIHRoaXMuX3doZW5EZWZpbmVkRGVmZXJyZWQuc2V0KGxvY2FsTmFtZSwgZGVmZXJyZWQpO1xuXG4gICAgY29uc3QgZGVmaW5pdGlvbiA9IHRoaXMuX2ludGVybmFscy5sb2NhbE5hbWVUb0RlZmluaXRpb24obG9jYWxOYW1lKTtcbiAgICAvLyBSZXNvbHZlIGltbWVkaWF0ZWx5IG9ubHkgaWYgdGhlIGdpdmVuIGxvY2FsIG5hbWUgaGFzIGEgZGVmaW5pdGlvbiAqYW5kKlxuICAgIC8vIHRoZSBmdWxsIGRvY3VtZW50IHdhbGsgdG8gdXBncmFkZSBlbGVtZW50cyB3aXRoIHRoYXQgbG9jYWwgbmFtZSBoYXNcbiAgICAvLyBhbHJlYWR5IGhhcHBlbmVkLlxuICAgIGlmIChkZWZpbml0aW9uICYmIHRoaXMuX3VuZmx1c2hlZExvY2FsTmFtZXMuaW5kZXhPZihsb2NhbE5hbWUpID09PSAtMSkge1xuICAgICAgZGVmZXJyZWQucmVzb2x2ZSh1bmRlZmluZWQpO1xuICAgIH1cblxuICAgIHJldHVybiBkZWZlcnJlZC50b1Byb21pc2UoKTtcbiAgfVxuXG4gIHBvbHlmaWxsV3JhcEZsdXNoQ2FsbGJhY2sob3V0ZXIpIHtcbiAgICB0aGlzLl9kb2N1bWVudENvbnN0cnVjdGlvbk9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICBjb25zdCBpbm5lciA9IHRoaXMuX2ZsdXNoQ2FsbGJhY2s7XG4gICAgdGhpcy5fZmx1c2hDYWxsYmFjayA9IGZsdXNoID0+IG91dGVyKCgpID0+IGlubmVyKGZsdXNoKSk7XG4gIH1cbn1cblxuLy8gQ2xvc3VyZSBjb21waWxlciBleHBvcnRzLlxud2luZG93WydDdXN0b21FbGVtZW50UmVnaXN0cnknXSA9IEN1c3RvbUVsZW1lbnRSZWdpc3RyeTtcbkN1c3RvbUVsZW1lbnRSZWdpc3RyeS5wcm90b3R5cGVbJ2RlZmluZSddID0gQ3VzdG9tRWxlbWVudFJlZ2lzdHJ5LnByb3RvdHlwZS5kZWZpbmU7XG5DdXN0b21FbGVtZW50UmVnaXN0cnkucHJvdG90eXBlWydnZXQnXSA9IEN1c3RvbUVsZW1lbnRSZWdpc3RyeS5wcm90b3R5cGUuZ2V0O1xuQ3VzdG9tRWxlbWVudFJlZ2lzdHJ5LnByb3RvdHlwZVsnd2hlbkRlZmluZWQnXSA9IEN1c3RvbUVsZW1lbnRSZWdpc3RyeS5wcm90b3R5cGUud2hlbkRlZmluZWQ7XG5DdXN0b21FbGVtZW50UmVnaXN0cnkucHJvdG90eXBlWydwb2x5ZmlsbFdyYXBGbHVzaENhbGxiYWNrJ10gPSBDdXN0b21FbGVtZW50UmVnaXN0cnkucHJvdG90eXBlLnBvbHlmaWxsV3JhcEZsdXNoQ2FsbGJhY2s7XG4iLCJleHBvcnQgZGVmYXVsdCB7XG4gIERvY3VtZW50X2NyZWF0ZUVsZW1lbnQ6IHdpbmRvdy5Eb2N1bWVudC5wcm90b3R5cGUuY3JlYXRlRWxlbWVudCxcbiAgRG9jdW1lbnRfY3JlYXRlRWxlbWVudE5TOiB3aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlLmNyZWF0ZUVsZW1lbnROUyxcbiAgRG9jdW1lbnRfaW1wb3J0Tm9kZTogd2luZG93LkRvY3VtZW50LnByb3RvdHlwZS5pbXBvcnROb2RlLFxuICBEb2N1bWVudF9wcmVwZW5kOiB3aW5kb3cuRG9jdW1lbnQucHJvdG90eXBlWydwcmVwZW5kJ10sXG4gIERvY3VtZW50X2FwcGVuZDogd2luZG93LkRvY3VtZW50LnByb3RvdHlwZVsnYXBwZW5kJ10sXG4gIE5vZGVfY2xvbmVOb2RlOiB3aW5kb3cuTm9kZS5wcm90b3R5cGUuY2xvbmVOb2RlLFxuICBOb2RlX2FwcGVuZENoaWxkOiB3aW5kb3cuTm9kZS5wcm90b3R5cGUuYXBwZW5kQ2hpbGQsXG4gIE5vZGVfaW5zZXJ0QmVmb3JlOiB3aW5kb3cuTm9kZS5wcm90b3R5cGUuaW5zZXJ0QmVmb3JlLFxuICBOb2RlX3JlbW92ZUNoaWxkOiB3aW5kb3cuTm9kZS5wcm90b3R5cGUucmVtb3ZlQ2hpbGQsXG4gIE5vZGVfcmVwbGFjZUNoaWxkOiB3aW5kb3cuTm9kZS5wcm90b3R5cGUucmVwbGFjZUNoaWxkLFxuICBOb2RlX3RleHRDb250ZW50OiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHdpbmRvdy5Ob2RlLnByb3RvdHlwZSwgJ3RleHRDb250ZW50JyksXG4gIEVsZW1lbnRfYXR0YWNoU2hhZG93OiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGVbJ2F0dGFjaFNoYWRvdyddLFxuICBFbGVtZW50X2lubmVySFRNTDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih3aW5kb3cuRWxlbWVudC5wcm90b3R5cGUsICdpbm5lckhUTUwnKSxcbiAgRWxlbWVudF9nZXRBdHRyaWJ1dGU6IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5nZXRBdHRyaWJ1dGUsXG4gIEVsZW1lbnRfc2V0QXR0cmlidXRlOiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuc2V0QXR0cmlidXRlLFxuICBFbGVtZW50X3JlbW92ZUF0dHJpYnV0ZTogd2luZG93LkVsZW1lbnQucHJvdG90eXBlLnJlbW92ZUF0dHJpYnV0ZSxcbiAgRWxlbWVudF9nZXRBdHRyaWJ1dGVOUzogd2luZG93LkVsZW1lbnQucHJvdG90eXBlLmdldEF0dHJpYnV0ZU5TLFxuICBFbGVtZW50X3NldEF0dHJpYnV0ZU5TOiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGUuc2V0QXR0cmlidXRlTlMsXG4gIEVsZW1lbnRfcmVtb3ZlQXR0cmlidXRlTlM6IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZS5yZW1vdmVBdHRyaWJ1dGVOUyxcbiAgRWxlbWVudF9pbnNlcnRBZGphY2VudEVsZW1lbnQ6IHdpbmRvdy5FbGVtZW50LnByb3RvdHlwZVsnaW5zZXJ0QWRqYWNlbnRFbGVtZW50J10sXG4gIEVsZW1lbnRfcHJlcGVuZDogd2luZG93LkVsZW1lbnQucHJvdG90eXBlWydwcmVwZW5kJ10sXG4gIEVsZW1lbnRfYXBwZW5kOiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGVbJ2FwcGVuZCddLFxuICBFbGVtZW50X2JlZm9yZTogd2luZG93LkVsZW1lbnQucHJvdG90eXBlWydiZWZvcmUnXSxcbiAgRWxlbWVudF9hZnRlcjogd2luZG93LkVsZW1lbnQucHJvdG90eXBlWydhZnRlciddLFxuICBFbGVtZW50X3JlcGxhY2VXaXRoOiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGVbJ3JlcGxhY2VXaXRoJ10sXG4gIEVsZW1lbnRfcmVtb3ZlOiB3aW5kb3cuRWxlbWVudC5wcm90b3R5cGVbJ3JlbW92ZSddLFxuICBIVE1MRWxlbWVudDogd2luZG93LkhUTUxFbGVtZW50LFxuICBIVE1MRWxlbWVudF9pbm5lckhUTUw6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iod2luZG93LkhUTUxFbGVtZW50LnByb3RvdHlwZSwgJ2lubmVySFRNTCcpLFxuICBIVE1MRWxlbWVudF9pbnNlcnRBZGphY2VudEVsZW1lbnQ6IHdpbmRvdy5IVE1MRWxlbWVudC5wcm90b3R5cGVbJ2luc2VydEFkamFjZW50RWxlbWVudCddLFxufTtcbiIsIi8qKlxuICogVGhpcyBjbGFzcyBleGlzdHMgb25seSB0byB3b3JrIGFyb3VuZCBDbG9zdXJlJ3MgbGFjayBvZiBhIHdheSB0byBkZXNjcmliZVxuICogc2luZ2xldG9ucy4gSXQgcmVwcmVzZW50cyB0aGUgJ2FscmVhZHkgY29uc3RydWN0ZWQgbWFya2VyJyB1c2VkIGluIGN1c3RvbVxuICogZWxlbWVudCBjb25zdHJ1Y3Rpb24gc3RhY2tzLlxuICpcbiAqIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvI2NvbmNlcHQtYWxyZWFkeS1jb25zdHJ1Y3RlZC1tYXJrZXJcbiAqL1xuY2xhc3MgQWxyZWFkeUNvbnN0cnVjdGVkTWFya2VyIHt9XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBBbHJlYWR5Q29uc3RydWN0ZWRNYXJrZXIoKTtcbiIsImltcG9ydCBOYXRpdmUgZnJvbSAnLi9OYXRpdmUuanMnO1xuaW1wb3J0IEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMgZnJvbSAnLi4vQ3VzdG9tRWxlbWVudEludGVybmFscy5qcyc7XG5pbXBvcnQgQ0VTdGF0ZSBmcm9tICcuLi9DdXN0b21FbGVtZW50U3RhdGUuanMnO1xuaW1wb3J0IEFscmVhZHlDb25zdHJ1Y3RlZE1hcmtlciBmcm9tICcuLi9BbHJlYWR5Q29uc3RydWN0ZWRNYXJrZXIuanMnO1xuXG4vKipcbiAqIEBwYXJhbSB7IUN1c3RvbUVsZW1lbnRJbnRlcm5hbHN9IGludGVybmFsc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnRlcm5hbHMpIHtcbiAgd2luZG93WydIVE1MRWxlbWVudCddID0gKGZ1bmN0aW9uKCkge1xuICAgIC8qKlxuICAgICAqIEB0eXBlIHtmdW5jdGlvbihuZXc6IEhUTUxFbGVtZW50KTogIUhUTUxFbGVtZW50fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIEhUTUxFbGVtZW50KCkge1xuICAgICAgLy8gVGhpcyBzaG91bGQgcmVhbGx5IGJlIGBuZXcudGFyZ2V0YCBidXQgYG5ldy50YXJnZXRgIGNhbid0IGJlIGVtdWxhdGVkXG4gICAgICAvLyBpbiBFUzUuIEFzc3VtaW5nIHRoZSB1c2VyIGtlZXBzIHRoZSBkZWZhdWx0IHZhbHVlIG9mIHRoZSBjb25zdHJ1Y3RvcidzXG4gICAgICAvLyBwcm90b3R5cGUncyBgY29uc3RydWN0b3JgIHByb3BlcnR5LCB0aGlzIGlzIGVxdWl2YWxlbnQuXG4gICAgICAvKiogQHR5cGUgeyFGdW5jdGlvbn0gKi9cbiAgICAgIGNvbnN0IGNvbnN0cnVjdG9yID0gdGhpcy5jb25zdHJ1Y3RvcjtcblxuICAgICAgY29uc3QgZGVmaW5pdGlvbiA9IGludGVybmFscy5jb25zdHJ1Y3RvclRvRGVmaW5pdGlvbihjb25zdHJ1Y3Rvcik7XG4gICAgICBpZiAoIWRlZmluaXRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgY3VzdG9tIGVsZW1lbnQgYmVpbmcgY29uc3RydWN0ZWQgd2FzIG5vdCByZWdpc3RlcmVkIHdpdGggYGN1c3RvbUVsZW1lbnRzYC4nKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY29uc3RydWN0aW9uU3RhY2sgPSBkZWZpbml0aW9uLmNvbnN0cnVjdGlvblN0YWNrO1xuXG4gICAgICBpZiAoY29uc3RydWN0aW9uU3RhY2subGVuZ3RoID09PSAwKSB7XG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPSBOYXRpdmUuRG9jdW1lbnRfY3JlYXRlRWxlbWVudC5jYWxsKGRvY3VtZW50LCBkZWZpbml0aW9uLmxvY2FsTmFtZSk7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihlbGVtZW50LCBjb25zdHJ1Y3Rvci5wcm90b3R5cGUpO1xuICAgICAgICBlbGVtZW50Ll9fQ0Vfc3RhdGUgPSBDRVN0YXRlLmN1c3RvbTtcbiAgICAgICAgZWxlbWVudC5fX0NFX2RlZmluaXRpb24gPSBkZWZpbml0aW9uO1xuICAgICAgICBpbnRlcm5hbHMucGF0Y2goZWxlbWVudCk7XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgICAgfVxuXG4gICAgICBjb25zdCBsYXN0SW5kZXggPSBjb25zdHJ1Y3Rpb25TdGFjay5sZW5ndGggLSAxO1xuICAgICAgY29uc3QgZWxlbWVudCA9IGNvbnN0cnVjdGlvblN0YWNrW2xhc3RJbmRleF07XG4gICAgICBpZiAoZWxlbWVudCA9PT0gQWxyZWFkeUNvbnN0cnVjdGVkTWFya2VyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIEhUTUxFbGVtZW50IGNvbnN0cnVjdG9yIHdhcyBlaXRoZXIgY2FsbGVkIHJlZW50cmFudGx5IGZvciB0aGlzIGNvbnN0cnVjdG9yIG9yIGNhbGxlZCBtdWx0aXBsZSB0aW1lcy4nKTtcbiAgICAgIH1cbiAgICAgIGNvbnN0cnVjdGlvblN0YWNrW2xhc3RJbmRleF0gPSBBbHJlYWR5Q29uc3RydWN0ZWRNYXJrZXI7XG5cbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihlbGVtZW50LCBjb25zdHJ1Y3Rvci5wcm90b3R5cGUpO1xuICAgICAgaW50ZXJuYWxzLnBhdGNoKC8qKiBAdHlwZSB7IUhUTUxFbGVtZW50fSAqLyAoZWxlbWVudCkpO1xuXG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG5cbiAgICBIVE1MRWxlbWVudC5wcm90b3R5cGUgPSBOYXRpdmUuSFRNTEVsZW1lbnQucHJvdG90eXBlO1xuXG4gICAgcmV0dXJuIEhUTUxFbGVtZW50O1xuICB9KSgpO1xufTtcbiIsImltcG9ydCBDdXN0b21FbGVtZW50SW50ZXJuYWxzIGZyb20gJy4uLy4uL0N1c3RvbUVsZW1lbnRJbnRlcm5hbHMuanMnO1xuaW1wb3J0ICogYXMgVXRpbGl0aWVzIGZyb20gJy4uLy4uL1V0aWxpdGllcy5qcyc7XG5cbi8qKlxuICogQHR5cGVkZWYge3tcbiAqICAgcHJlcGVuZDogIWZ1bmN0aW9uKC4uLighTm9kZXxzdHJpbmcpKSxcbiAgKiAgYXBwZW5kOiAhZnVuY3Rpb24oLi4uKCFOb2RlfHN0cmluZykpLFxuICogfX1cbiAqL1xubGV0IFBhcmVudE5vZGVOYXRpdmVNZXRob2RzO1xuXG4vKipcbiAqIEBwYXJhbSB7IUN1c3RvbUVsZW1lbnRJbnRlcm5hbHN9IGludGVybmFsc1xuICogQHBhcmFtIHshT2JqZWN0fSBkZXN0aW5hdGlvblxuICogQHBhcmFtIHshUGFyZW50Tm9kZU5hdGl2ZU1ldGhvZHN9IGJ1aWx0SW5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJuYWxzLCBkZXN0aW5hdGlvbiwgYnVpbHRJbikge1xuICAvKipcbiAgICogQHBhcmFtIHsuLi4oIU5vZGV8c3RyaW5nKX0gbm9kZXNcbiAgICovXG4gIGRlc3RpbmF0aW9uWydwcmVwZW5kJ10gPSBmdW5jdGlvbiguLi5ub2Rlcykge1xuICAgIC8vIFRPRE86IEZpeCB0aGlzIGZvciB3aGVuIG9uZSBvZiBgbm9kZXNgIGlzIGEgRG9jdW1lbnRGcmFnbWVudCFcbiAgICBjb25zdCBjb25uZWN0ZWRCZWZvcmUgPSAvKiogQHR5cGUgeyFBcnJheTwhTm9kZT59ICovIChub2Rlcy5maWx0ZXIobm9kZSA9PiB7XG4gICAgICAvLyBEb2N1bWVudEZyYWdtZW50cyBhcmUgbm90IGNvbm5lY3RlZCBhbmQgd2lsbCBub3QgYmUgYWRkZWQgdG8gdGhlIGxpc3QuXG4gICAgICByZXR1cm4gbm9kZSBpbnN0YW5jZW9mIE5vZGUgJiYgVXRpbGl0aWVzLmlzQ29ubmVjdGVkKG5vZGUpO1xuICAgIH0pKTtcblxuICAgIGJ1aWx0SW4ucHJlcGVuZC5hcHBseSh0aGlzLCBub2Rlcyk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbm5lY3RlZEJlZm9yZS5sZW5ndGg7IGkrKykge1xuICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKGNvbm5lY3RlZEJlZm9yZVtpXSk7XG4gICAgfVxuXG4gICAgaWYgKFV0aWxpdGllcy5pc0Nvbm5lY3RlZCh0aGlzKSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChub2RlIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgIGludGVybmFscy5jb25uZWN0VHJlZShub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQHBhcmFtIHsuLi4oIU5vZGV8c3RyaW5nKX0gbm9kZXNcbiAgICovXG4gIGRlc3RpbmF0aW9uWydhcHBlbmQnXSA9IGZ1bmN0aW9uKC4uLm5vZGVzKSB7XG4gICAgLy8gVE9ETzogRml4IHRoaXMgZm9yIHdoZW4gb25lIG9mIGBub2Rlc2AgaXMgYSBEb2N1bWVudEZyYWdtZW50IVxuICAgIGNvbnN0IGNvbm5lY3RlZEJlZm9yZSA9IC8qKiBAdHlwZSB7IUFycmF5PCFOb2RlPn0gKi8gKG5vZGVzLmZpbHRlcihub2RlID0+IHtcbiAgICAgIC8vIERvY3VtZW50RnJhZ21lbnRzIGFyZSBub3QgY29ubmVjdGVkIGFuZCB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgbGlzdC5cbiAgICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgTm9kZSAmJiBVdGlsaXRpZXMuaXNDb25uZWN0ZWQobm9kZSk7XG4gICAgfSkpO1xuXG4gICAgYnVpbHRJbi5hcHBlbmQuYXBwbHkodGhpcywgbm9kZXMpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb25uZWN0ZWRCZWZvcmUubGVuZ3RoOyBpKyspIHtcbiAgICAgIGludGVybmFscy5kaXNjb25uZWN0VHJlZShjb25uZWN0ZWRCZWZvcmVbaV0pO1xuICAgIH1cblxuICAgIGlmIChVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcykpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgICAgICBpbnRlcm5hbHMuY29ubmVjdFRyZWUobm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuIiwiaW1wb3J0IE5hdGl2ZSBmcm9tICcuL05hdGl2ZS5qcyc7XG5pbXBvcnQgQ3VzdG9tRWxlbWVudEludGVybmFscyBmcm9tICcuLi9DdXN0b21FbGVtZW50SW50ZXJuYWxzLmpzJztcbmltcG9ydCAqIGFzIFV0aWxpdGllcyBmcm9tICcuLi9VdGlsaXRpZXMuanMnO1xuXG5pbXBvcnQgUGF0Y2hQYXJlbnROb2RlIGZyb20gJy4vSW50ZXJmYWNlL1BhcmVudE5vZGUuanMnO1xuXG4vKipcbiAqIEBwYXJhbSB7IUN1c3RvbUVsZW1lbnRJbnRlcm5hbHN9IGludGVybmFsc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnRlcm5hbHMpIHtcbiAgVXRpbGl0aWVzLnNldFByb3BlcnR5VW5jaGVja2VkKERvY3VtZW50LnByb3RvdHlwZSwgJ2NyZWF0ZUVsZW1lbnQnLFxuICAgIC8qKlxuICAgICAqIEB0aGlzIHtEb2N1bWVudH1cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbG9jYWxOYW1lXG4gICAgICogQHJldHVybiB7IUVsZW1lbnR9XG4gICAgICovXG4gICAgZnVuY3Rpb24obG9jYWxOYW1lKSB7XG4gICAgICAvLyBPbmx5IGNyZWF0ZSBjdXN0b20gZWxlbWVudHMgaWYgdGhpcyBkb2N1bWVudCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIHJlZ2lzdHJ5LlxuICAgICAgaWYgKHRoaXMuX19DRV9oYXNSZWdpc3RyeSkge1xuICAgICAgICBjb25zdCBkZWZpbml0aW9uID0gaW50ZXJuYWxzLmxvY2FsTmFtZVRvRGVmaW5pdGlvbihsb2NhbE5hbWUpO1xuICAgICAgICBpZiAoZGVmaW5pdGlvbikge1xuICAgICAgICAgIHJldHVybiBuZXcgKGRlZmluaXRpb24uY29uc3RydWN0b3IpKCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVzdWx0ID0gLyoqIEB0eXBlIHshRWxlbWVudH0gKi9cbiAgICAgICAgKE5hdGl2ZS5Eb2N1bWVudF9jcmVhdGVFbGVtZW50LmNhbGwodGhpcywgbG9jYWxOYW1lKSk7XG4gICAgICBpbnRlcm5hbHMucGF0Y2gocmVzdWx0KTtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSk7XG5cbiAgVXRpbGl0aWVzLnNldFByb3BlcnR5VW5jaGVja2VkKERvY3VtZW50LnByb3RvdHlwZSwgJ2ltcG9ydE5vZGUnLFxuICAgIC8qKlxuICAgICAqIEB0aGlzIHtEb2N1bWVudH1cbiAgICAgKiBAcGFyYW0geyFOb2RlfSBub2RlXG4gICAgICogQHBhcmFtIHtib29sZWFuPX0gZGVlcFxuICAgICAqIEByZXR1cm4geyFOb2RlfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKG5vZGUsIGRlZXApIHtcbiAgICAgIGNvbnN0IGNsb25lID0gTmF0aXZlLkRvY3VtZW50X2ltcG9ydE5vZGUuY2FsbCh0aGlzLCBub2RlLCBkZWVwKTtcbiAgICAgIC8vIE9ubHkgY3JlYXRlIGN1c3RvbSBlbGVtZW50cyBpZiB0aGlzIGRvY3VtZW50IGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVnaXN0cnkuXG4gICAgICBpZiAoIXRoaXMuX19DRV9oYXNSZWdpc3RyeSkge1xuICAgICAgICBpbnRlcm5hbHMucGF0Y2hUcmVlKGNsb25lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGludGVybmFscy5wYXRjaEFuZFVwZ3JhZGVUcmVlKGNsb25lKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjbG9uZTtcbiAgICB9KTtcblxuICBjb25zdCBOU19IVE1MID0gXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI7XG5cbiAgVXRpbGl0aWVzLnNldFByb3BlcnR5VW5jaGVja2VkKERvY3VtZW50LnByb3RvdHlwZSwgJ2NyZWF0ZUVsZW1lbnROUycsXG4gICAgLyoqXG4gICAgICogQHRoaXMge0RvY3VtZW50fVxuICAgICAqIEBwYXJhbSB7P3N0cmluZ30gbmFtZXNwYWNlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxvY2FsTmFtZVxuICAgICAqIEByZXR1cm4geyFFbGVtZW50fVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKG5hbWVzcGFjZSwgbG9jYWxOYW1lKSB7XG4gICAgICAvLyBPbmx5IGNyZWF0ZSBjdXN0b20gZWxlbWVudHMgaWYgdGhpcyBkb2N1bWVudCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIHJlZ2lzdHJ5LlxuICAgICAgaWYgKHRoaXMuX19DRV9oYXNSZWdpc3RyeSAmJiAobmFtZXNwYWNlID09PSBudWxsIHx8IG5hbWVzcGFjZSA9PT0gTlNfSFRNTCkpIHtcbiAgICAgICAgY29uc3QgZGVmaW5pdGlvbiA9IGludGVybmFscy5sb2NhbE5hbWVUb0RlZmluaXRpb24obG9jYWxOYW1lKTtcbiAgICAgICAgaWYgKGRlZmluaXRpb24pIHtcbiAgICAgICAgICByZXR1cm4gbmV3IChkZWZpbml0aW9uLmNvbnN0cnVjdG9yKSgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHJlc3VsdCA9IC8qKiBAdHlwZSB7IUVsZW1lbnR9ICovXG4gICAgICAgIChOYXRpdmUuRG9jdW1lbnRfY3JlYXRlRWxlbWVudE5TLmNhbGwodGhpcywgbmFtZXNwYWNlLCBsb2NhbE5hbWUpKTtcbiAgICAgIGludGVybmFscy5wYXRjaChyZXN1bHQpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9KTtcblxuICBQYXRjaFBhcmVudE5vZGUoaW50ZXJuYWxzLCBEb2N1bWVudC5wcm90b3R5cGUsIHtcbiAgICBwcmVwZW5kOiBOYXRpdmUuRG9jdW1lbnRfcHJlcGVuZCxcbiAgICBhcHBlbmQ6IE5hdGl2ZS5Eb2N1bWVudF9hcHBlbmQsXG4gIH0pO1xufTtcbiIsImltcG9ydCBOYXRpdmUgZnJvbSAnLi9OYXRpdmUuanMnO1xuaW1wb3J0IEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMgZnJvbSAnLi4vQ3VzdG9tRWxlbWVudEludGVybmFscy5qcyc7XG5pbXBvcnQgKiBhcyBVdGlsaXRpZXMgZnJvbSAnLi4vVXRpbGl0aWVzLmpzJztcblxuLyoqXG4gKiBAcGFyYW0geyFDdXN0b21FbGVtZW50SW50ZXJuYWxzfSBpbnRlcm5hbHNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJuYWxzKSB7XG4gIC8vIGBOb2RlI25vZGVWYWx1ZWAgaXMgaW1wbGVtZW50ZWQgb24gYEF0dHJgLlxuICAvLyBgTm9kZSN0ZXh0Q29udGVudGAgaXMgaW1wbGVtZW50ZWQgb24gYEF0dHJgLCBgRWxlbWVudGAuXG5cbiAgVXRpbGl0aWVzLnNldFByb3BlcnR5VW5jaGVja2VkKE5vZGUucHJvdG90eXBlLCAnaW5zZXJ0QmVmb3JlJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7Tm9kZX1cbiAgICAgKiBAcGFyYW0geyFOb2RlfSBub2RlXG4gICAgICogQHBhcmFtIHs/Tm9kZX0gcmVmTm9kZVxuICAgICAqIEByZXR1cm4geyFOb2RlfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKG5vZGUsIHJlZk5vZGUpIHtcbiAgICAgIGlmIChub2RlIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCkge1xuICAgICAgICBjb25zdCBpbnNlcnRlZE5vZGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KG5vZGUuY2hpbGROb2Rlcyk7XG4gICAgICAgIGNvbnN0IG5hdGl2ZVJlc3VsdCA9IE5hdGl2ZS5Ob2RlX2luc2VydEJlZm9yZS5jYWxsKHRoaXMsIG5vZGUsIHJlZk5vZGUpO1xuXG4gICAgICAgIC8vIERvY3VtZW50RnJhZ21lbnRzIGNhbid0IGJlIGNvbm5lY3RlZCwgc28gYGRpc2Nvbm5lY3RUcmVlYCB3aWxsIG5ldmVyXG4gICAgICAgIC8vIG5lZWQgdG8gYmUgY2FsbGVkIG9uIGEgRG9jdW1lbnRGcmFnbWVudCdzIGNoaWxkcmVuIGFmdGVyIGluc2VydGluZyBpdC5cblxuICAgICAgICBpZiAoVXRpbGl0aWVzLmlzQ29ubmVjdGVkKHRoaXMpKSB7XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnNlcnRlZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpbnRlcm5hbHMuY29ubmVjdFRyZWUoaW5zZXJ0ZWROb2Rlc1tpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5hdGl2ZVJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgbm9kZVdhc0Nvbm5lY3RlZCA9IFV0aWxpdGllcy5pc0Nvbm5lY3RlZChub2RlKTtcbiAgICAgIGNvbnN0IG5hdGl2ZVJlc3VsdCA9IE5hdGl2ZS5Ob2RlX2luc2VydEJlZm9yZS5jYWxsKHRoaXMsIG5vZGUsIHJlZk5vZGUpO1xuXG4gICAgICBpZiAobm9kZVdhc0Nvbm5lY3RlZCkge1xuICAgICAgICBpbnRlcm5hbHMuZGlzY29ubmVjdFRyZWUobm9kZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcykpIHtcbiAgICAgICAgaW50ZXJuYWxzLmNvbm5lY3RUcmVlKG5vZGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmF0aXZlUmVzdWx0O1xuICAgIH0pO1xuXG4gIFV0aWxpdGllcy5zZXRQcm9wZXJ0eVVuY2hlY2tlZChOb2RlLnByb3RvdHlwZSwgJ2FwcGVuZENoaWxkJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7Tm9kZX1cbiAgICAgKiBAcGFyYW0geyFOb2RlfSBub2RlXG4gICAgICogQHJldHVybiB7IU5vZGV9XG4gICAgICovXG4gICAgZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBEb2N1bWVudEZyYWdtZW50KSB7XG4gICAgICAgIGNvbnN0IGluc2VydGVkTm9kZXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuYXBwbHkobm9kZS5jaGlsZE5vZGVzKTtcbiAgICAgICAgY29uc3QgbmF0aXZlUmVzdWx0ID0gTmF0aXZlLk5vZGVfYXBwZW5kQ2hpbGQuY2FsbCh0aGlzLCBub2RlKTtcblxuICAgICAgICAvLyBEb2N1bWVudEZyYWdtZW50cyBjYW4ndCBiZSBjb25uZWN0ZWQsIHNvIGBkaXNjb25uZWN0VHJlZWAgd2lsbCBuZXZlclxuICAgICAgICAvLyBuZWVkIHRvIGJlIGNhbGxlZCBvbiBhIERvY3VtZW50RnJhZ21lbnQncyBjaGlsZHJlbiBhZnRlciBpbnNlcnRpbmcgaXQuXG5cbiAgICAgICAgaWYgKFV0aWxpdGllcy5pc0Nvbm5lY3RlZCh0aGlzKSkge1xuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5zZXJ0ZWROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaW50ZXJuYWxzLmNvbm5lY3RUcmVlKGluc2VydGVkTm9kZXNbaV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBuYXRpdmVSZXN1bHQ7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG5vZGVXYXNDb25uZWN0ZWQgPSBVdGlsaXRpZXMuaXNDb25uZWN0ZWQobm9kZSk7XG4gICAgICBjb25zdCBuYXRpdmVSZXN1bHQgPSBOYXRpdmUuTm9kZV9hcHBlbmRDaGlsZC5jYWxsKHRoaXMsIG5vZGUpO1xuXG4gICAgICBpZiAobm9kZVdhc0Nvbm5lY3RlZCkge1xuICAgICAgICBpbnRlcm5hbHMuZGlzY29ubmVjdFRyZWUobm9kZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcykpIHtcbiAgICAgICAgaW50ZXJuYWxzLmNvbm5lY3RUcmVlKG5vZGUpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmF0aXZlUmVzdWx0O1xuICAgIH0pO1xuXG4gIFV0aWxpdGllcy5zZXRQcm9wZXJ0eVVuY2hlY2tlZChOb2RlLnByb3RvdHlwZSwgJ2Nsb25lTm9kZScsXG4gICAgLyoqXG4gICAgICogQHRoaXMge05vZGV9XG4gICAgICogQHBhcmFtIHtib29sZWFuPX0gZGVlcFxuICAgICAqIEByZXR1cm4geyFOb2RlfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKGRlZXApIHtcbiAgICAgIGNvbnN0IGNsb25lID0gTmF0aXZlLk5vZGVfY2xvbmVOb2RlLmNhbGwodGhpcywgZGVlcCk7XG4gICAgICAvLyBPbmx5IGNyZWF0ZSBjdXN0b20gZWxlbWVudHMgaWYgdGhpcyBlbGVtZW50J3Mgb3duZXIgZG9jdW1lbnQgaXNcbiAgICAgIC8vIGFzc29jaWF0ZWQgd2l0aCB0aGUgcmVnaXN0cnkuXG4gICAgICBpZiAoIXRoaXMub3duZXJEb2N1bWVudC5fX0NFX2hhc1JlZ2lzdHJ5KSB7XG4gICAgICAgIGludGVybmFscy5wYXRjaFRyZWUoY2xvbmUpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaW50ZXJuYWxzLnBhdGNoQW5kVXBncmFkZVRyZWUoY2xvbmUpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNsb25lO1xuICAgIH0pO1xuXG4gIFV0aWxpdGllcy5zZXRQcm9wZXJ0eVVuY2hlY2tlZChOb2RlLnByb3RvdHlwZSwgJ3JlbW92ZUNoaWxkJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7Tm9kZX1cbiAgICAgKiBAcGFyYW0geyFOb2RlfSBub2RlXG4gICAgICogQHJldHVybiB7IU5vZGV9XG4gICAgICovXG4gICAgZnVuY3Rpb24obm9kZSkge1xuICAgICAgY29uc3Qgbm9kZVdhc0Nvbm5lY3RlZCA9IFV0aWxpdGllcy5pc0Nvbm5lY3RlZChub2RlKTtcbiAgICAgIGNvbnN0IG5hdGl2ZVJlc3VsdCA9IE5hdGl2ZS5Ob2RlX3JlbW92ZUNoaWxkLmNhbGwodGhpcywgbm9kZSk7XG5cbiAgICAgIGlmIChub2RlV2FzQ29ubmVjdGVkKSB7XG4gICAgICAgIGludGVybmFscy5kaXNjb25uZWN0VHJlZShub2RlKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5hdGl2ZVJlc3VsdDtcbiAgICB9KTtcblxuICBVdGlsaXRpZXMuc2V0UHJvcGVydHlVbmNoZWNrZWQoTm9kZS5wcm90b3R5cGUsICdyZXBsYWNlQ2hpbGQnLFxuICAgIC8qKlxuICAgICAqIEB0aGlzIHtOb2RlfVxuICAgICAqIEBwYXJhbSB7IU5vZGV9IG5vZGVUb0luc2VydFxuICAgICAqIEBwYXJhbSB7IU5vZGV9IG5vZGVUb1JlbW92ZVxuICAgICAqIEByZXR1cm4geyFOb2RlfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKG5vZGVUb0luc2VydCwgbm9kZVRvUmVtb3ZlKSB7XG4gICAgICBpZiAobm9kZVRvSW5zZXJ0IGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCkge1xuICAgICAgICBjb25zdCBpbnNlcnRlZE5vZGVzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KG5vZGVUb0luc2VydC5jaGlsZE5vZGVzKTtcbiAgICAgICAgY29uc3QgbmF0aXZlUmVzdWx0ID0gTmF0aXZlLk5vZGVfcmVwbGFjZUNoaWxkLmNhbGwodGhpcywgbm9kZVRvSW5zZXJ0LCBub2RlVG9SZW1vdmUpO1xuXG4gICAgICAgIC8vIERvY3VtZW50RnJhZ21lbnRzIGNhbid0IGJlIGNvbm5lY3RlZCwgc28gYGRpc2Nvbm5lY3RUcmVlYCB3aWxsIG5ldmVyXG4gICAgICAgIC8vIG5lZWQgdG8gYmUgY2FsbGVkIG9uIGEgRG9jdW1lbnRGcmFnbWVudCdzIGNoaWxkcmVuIGFmdGVyIGluc2VydGluZyBpdC5cblxuICAgICAgICBpZiAoVXRpbGl0aWVzLmlzQ29ubmVjdGVkKHRoaXMpKSB7XG4gICAgICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKG5vZGVUb1JlbW92ZSk7XG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpbnNlcnRlZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpbnRlcm5hbHMuY29ubmVjdFRyZWUoaW5zZXJ0ZWROb2Rlc1tpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIG5hdGl2ZVJlc3VsdDtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgbm9kZVRvSW5zZXJ0V2FzQ29ubmVjdGVkID0gVXRpbGl0aWVzLmlzQ29ubmVjdGVkKG5vZGVUb0luc2VydCk7XG4gICAgICBjb25zdCBuYXRpdmVSZXN1bHQgPSBOYXRpdmUuTm9kZV9yZXBsYWNlQ2hpbGQuY2FsbCh0aGlzLCBub2RlVG9JbnNlcnQsIG5vZGVUb1JlbW92ZSk7XG4gICAgICBjb25zdCB0aGlzSXNDb25uZWN0ZWQgPSBVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcyk7XG5cbiAgICAgIGlmICh0aGlzSXNDb25uZWN0ZWQpIHtcbiAgICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKG5vZGVUb1JlbW92ZSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChub2RlVG9JbnNlcnRXYXNDb25uZWN0ZWQpIHtcbiAgICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKG5vZGVUb0luc2VydCk7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzSXNDb25uZWN0ZWQpIHtcbiAgICAgICAgaW50ZXJuYWxzLmNvbm5lY3RUcmVlKG5vZGVUb0luc2VydCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBuYXRpdmVSZXN1bHQ7XG4gICAgfSk7XG5cblxuICBmdW5jdGlvbiBwYXRjaF90ZXh0Q29udGVudChkZXN0aW5hdGlvbiwgYmFzZURlc2NyaXB0b3IpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZGVzdGluYXRpb24sICd0ZXh0Q29udGVudCcsIHtcbiAgICAgIGVudW1lcmFibGU6IGJhc2VEZXNjcmlwdG9yLmVudW1lcmFibGUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGJhc2VEZXNjcmlwdG9yLmdldCxcbiAgICAgIHNldDogLyoqIEB0aGlzIHtOb2RlfSAqLyBmdW5jdGlvbihhc3NpZ25lZFZhbHVlKSB7XG4gICAgICAgIC8vIElmIHRoaXMgaXMgYSB0ZXh0IG5vZGUgdGhlbiB0aGVyZSBhcmUgbm8gbm9kZXMgdG8gZGlzY29ubmVjdC5cbiAgICAgICAgaWYgKHRoaXMubm9kZVR5cGUgPT09IE5vZGUuVEVYVF9OT0RFKSB7XG4gICAgICAgICAgYmFzZURlc2NyaXB0b3Iuc2V0LmNhbGwodGhpcywgYXNzaWduZWRWYWx1ZSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHJlbW92ZWROb2RlcyA9IHVuZGVmaW5lZDtcbiAgICAgICAgLy8gQ2hlY2tpbmcgZm9yIGBmaXJzdENoaWxkYCBpcyBmYXN0ZXIgdGhhbiByZWFkaW5nIGBjaGlsZE5vZGVzLmxlbmd0aGBcbiAgICAgICAgLy8gdG8gY29tcGFyZSB3aXRoIDAuXG4gICAgICAgIGlmICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAvLyBVc2luZyBgY2hpbGROb2Rlc2AgaXMgZmFzdGVyIHRoYW4gYGNoaWxkcmVuYCwgZXZlbiB0aG91Z2ggd2Ugb25seVxuICAgICAgICAgIC8vIGNhcmUgYWJvdXQgZWxlbWVudHMuXG4gICAgICAgICAgY29uc3QgY2hpbGROb2RlcyA9IHRoaXMuY2hpbGROb2RlcztcbiAgICAgICAgICBjb25zdCBjaGlsZE5vZGVzTGVuZ3RoID0gY2hpbGROb2Rlcy5sZW5ndGg7XG4gICAgICAgICAgaWYgKGNoaWxkTm9kZXNMZW5ndGggPiAwICYmIFV0aWxpdGllcy5pc0Nvbm5lY3RlZCh0aGlzKSkge1xuICAgICAgICAgICAgLy8gQ29weWluZyBhbiBhcnJheSBieSBpdGVyYXRpbmcgaXMgZmFzdGVyIHRoYW4gdXNpbmcgc2xpY2UuXG4gICAgICAgICAgICByZW1vdmVkTm9kZXMgPSBuZXcgQXJyYXkoY2hpbGROb2Rlc0xlbmd0aCk7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkTm9kZXNMZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICByZW1vdmVkTm9kZXNbaV0gPSBjaGlsZE5vZGVzW2ldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGJhc2VEZXNjcmlwdG9yLnNldC5jYWxsKHRoaXMsIGFzc2lnbmVkVmFsdWUpO1xuXG4gICAgICAgIGlmIChyZW1vdmVkTm9kZXMpIHtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlbW92ZWROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKHJlbW92ZWROb2Rlc1tpXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKE5hdGl2ZS5Ob2RlX3RleHRDb250ZW50ICYmIE5hdGl2ZS5Ob2RlX3RleHRDb250ZW50LmdldCkge1xuICAgIHBhdGNoX3RleHRDb250ZW50KE5vZGUucHJvdG90eXBlLCBOYXRpdmUuTm9kZV90ZXh0Q29udGVudCk7XG4gIH0gZWxzZSB7XG4gICAgaW50ZXJuYWxzLmFkZFBhdGNoKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHBhdGNoX3RleHRDb250ZW50KGVsZW1lbnQsIHtcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAvLyBOT1RFOiBUaGlzIGltcGxlbWVudGF0aW9uIG9mIHRoZSBgdGV4dENvbnRlbnRgIGdldHRlciBhc3N1bWVzIHRoYXRcbiAgICAgICAgLy8gdGV4dCBub2RlcycgYHRleHRDb250ZW50YCBnZXR0ZXIgd2lsbCBub3QgYmUgcGF0Y2hlZC5cbiAgICAgICAgZ2V0OiAvKiogQHRoaXMge05vZGV9ICovIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIC8qKiBAdHlwZSB7IUFycmF5PHN0cmluZz59ICovXG4gICAgICAgICAgY29uc3QgcGFydHMgPSBbXTtcblxuICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5jaGlsZE5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYXJ0cy5wdXNoKHRoaXMuY2hpbGROb2Rlc1tpXS50ZXh0Q29udGVudCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJycpO1xuICAgICAgICB9LFxuICAgICAgICBzZXQ6IC8qKiBAdGhpcyB7Tm9kZX0gKi8gZnVuY3Rpb24oYXNzaWduZWRWYWx1ZSkge1xuICAgICAgICAgIHdoaWxlICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgICAgIE5hdGl2ZS5Ob2RlX3JlbW92ZUNoaWxkLmNhbGwodGhpcywgdGhpcy5maXJzdENoaWxkKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgTmF0aXZlLk5vZGVfYXBwZW5kQ2hpbGQuY2FsbCh0aGlzLCBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShhc3NpZ25lZFZhbHVlKSk7XG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxufTtcbiIsImltcG9ydCBDdXN0b21FbGVtZW50SW50ZXJuYWxzIGZyb20gJy4uLy4uL0N1c3RvbUVsZW1lbnRJbnRlcm5hbHMuanMnO1xuaW1wb3J0ICogYXMgVXRpbGl0aWVzIGZyb20gJy4uLy4uL1V0aWxpdGllcy5qcyc7XG5cbi8qKlxuICogQHR5cGVkZWYge3tcbiAqICAgYmVmb3JlOiAhZnVuY3Rpb24oLi4uKCFOb2RlfHN0cmluZykpLFxuICogICBhZnRlcjogIWZ1bmN0aW9uKC4uLighTm9kZXxzdHJpbmcpKSxcbiAqICAgcmVwbGFjZVdpdGg6ICFmdW5jdGlvbiguLi4oIU5vZGV8c3RyaW5nKSksXG4gKiAgIHJlbW92ZTogIWZ1bmN0aW9uKCksXG4gKiB9fVxuICovXG5sZXQgQ2hpbGROb2RlTmF0aXZlTWV0aG9kcztcblxuLyoqXG4gKiBAcGFyYW0geyFDdXN0b21FbGVtZW50SW50ZXJuYWxzfSBpbnRlcm5hbHNcbiAqIEBwYXJhbSB7IU9iamVjdH0gZGVzdGluYXRpb25cbiAqIEBwYXJhbSB7IUNoaWxkTm9kZU5hdGl2ZU1ldGhvZHN9IGJ1aWx0SW5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJuYWxzLCBkZXN0aW5hdGlvbiwgYnVpbHRJbikge1xuICAvKipcbiAgICogQHBhcmFtIHsuLi4oIU5vZGV8c3RyaW5nKX0gbm9kZXNcbiAgICovXG4gIGRlc3RpbmF0aW9uWydiZWZvcmUnXSA9IGZ1bmN0aW9uKC4uLm5vZGVzKSB7XG4gICAgLy8gVE9ETzogRml4IHRoaXMgZm9yIHdoZW4gb25lIG9mIGBub2Rlc2AgaXMgYSBEb2N1bWVudEZyYWdtZW50IVxuICAgIGNvbnN0IGNvbm5lY3RlZEJlZm9yZSA9IC8qKiBAdHlwZSB7IUFycmF5PCFOb2RlPn0gKi8gKG5vZGVzLmZpbHRlcihub2RlID0+IHtcbiAgICAgIC8vIERvY3VtZW50RnJhZ21lbnRzIGFyZSBub3QgY29ubmVjdGVkIGFuZCB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgbGlzdC5cbiAgICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgTm9kZSAmJiBVdGlsaXRpZXMuaXNDb25uZWN0ZWQobm9kZSk7XG4gICAgfSkpO1xuXG4gICAgYnVpbHRJbi5iZWZvcmUuYXBwbHkodGhpcywgbm9kZXMpO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb25uZWN0ZWRCZWZvcmUubGVuZ3RoOyBpKyspIHtcbiAgICAgIGludGVybmFscy5kaXNjb25uZWN0VHJlZShjb25uZWN0ZWRCZWZvcmVbaV0pO1xuICAgIH1cblxuICAgIGlmIChVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcykpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IG5vZGVzW2ldO1xuICAgICAgICBpZiAobm9kZSBpbnN0YW5jZW9mIEVsZW1lbnQpIHtcbiAgICAgICAgICBpbnRlcm5hbHMuY29ubmVjdFRyZWUobm9kZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Li4uKCFOb2RlfHN0cmluZyl9IG5vZGVzXG4gICAqL1xuICBkZXN0aW5hdGlvblsnYWZ0ZXInXSA9IGZ1bmN0aW9uKC4uLm5vZGVzKSB7XG4gICAgLy8gVE9ETzogRml4IHRoaXMgZm9yIHdoZW4gb25lIG9mIGBub2Rlc2AgaXMgYSBEb2N1bWVudEZyYWdtZW50IVxuICAgIGNvbnN0IGNvbm5lY3RlZEJlZm9yZSA9IC8qKiBAdHlwZSB7IUFycmF5PCFOb2RlPn0gKi8gKG5vZGVzLmZpbHRlcihub2RlID0+IHtcbiAgICAgIC8vIERvY3VtZW50RnJhZ21lbnRzIGFyZSBub3QgY29ubmVjdGVkIGFuZCB3aWxsIG5vdCBiZSBhZGRlZCB0byB0aGUgbGlzdC5cbiAgICAgIHJldHVybiBub2RlIGluc3RhbmNlb2YgTm9kZSAmJiBVdGlsaXRpZXMuaXNDb25uZWN0ZWQobm9kZSk7XG4gICAgfSkpO1xuXG4gICAgYnVpbHRJbi5hZnRlci5hcHBseSh0aGlzLCBub2Rlcyk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvbm5lY3RlZEJlZm9yZS5sZW5ndGg7IGkrKykge1xuICAgICAgaW50ZXJuYWxzLmRpc2Nvbm5lY3RUcmVlKGNvbm5lY3RlZEJlZm9yZVtpXSk7XG4gICAgfVxuXG4gICAgaWYgKFV0aWxpdGllcy5pc0Nvbm5lY3RlZCh0aGlzKSkge1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBub2Rlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBub2RlID0gbm9kZXNbaV07XG4gICAgICAgIGlmIChub2RlIGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgIGludGVybmFscy5jb25uZWN0VHJlZShub2RlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQHBhcmFtIHsuLi4oIU5vZGV8c3RyaW5nKX0gbm9kZXNcbiAgICovXG4gIGRlc3RpbmF0aW9uWydyZXBsYWNlV2l0aCddID0gZnVuY3Rpb24oLi4ubm9kZXMpIHtcbiAgICAvLyBUT0RPOiBGaXggdGhpcyBmb3Igd2hlbiBvbmUgb2YgYG5vZGVzYCBpcyBhIERvY3VtZW50RnJhZ21lbnQhXG4gICAgY29uc3QgY29ubmVjdGVkQmVmb3JlID0gLyoqIEB0eXBlIHshQXJyYXk8IU5vZGU+fSAqLyAobm9kZXMuZmlsdGVyKG5vZGUgPT4ge1xuICAgICAgLy8gRG9jdW1lbnRGcmFnbWVudHMgYXJlIG5vdCBjb25uZWN0ZWQgYW5kIHdpbGwgbm90IGJlIGFkZGVkIHRvIHRoZSBsaXN0LlxuICAgICAgcmV0dXJuIG5vZGUgaW5zdGFuY2VvZiBOb2RlICYmIFV0aWxpdGllcy5pc0Nvbm5lY3RlZChub2RlKTtcbiAgICB9KSk7XG5cbiAgICBjb25zdCB3YXNDb25uZWN0ZWQgPSBVdGlsaXRpZXMuaXNDb25uZWN0ZWQodGhpcyk7XG5cbiAgICBidWlsdEluLnJlcGxhY2VXaXRoLmFwcGx5KHRoaXMsIG5vZGVzKTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY29ubmVjdGVkQmVmb3JlLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpbnRlcm5hbHMuZGlzY29ubmVjdFRyZWUoY29ubmVjdGVkQmVmb3JlW2ldKTtcbiAgICB9XG5cbiAgICBpZiAod2FzQ29ubmVjdGVkKSB7XG4gICAgICBpbnRlcm5hbHMuZGlzY29ubmVjdFRyZWUodGhpcyk7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBub2Rlc1tpXTtcbiAgICAgICAgaWYgKG5vZGUgaW5zdGFuY2VvZiBFbGVtZW50KSB7XG4gICAgICAgICAgaW50ZXJuYWxzLmNvbm5lY3RUcmVlKG5vZGUpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGRlc3RpbmF0aW9uWydyZW1vdmUnXSA9IGZ1bmN0aW9uKCkge1xuICAgIGNvbnN0IHdhc0Nvbm5lY3RlZCA9IFV0aWxpdGllcy5pc0Nvbm5lY3RlZCh0aGlzKTtcblxuICAgIGJ1aWx0SW4ucmVtb3ZlLmNhbGwodGhpcyk7XG5cbiAgICBpZiAod2FzQ29ubmVjdGVkKSB7XG4gICAgICBpbnRlcm5hbHMuZGlzY29ubmVjdFRyZWUodGhpcyk7XG4gICAgfVxuICB9O1xufTtcbiIsImltcG9ydCBOYXRpdmUgZnJvbSAnLi9OYXRpdmUuanMnO1xuaW1wb3J0IEN1c3RvbUVsZW1lbnRJbnRlcm5hbHMgZnJvbSAnLi4vQ3VzdG9tRWxlbWVudEludGVybmFscy5qcyc7XG5pbXBvcnQgQ0VTdGF0ZSBmcm9tICcuLi9DdXN0b21FbGVtZW50U3RhdGUuanMnO1xuaW1wb3J0ICogYXMgVXRpbGl0aWVzIGZyb20gJy4uL1V0aWxpdGllcy5qcyc7XG5cbmltcG9ydCBQYXRjaFBhcmVudE5vZGUgZnJvbSAnLi9JbnRlcmZhY2UvUGFyZW50Tm9kZS5qcyc7XG5pbXBvcnQgUGF0Y2hDaGlsZE5vZGUgZnJvbSAnLi9JbnRlcmZhY2UvQ2hpbGROb2RlLmpzJztcblxuLyoqXG4gKiBAcGFyYW0geyFDdXN0b21FbGVtZW50SW50ZXJuYWxzfSBpbnRlcm5hbHNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW50ZXJuYWxzKSB7XG4gIGlmIChOYXRpdmUuRWxlbWVudF9hdHRhY2hTaGFkb3cpIHtcbiAgICBVdGlsaXRpZXMuc2V0UHJvcGVydHlVbmNoZWNrZWQoRWxlbWVudC5wcm90b3R5cGUsICdhdHRhY2hTaGFkb3cnLFxuICAgICAgLyoqXG4gICAgICAgKiBAdGhpcyB7RWxlbWVudH1cbiAgICAgICAqIEBwYXJhbSB7IXttb2RlOiBzdHJpbmd9fSBpbml0XG4gICAgICAgKiBAcmV0dXJuIHtTaGFkb3dSb290fVxuICAgICAgICovXG4gICAgICBmdW5jdGlvbihpbml0KSB7XG4gICAgICAgIGNvbnN0IHNoYWRvd1Jvb3QgPSBOYXRpdmUuRWxlbWVudF9hdHRhY2hTaGFkb3cuY2FsbCh0aGlzLCBpbml0KTtcbiAgICAgICAgdGhpcy5fX0NFX3NoYWRvd1Jvb3QgPSBzaGFkb3dSb290O1xuICAgICAgICByZXR1cm4gc2hhZG93Um9vdDtcbiAgICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIGNvbnNvbGUud2FybignQ3VzdG9tIEVsZW1lbnRzOiBgRWxlbWVudCNhdHRhY2hTaGFkb3dgIHdhcyBub3QgcGF0Y2hlZC4nKTtcbiAgfVxuXG5cbiAgZnVuY3Rpb24gcGF0Y2hfaW5uZXJIVE1MKGRlc3RpbmF0aW9uLCBiYXNlRGVzY3JpcHRvcikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShkZXN0aW5hdGlvbiwgJ2lubmVySFRNTCcsIHtcbiAgICAgIGVudW1lcmFibGU6IGJhc2VEZXNjcmlwdG9yLmVudW1lcmFibGUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICBnZXQ6IGJhc2VEZXNjcmlwdG9yLmdldCxcbiAgICAgIHNldDogLyoqIEB0aGlzIHtFbGVtZW50fSAqLyBmdW5jdGlvbihodG1sU3RyaW5nKSB7XG4gICAgICAgIGNvbnN0IGlzQ29ubmVjdGVkID0gVXRpbGl0aWVzLmlzQ29ubmVjdGVkKHRoaXMpO1xuXG4gICAgICAgIC8vIE5PVEU6IEluIElFMTEsIHdoZW4gdXNpbmcgdGhlIG5hdGl2ZSBgaW5uZXJIVE1MYCBzZXR0ZXIsIGFsbCBub2Rlc1xuICAgICAgICAvLyB0aGF0IHdlcmUgcHJldmlvdXNseSBkZXNjZW5kYW50cyBvZiB0aGUgY29udGV4dCBlbGVtZW50IGhhdmUgYWxsIG9mXG4gICAgICAgIC8vIHRoZWlyIGNoaWxkcmVuIHJlbW92ZWQgYXMgcGFydCBvZiB0aGUgc2V0IC0gdGhlIGVudGlyZSBzdWJ0cmVlIGlzXG4gICAgICAgIC8vICdkaXNhc3NlbWJsZWQnLiBUaGlzIHdvcmsgYXJvdW5kIHdhbGtzIHRoZSBzdWJ0cmVlICpiZWZvcmUqIHVzaW5nIHRoZVxuICAgICAgICAvLyBuYXRpdmUgc2V0dGVyLlxuICAgICAgICAvKiogQHR5cGUgeyFBcnJheTwhRWxlbWVudD58dW5kZWZpbmVkfSAqL1xuICAgICAgICBsZXQgcmVtb3ZlZEVsZW1lbnRzID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoaXNDb25uZWN0ZWQpIHtcbiAgICAgICAgICByZW1vdmVkRWxlbWVudHMgPSBbXTtcbiAgICAgICAgICBVdGlsaXRpZXMud2Fsa0RlZXBEZXNjZW5kYW50RWxlbWVudHModGhpcywgZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBpZiAoZWxlbWVudCAhPT0gdGhpcykge1xuICAgICAgICAgICAgICByZW1vdmVkRWxlbWVudHMucHVzaChlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGJhc2VEZXNjcmlwdG9yLnNldC5jYWxsKHRoaXMsIGh0bWxTdHJpbmcpO1xuXG4gICAgICAgIGlmIChyZW1vdmVkRWxlbWVudHMpIHtcbiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlbW92ZWRFbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHJlbW92ZWRFbGVtZW50c1tpXTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50Ll9fQ0Vfc3RhdGUgPT09IENFU3RhdGUuY3VzdG9tKSB7XG4gICAgICAgICAgICAgIGludGVybmFscy5kaXNjb25uZWN0ZWRDYWxsYmFjayhlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBPbmx5IGNyZWF0ZSBjdXN0b20gZWxlbWVudHMgaWYgdGhpcyBlbGVtZW50J3Mgb3duZXIgZG9jdW1lbnQgaXNcbiAgICAgICAgLy8gYXNzb2NpYXRlZCB3aXRoIHRoZSByZWdpc3RyeS5cbiAgICAgICAgaWYgKCF0aGlzLm93bmVyRG9jdW1lbnQuX19DRV9oYXNSZWdpc3RyeSkge1xuICAgICAgICAgIGludGVybmFscy5wYXRjaFRyZWUodGhpcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaW50ZXJuYWxzLnBhdGNoQW5kVXBncmFkZVRyZWUodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGh0bWxTdHJpbmc7XG4gICAgICB9LFxuICAgIH0pO1xuICB9XG5cbiAgaWYgKE5hdGl2ZS5FbGVtZW50X2lubmVySFRNTCAmJiBOYXRpdmUuRWxlbWVudF9pbm5lckhUTUwuZ2V0KSB7XG4gICAgcGF0Y2hfaW5uZXJIVE1MKEVsZW1lbnQucHJvdG90eXBlLCBOYXRpdmUuRWxlbWVudF9pbm5lckhUTUwpO1xuICB9IGVsc2UgaWYgKE5hdGl2ZS5IVE1MRWxlbWVudF9pbm5lckhUTUwgJiYgTmF0aXZlLkhUTUxFbGVtZW50X2lubmVySFRNTC5nZXQpIHtcbiAgICBwYXRjaF9pbm5lckhUTUwoSFRNTEVsZW1lbnQucHJvdG90eXBlLCBOYXRpdmUuSFRNTEVsZW1lbnRfaW5uZXJIVE1MKTtcbiAgfSBlbHNlIHtcblxuICAgIC8qKiBAdHlwZSB7SFRNTERpdkVsZW1lbnR9ICovXG4gICAgY29uc3QgcmF3RGl2ID0gTmF0aXZlLkRvY3VtZW50X2NyZWF0ZUVsZW1lbnQuY2FsbChkb2N1bWVudCwgJ2RpdicpO1xuXG4gICAgaW50ZXJuYWxzLmFkZFBhdGNoKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIHBhdGNoX2lubmVySFRNTChlbGVtZW50LCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgLy8gSW1wbGVtZW50cyBnZXR0aW5nIGBpbm5lckhUTUxgIGJ5IHBlcmZvcm1pbmcgYW4gdW5wYXRjaGVkIGBjbG9uZU5vZGVgXG4gICAgICAgIC8vIG9mIHRoZSBlbGVtZW50IGFuZCByZXR1cm5pbmcgdGhlIHJlc3VsdGluZyBlbGVtZW50J3MgYGlubmVySFRNTGAuXG4gICAgICAgIC8vIFRPRE86IElzIHRoaXMgdG9vIGV4cGVuc2l2ZT9cbiAgICAgICAgZ2V0OiAvKiogQHRoaXMge0VsZW1lbnR9ICovIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBOYXRpdmUuTm9kZV9jbG9uZU5vZGUuY2FsbCh0aGlzLCB0cnVlKS5pbm5lckhUTUw7XG4gICAgICAgIH0sXG4gICAgICAgIC8vIEltcGxlbWVudHMgc2V0dGluZyBgaW5uZXJIVE1MYCBieSBjcmVhdGluZyBhbiB1bnBhdGNoZWQgZWxlbWVudCxcbiAgICAgICAgLy8gc2V0dGluZyBgaW5uZXJIVE1MYCBvZiB0aGF0IGVsZW1lbnQgYW5kIHJlcGxhY2luZyB0aGUgdGFyZ2V0XG4gICAgICAgIC8vIGVsZW1lbnQncyBjaGlsZHJlbiB3aXRoIHRob3NlIG9mIHRoZSB1bnBhdGNoZWQgZWxlbWVudC5cbiAgICAgICAgc2V0OiAvKiogQHRoaXMge0VsZW1lbnR9ICovIGZ1bmN0aW9uKGFzc2lnbmVkVmFsdWUpIHtcbiAgICAgICAgICAvLyBOT1RFOiByZS1yb3V0ZSB0byBgY29udGVudGAgZm9yIGB0ZW1wbGF0ZWAgZWxlbWVudHMuXG4gICAgICAgICAgLy8gV2UgbmVlZCB0byBkbyB0aGlzIGJlY2F1c2UgYHRlbXBsYXRlLmFwcGVuZENoaWxkYCBkb2VzIG5vdFxuICAgICAgICAgIC8vIHJvdXRlIGludG8gYHRlbXBsYXRlLmNvbnRlbnRgLlxuICAgICAgICAgIC8qKiBAdHlwZSB7IU5vZGV9ICovXG4gICAgICAgICAgY29uc3QgY29udGVudCA9IHRoaXMubG9jYWxOYW1lID09PSAndGVtcGxhdGUnID8gKC8qKiBAdHlwZSB7IUhUTUxUZW1wbGF0ZUVsZW1lbnR9ICovICh0aGlzKSkuY29udGVudCA6IHRoaXM7XG4gICAgICAgICAgcmF3RGl2LmlubmVySFRNTCA9IGFzc2lnbmVkVmFsdWU7XG5cbiAgICAgICAgICB3aGlsZSAoY29udGVudC5jaGlsZE5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIE5hdGl2ZS5Ob2RlX3JlbW92ZUNoaWxkLmNhbGwoY29udGVudCwgY29udGVudC5jaGlsZE5vZGVzWzBdKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgd2hpbGUgKHJhd0Rpdi5jaGlsZE5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIE5hdGl2ZS5Ob2RlX2FwcGVuZENoaWxkLmNhbGwoY29udGVudCwgcmF3RGl2LmNoaWxkTm9kZXNbMF0pO1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cblxuICBVdGlsaXRpZXMuc2V0UHJvcGVydHlVbmNoZWNrZWQoRWxlbWVudC5wcm90b3R5cGUsICdzZXRBdHRyaWJ1dGUnLFxuICAgIC8qKlxuICAgICAqIEB0aGlzIHtFbGVtZW50fVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5ld1ZhbHVlXG4gICAgICovXG4gICAgZnVuY3Rpb24obmFtZSwgbmV3VmFsdWUpIHtcbiAgICAgIC8vIEZhc3QgcGF0aCBmb3Igbm9uLWN1c3RvbSBlbGVtZW50cy5cbiAgICAgIGlmICh0aGlzLl9fQ0Vfc3RhdGUgIT09IENFU3RhdGUuY3VzdG9tKSB7XG4gICAgICAgIHJldHVybiBOYXRpdmUuRWxlbWVudF9zZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lLCBuZXdWYWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG9sZFZhbHVlID0gTmF0aXZlLkVsZW1lbnRfZ2V0QXR0cmlidXRlLmNhbGwodGhpcywgbmFtZSk7XG4gICAgICBOYXRpdmUuRWxlbWVudF9zZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lLCBuZXdWYWx1ZSk7XG4gICAgICBuZXdWYWx1ZSA9IE5hdGl2ZS5FbGVtZW50X2dldEF0dHJpYnV0ZS5jYWxsKHRoaXMsIG5hbWUpO1xuICAgICAgaW50ZXJuYWxzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLCBuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUsIG51bGwpO1xuICAgIH0pO1xuXG4gIFV0aWxpdGllcy5zZXRQcm9wZXJ0eVVuY2hlY2tlZChFbGVtZW50LnByb3RvdHlwZSwgJ3NldEF0dHJpYnV0ZU5TJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7RWxlbWVudH1cbiAgICAgKiBAcGFyYW0gez9zdHJpbmd9IG5hbWVzcGFjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IG5ld1ZhbHVlXG4gICAgICovXG4gICAgZnVuY3Rpb24obmFtZXNwYWNlLCBuYW1lLCBuZXdWYWx1ZSkge1xuICAgICAgLy8gRmFzdCBwYXRoIGZvciBub24tY3VzdG9tIGVsZW1lbnRzLlxuICAgICAgaWYgKHRoaXMuX19DRV9zdGF0ZSAhPT0gQ0VTdGF0ZS5jdXN0b20pIHtcbiAgICAgICAgcmV0dXJuIE5hdGl2ZS5FbGVtZW50X3NldEF0dHJpYnV0ZU5TLmNhbGwodGhpcywgbmFtZXNwYWNlLCBuYW1lLCBuZXdWYWx1ZSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IG9sZFZhbHVlID0gTmF0aXZlLkVsZW1lbnRfZ2V0QXR0cmlidXRlTlMuY2FsbCh0aGlzLCBuYW1lc3BhY2UsIG5hbWUpO1xuICAgICAgTmF0aXZlLkVsZW1lbnRfc2V0QXR0cmlidXRlTlMuY2FsbCh0aGlzLCBuYW1lc3BhY2UsIG5hbWUsIG5ld1ZhbHVlKTtcbiAgICAgIG5ld1ZhbHVlID0gTmF0aXZlLkVsZW1lbnRfZ2V0QXR0cmlidXRlTlMuY2FsbCh0aGlzLCBuYW1lc3BhY2UsIG5hbWUpO1xuICAgICAgaW50ZXJuYWxzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLCBuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUsIG5hbWVzcGFjZSk7XG4gICAgfSk7XG5cbiAgVXRpbGl0aWVzLnNldFByb3BlcnR5VW5jaGVja2VkKEVsZW1lbnQucHJvdG90eXBlLCAncmVtb3ZlQXR0cmlidXRlJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7RWxlbWVudH1cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbmFtZVxuICAgICAqL1xuICAgIGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgIC8vIEZhc3QgcGF0aCBmb3Igbm9uLWN1c3RvbSBlbGVtZW50cy5cbiAgICAgIGlmICh0aGlzLl9fQ0Vfc3RhdGUgIT09IENFU3RhdGUuY3VzdG9tKSB7XG4gICAgICAgIHJldHVybiBOYXRpdmUuRWxlbWVudF9yZW1vdmVBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lKTtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgb2xkVmFsdWUgPSBOYXRpdmUuRWxlbWVudF9nZXRBdHRyaWJ1dGUuY2FsbCh0aGlzLCBuYW1lKTtcbiAgICAgIE5hdGl2ZS5FbGVtZW50X3JlbW92ZUF0dHJpYnV0ZS5jYWxsKHRoaXMsIG5hbWUpO1xuICAgICAgaWYgKG9sZFZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgIGludGVybmFscy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sodGhpcywgbmFtZSwgb2xkVmFsdWUsIG51bGwsIG51bGwpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gIFV0aWxpdGllcy5zZXRQcm9wZXJ0eVVuY2hlY2tlZChFbGVtZW50LnByb3RvdHlwZSwgJ3JlbW92ZUF0dHJpYnV0ZU5TJyxcbiAgICAvKipcbiAgICAgKiBAdGhpcyB7RWxlbWVudH1cbiAgICAgKiBAcGFyYW0gez9zdHJpbmd9IG5hbWVzcGFjZVxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gICAgICovXG4gICAgZnVuY3Rpb24obmFtZXNwYWNlLCBuYW1lKSB7XG4gICAgICAvLyBGYXN0IHBhdGggZm9yIG5vbi1jdXN0b20gZWxlbWVudHMuXG4gICAgICBpZiAodGhpcy5fX0NFX3N0YXRlICE9PSBDRVN0YXRlLmN1c3RvbSkge1xuICAgICAgICByZXR1cm4gTmF0aXZlLkVsZW1lbnRfcmVtb3ZlQXR0cmlidXRlTlMuY2FsbCh0aGlzLCBuYW1lc3BhY2UsIG5hbWUpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBvbGRWYWx1ZSA9IE5hdGl2ZS5FbGVtZW50X2dldEF0dHJpYnV0ZU5TLmNhbGwodGhpcywgbmFtZXNwYWNlLCBuYW1lKTtcbiAgICAgIE5hdGl2ZS5FbGVtZW50X3JlbW92ZUF0dHJpYnV0ZU5TLmNhbGwodGhpcywgbmFtZXNwYWNlLCBuYW1lKTtcbiAgICAgIC8vIEluIG9sZGVyIGJyb3dzZXJzLCBgRWxlbWVudCNnZXRBdHRyaWJ1dGVOU2AgbWF5IHJldHVybiB0aGUgZW1wdHkgc3RyaW5nXG4gICAgICAvLyBpbnN0ZWFkIG9mIG51bGwgaWYgdGhlIGF0dHJpYnV0ZSBkb2VzIG5vdCBleGlzdC4gRm9yIGRldGFpbHMsIHNlZTtcbiAgICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9FbGVtZW50L2dldEF0dHJpYnV0ZU5TI05vdGVzXG4gICAgICBjb25zdCBuZXdWYWx1ZSA9IE5hdGl2ZS5FbGVtZW50X2dldEF0dHJpYnV0ZU5TLmNhbGwodGhpcywgbmFtZXNwYWNlLCBuYW1lKTtcbiAgICAgIGlmIChvbGRWYWx1ZSAhPT0gbmV3VmFsdWUpIHtcbiAgICAgICAgaW50ZXJuYWxzLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayh0aGlzLCBuYW1lLCBvbGRWYWx1ZSwgbmV3VmFsdWUsIG5hbWVzcGFjZSk7XG4gICAgICB9XG4gICAgfSk7XG5cblxuICBmdW5jdGlvbiBwYXRjaF9pbnNlcnRBZGphY2VudEVsZW1lbnQoZGVzdGluYXRpb24sIGJhc2VNZXRob2QpIHtcbiAgICBVdGlsaXRpZXMuc2V0UHJvcGVydHlVbmNoZWNrZWQoZGVzdGluYXRpb24sICdpbnNlcnRBZGphY2VudEVsZW1lbnQnLFxuICAgICAgLyoqXG4gICAgICAgKiBAdGhpcyB7RWxlbWVudH1cbiAgICAgICAqIEBwYXJhbSB7c3RyaW5nfSB3aGVyZVxuICAgICAgICogQHBhcmFtIHshRWxlbWVudH0gZWxlbWVudFxuICAgICAgICogQHJldHVybiB7P0VsZW1lbnR9XG4gICAgICAgKi9cbiAgICAgIGZ1bmN0aW9uKHdoZXJlLCBlbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IHdhc0Nvbm5lY3RlZCA9IFV0aWxpdGllcy5pc0Nvbm5lY3RlZChlbGVtZW50KTtcbiAgICAgICAgY29uc3QgaW5zZXJ0ZWRFbGVtZW50ID0gLyoqIEB0eXBlIHshRWxlbWVudH0gKi9cbiAgICAgICAgICAoYmFzZU1ldGhvZC5jYWxsKHRoaXMsIHdoZXJlLCBlbGVtZW50KSk7XG5cbiAgICAgICAgaWYgKHdhc0Nvbm5lY3RlZCkge1xuICAgICAgICAgIGludGVybmFscy5kaXNjb25uZWN0VHJlZShlbGVtZW50KTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChVdGlsaXRpZXMuaXNDb25uZWN0ZWQoaW5zZXJ0ZWRFbGVtZW50KSkge1xuICAgICAgICAgIGludGVybmFscy5jb25uZWN0VHJlZShlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5zZXJ0ZWRFbGVtZW50O1xuICAgICAgfSk7XG4gIH1cblxuICBpZiAoTmF0aXZlLkhUTUxFbGVtZW50X2luc2VydEFkamFjZW50RWxlbWVudCkge1xuICAgIHBhdGNoX2luc2VydEFkamFjZW50RWxlbWVudChIVE1MRWxlbWVudC5wcm90b3R5cGUsIE5hdGl2ZS5IVE1MRWxlbWVudF9pbnNlcnRBZGphY2VudEVsZW1lbnQpO1xuICB9IGVsc2UgaWYgKE5hdGl2ZS5FbGVtZW50X2luc2VydEFkamFjZW50RWxlbWVudCkge1xuICAgIHBhdGNoX2luc2VydEFkamFjZW50RWxlbWVudChFbGVtZW50LnByb3RvdHlwZSwgTmF0aXZlLkVsZW1lbnRfaW5zZXJ0QWRqYWNlbnRFbGVtZW50KTtcbiAgfSBlbHNlIHtcbiAgICBjb25zb2xlLndhcm4oJ0N1c3RvbSBFbGVtZW50czogYEVsZW1lbnQjaW5zZXJ0QWRqYWNlbnRFbGVtZW50YCB3YXMgbm90IHBhdGNoZWQuJyk7XG4gIH1cblxuXG4gIFBhdGNoUGFyZW50Tm9kZShpbnRlcm5hbHMsIEVsZW1lbnQucHJvdG90eXBlLCB7XG4gICAgcHJlcGVuZDogTmF0aXZlLkVsZW1lbnRfcHJlcGVuZCxcbiAgICBhcHBlbmQ6IE5hdGl2ZS5FbGVtZW50X2FwcGVuZCxcbiAgfSk7XG5cbiAgUGF0Y2hDaGlsZE5vZGUoaW50ZXJuYWxzLCBFbGVtZW50LnByb3RvdHlwZSwge1xuICAgIGJlZm9yZTogTmF0aXZlLkVsZW1lbnRfYmVmb3JlLFxuICAgIGFmdGVyOiBOYXRpdmUuRWxlbWVudF9hZnRlcixcbiAgICByZXBsYWNlV2l0aDogTmF0aXZlLkVsZW1lbnRfcmVwbGFjZVdpdGgsXG4gICAgcmVtb3ZlOiBOYXRpdmUuRWxlbWVudF9yZW1vdmUsXG4gIH0pO1xufTtcbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNiBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0xJQ0VOU0UudHh0XG4gKiBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9BVVRIT1JTLnR4dFxuICogVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9DT05UUklCVVRPUlMudHh0XG4gKiBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhcyBwYXJ0IG9mIHRoZSBwb2x5bWVyIHByb2plY3QgaXMgYWxzb1xuICogc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudCBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vUEFURU5UUy50eHRcbiAqL1xuXG5pbXBvcnQgQ3VzdG9tRWxlbWVudEludGVybmFscyBmcm9tICcuL0N1c3RvbUVsZW1lbnRJbnRlcm5hbHMuanMnO1xuaW1wb3J0IEN1c3RvbUVsZW1lbnRSZWdpc3RyeSBmcm9tICcuL0N1c3RvbUVsZW1lbnRSZWdpc3RyeS5qcyc7XG5cbmltcG9ydCBQYXRjaEhUTUxFbGVtZW50IGZyb20gJy4vUGF0Y2gvSFRNTEVsZW1lbnQuanMnO1xuaW1wb3J0IFBhdGNoRG9jdW1lbnQgZnJvbSAnLi9QYXRjaC9Eb2N1bWVudC5qcyc7XG5pbXBvcnQgUGF0Y2hOb2RlIGZyb20gJy4vUGF0Y2gvTm9kZS5qcyc7XG5pbXBvcnQgUGF0Y2hFbGVtZW50IGZyb20gJy4vUGF0Y2gvRWxlbWVudC5qcyc7XG5cbmNvbnN0IHByaW9yQ3VzdG9tRWxlbWVudHMgPSB3aW5kb3dbJ2N1c3RvbUVsZW1lbnRzJ107XG5cbmlmICghcHJpb3JDdXN0b21FbGVtZW50cyB8fFxuICAgICBwcmlvckN1c3RvbUVsZW1lbnRzWydmb3JjZVBvbHlmaWxsJ10gfHxcbiAgICAgKHR5cGVvZiBwcmlvckN1c3RvbUVsZW1lbnRzWydkZWZpbmUnXSAhPSAnZnVuY3Rpb24nKSB8fFxuICAgICAodHlwZW9mIHByaW9yQ3VzdG9tRWxlbWVudHNbJ2dldCddICE9ICdmdW5jdGlvbicpKSB7XG4gIC8qKiBAdHlwZSB7IUN1c3RvbUVsZW1lbnRJbnRlcm5hbHN9ICovXG4gIGNvbnN0IGludGVybmFscyA9IG5ldyBDdXN0b21FbGVtZW50SW50ZXJuYWxzKCk7XG5cbiAgUGF0Y2hIVE1MRWxlbWVudChpbnRlcm5hbHMpO1xuICBQYXRjaERvY3VtZW50KGludGVybmFscyk7XG4gIFBhdGNoTm9kZShpbnRlcm5hbHMpO1xuICBQYXRjaEVsZW1lbnQoaW50ZXJuYWxzKTtcblxuICAvLyBUaGUgbWFpbiBkb2N1bWVudCBpcyBhbHdheXMgYXNzb2NpYXRlZCB3aXRoIHRoZSByZWdpc3RyeS5cbiAgZG9jdW1lbnQuX19DRV9oYXNSZWdpc3RyeSA9IHRydWU7XG5cbiAgLyoqIEB0eXBlIHshQ3VzdG9tRWxlbWVudFJlZ2lzdHJ5fSAqL1xuICBjb25zdCBjdXN0b21FbGVtZW50cyA9IG5ldyBDdXN0b21FbGVtZW50UmVnaXN0cnkoaW50ZXJuYWxzKTtcblxuICBPYmplY3QuZGVmaW5lUHJvcGVydHkod2luZG93LCAnY3VzdG9tRWxlbWVudHMnLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgdmFsdWU6IGN1c3RvbUVsZW1lbnRzLFxuICB9KTtcbn1cbiIsIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNCBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiBUaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL0xJQ0VOU0UudHh0XG4gKiBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9BVVRIT1JTLnR4dFxuICogVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlIGZvdW5kIGF0IGh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9DT05UUklCVVRPUlMudHh0XG4gKiBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhcyBwYXJ0IG9mIHRoZSBwb2x5bWVyIHByb2plY3QgaXMgYWxzb1xuICogc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudCBmb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vUEFURU5UUy50eHRcbiAqL1xuLy8gQHZlcnNpb24gMC43LjIyXG5cbihmdW5jdGlvbihnbG9iYWwpIHtcbiAgaWYgKGdsb2JhbC5Kc011dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIHJlZ2lzdHJhdGlvbnNUYWJsZSA9IG5ldyBXZWFrTWFwKCk7XG4gIHZhciBzZXRJbW1lZGlhdGU7XG4gIGlmICgvVHJpZGVudHxFZGdlLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgc2V0SW1tZWRpYXRlID0gc2V0VGltZW91dDtcbiAgfSBlbHNlIGlmICh3aW5kb3cuc2V0SW1tZWRpYXRlKSB7XG4gICAgc2V0SW1tZWRpYXRlID0gd2luZG93LnNldEltbWVkaWF0ZTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgc2V0SW1tZWRpYXRlUXVldWUgPSBbXTtcbiAgICB2YXIgc2VudGluZWwgPSBTdHJpbmcoTWF0aC5yYW5kb20oKSk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIGlmIChlLmRhdGEgPT09IHNlbnRpbmVsKSB7XG4gICAgICAgIHZhciBxdWV1ZSA9IHNldEltbWVkaWF0ZVF1ZXVlO1xuICAgICAgICBzZXRJbW1lZGlhdGVRdWV1ZSA9IFtdO1xuICAgICAgICBxdWV1ZS5mb3JFYWNoKGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICAgICAgICBmdW5jKCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIHNldEltbWVkaWF0ZSA9IGZ1bmN0aW9uKGZ1bmMpIHtcbiAgICAgIHNldEltbWVkaWF0ZVF1ZXVlLnB1c2goZnVuYyk7XG4gICAgICB3aW5kb3cucG9zdE1lc3NhZ2Uoc2VudGluZWwsIFwiKlwiKTtcbiAgICB9O1xuICB9XG4gIHZhciBpc1NjaGVkdWxlZCA9IGZhbHNlO1xuICB2YXIgc2NoZWR1bGVkT2JzZXJ2ZXJzID0gW107XG4gIGZ1bmN0aW9uIHNjaGVkdWxlQ2FsbGJhY2sob2JzZXJ2ZXIpIHtcbiAgICBzY2hlZHVsZWRPYnNlcnZlcnMucHVzaChvYnNlcnZlcik7XG4gICAgaWYgKCFpc1NjaGVkdWxlZCkge1xuICAgICAgaXNTY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgc2V0SW1tZWRpYXRlKGRpc3BhdGNoQ2FsbGJhY2tzKTtcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gd3JhcElmTmVlZGVkKG5vZGUpIHtcbiAgICByZXR1cm4gd2luZG93LlNoYWRvd0RPTVBvbHlmaWxsICYmIHdpbmRvdy5TaGFkb3dET01Qb2x5ZmlsbC53cmFwSWZOZWVkZWQobm9kZSkgfHwgbm9kZTtcbiAgfVxuICBmdW5jdGlvbiBkaXNwYXRjaENhbGxiYWNrcygpIHtcbiAgICBpc1NjaGVkdWxlZCA9IGZhbHNlO1xuICAgIHZhciBvYnNlcnZlcnMgPSBzY2hlZHVsZWRPYnNlcnZlcnM7XG4gICAgc2NoZWR1bGVkT2JzZXJ2ZXJzID0gW107XG4gICAgb2JzZXJ2ZXJzLnNvcnQoZnVuY3Rpb24obzEsIG8yKSB7XG4gICAgICByZXR1cm4gbzEudWlkXyAtIG8yLnVpZF87XG4gICAgfSk7XG4gICAgdmFyIGFueU5vbkVtcHR5ID0gZmFsc2U7XG4gICAgb2JzZXJ2ZXJzLmZvckVhY2goZnVuY3Rpb24ob2JzZXJ2ZXIpIHtcbiAgICAgIHZhciBxdWV1ZSA9IG9ic2VydmVyLnRha2VSZWNvcmRzKCk7XG4gICAgICByZW1vdmVUcmFuc2llbnRPYnNlcnZlcnNGb3Iob2JzZXJ2ZXIpO1xuICAgICAgaWYgKHF1ZXVlLmxlbmd0aCkge1xuICAgICAgICBvYnNlcnZlci5jYWxsYmFja18ocXVldWUsIG9ic2VydmVyKTtcbiAgICAgICAgYW55Tm9uRW1wdHkgPSB0cnVlO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGlmIChhbnlOb25FbXB0eSkgZGlzcGF0Y2hDYWxsYmFja3MoKTtcbiAgfVxuICBmdW5jdGlvbiByZW1vdmVUcmFuc2llbnRPYnNlcnZlcnNGb3Iob2JzZXJ2ZXIpIHtcbiAgICBvYnNlcnZlci5ub2Rlc18uZm9yRWFjaChmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQobm9kZSk7XG4gICAgICBpZiAoIXJlZ2lzdHJhdGlvbnMpIHJldHVybjtcbiAgICAgIHJlZ2lzdHJhdGlvbnMuZm9yRWFjaChmdW5jdGlvbihyZWdpc3RyYXRpb24pIHtcbiAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbi5vYnNlcnZlciA9PT0gb2JzZXJ2ZXIpIHJlZ2lzdHJhdGlvbi5yZW1vdmVUcmFuc2llbnRPYnNlcnZlcnMoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIGZ1bmN0aW9uIGZvckVhY2hBbmNlc3RvckFuZE9ic2VydmVyRW5xdWV1ZVJlY29yZCh0YXJnZXQsIGNhbGxiYWNrKSB7XG4gICAgZm9yICh2YXIgbm9kZSA9IHRhcmdldDsgbm9kZTsgbm9kZSA9IG5vZGUucGFyZW50Tm9kZSkge1xuICAgICAgdmFyIHJlZ2lzdHJhdGlvbnMgPSByZWdpc3RyYXRpb25zVGFibGUuZ2V0KG5vZGUpO1xuICAgICAgaWYgKHJlZ2lzdHJhdGlvbnMpIHtcbiAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgdmFyIHJlZ2lzdHJhdGlvbiA9IHJlZ2lzdHJhdGlvbnNbal07XG4gICAgICAgICAgdmFyIG9wdGlvbnMgPSByZWdpc3RyYXRpb24ub3B0aW9ucztcbiAgICAgICAgICBpZiAobm9kZSAhPT0gdGFyZ2V0ICYmICFvcHRpb25zLnN1YnRyZWUpIGNvbnRpbnVlO1xuICAgICAgICAgIHZhciByZWNvcmQgPSBjYWxsYmFjayhvcHRpb25zKTtcbiAgICAgICAgICBpZiAocmVjb3JkKSByZWdpc3RyYXRpb24uZW5xdWV1ZShyZWNvcmQpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHZhciB1aWRDb3VudGVyID0gMDtcbiAgZnVuY3Rpb24gSnNNdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKSB7XG4gICAgdGhpcy5jYWxsYmFja18gPSBjYWxsYmFjaztcbiAgICB0aGlzLm5vZGVzXyA9IFtdO1xuICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICB0aGlzLnVpZF8gPSArK3VpZENvdW50ZXI7XG4gIH1cbiAgSnNNdXRhdGlvbk9ic2VydmVyLnByb3RvdHlwZSA9IHtcbiAgICBvYnNlcnZlOiBmdW5jdGlvbih0YXJnZXQsIG9wdGlvbnMpIHtcbiAgICAgIHRhcmdldCA9IHdyYXBJZk5lZWRlZCh0YXJnZXQpO1xuICAgICAgaWYgKCFvcHRpb25zLmNoaWxkTGlzdCAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzICYmICFvcHRpb25zLmNoYXJhY3RlckRhdGEgfHwgb3B0aW9ucy5hdHRyaWJ1dGVPbGRWYWx1ZSAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyICYmIG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyLmxlbmd0aCAmJiAhb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IG9wdGlvbnMuY2hhcmFjdGVyRGF0YU9sZFZhbHVlICYmICFvcHRpb25zLmNoYXJhY3RlckRhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCk7XG4gICAgICB9XG4gICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQodGFyZ2V0KTtcbiAgICAgIGlmICghcmVnaXN0cmF0aW9ucykgcmVnaXN0cmF0aW9uc1RhYmxlLnNldCh0YXJnZXQsIHJlZ2lzdHJhdGlvbnMgPSBbXSk7XG4gICAgICB2YXIgcmVnaXN0cmF0aW9uO1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChyZWdpc3RyYXRpb25zW2ldLm9ic2VydmVyID09PSB0aGlzKSB7XG4gICAgICAgICAgcmVnaXN0cmF0aW9uID0gcmVnaXN0cmF0aW9uc1tpXTtcbiAgICAgICAgICByZWdpc3RyYXRpb24ucmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgcmVnaXN0cmF0aW9uLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoIXJlZ2lzdHJhdGlvbikge1xuICAgICAgICByZWdpc3RyYXRpb24gPSBuZXcgUmVnaXN0cmF0aW9uKHRoaXMsIHRhcmdldCwgb3B0aW9ucyk7XG4gICAgICAgIHJlZ2lzdHJhdGlvbnMucHVzaChyZWdpc3RyYXRpb24pO1xuICAgICAgICB0aGlzLm5vZGVzXy5wdXNoKHRhcmdldCk7XG4gICAgICB9XG4gICAgICByZWdpc3RyYXRpb24uYWRkTGlzdGVuZXJzKCk7XG4gICAgfSxcbiAgICBkaXNjb25uZWN0OiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMubm9kZXNfLmZvckVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB2YXIgcmVnaXN0cmF0aW9ucyA9IHJlZ2lzdHJhdGlvbnNUYWJsZS5nZXQobm9kZSk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcmVnaXN0cmF0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZhciByZWdpc3RyYXRpb24gPSByZWdpc3RyYXRpb25zW2ldO1xuICAgICAgICAgIGlmIChyZWdpc3RyYXRpb24ub2JzZXJ2ZXIgPT09IHRoaXMpIHtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbi5yZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbnMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICB9LFxuICAgIHRha2VSZWNvcmRzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBjb3B5T2ZSZWNvcmRzID0gdGhpcy5yZWNvcmRzXztcbiAgICAgIHRoaXMucmVjb3Jkc18gPSBbXTtcbiAgICAgIHJldHVybiBjb3B5T2ZSZWNvcmRzO1xuICAgIH1cbiAgfTtcbiAgZnVuY3Rpb24gTXV0YXRpb25SZWNvcmQodHlwZSwgdGFyZ2V0KSB7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICB0aGlzLmFkZGVkTm9kZXMgPSBbXTtcbiAgICB0aGlzLnJlbW92ZWROb2RlcyA9IFtdO1xuICAgIHRoaXMucHJldmlvdXNTaWJsaW5nID0gbnVsbDtcbiAgICB0aGlzLm5leHRTaWJsaW5nID0gbnVsbDtcbiAgICB0aGlzLmF0dHJpYnV0ZU5hbWUgPSBudWxsO1xuICAgIHRoaXMuYXR0cmlidXRlTmFtZXNwYWNlID0gbnVsbDtcbiAgICB0aGlzLm9sZFZhbHVlID0gbnVsbDtcbiAgfVxuICBmdW5jdGlvbiBjb3B5TXV0YXRpb25SZWNvcmQob3JpZ2luYWwpIHtcbiAgICB2YXIgcmVjb3JkID0gbmV3IE11dGF0aW9uUmVjb3JkKG9yaWdpbmFsLnR5cGUsIG9yaWdpbmFsLnRhcmdldCk7XG4gICAgcmVjb3JkLmFkZGVkTm9kZXMgPSBvcmlnaW5hbC5hZGRlZE5vZGVzLnNsaWNlKCk7XG4gICAgcmVjb3JkLnJlbW92ZWROb2RlcyA9IG9yaWdpbmFsLnJlbW92ZWROb2Rlcy5zbGljZSgpO1xuICAgIHJlY29yZC5wcmV2aW91c1NpYmxpbmcgPSBvcmlnaW5hbC5wcmV2aW91c1NpYmxpbmc7XG4gICAgcmVjb3JkLm5leHRTaWJsaW5nID0gb3JpZ2luYWwubmV4dFNpYmxpbmc7XG4gICAgcmVjb3JkLmF0dHJpYnV0ZU5hbWUgPSBvcmlnaW5hbC5hdHRyaWJ1dGVOYW1lO1xuICAgIHJlY29yZC5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBvcmlnaW5hbC5hdHRyaWJ1dGVOYW1lc3BhY2U7XG4gICAgcmVjb3JkLm9sZFZhbHVlID0gb3JpZ2luYWwub2xkVmFsdWU7XG4gICAgcmV0dXJuIHJlY29yZDtcbiAgfVxuICB2YXIgY3VycmVudFJlY29yZCwgcmVjb3JkV2l0aE9sZFZhbHVlO1xuICBmdW5jdGlvbiBnZXRSZWNvcmQodHlwZSwgdGFyZ2V0KSB7XG4gICAgcmV0dXJuIGN1cnJlbnRSZWNvcmQgPSBuZXcgTXV0YXRpb25SZWNvcmQodHlwZSwgdGFyZ2V0KTtcbiAgfVxuICBmdW5jdGlvbiBnZXRSZWNvcmRXaXRoT2xkVmFsdWUob2xkVmFsdWUpIHtcbiAgICBpZiAocmVjb3JkV2l0aE9sZFZhbHVlKSByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICAgIHJlY29yZFdpdGhPbGRWYWx1ZSA9IGNvcHlNdXRhdGlvblJlY29yZChjdXJyZW50UmVjb3JkKTtcbiAgICByZWNvcmRXaXRoT2xkVmFsdWUub2xkVmFsdWUgPSBvbGRWYWx1ZTtcbiAgICByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGNsZWFyUmVjb3JkcygpIHtcbiAgICBjdXJyZW50UmVjb3JkID0gcmVjb3JkV2l0aE9sZFZhbHVlID0gdW5kZWZpbmVkO1xuICB9XG4gIGZ1bmN0aW9uIHJlY29yZFJlcHJlc2VudHNDdXJyZW50TXV0YXRpb24ocmVjb3JkKSB7XG4gICAgcmV0dXJuIHJlY29yZCA9PT0gcmVjb3JkV2l0aE9sZFZhbHVlIHx8IHJlY29yZCA9PT0gY3VycmVudFJlY29yZDtcbiAgfVxuICBmdW5jdGlvbiBzZWxlY3RSZWNvcmQobGFzdFJlY29yZCwgbmV3UmVjb3JkKSB7XG4gICAgaWYgKGxhc3RSZWNvcmQgPT09IG5ld1JlY29yZCkgcmV0dXJuIGxhc3RSZWNvcmQ7XG4gICAgaWYgKHJlY29yZFdpdGhPbGRWYWx1ZSAmJiByZWNvcmRSZXByZXNlbnRzQ3VycmVudE11dGF0aW9uKGxhc3RSZWNvcmQpKSByZXR1cm4gcmVjb3JkV2l0aE9sZFZhbHVlO1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGZ1bmN0aW9uIFJlZ2lzdHJhdGlvbihvYnNlcnZlciwgdGFyZ2V0LCBvcHRpb25zKSB7XG4gICAgdGhpcy5vYnNlcnZlciA9IG9ic2VydmVyO1xuICAgIHRoaXMudGFyZ2V0ID0gdGFyZ2V0O1xuICAgIHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gW107XG4gIH1cbiAgUmVnaXN0cmF0aW9uLnByb3RvdHlwZSA9IHtcbiAgICBlbnF1ZXVlOiBmdW5jdGlvbihyZWNvcmQpIHtcbiAgICAgIHZhciByZWNvcmRzID0gdGhpcy5vYnNlcnZlci5yZWNvcmRzXztcbiAgICAgIHZhciBsZW5ndGggPSByZWNvcmRzLmxlbmd0aDtcbiAgICAgIGlmIChyZWNvcmRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdmFyIGxhc3RSZWNvcmQgPSByZWNvcmRzW2xlbmd0aCAtIDFdO1xuICAgICAgICB2YXIgcmVjb3JkVG9SZXBsYWNlTGFzdCA9IHNlbGVjdFJlY29yZChsYXN0UmVjb3JkLCByZWNvcmQpO1xuICAgICAgICBpZiAocmVjb3JkVG9SZXBsYWNlTGFzdCkge1xuICAgICAgICAgIHJlY29yZHNbbGVuZ3RoIC0gMV0gPSByZWNvcmRUb1JlcGxhY2VMYXN0O1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2NoZWR1bGVDYWxsYmFjayh0aGlzLm9ic2VydmVyKTtcbiAgICAgIH1cbiAgICAgIHJlY29yZHNbbGVuZ3RoXSA9IHJlY29yZDtcbiAgICB9LFxuICAgIGFkZExpc3RlbmVyczogZnVuY3Rpb24oKSB7XG4gICAgICB0aGlzLmFkZExpc3RlbmVyc18odGhpcy50YXJnZXQpO1xuICAgIH0sXG4gICAgYWRkTGlzdGVuZXJzXzogZnVuY3Rpb24obm9kZSkge1xuICAgICAgdmFyIG9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XG4gICAgICBpZiAob3B0aW9ucy5hdHRyaWJ1dGVzKSBub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJET01BdHRyTW9kaWZpZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgICBpZiAob3B0aW9ucy5jaGFyYWN0ZXJEYXRhKSBub2RlLmFkZEV2ZW50TGlzdGVuZXIoXCJET01DaGFyYWN0ZXJEYXRhTW9kaWZpZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgICBpZiAob3B0aW9ucy5jaGlsZExpc3QpIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTU5vZGVJbnNlcnRlZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoaWxkTGlzdCB8fCBvcHRpb25zLnN1YnRyZWUpIG5vZGUuYWRkRXZlbnRMaXN0ZW5lcihcIkRPTU5vZGVSZW1vdmVkXCIsIHRoaXMsIHRydWUpO1xuICAgIH0sXG4gICAgcmVtb3ZlTGlzdGVuZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMucmVtb3ZlTGlzdGVuZXJzXyh0aGlzLnRhcmdldCk7XG4gICAgfSxcbiAgICByZW1vdmVMaXN0ZW5lcnNfOiBmdW5jdGlvbihub2RlKSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucztcbiAgICAgIGlmIChvcHRpb25zLmF0dHJpYnV0ZXMpIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUF0dHJNb2RpZmllZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoYXJhY3RlckRhdGEpIG5vZGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIkRPTUNoYXJhY3RlckRhdGFNb2RpZmllZFwiLCB0aGlzLCB0cnVlKTtcbiAgICAgIGlmIChvcHRpb25zLmNoaWxkTGlzdCkgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTm9kZUluc2VydGVkXCIsIHRoaXMsIHRydWUpO1xuICAgICAgaWYgKG9wdGlvbnMuY2hpbGRMaXN0IHx8IG9wdGlvbnMuc3VidHJlZSkgbm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiRE9NTm9kZVJlbW92ZWRcIiwgdGhpcywgdHJ1ZSk7XG4gICAgfSxcbiAgICBhZGRUcmFuc2llbnRPYnNlcnZlcjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgaWYgKG5vZGUgPT09IHRoaXMudGFyZ2V0KSByZXR1cm47XG4gICAgICB0aGlzLmFkZExpc3RlbmVyc18obm9kZSk7XG4gICAgICB0aGlzLnRyYW5zaWVudE9ic2VydmVkTm9kZXMucHVzaChub2RlKTtcbiAgICAgIHZhciByZWdpc3RyYXRpb25zID0gcmVnaXN0cmF0aW9uc1RhYmxlLmdldChub2RlKTtcbiAgICAgIGlmICghcmVnaXN0cmF0aW9ucykgcmVnaXN0cmF0aW9uc1RhYmxlLnNldChub2RlLCByZWdpc3RyYXRpb25zID0gW10pO1xuICAgICAgcmVnaXN0cmF0aW9ucy5wdXNoKHRoaXMpO1xuICAgIH0sXG4gICAgcmVtb3ZlVHJhbnNpZW50T2JzZXJ2ZXJzOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciB0cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzO1xuICAgICAgdGhpcy50cmFuc2llbnRPYnNlcnZlZE5vZGVzID0gW107XG4gICAgICB0cmFuc2llbnRPYnNlcnZlZE5vZGVzLmZvckVhY2goZnVuY3Rpb24obm9kZSkge1xuICAgICAgICB0aGlzLnJlbW92ZUxpc3RlbmVyc18obm9kZSk7XG4gICAgICAgIHZhciByZWdpc3RyYXRpb25zID0gcmVnaXN0cmF0aW9uc1RhYmxlLmdldChub2RlKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWdpc3RyYXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHJlZ2lzdHJhdGlvbnNbaV0gPT09IHRoaXMpIHtcbiAgICAgICAgICAgIHJlZ2lzdHJhdGlvbnMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LCB0aGlzKTtcbiAgICB9LFxuICAgIGhhbmRsZUV2ZW50OiBmdW5jdGlvbihlKSB7XG4gICAgICBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuICAgICAgc3dpdGNoIChlLnR5cGUpIHtcbiAgICAgICBjYXNlIFwiRE9NQXR0ck1vZGlmaWVkXCI6XG4gICAgICAgIHZhciBuYW1lID0gZS5hdHRyTmFtZTtcbiAgICAgICAgdmFyIG5hbWVzcGFjZSA9IGUucmVsYXRlZE5vZGUubmFtZXNwYWNlVVJJO1xuICAgICAgICB2YXIgdGFyZ2V0ID0gZS50YXJnZXQ7XG4gICAgICAgIHZhciByZWNvcmQgPSBuZXcgZ2V0UmVjb3JkKFwiYXR0cmlidXRlc1wiLCB0YXJnZXQpO1xuICAgICAgICByZWNvcmQuYXR0cmlidXRlTmFtZSA9IG5hbWU7XG4gICAgICAgIHJlY29yZC5hdHRyaWJ1dGVOYW1lc3BhY2UgPSBuYW1lc3BhY2U7XG4gICAgICAgIHZhciBvbGRWYWx1ZSA9IGUuYXR0ckNoYW5nZSA9PT0gTXV0YXRpb25FdmVudC5BRERJVElPTiA/IG51bGwgOiBlLnByZXZWYWx1ZTtcbiAgICAgICAgZm9yRWFjaEFuY2VzdG9yQW5kT2JzZXJ2ZXJFbnF1ZXVlUmVjb3JkKHRhcmdldCwgZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICAgIGlmICghb3B0aW9ucy5hdHRyaWJ1dGVzKSByZXR1cm47XG4gICAgICAgICAgaWYgKG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyICYmIG9wdGlvbnMuYXR0cmlidXRlRmlsdGVyLmxlbmd0aCAmJiBvcHRpb25zLmF0dHJpYnV0ZUZpbHRlci5pbmRleE9mKG5hbWUpID09PSAtMSAmJiBvcHRpb25zLmF0dHJpYnV0ZUZpbHRlci5pbmRleE9mKG5hbWVzcGFjZSkgPT09IC0xKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChvcHRpb25zLmF0dHJpYnV0ZU9sZFZhbHVlKSByZXR1cm4gZ2V0UmVjb3JkV2l0aE9sZFZhbHVlKG9sZFZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gcmVjb3JkO1xuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgICBjYXNlIFwiRE9NQ2hhcmFjdGVyRGF0YU1vZGlmaWVkXCI6XG4gICAgICAgIHZhciB0YXJnZXQgPSBlLnRhcmdldDtcbiAgICAgICAgdmFyIHJlY29yZCA9IGdldFJlY29yZChcImNoYXJhY3RlckRhdGFcIiwgdGFyZ2V0KTtcbiAgICAgICAgdmFyIG9sZFZhbHVlID0gZS5wcmV2VmFsdWU7XG4gICAgICAgIGZvckVhY2hBbmNlc3RvckFuZE9ic2VydmVyRW5xdWV1ZVJlY29yZCh0YXJnZXQsIGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICBpZiAoIW9wdGlvbnMuY2hhcmFjdGVyRGF0YSkgcmV0dXJuO1xuICAgICAgICAgIGlmIChvcHRpb25zLmNoYXJhY3RlckRhdGFPbGRWYWx1ZSkgcmV0dXJuIGdldFJlY29yZFdpdGhPbGRWYWx1ZShvbGRWYWx1ZSk7XG4gICAgICAgICAgcmV0dXJuIHJlY29yZDtcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICAgY2FzZSBcIkRPTU5vZGVSZW1vdmVkXCI6XG4gICAgICAgIHRoaXMuYWRkVHJhbnNpZW50T2JzZXJ2ZXIoZS50YXJnZXQpO1xuXG4gICAgICAgY2FzZSBcIkRPTU5vZGVJbnNlcnRlZFwiOlxuICAgICAgICB2YXIgY2hhbmdlZE5vZGUgPSBlLnRhcmdldDtcbiAgICAgICAgdmFyIGFkZGVkTm9kZXMsIHJlbW92ZWROb2RlcztcbiAgICAgICAgaWYgKGUudHlwZSA9PT0gXCJET01Ob2RlSW5zZXJ0ZWRcIikge1xuICAgICAgICAgIGFkZGVkTm9kZXMgPSBbIGNoYW5nZWROb2RlIF07XG4gICAgICAgICAgcmVtb3ZlZE5vZGVzID0gW107XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYWRkZWROb2RlcyA9IFtdO1xuICAgICAgICAgIHJlbW92ZWROb2RlcyA9IFsgY2hhbmdlZE5vZGUgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHJldmlvdXNTaWJsaW5nID0gY2hhbmdlZE5vZGUucHJldmlvdXNTaWJsaW5nO1xuICAgICAgICB2YXIgbmV4dFNpYmxpbmcgPSBjaGFuZ2VkTm9kZS5uZXh0U2libGluZztcbiAgICAgICAgdmFyIHJlY29yZCA9IGdldFJlY29yZChcImNoaWxkTGlzdFwiLCBlLnRhcmdldC5wYXJlbnROb2RlKTtcbiAgICAgICAgcmVjb3JkLmFkZGVkTm9kZXMgPSBhZGRlZE5vZGVzO1xuICAgICAgICByZWNvcmQucmVtb3ZlZE5vZGVzID0gcmVtb3ZlZE5vZGVzO1xuICAgICAgICByZWNvcmQucHJldmlvdXNTaWJsaW5nID0gcHJldmlvdXNTaWJsaW5nO1xuICAgICAgICByZWNvcmQubmV4dFNpYmxpbmcgPSBuZXh0U2libGluZztcbiAgICAgICAgZm9yRWFjaEFuY2VzdG9yQW5kT2JzZXJ2ZXJFbnF1ZXVlUmVjb3JkKGUucmVsYXRlZE5vZGUsIGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgICBpZiAoIW9wdGlvbnMuY2hpbGRMaXN0KSByZXR1cm47XG4gICAgICAgICAgcmV0dXJuIHJlY29yZDtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBjbGVhclJlY29yZHMoKTtcbiAgICB9XG4gIH07XG4gIGdsb2JhbC5Kc011dGF0aW9uT2JzZXJ2ZXIgPSBKc011dGF0aW9uT2JzZXJ2ZXI7XG4gIGlmICghZ2xvYmFsLk11dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgICBnbG9iYWwuTXV0YXRpb25PYnNlcnZlciA9IEpzTXV0YXRpb25PYnNlcnZlcjtcbiAgICBKc011dGF0aW9uT2JzZXJ2ZXIuX2lzUG9seWZpbGxlZCA9IHRydWU7XG4gIH1cbn0pKHNlbGYpO1xuIiwiLypcbkNvcHlyaWdodCAoYykgMjAxMiBCYXJuZXNhbmRub2JsZS5jb20sIGxsYywgRG9uYXZvbiBXZXN0LCBhbmQgRG9tZW5pYyBEZW5pY29sYVxuXG5QZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmdcbmEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZVxuXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nXG53aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0cyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsXG5kaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbCBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG9cbnBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0b1xudGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuXG5UaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZVxuaW5jbHVkZWQgaW4gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG5cblRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsXG5FWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0Zcbk1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EXG5OT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFXG5MSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OXG5PRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgT1VUIE9GIE9SIElOIENPTk5FQ1RJT05cbldJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxuXG4qL1xuKGZ1bmN0aW9uIChnbG9iYWwsIHVuZGVmaW5lZCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgaWYgKGdsb2JhbC5zZXRJbW1lZGlhdGUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciBuZXh0SGFuZGxlID0gMTsgLy8gU3BlYyBzYXlzIGdyZWF0ZXIgdGhhbiB6ZXJvXG4gICAgdmFyIHRhc2tzQnlIYW5kbGUgPSB7fTtcbiAgICB2YXIgY3VycmVudGx5UnVubmluZ0FUYXNrID0gZmFsc2U7XG4gICAgdmFyIGRvYyA9IGdsb2JhbC5kb2N1bWVudDtcbiAgICB2YXIgc2V0SW1tZWRpYXRlO1xuXG4gICAgZnVuY3Rpb24gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmdzKSB7XG4gICAgICAgIHRhc2tzQnlIYW5kbGVbbmV4dEhhbmRsZV0gPSBwYXJ0aWFsbHlBcHBsaWVkLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XG4gICAgICAgIHJldHVybiBuZXh0SGFuZGxlKys7XG4gICAgfVxuXG4gICAgLy8gVGhpcyBmdW5jdGlvbiBhY2NlcHRzIHRoZSBzYW1lIGFyZ3VtZW50cyBhcyBzZXRJbW1lZGlhdGUsIGJ1dFxuICAgIC8vIHJldHVybnMgYSBmdW5jdGlvbiB0aGF0IHJlcXVpcmVzIG5vIGFyZ3VtZW50cy5cbiAgICBmdW5jdGlvbiBwYXJ0aWFsbHlBcHBsaWVkKGhhbmRsZXIpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaGFuZGxlciA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgaGFuZGxlci5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAobmV3IEZ1bmN0aW9uKFwiXCIgKyBoYW5kbGVyKSkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBydW5JZlByZXNlbnQoaGFuZGxlKSB7XG4gICAgICAgIC8vIEZyb20gdGhlIHNwZWM6IFwiV2FpdCB1bnRpbCBhbnkgaW52b2NhdGlvbnMgb2YgdGhpcyBhbGdvcml0aG0gc3RhcnRlZCBiZWZvcmUgdGhpcyBvbmUgaGF2ZSBjb21wbGV0ZWQuXCJcbiAgICAgICAgLy8gU28gaWYgd2UncmUgY3VycmVudGx5IHJ1bm5pbmcgYSB0YXNrLCB3ZSdsbCBuZWVkIHRvIGRlbGF5IHRoaXMgaW52b2NhdGlvbi5cbiAgICAgICAgaWYgKGN1cnJlbnRseVJ1bm5pbmdBVGFzaykge1xuICAgICAgICAgICAgLy8gRGVsYXkgYnkgZG9pbmcgYSBzZXRUaW1lb3V0LiBzZXRJbW1lZGlhdGUgd2FzIHRyaWVkIGluc3RlYWQsIGJ1dCBpbiBGaXJlZm94IDcgaXQgZ2VuZXJhdGVkIGFcbiAgICAgICAgICAgIC8vIFwidG9vIG11Y2ggcmVjdXJzaW9uXCIgZXJyb3IuXG4gICAgICAgICAgICBzZXRUaW1lb3V0KHBhcnRpYWxseUFwcGxpZWQocnVuSWZQcmVzZW50LCBoYW5kbGUpLCAwKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHZhciB0YXNrID0gdGFza3NCeUhhbmRsZVtoYW5kbGVdO1xuICAgICAgICAgICAgaWYgKHRhc2spIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIHRhc2soKTtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhckltbWVkaWF0ZShoYW5kbGUpO1xuICAgICAgICAgICAgICAgICAgICBjdXJyZW50bHlSdW5uaW5nQVRhc2sgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjbGVhckltbWVkaWF0ZShoYW5kbGUpIHtcbiAgICAgICAgZGVsZXRlIHRhc2tzQnlIYW5kbGVbaGFuZGxlXTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgc2V0SW1tZWRpYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaGFuZGxlID0gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmd1bWVudHMpO1xuICAgICAgICAgICAgcHJvY2Vzcy5uZXh0VGljayhwYXJ0aWFsbHlBcHBsaWVkKHJ1bklmUHJlc2VudCwgaGFuZGxlKSk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNhblVzZVBvc3RNZXNzYWdlKCkge1xuICAgICAgICAvLyBUaGUgdGVzdCBhZ2FpbnN0IGBpbXBvcnRTY3JpcHRzYCBwcmV2ZW50cyB0aGlzIGltcGxlbWVudGF0aW9uIGZyb20gYmVpbmcgaW5zdGFsbGVkIGluc2lkZSBhIHdlYiB3b3JrZXIsXG4gICAgICAgIC8vIHdoZXJlIGBnbG9iYWwucG9zdE1lc3NhZ2VgIG1lYW5zIHNvbWV0aGluZyBjb21wbGV0ZWx5IGRpZmZlcmVudCBhbmQgY2FuJ3QgYmUgdXNlZCBmb3IgdGhpcyBwdXJwb3NlLlxuICAgICAgICBpZiAoZ2xvYmFsLnBvc3RNZXNzYWdlICYmICFnbG9iYWwuaW1wb3J0U2NyaXB0cykge1xuICAgICAgICAgICAgdmFyIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXMgPSB0cnVlO1xuICAgICAgICAgICAgdmFyIG9sZE9uTWVzc2FnZSA9IGdsb2JhbC5vbm1lc3NhZ2U7XG4gICAgICAgICAgICBnbG9iYWwub25tZXNzYWdlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgcG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cyA9IGZhbHNlO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGdsb2JhbC5wb3N0TWVzc2FnZShcIlwiLCBcIipcIik7XG4gICAgICAgICAgICBnbG9iYWwub25tZXNzYWdlID0gb2xkT25NZXNzYWdlO1xuICAgICAgICAgICAgcmV0dXJuIHBvc3RNZXNzYWdlSXNBc3luY2hyb25vdXM7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsUG9zdE1lc3NhZ2VJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgLy8gSW5zdGFsbHMgYW4gZXZlbnQgaGFuZGxlciBvbiBgZ2xvYmFsYCBmb3IgdGhlIGBtZXNzYWdlYCBldmVudDogc2VlXG4gICAgICAgIC8vICogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vRE9NL3dpbmRvdy5wb3N0TWVzc2FnZVxuICAgICAgICAvLyAqIGh0dHA6Ly93d3cud2hhdHdnLm9yZy9zcGVjcy93ZWItYXBwcy9jdXJyZW50LXdvcmsvbXVsdGlwYWdlL2NvbW1zLmh0bWwjY3Jvc3NEb2N1bWVudE1lc3NhZ2VzXG5cbiAgICAgICAgdmFyIG1lc3NhZ2VQcmVmaXggPSBcInNldEltbWVkaWF0ZSRcIiArIE1hdGgucmFuZG9tKCkgKyBcIiRcIjtcbiAgICAgICAgdmFyIG9uR2xvYmFsTWVzc2FnZSA9IGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgICAgICBpZiAoZXZlbnQuc291cmNlID09PSBnbG9iYWwgJiZcbiAgICAgICAgICAgICAgICB0eXBlb2YgZXZlbnQuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxuICAgICAgICAgICAgICAgIGV2ZW50LmRhdGEuaW5kZXhPZihtZXNzYWdlUHJlZml4KSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJ1bklmUHJlc2VudCgrZXZlbnQuZGF0YS5zbGljZShtZXNzYWdlUHJlZml4Lmxlbmd0aCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcikge1xuICAgICAgICAgICAgZ2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsIG9uR2xvYmFsTWVzc2FnZSwgZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZ2xvYmFsLmF0dGFjaEV2ZW50KFwib25tZXNzYWdlXCIsIG9uR2xvYmFsTWVzc2FnZSk7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRJbW1lZGlhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBhZGRGcm9tU2V0SW1tZWRpYXRlQXJndW1lbnRzKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICBnbG9iYWwucG9zdE1lc3NhZ2UobWVzc2FnZVByZWZpeCArIGhhbmRsZSwgXCIqXCIpO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnN0YWxsTWVzc2FnZUNoYW5uZWxJbXBsZW1lbnRhdGlvbigpIHtcbiAgICAgICAgdmFyIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICAgICAgY2hhbm5lbC5wb3J0MS5vbm1lc3NhZ2UgPSBmdW5jdGlvbihldmVudCkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZSA9IGV2ZW50LmRhdGE7XG4gICAgICAgICAgICBydW5JZlByZXNlbnQoaGFuZGxlKTtcbiAgICAgICAgfTtcblxuICAgICAgICBzZXRJbW1lZGlhdGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBoYW5kbGUgPSBhZGRGcm9tU2V0SW1tZWRpYXRlQXJndW1lbnRzKGFyZ3VtZW50cyk7XG4gICAgICAgICAgICBjaGFubmVsLnBvcnQyLnBvc3RNZXNzYWdlKGhhbmRsZSk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxSZWFkeVN0YXRlQ2hhbmdlSW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHZhciBodG1sID0gZG9jLmRvY3VtZW50RWxlbWVudDtcbiAgICAgICAgc2V0SW1tZWRpYXRlID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgaGFuZGxlID0gYWRkRnJvbVNldEltbWVkaWF0ZUFyZ3VtZW50cyhhcmd1bWVudHMpO1xuICAgICAgICAgICAgLy8gQ3JlYXRlIGEgPHNjcmlwdD4gZWxlbWVudDsgaXRzIHJlYWR5c3RhdGVjaGFuZ2UgZXZlbnQgd2lsbCBiZSBmaXJlZCBhc3luY2hyb25vdXNseSBvbmNlIGl0IGlzIGluc2VydGVkXG4gICAgICAgICAgICAvLyBpbnRvIHRoZSBkb2N1bWVudC4gRG8gc28sIHRodXMgcXVldWluZyB1cCB0aGUgdGFzay4gUmVtZW1iZXIgdG8gY2xlYW4gdXAgb25jZSBpdCdzIGJlZW4gY2FsbGVkLlxuICAgICAgICAgICAgdmFyIHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICAgICAgc2NyaXB0Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBydW5JZlByZXNlbnQoaGFuZGxlKTtcbiAgICAgICAgICAgICAgICBzY3JpcHQub25yZWFkeXN0YXRlY2hhbmdlID0gbnVsbDtcbiAgICAgICAgICAgICAgICBodG1sLnJlbW92ZUNoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICAgICAgc2NyaXB0ID0gbnVsbDtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBodG1sLmFwcGVuZENoaWxkKHNjcmlwdCk7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlO1xuICAgICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGluc3RhbGxTZXRUaW1lb3V0SW1wbGVtZW50YXRpb24oKSB7XG4gICAgICAgIHNldEltbWVkaWF0ZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGhhbmRsZSA9IGFkZEZyb21TZXRJbW1lZGlhdGVBcmd1bWVudHMoYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQocGFydGlhbGx5QXBwbGllZChydW5JZlByZXNlbnQsIGhhbmRsZSksIDApO1xuICAgICAgICAgICAgcmV0dXJuIGhhbmRsZTtcbiAgICAgICAgfTtcbiAgICB9XG5cbiAgICAvLyBJZiBzdXBwb3J0ZWQsIHdlIHNob3VsZCBhdHRhY2ggdG8gdGhlIHByb3RvdHlwZSBvZiBnbG9iYWwsIHNpbmNlIHRoYXQgaXMgd2hlcmUgc2V0VGltZW91dCBldCBhbC4gbGl2ZS5cbiAgICB2YXIgYXR0YWNoVG8gPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YgJiYgT2JqZWN0LmdldFByb3RvdHlwZU9mKGdsb2JhbCk7XG4gICAgYXR0YWNoVG8gPSBhdHRhY2hUbyAmJiBhdHRhY2hUby5zZXRUaW1lb3V0ID8gYXR0YWNoVG8gOiBnbG9iYWw7XG5cbiAgICAvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IGUuZy4gYnJvd3NlcmlmeSBlbnZpcm9ubWVudHMuXG4gICAgaWYgKHt9LnRvU3RyaW5nLmNhbGwoZ2xvYmFsLnByb2Nlc3MpID09PSBcIltvYmplY3QgcHJvY2Vzc11cIikge1xuICAgICAgICAvLyBGb3IgTm9kZS5qcyBiZWZvcmUgMC45XG4gICAgICAgIGluc3RhbGxOZXh0VGlja0ltcGxlbWVudGF0aW9uKCk7XG5cbiAgICB9IGVsc2UgaWYgKGNhblVzZVBvc3RNZXNzYWdlKCkpIHtcbiAgICAgICAgLy8gRm9yIG5vbi1JRTEwIG1vZGVybiBicm93c2Vyc1xuICAgICAgICBpbnN0YWxsUG9zdE1lc3NhZ2VJbXBsZW1lbnRhdGlvbigpO1xuXG4gICAgfSBlbHNlIGlmIChnbG9iYWwuTWVzc2FnZUNoYW5uZWwpIHtcbiAgICAgICAgLy8gRm9yIHdlYiB3b3JrZXJzLCB3aGVyZSBzdXBwb3J0ZWRcbiAgICAgICAgaW5zdGFsbE1lc3NhZ2VDaGFubmVsSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSBpZiAoZG9jICYmIFwib25yZWFkeXN0YXRlY2hhbmdlXCIgaW4gZG9jLmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIikpIHtcbiAgICAgICAgLy8gRm9yIElFIDbigJM4XG4gICAgICAgIGluc3RhbGxSZWFkeVN0YXRlQ2hhbmdlSW1wbGVtZW50YXRpb24oKTtcblxuICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIEZvciBvbGRlciBicm93c2Vyc1xuICAgICAgICBpbnN0YWxsU2V0VGltZW91dEltcGxlbWVudGF0aW9uKCk7XG4gICAgfVxuXG4gICAgYXR0YWNoVG8uc2V0SW1tZWRpYXRlID0gc2V0SW1tZWRpYXRlO1xuICAgIGF0dGFjaFRvLmNsZWFySW1tZWRpYXRlID0gY2xlYXJJbW1lZGlhdGU7XG59KHNlbGYpKTtcbiIsIi8vIENhdXRpb246XG4vLyBEbyBub3QgcmVwbGFjZSB0aGlzIGltcG9ydCBzdGF0ZW1lbnQgd2l0aCBjb2Rlcy5cbi8vXG4vLyBJZiB5b3UgcmVwbGFjZSB0aGlzIGltcG9ydCBzdGF0ZW1lbnQgd2l0aCBjb2Rlcyxcbi8vIHRoZSBjb2RlcyB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBmb2xsb3dpbmcgcG9seWZpbGxzIGFyZSBpbXBvcnRlZFxuLy8gYmVjYXVzZSBpbXBvcnQgc3RhdGVtZW50cyBhcmUgaG9pc3RlZCBkdXJpbmcgY29tcGlsYXRpb24uXG5pbXBvcnQgJy4vcG9seWZpbGwtc3dpdGNoZXMnO1xuXG4vLyBQb2x5ZmlsbCBFQ01BU2NyaXB0IHN0YW5kYXJkIGZlYXR1cmVzIHdpdGggZ2xvYmFsIG5hbWVzcGFjZSBwb2xsdXRpb25cbmltcG9ydCAnY29yZS1qcy9mbi9vYmplY3Qvc2V0LXByb3RvdHlwZS1vZic7XG5pbXBvcnQgJ2NvcmUtanMvZm4vc2V0JztcbmltcG9ydCAnY29yZS1qcy9mbi9tYXAnO1xuaW1wb3J0ICdjb3JlLWpzL2ZuL3dlYWstbWFwJztcbmltcG9ydCAnY29yZS1qcy9mbi9hcnJheS9mcm9tJztcblxuLy8gUG9seWZpbGwgQ3VzdG9tIEVsZW1lbnRzIHYxIHdpdGggZ2xvYmFsIG5hbWVzcGFjZSBwb2xsdXRpb25cbmltcG9ydCAnQG9uc2VudWkvY3VzdG9tLWVsZW1lbnRzL3NyYy9jdXN0b20tZWxlbWVudHMnO1xuXG4vLyBQb2x5ZmlsbCBNdXRhdGlvbk9ic2VydmVyIHdpdGggZ2xvYmFsIG5hbWVzcGFjZSBwb2xsdXRpb25cbmltcG9ydCAnLi9NdXRhdGlvbk9ic2VydmVyQDAuNy4yMi9NdXRhdGlvbk9ic2VydmVyLmpzJztcblxuLy8gUG9seWZpbGwgc2V0SW1tZWRpYXRlIHdpdGggZ2xvYmFsIG5hbWVzcGFjZSBwb2xsdXRpb25cbmltcG9ydCAnLi9zZXRJbW1lZGlhdGVAMS4wLjIrbW9kL3NldEltbWVkaWF0ZS5qcyc7XG4iLCIoZnVuY3Rpb24oKSB7XG4gIHZhciBERUZBVUxUX1ZJRVdQT1JUID0gJ3dpZHRoPWRldmljZS13aWR0aCxpbml0aWFsLXNjYWxlPTEsbWF4aW11bS1zY2FsZT0xLG1pbmltdW0tc2NhbGU9MSx1c2VyLXNjYWxhYmxlPW5vJztcblxuICB2YXIgVmlld3BvcnQgPSB7IFxuICAgIGVuc3VyZVZpZXdwb3J0RWxlbWVudDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmlld3BvcnRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPXZpZXdwb3J0XScpO1xuXG4gICAgICBpZiAoIXZpZXdwb3J0RWxlbWVudCkge1xuICAgICAgICB2aWV3cG9ydEVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdtZXRhJyk7XG4gICAgICAgIHZpZXdwb3J0RWxlbWVudC5uYW1lID0gJ3ZpZXdwb3J0JztcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh2aWV3cG9ydEVsZW1lbnQpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdmlld3BvcnRFbGVtZW50O1xuICAgIH0sXG5cbiAgICBzZXR1cDogZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdmlld3BvcnRFbGVtZW50ID0gVmlld3BvcnQuZW5zdXJlVmlld3BvcnRFbGVtZW50KCk7XG5cbiAgICAgIGlmICghdmlld3BvcnRFbGVtZW50KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKCF2aWV3cG9ydEVsZW1lbnQuaGFzQXR0cmlidXRlKCdjb250ZW50JykpIHtcbiAgICAgICAgdmlld3BvcnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnY29udGVudCcsIERFRkFVTFRfVklFV1BPUlQpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICB3aW5kb3cuVmlld3BvcnQgPSBWaWV3cG9ydDtcbn0pKCk7XG4iLCIvKipcbiAqIE1pY3JvRXZlbnQgLSB0byBtYWtlIGFueSBqcyBvYmplY3QgYW4gZXZlbnQgZW1pdHRlciAoc2VydmVyIG9yIGJyb3dzZXIpXG4gKlxuICogLSBwdXJlIGphdmFzY3JpcHQgLSBzZXJ2ZXIgY29tcGF0aWJsZSwgYnJvd3NlciBjb21wYXRpYmxlXG4gKiAtIGRvbnQgcmVseSBvbiB0aGUgYnJvd3NlciBkb21zXG4gKiAtIHN1cGVyIHNpbXBsZSAtIHlvdSBnZXQgaXQgaW1tZWRpYXRlbHksIG5vIG15c3RlcnksIG5vIG1hZ2ljIGludm9sdmVkXG4gKlxuICogLSBjcmVhdGUgYSBNaWNyb0V2ZW50RGVidWcgd2l0aCBnb29kaWVzIHRvIGRlYnVnXG4gKiAgIC0gbWFrZSBpdCBzYWZlciB0byB1c2VcbiovXG5cbi8qKiBOT1RFOiBUaGlzIGxpYnJhcnkgaXMgY3VzdG9taXplZCBmb3IgT25zZW4gVUkuICovXG5cbmNvbnN0IE1pY3JvRXZlbnQgID0gZnVuY3Rpb24oKXt9O1xuTWljcm9FdmVudC5wcm90b3R5cGUgID0ge1xuICBvbjogZnVuY3Rpb24oZXZlbnQsIGZjdCl7XG4gICAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICAgIHRoaXMuX2V2ZW50c1tldmVudF0gPSB0aGlzLl9ldmVudHNbZXZlbnRdIHx8IFtdO1xuICAgIHRoaXMuX2V2ZW50c1tldmVudF0ucHVzaChmY3QpO1xuICB9LFxuICBvbmNlOiBmdW5jdGlvbihldmVudCwgZmN0KXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIHdyYXBwZXIgPSBmdW5jdGlvbigpIHtcbiAgICAgIHNlbGYub2ZmKGV2ZW50LCB3cmFwcGVyKTtcbiAgICAgIHJldHVybiBmY3QuYXBwbHkobnVsbCwgYXJndW1lbnRzKTtcbiAgICB9O1xuICAgIHRoaXMub24oZXZlbnQsIHdyYXBwZXIpO1xuICB9LFxuICBvZmY6IGZ1bmN0aW9uKGV2ZW50LCBmY3Qpe1xuICAgIHRoaXMuX2V2ZW50cyA9IHRoaXMuX2V2ZW50cyB8fCB7fTtcbiAgICBpZiAoZXZlbnQgaW4gdGhpcy5fZXZlbnRzID09PSBmYWxzZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2V2ZW50c1tldmVudF0gPSB0aGlzLl9ldmVudHNbZXZlbnRdXG4gICAgICAuZmlsdGVyKGZ1bmN0aW9uKF9mY3QpIHtcbiAgICAgICAgaWYgKGZjdCkge1xuICAgICAgICAgICByZXR1cm4gZmN0ICE9PSBfZmN0O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH0sXG4gIGVtaXQ6IGZ1bmN0aW9uKGV2ZW50IC8qICwgYXJncy4uLiAqLyl7XG4gICAgdGhpcy5fZXZlbnRzID0gdGhpcy5fZXZlbnRzIHx8IHt9O1xuICAgIGlmIChldmVudCBpbiB0aGlzLl9ldmVudHMgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fZXZlbnRzW2V2ZW50XS5sZW5ndGg7IGkrKyl7XG4gICAgICB0aGlzLl9ldmVudHNbZXZlbnRdW2ldLmFwcGx5KHRoaXMsIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywgMSkpO1xuICAgIH1cbiAgfVxufTtcblxuLyoqXG4gKiBtaXhpbiB3aWxsIGRlbGVnYXRlIGFsbCBNaWNyb0V2ZW50LmpzIGZ1bmN0aW9uIGluIHRoZSBkZXN0aW5hdGlvbiBvYmplY3RcbiAqXG4gKiAtIHJlcXVpcmUoJ01pY3JvRXZlbnQnKS5taXhpbihGb29iYXIpIHdpbGwgbWFrZSBGb29iYXIgYWJsZSB0byB1c2UgTWljcm9FdmVudFxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSB0aGUgb2JqZWN0IHdoaWNoIHdpbGwgc3VwcG9ydCBNaWNyb0V2ZW50XG4qL1xuTWljcm9FdmVudC5taXhpbiAgPSBmdW5jdGlvbihkZXN0T2JqZWN0KXtcbiAgdmFyIHByb3BzID0gWydvbicsICdvbmNlJywgJ29mZicsICdlbWl0J107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpICsrKXtcbiAgICBpZiAodHlwZW9mIGRlc3RPYmplY3QgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIGRlc3RPYmplY3QucHJvdG90eXBlW3Byb3BzW2ldXSAgPSBNaWNyb0V2ZW50LnByb3RvdHlwZVtwcm9wc1tpXV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlc3RPYmplY3RbcHJvcHNbaV1dID0gTWljcm9FdmVudC5wcm90b3R5cGVbcHJvcHNbaV1dO1xuICAgIH1cbiAgfVxufVxuXG53aW5kb3cuTWljcm9FdmVudCA9IE1pY3JvRXZlbnQ7XG5leHBvcnQgZGVmYXVsdCBNaWNyb0V2ZW50O1xuIiwiZXhwb3J0IGRlZmF1bHQgeyB9O1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuXG4vKipcbiAqIEFkZCB2ZW5kb3IgcHJlZml4LlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmNvbnN0IHByZWZpeCA9IChmdW5jdGlvbigpIHtcbiAgY29uc3Qgc3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAnJyk7XG4gIGNvbnN0IHByZWZpeCA9IChBcnJheS5wcm90b3R5cGUuc2xpY2VcbiAgICAuY2FsbChzdHlsZXMpXG4gICAgLmpvaW4oJycpXG4gICAgLm1hdGNoKC8tKG1venx3ZWJraXR8bXMpLS8pIHx8IChzdHlsZXMuT0xpbmsgPT09ICcnICYmIFsnJywgJ28nXSlcbiAgKVsxXTtcblxuICByZXR1cm4gZnVuY3Rpb24obmFtZSkge1xuICAgIHJldHVybiAnLScgKyBwcmVmaXggKyAnLScgKyB1dGlsLmh5cGhlbmF0ZShuYW1lKTtcbiAgfTtcbn0pKCk7XG5cblxuLyoqXG4gKiBNaW5pbWFsIHV0aWxpdHkgbGlicmFyeSBmb3IgbWFuaXB1bGF0aW5nIGVsZW1lbnQncyBzdHlsZS5cbiAqIFNldCBlbGVtZW50J3Mgc3R5bGUuXG4gKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge09iamVjdH0gc3R5bGVzXG4gKiBAcmV0dXJuIHtFbGVtZW50fVxuICovXG5jb25zdCBzdHlsZXIgPSBmdW5jdGlvbihlbGVtZW50LCBzdHlsZSkge1xuICBPYmplY3Qua2V5cyhzdHlsZSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoa2V5IGluIGVsZW1lbnQuc3R5bGUpIHtcbiAgICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlW2tleV07XG4gICAgfSBlbHNlIGlmIChwcmVmaXgoa2V5KSBpbiBlbGVtZW50LnN0eWxlKSB7XG4gICAgICBlbGVtZW50LnN0eWxlW3ByZWZpeChrZXkpXSA9IHN0eWxlW2tleV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHV0aWwud2FybignTm8gc3VjaCBzdHlsZSBwcm9wZXJ0eTogJyArIGtleSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIGVsZW1lbnQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmd9IHN0eWxlcyBTcGFjZS1zZXBhcmF0ZWQgQ1NTIHByb3BlcnRpZXMgdG8gcmVtb3ZlXG4gKi9cbnN0eWxlci5jbGVhciA9IGZ1bmN0aW9uKGVsZW1lbnQsIHN0eWxlcyA9ICcnKSB7XG4gIGNvbnN0IGNsZWFybGlzdCA9IHN0eWxlcy5zcGxpdCgvXFxzKy8pLnJlZHVjZSgociwgcykgPT4gci5jb25jYXQoW3V0aWwuaHlwaGVuYXRlKHMpLCBwcmVmaXgocyldKSwgW10pLFxuICAgIGtleXMgPSBbXTtcblxuICBmb3IgKGxldCBpID0gZWxlbWVudC5zdHlsZS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgIGNvbnN0IGtleSA9IGVsZW1lbnQuc3R5bGVbaV07XG4gICAgaWYgKGNsZWFybGlzdC5sZW5ndGggPT09IDAgfHwgY2xlYXJsaXN0LnNvbWUocyA9PiBrZXkuaW5kZXhPZihzKSA9PT0gMCkpIHtcbiAgICAgIGtleXMucHVzaChrZXkpOyAvLyBTdG9yZSB0aGUga2V5IHRvIGZpeCBTYWZhcmkgc3R5bGUgaW5kZXhlc1xuICAgIH1cbiAgfVxuXG4gIGtleXMuZm9yRWFjaChrZXkgPT4gZWxlbWVudC5zdHlsZVtrZXldID0gJycpO1xuICBlbGVtZW50LmdldEF0dHJpYnV0ZSgnc3R5bGUnKSA9PT0gJycgJiYgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBzdHlsZXI7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zUGxhdGZvcm0gZnJvbSAnLi9wbGF0Zm9ybSc7XG5pbXBvcnQgdXRpbCBmcm9tICcuL3V0aWwnO1xuXG5sZXQgYXV0b1N0eWxlRW5hYmxlZCA9IHRydWU7XG5cbi8vIE1vZGlmaWVyc1xuY29uc3QgbW9kaWZpZXJzTWFwID0ge1xuICAncXVpZXQnOiAnbWF0ZXJpYWwtLWZsYXQnLFxuICAnbGlnaHQnOiAnbWF0ZXJpYWwtLWZsYXQnLFxuICAnb3V0bGluZSc6ICdtYXRlcmlhbC0tZmxhdCcsXG4gICdjdGEnOiAnJyxcbiAgJ2xhcmdlLS1xdWlldCc6ICdtYXRlcmlhbC0tZmxhdCBsYXJnZScsXG4gICdsYXJnZS0tY3RhJzogJ2xhcmdlJyxcbiAgJ25vYm9yZGVyJzogJycsXG4gICd0YXBwYWJsZSc6ICcnXG59O1xuXG5jb25zdCBwbGF0Zm9ybXMgPSB7fTtcblxucGxhdGZvcm1zLmFuZHJvaWQgPSBlbGVtZW50ID0+IHtcblxuICBjb25zdCBlbGVtZW50TmFtZSA9IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpO1xuXG4gIGlmICghdXRpbC5oYXNNb2RpZmllcihlbGVtZW50LCAnbWF0ZXJpYWwnKSkge1xuICAgIGNvbnN0IG9sZE1vZGlmaWVyID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykgfHwgJyc7XG5cbiAgICBjb25zdCBuZXdNb2RpZmllciA9IG9sZE1vZGlmaWVyLnRyaW0oKS5zcGxpdCgvXFxzKy8pLm1hcChlID0+IG1vZGlmaWVyc01hcC5oYXNPd25Qcm9wZXJ0eShlKSA/IG1vZGlmaWVyc01hcFtlXSA6IGUpO1xuICAgIG5ld01vZGlmaWVyLnVuc2hpZnQoJ21hdGVyaWFsJyk7XG5cbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCBuZXdNb2RpZmllci5qb2luKCcgJykudHJpbSgpKTtcbiAgfVxuXG4gIGNvbnN0IGVsZW1lbnRzID0gW1xuICAgICdvbnMtYWxlcnQtZGlhbG9nLWJ1dHRvbicsXG4gICAgJ29ucy10b29sYmFyLWJ1dHRvbicsXG4gICAgJ29ucy1iYWNrLWJ1dHRvbicsXG4gICAgJ29ucy1idXR0b24nLFxuICAgICdvbnMtbGlzdC1pdGVtJyxcbiAgICAnb25zLWZhYicsXG4gICAgJ29ucy1zcGVlZC1kaWFsJyxcbiAgICAnb25zLXNwZWVkLWRpYWwtaXRlbScsXG4gICAgJ29ucy10YWInXG4gIF07XG5cblxuICAvLyBFZmZlY3RzXG4gIGlmIChlbGVtZW50cy5pbmRleE9mKGVsZW1lbnROYW1lKSAhPT0gLTFcbiAgICAmJiAhZWxlbWVudC5oYXNBdHRyaWJ1dGUoJ3JpcHBsZScpXG4gICAgJiYgIWVsZW1lbnQucXVlcnlTZWxlY3Rvcignb25zLXJpcHBsZScpKSB7XG5cbiAgICBpZiAoZWxlbWVudE5hbWUgPT09ICdvbnMtbGlzdC1pdGVtJykge1xuICAgICAgaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCd0YXBwYWJsZScpKSB7XG4gICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdyaXBwbGUnLCAnJyk7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCd0YXBwYWJsZScpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgncmlwcGxlJywgJycpO1xuICAgIH1cbiAgfVxufTtcblxucGxhdGZvcm1zLmlvcyA9IGVsZW1lbnQgPT4ge1xuXG4gLy8gTW9kaWZpZXJzXG4gaWYgKHV0aWwucmVtb3ZlTW9kaWZpZXIoZWxlbWVudCwgJ21hdGVyaWFsJykpIHtcbiAgIGlmICh1dGlsLnJlbW92ZU1vZGlmaWVyKGVsZW1lbnQsICdtYXRlcmlhbC0tZmxhdCcpKSB7XG4gICAgIHV0aWwuYWRkTW9kaWZpZXIoZWxlbWVudCwgKHV0aWwucmVtb3ZlTW9kaWZpZXIoZWxlbWVudCwgJ2xhcmdlJykpID8gJ2xhcmdlLS1xdWlldCcgOiAncXVpZXQnKTtcbiAgIH1cblxuICAgaWYgKCFlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgnbW9kaWZpZXInKTtcbiAgIH1cbiB9XG5cbiAvLyBFZmZlY3RzXG4gaWYgKGVsZW1lbnQuaGFzQXR0cmlidXRlKCdyaXBwbGUnKSkge1xuICAgaWYgKGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLWxpc3QtaXRlbScpIHtcbiAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ3RhcHBhYmxlJywgJycpO1xuICAgfVxuXG4gICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZSgncmlwcGxlJyk7XG4gfVxufTtcblxuY29uc3QgdW5sb2NrZWQgPSB7XG4gIGFuZHJvaWQ6IHRydWVcbn07XG5cbmNvbnN0IGdldFBsYXRmb3JtID0gKGVsZW1lbnQsIGZvcmNlKSA9PiB7XG4gIGlmIChhdXRvU3R5bGVFbmFibGVkICYmICFlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnZGlzYWJsZS1hdXRvLXN0eWxpbmcnKSkge1xuICAgIGNvbnN0IG1vYmlsZU9TID0gb25zUGxhdGZvcm0uZ2V0TW9iaWxlT1MoKTtcbiAgICBpZiAocGxhdGZvcm1zLmhhc093blByb3BlcnR5KG1vYmlsZU9TKSAmJiAodW5sb2NrZWQuaGFzT3duUHJvcGVydHkobW9iaWxlT1MpIHx8IGZvcmNlKSkge1xuICAgICAgcmV0dXJuIG1vYmlsZU9TO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn07XG5cbmNvbnN0IHByZXBhcmUgPSAoZWxlbWVudCwgZm9yY2UpID0+IHtcbiAgY29uc3QgcCA9IGdldFBsYXRmb3JtKGVsZW1lbnQsIGZvcmNlKTtcbiAgcCAmJiBwbGF0Zm9ybXNbcF0oZWxlbWVudCk7XG59O1xuXG5jb25zdCBtYXBNb2RpZmllciA9IChtb2RpZmllciwgZWxlbWVudCwgZm9yY2UpID0+IHtcbiAgaWYgKGdldFBsYXRmb3JtKGVsZW1lbnQsIGZvcmNlKSkge1xuICAgIHJldHVybiBtb2RpZmllci5zcGxpdCgvXFxzKy8pLm1hcChtID0+IG1vZGlmaWVyc01hcC5oYXNPd25Qcm9wZXJ0eShtKSA/IG1vZGlmaWVyc01hcFttXSA6IG0pLmpvaW4oJyAnKTtcbiAgfVxuICByZXR1cm4gbW9kaWZpZXI7XG59O1xuXG5jb25zdCByZXN0b3JlTW9kaWZpZXIgPSBlbGVtZW50ID0+IHtcbiAgaWYgKGdldFBsYXRmb3JtKGVsZW1lbnQpID09PSAnYW5kcm9pZCcpIHtcbiAgICBjb25zdCBtb2RpZmllciA9IGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpIHx8ICcnO1xuICAgIGxldCBuZXdNb2RpZmllciA9IG1hcE1vZGlmaWVyKG1vZGlmaWVyLCBlbGVtZW50KTtcblxuICAgIGlmICghLyhefFxccyspbWF0ZXJpYWwoJHxcXHMrKS9pLnRlc3QobW9kaWZpZXIpKSB7XG4gICAgICBuZXdNb2RpZmllciA9ICdtYXRlcmlhbCAnICsgbmV3TW9kaWZpZXI7XG4gICAgfVxuXG4gICAgaWYgKG5ld01vZGlmaWVyICE9PSBtb2RpZmllcikge1xuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJywgbmV3TW9kaWZpZXIudHJpbSgpKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZmFsc2U7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGlzRW5hYmxlZDogKCkgPT4gYXV0b1N0eWxlRW5hYmxlZCxcbiAgZW5hYmxlOiAoKSA9PiBhdXRvU3R5bGVFbmFibGVkID0gdHJ1ZSxcbiAgZGlzYWJsZTogKCkgPT4gYXV0b1N0eWxlRW5hYmxlZCA9IGZhbHNlLFxuICBwcmVwYXJlLFxuICBtYXBNb2RpZmllcixcbiAgZ2V0UGxhdGZvcm0sXG4gIHJlc3RvcmVNb2RpZmllclxufTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL3V0aWwuanMnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9hdXRvc3R5bGUuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNb2RpZmllclV0aWwge1xuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IGxhc3RcbiAgICogQHBhcmFtIHtTdHJpbmd9IGN1cnJlbnRcbiAgICovXG4gIHN0YXRpYyBkaWZmKGxhc3QsIGN1cnJlbnQpIHtcbiAgICBsYXN0ID0gbWFrZURpY3QoKCcnICsgbGFzdCkudHJpbSgpKTtcbiAgICBjdXJyZW50ID0gbWFrZURpY3QoKCcnICsgY3VycmVudCkudHJpbSgpKTtcblxuICAgIGNvbnN0IHJlbW92ZWQgPSBPYmplY3Qua2V5cyhsYXN0KS5yZWR1Y2UoKHJlc3VsdCwgdG9rZW4pID0+IHtcbiAgICAgIGlmICghY3VycmVudFt0b2tlbl0pIHtcbiAgICAgICAgcmVzdWx0LnB1c2godG9rZW4pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9LCBbXSk7XG5cbiAgICBjb25zdCBhZGRlZCA9IE9iamVjdC5rZXlzKGN1cnJlbnQpLnJlZHVjZSgocmVzdWx0LCB0b2tlbikgPT4ge1xuICAgICAgaWYgKCFsYXN0W3Rva2VuXSkge1xuICAgICAgICByZXN1bHQucHVzaCh0b2tlbik7XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sIFtdKTtcblxuICAgIHJldHVybiB7YWRkZWQsIHJlbW92ZWR9O1xuXG4gICAgZnVuY3Rpb24gbWFrZURpY3QobW9kaWZpZXIpIHtcbiAgICAgIGNvbnN0IGRpY3QgPSB7fTtcbiAgICAgIE1vZGlmaWVyVXRpbC5zcGxpdChtb2RpZmllcikuZm9yRWFjaCh0b2tlbiA9PiBkaWN0W3Rva2VuXSA9IHRva2VuKTtcbiAgICAgIHJldHVybiBkaWN0O1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlmZlxuICAgKiBAcGFyYW0ge0FycmF5fSBkaWZmLnJlbW92ZWRcbiAgICogQHBhcmFtIHtBcnJheX0gZGlmZi5hZGRlZFxuICAgKiBAcGFyYW0ge09iamVjdH0gY2xhc3NMaXN0XG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0ZW1wbGF0ZVxuICAgKi9cbiAgc3RhdGljIGFwcGx5RGlmZlRvQ2xhc3NMaXN0KGRpZmYsIGNsYXNzTGlzdCwgdGVtcGxhdGUpIHtcbiAgICBkaWZmLmFkZGVkXG4gICAgICAubWFwKG1vZGlmaWVyID0+IHRlbXBsYXRlLnJlcGxhY2UoL1xcKi9nLCBtb2RpZmllcikpXG4gICAgICAuZm9yRWFjaChrbGFzcyA9PiBrbGFzcy5zcGxpdCgvXFxzKy8pLmZvckVhY2goayA9PiBjbGFzc0xpc3QuYWRkKGspKSk7XG5cbiAgICBkaWZmLnJlbW92ZWRcbiAgICAgIC5tYXAobW9kaWZpZXIgPT4gdGVtcGxhdGUucmVwbGFjZSgvXFwqL2csIG1vZGlmaWVyKSlcbiAgICAgIC5mb3JFYWNoKGtsYXNzID0+IGtsYXNzLnNwbGl0KC9cXHMrLykuZm9yRWFjaChrID0+IGNsYXNzTGlzdC5yZW1vdmUoaykpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlmZlxuICAgKiBAcGFyYW0ge0FycmF5fSBkaWZmLnJlbW92ZWRcbiAgICogQHBhcmFtIHtBcnJheX0gZGlmZi5hZGRlZFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzY2hlbWVcbiAgICovXG4gIHN0YXRpYyBhcHBseURpZmZUb0VsZW1lbnQoZGlmZiwgZWxlbWVudCwgc2NoZW1lKSB7XG4gICAgT2JqZWN0LmtleXMoc2NoZW1lKS5mb3JFYWNoKHNlbGVjdG9yID0+IHtcbiAgICAgIGNvbnN0IHRhcmdldEVsZW1lbnRzID0gIXNlbGVjdG9yIHx8IHV0aWwubWF0Y2goZWxlbWVudCwgc2VsZWN0b3IpXG4gICAgICAgID8gW2VsZW1lbnRdXG4gICAgICAgIDogQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKFxuICAgICAgICAgICAgZWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHNlbGVjdG9yKSxcbiAgICAgICAgICAgIHRhcmdldEVsZW1lbnQgPT4gIXV0aWwuZmluZFBhcmVudCh0YXJnZXRFbGVtZW50LCBlbGVtZW50LnRhZ05hbWUsIHBhcmVudCA9PiBwYXJlbnQgPT09IGVsZW1lbnQpXG4gICAgICAgICAgKTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXJnZXRFbGVtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBNb2RpZmllclV0aWwuYXBwbHlEaWZmVG9DbGFzc0xpc3QoZGlmZiwgdGFyZ2V0RWxlbWVudHNbaV0uY2xhc3NMaXN0LCBzY2hlbWVbc2VsZWN0b3JdKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbGFzdFxuICAgKiBAcGFyYW0ge1N0cmluZ30gY3VycmVudFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBzY2hlbWVcbiAgICovXG4gIHN0YXRpYyBvbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCBlbGVtZW50LCBzY2hlbWUpIHtcbiAgICBNb2RpZmllclV0aWwuYXBwbHlEaWZmVG9FbGVtZW50KE1vZGlmaWVyVXRpbC5kaWZmKGxhc3QsIGN1cnJlbnQpLCBlbGVtZW50LCBzY2hlbWUpO1xuICAgIGF1dG9TdHlsZS5yZXN0b3JlTW9kaWZpZXIoZWxlbWVudCk7XG4gIH1cblxuICBzdGF0aWMgcmVmcmVzaChlbGVtZW50LCBzY2hlbWUpIHtcbiAgICBNb2RpZmllclV0aWwuYXBwbHlEaWZmVG9FbGVtZW50KE1vZGlmaWVyVXRpbC5kaWZmKCcnLCBlbGVtZW50LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSB8fCAnJyksIGVsZW1lbnQsIHNjaGVtZSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge09iamVjdH0gc2NoZW1lXG4gICAqL1xuICBzdGF0aWMgaW5pdE1vZGlmaWVyKGVsZW1lbnQsIHNjaGVtZSkge1xuICAgIGNvbnN0IG1vZGlmaWVyID0gZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJyk7XG4gICAgaWYgKHR5cGVvZiBtb2RpZmllciAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuYXBwbHlEaWZmVG9FbGVtZW50KHtcbiAgICAgIHJlbW92ZWQ6IFtdLFxuICAgICAgYWRkZWQ6IE1vZGlmaWVyVXRpbC5zcGxpdChtb2RpZmllcilcbiAgICB9LCBlbGVtZW50LCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIHNwbGl0KG1vZGlmaWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2RpZmllciAhPT0gJ3N0cmluZycpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICByZXR1cm4gbW9kaWZpZXIudHJpbSgpLnNwbGl0KC8gKy8pLmZpbHRlcih0b2tlbiA9PiB0b2tlbiAhPT0gJycpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBtb2RpZmllciB0b2tlbiB0byBhbiBlbGVtZW50LlxuICAgKi9cbiAgc3RhdGljIGFkZE1vZGlmaWVyKGVsZW1lbnQsIG1vZGlmaWVyVG9rZW4pIHtcbiAgICBpZiAoIWVsZW1lbnQuaGFzQXR0cmlidXRlKCdtb2RpZmllcicpKSB7XG4gICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCBtb2RpZmllclRva2VuKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgdG9rZW5zID0gTW9kaWZpZXJVdGlsLnNwbGl0KGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpKTtcbiAgICAgIGlmICh0b2tlbnMuaW5kZXhPZihtb2RpZmllclRva2VuKSA9PSAtMSkge1xuICAgICAgICB0b2tlbnMucHVzaChtb2RpZmllclRva2VuKTtcbiAgICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJywgdG9rZW5zLmpvaW4oJyAnKSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlbW92ZSBtb2RpZmllciB0b2tlbiBmcm9tIGFuIGVsZW1lbnQuXG4gICAqL1xuICBzdGF0aWMgcmVtb3ZlTW9kaWZpZXIoZWxlbWVudCwgbW9kaWZpZXJUb2tlbikge1xuICAgIGlmIChlbGVtZW50Lmhhc0F0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgICAgY29uc3QgdG9rZW5zID0gTW9kaWZpZXJVdGlsLnNwbGl0KGVsZW1lbnQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpKTtcbiAgICAgIGNvbnN0IGluZGV4ID0gdG9rZW5zLmluZGV4T2YobW9kaWZpZXJUb2tlbik7XG4gICAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICAgIHRva2Vucy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICBlbGVtZW50LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCB0b2tlbnMuam9pbignICcpKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3Qgc3RhcnRzV2l0aCA9IChzLCBjKSA9PiBzLnN1YnN0cigwLCBjLmxlbmd0aCkgPT09IGM7XG5jb25zdCBlbmRzV2l0aCA9IChzLCBjKSA9PiBzLnN1YnN0cihzLmxlbmd0aCAtIGMubGVuZ3RoLCBjLmxlbmd0aCkgPT09IGM7XG5jb25zdCB1bndyYXAgPSBzID0+IHMuc2xpY2UoMSwgLTEpO1xuY29uc3QgaXNPYmplY3RTdHJpbmcgPSBzID0+IHN0YXJ0c1dpdGgocywgJ3snKSAmJiBlbmRzV2l0aChzLCAnfScpO1xuY29uc3QgaXNBcnJheVN0cmluZyA9IHMgPT4gc3RhcnRzV2l0aChzLCAnWycpICYmIGVuZHNXaXRoKHMsICddJyk7XG5jb25zdCBpc1F1b3RlZFN0cmluZyA9IHMgPT4gKHN0YXJ0c1dpdGgocywgJ1xcJycpICYmIGVuZHNXaXRoKHMsICdcXCcnKSkgfHwgKHN0YXJ0c1dpdGgocywgJ1wiJykgJiYgZW5kc1dpdGgocywgJ1wiJykpO1xuXG5jb25zdCBlcnJvciA9ICh0b2tlbiwgc3RyaW5nLCBvcmlnaW5hbFN0cmluZykgPT4ge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgdG9rZW4gXFwnJyArIHRva2VuICsgJ1xcJyBhdCBwb3NpdGlvbiAnICsgKG9yaWdpbmFsU3RyaW5nLmxlbmd0aCAtIHN0cmluZy5sZW5ndGggLSAxKSArICcgaW4gc3RyaW5nOiBcXCcnICsgb3JpZ2luYWxTdHJpbmcgKyAnXFwnJyk7XG59O1xuXG5jb25zdCBwcm9jZXNzVG9rZW4gPSAodG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpID0+IHtcbiAgaWYgKHRva2VuID09PSAndHJ1ZScgfHwgdG9rZW4gPT09ICdmYWxzZScpIHtcbiAgICByZXR1cm4gdG9rZW4gPT09ICd0cnVlJztcbiAgfSBlbHNlIGlmIChpc1F1b3RlZFN0cmluZyh0b2tlbikpIHtcbiAgICByZXR1cm4gdW53cmFwKHRva2VuKTtcbiAgfSBlbHNlIGlmICghaXNOYU4odG9rZW4pKSB7XG4gICAgcmV0dXJuICsodG9rZW4pO1xuICB9IGVsc2UgaWYgKGlzT2JqZWN0U3RyaW5nKHRva2VuKSkge1xuICAgIHJldHVybiBwYXJzZU9iamVjdCh1bndyYXAodG9rZW4pKTtcbiAgfSBlbHNlIGlmIChpc0FycmF5U3RyaW5nKHRva2VuKSkge1xuICAgIHJldHVybiBwYXJzZUFycmF5KHVud3JhcCh0b2tlbikpO1xuICB9IGVsc2Uge1xuICAgIGVycm9yKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKTtcbiAgfVxufTtcblxuY29uc3QgbmV4dFRva2VuID0gKHN0cmluZykgPT4ge1xuICBzdHJpbmcgPSBzdHJpbmcudHJpbSgpO1xuICBsZXQgbGltaXQgPSBzdHJpbmcubGVuZ3RoO1xuXG4gIGlmIChzdHJpbmdbMF0gPT09ICc6JyB8fCBzdHJpbmdbMF0gPT09ICcsJykge1xuXG4gICAgbGltaXQgPSAxO1xuXG4gIH0gZWxzZSBpZiAoc3RyaW5nWzBdID09PSAneycgfHwgc3RyaW5nWzBdID09PSAnWycpIHtcblxuICAgIGNvbnN0IGMgPSBzdHJpbmcuY2hhckNvZGVBdCgwKTtcbiAgICBsZXQgbmVzdGVkT2JqZWN0ID0gMTtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHN0cmluZy5jaGFyQ29kZUF0KGkpID09PSBjKSB7XG4gICAgICAgIG5lc3RlZE9iamVjdCsrO1xuICAgICAgfSBlbHNlIGlmIChzdHJpbmcuY2hhckNvZGVBdChpKSA9PT0gYyArIDIpIHtcbiAgICAgICAgbmVzdGVkT2JqZWN0LS07XG4gICAgICAgIGlmIChuZXN0ZWRPYmplY3QgPT09IDApIHtcbiAgICAgICAgICBsaW1pdCA9IGkgKyAxO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIH0gZWxzZSBpZiAoc3RyaW5nWzBdID09PSAnXFwnJyB8fCBzdHJpbmdbMF0gPT09ICdcIicpIHtcblxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgc3RyaW5nLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoc3RyaW5nW2ldID09PSBzdHJpbmdbMF0pIHtcbiAgICAgICAgbGltaXQgPSBpICsgMTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gIH0gZWxzZSB7XG5cbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IHN0cmluZy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKFsnICcsICcsJywgJzonXS5pbmRleE9mKHN0cmluZ1tpXSkgIT09IC0xKSB7XG4gICAgICAgIGxpbWl0ID0gaTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxuICByZXR1cm4gc3RyaW5nLnNsaWNlKDAsIGxpbWl0KTtcbn07XG5cbmNvbnN0IHBhcnNlT2JqZWN0ID0gKHN0cmluZykgPT4ge1xuICBjb25zdCBpc1ZhbGlkS2V5ID0ga2V5ID0+IC9eW0EtWl8kXVtBLVowLTlfJF0qJC9pLnRlc3Qoa2V5KTtcblxuICBzdHJpbmcgPSBzdHJpbmcudHJpbSgpO1xuICBjb25zdCBvcmlnaW5hbFN0cmluZyA9IHN0cmluZztcbiAgY29uc3Qgb2JqZWN0ID0ge307XG4gIGxldCByZWFkaW5nS2V5ID0gdHJ1ZSwga2V5LCBwcmV2aW91c1Rva2VuLCB0b2tlbjtcblxuICB3aGlsZSAoc3RyaW5nLmxlbmd0aCA+IDApIHtcbiAgICBwcmV2aW91c1Rva2VuID0gdG9rZW47XG4gICAgdG9rZW4gPSBuZXh0VG9rZW4oc3RyaW5nKTtcbiAgICBzdHJpbmcgPSBzdHJpbmcuc2xpY2UodG9rZW4ubGVuZ3RoLCBzdHJpbmcubGVuZ3RoKS50cmltKCk7XG5cbiAgICBpZiAoKHRva2VuID09PSAnOicgJiYgKCFyZWFkaW5nS2V5IHx8ICFwcmV2aW91c1Rva2VuIHx8IHByZXZpb3VzVG9rZW4gPT09ICcsJykpXG4gICAgICAgfHwgKHRva2VuID09PSAnLCcgJiYgcmVhZGluZ0tleSlcbiAgICAgICB8fCAodG9rZW4gIT09ICc6JyAmJiB0b2tlbiAhPT0gJywnICYmIChwcmV2aW91c1Rva2VuICYmIHByZXZpb3VzVG9rZW4gIT09ICcsJyAmJiBwcmV2aW91c1Rva2VuICE9PSAnOicpKSkge1xuICAgICAgZXJyb3IodG9rZW4sIHN0cmluZywgb3JpZ2luYWxTdHJpbmcpO1xuICAgIH0gZWxzZSBpZiAodG9rZW4gPT09ICc6JyAmJiByZWFkaW5nS2V5ICYmIHByZXZpb3VzVG9rZW4pIHtcbiAgICAgIHByZXZpb3VzVG9rZW4gPSBpc1F1b3RlZFN0cmluZyhwcmV2aW91c1Rva2VuKSA/IHVud3JhcChwcmV2aW91c1Rva2VuKSA6IHByZXZpb3VzVG9rZW47XG4gICAgICBpZiAoaXNWYWxpZEtleShwcmV2aW91c1Rva2VuKSkge1xuICAgICAgICBrZXkgPSBwcmV2aW91c1Rva2VuO1xuICAgICAgICByZWFkaW5nS2V5ID0gZmFsc2U7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQga2V5IHRva2VuIFxcJycgKyBwcmV2aW91c1Rva2VuICsgJ1xcJyBhdCBwb3NpdGlvbiAwIGluIHN0cmluZzogXFwnJyArIG9yaWdpbmFsU3RyaW5nICsgJ1xcJycpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodG9rZW4gPT09ICcsJyAmJiAhcmVhZGluZ0tleSAmJiBwcmV2aW91c1Rva2VuKSB7XG4gICAgICBvYmplY3Rba2V5XSA9IHByb2Nlc3NUb2tlbihwcmV2aW91c1Rva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKTtcbiAgICAgIHJlYWRpbmdLZXkgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh0b2tlbikge1xuICAgIG9iamVjdFtrZXldID0gcHJvY2Vzc1Rva2VuKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKTtcbiAgfVxuXG4gIHJldHVybiBvYmplY3Q7XG59O1xuXG5jb25zdCBwYXJzZUFycmF5ID0gKHN0cmluZykgPT4ge1xuICBzdHJpbmcgPSBzdHJpbmcudHJpbSgpO1xuICBjb25zdCBvcmlnaW5hbFN0cmluZyA9IHN0cmluZztcbiAgY29uc3QgYXJyYXkgPSBbXTtcbiAgbGV0IHByZXZpb3VzVG9rZW4sIHRva2VuO1xuXG4gIHdoaWxlIChzdHJpbmcubGVuZ3RoID4gMCkge1xuICAgIHByZXZpb3VzVG9rZW4gPSB0b2tlbjtcbiAgICB0b2tlbiA9IG5leHRUb2tlbihzdHJpbmcpO1xuICAgIHN0cmluZyA9IHN0cmluZy5zbGljZSh0b2tlbi5sZW5ndGgsIHN0cmluZy5sZW5ndGgpLnRyaW0oKTtcblxuICAgIGlmICh0b2tlbiA9PT0gJywnICYmICghcHJldmlvdXNUb2tlbiB8fCBwcmV2aW91c1Rva2VuID09PSAnLCcpKSB7XG4gICAgICBlcnJvcih0b2tlbiwgc3RyaW5nLCBvcmlnaW5hbFN0cmluZyk7XG4gICAgfSBlbHNlIGlmICh0b2tlbiA9PT0gJywnKSB7XG4gICAgICBhcnJheS5wdXNoKHByb2Nlc3NUb2tlbihwcmV2aW91c1Rva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKSk7XG4gICAgfVxuICB9XG5cbiAgaWYgKHRva2VuKSB7XG4gICAgaWYgKHRva2VuICE9PSAnLCcpIHtcbiAgICAgIGFycmF5LnB1c2gocHJvY2Vzc1Rva2VuKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVycm9yKHRva2VuLCBzdHJpbmcsIG9yaWdpbmFsU3RyaW5nKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gYXJyYXk7XG59O1xuXG5jb25zdCBwYXJzZSA9IChzdHJpbmcpID0+IHtcbiAgc3RyaW5nID0gc3RyaW5nLnRyaW0oKTtcblxuICBpZiAoaXNPYmplY3RTdHJpbmcoc3RyaW5nKSkge1xuICAgIHJldHVybiBwYXJzZU9iamVjdCh1bndyYXAoc3RyaW5nKSk7XG4gIH0gZWxzZSBpZiAoaXNBcnJheVN0cmluZyhzdHJpbmcpKSB7XG4gICAgcmV0dXJuIHBhcnNlQXJyYXkodW53cmFwKHN0cmluZykpO1xuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignUHJvdmlkZWQgc3RyaW5nIG11c3QgYmUgb2JqZWN0IG9yIGFycmF5IGxpa2U6ICcgKyBzdHJpbmcpO1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBwYXJzZTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuL2VsZW1lbnRzJztcbmltcG9ydCBzdHlsZXIgZnJvbSAnLi9zdHlsZXInO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4vaW50ZXJuYWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4vaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgYW5pbWF0aW9uT3B0aW9uc1BhcnNlIGZyb20gJy4vYW5pbWF0aW9uLW9wdGlvbnMtcGFyc2VyJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuL3BsYXRmb3JtJztcblxuY29uc3QgdXRpbCA9IHt9O1xuY29uc3QgZXJyb3JQcmVmaXggPSAnW09uc2VuIFVJXSc7XG5cbnV0aWwuZ2xvYmFscyA9IHtcbiAgZmFiT2Zmc2V0OiAwLFxuICBlcnJvclByZWZpeCxcbiAgc3VwcG9ydHNQYXNzaXZlOiBmYWxzZVxufTtcblxucGxhdGZvcm0uX3J1bk9uQWN0dWFsUGxhdGZvcm0oKCkgPT4ge1xuICB1dGlsLmdsb2JhbHMuYWN0dWFsTW9iaWxlT1MgPSBwbGF0Zm9ybS5nZXRNb2JpbGVPUygpO1xuICB1dGlsLmdsb2JhbHMuaXNXS1dlYlZpZXcgPSBwbGF0Zm9ybS5pc1dLV2ViVmlldygpO1xufSk7XG5cbnRyeSB7XG4gIGNvbnN0IG9wdHMgPSBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdwYXNzaXZlJywge1xuICAgIGdldCgpIHsgdXRpbC5nbG9iYWxzLnN1cHBvcnRzUGFzc2l2ZSA9IHRydWU7IH1cbiAgfSk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0ZXN0UGFzc2l2ZScsIG51bGwsIG9wdHMpO1xuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigndGVzdFBhc3NpdmUnLCBudWxsLCBvcHRzKTtcbn0gY2F0Y2ggKGUpIHsgbnVsbDsgfVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWwgVGFyZ2V0XG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBFdmVudCBuYW1lXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIEV2ZW50IGhhbmRsZXJcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0XSBFdmVudCBvcHRpb25zIChwYXNzaXZlLCBjYXB0dXJlLi4uKVxuICogQHBhcmFtIHtCb29sZWFufSBbaXNHRF0gSWYgY29tZXMgZnJvbSBHZXN0dXJlRGV0ZWN0b3IuIEp1c3QgZm9yIHRlc3RpbmcuXG4gKi9cbnV0aWwuYWRkRXZlbnRMaXN0ZW5lciA9IChlbCwgbmFtZSwgaGFuZGxlciwgb3B0LCBpc0dEKSA9PiB7XG4gIGVsLmFkZEV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlciwgdXRpbC5nbG9iYWxzLnN1cHBvcnRzUGFzc2l2ZSA/IG9wdCA6IChvcHQgfHwge30pLmNhcHR1cmUpO1xufTtcbnV0aWwucmVtb3ZlRXZlbnRMaXN0ZW5lciA9IChlbCwgbmFtZSwgaGFuZGxlciwgb3B0LCBpc0dEKSA9PiB7XG4gIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIobmFtZSwgaGFuZGxlciwgdXRpbC5nbG9iYWxzLnN1cHBvcnRzUGFzc2l2ZSA/IG9wdCA6IChvcHQgfHwge30pLmNhcHR1cmUpO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZy9GdW5jdGlvbn0gcXVlcnkgZG90IGNsYXNzIG5hbWUgb3Igbm9kZSBuYW1lIG9yIG1hdGNoZXIgZnVuY3Rpb24uXG4gKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAqL1xudXRpbC5wcmVwYXJlUXVlcnkgPSAocXVlcnkpID0+IHtcbiAgcmV0dXJuIHF1ZXJ5IGluc3RhbmNlb2YgRnVuY3Rpb24gPyBxdWVyeSA6IChlbGVtZW50KSA9PiB1dGlsLm1hdGNoKGVsZW1lbnQsIHF1ZXJ5KTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBlXG4gKiBAcGFyYW0ge1N0cmluZy9GdW5jdGlvbn0gcyBDU1MgU2VsZWN0b3IuXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG51dGlsLm1hdGNoID0gKGUsIHMpID0+IChlLm1hdGNoZXMgfHwgZS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHwgZS5tb3pNYXRjaGVzU2VsZWN0b3IgfHwgZS5tc01hdGNoZXNTZWxlY3RvcikuY2FsbChlLCBzKTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nL0Z1bmN0aW9ufSBxdWVyeSBkb3QgY2xhc3MgbmFtZSBvciBub2RlIG5hbWUgb3IgbWF0Y2hlciBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge0hUTUxFbGVtZW50L251bGx9XG4gKi9cbnV0aWwuZmluZENoaWxkID0gKGVsZW1lbnQsIHF1ZXJ5KSA9PiB7XG4gIGNvbnN0IG1hdGNoID0gdXRpbC5wcmVwYXJlUXVlcnkocXVlcnkpO1xuXG4gIC8vIENhdXRpb246IGBlbGVtZW50LmNoaWxkcmVuYCBpcyBgdW5kZWZpbmVkYCBpbiBzb21lIGVudmlyb25tZW50cyBpZiBgZWxlbWVudGAgaXMgYHN2Z2BcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbGVtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBub2RlID0gZWxlbWVudC5jaGlsZE5vZGVzW2ldO1xuICAgIGlmIChub2RlLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkgeyAvLyBwcm9jZXNzIG9ubHkgZWxlbWVudCBub2Rlc1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChtYXRjaChub2RlKSkge1xuICAgICAgcmV0dXJuIG5vZGU7XG4gICAgfVxuICB9XG4gIHJldHVybiBudWxsO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nL0Z1bmN0aW9ufSBxdWVyeSBkb3QgY2xhc3MgbmFtZSBvciBub2RlIG5hbWUgb3IgbWF0Y2hlciBmdW5jdGlvbi5cbiAqIEByZXR1cm4ge0hUTUxFbGVtZW50L251bGx9XG4gKi9cbnV0aWwuZmluZFBhcmVudCA9IChlbGVtZW50LCBxdWVyeSwgdW50aWwpID0+IHtcbiAgY29uc3QgbWF0Y2ggPSB1dGlsLnByZXBhcmVRdWVyeShxdWVyeSk7XG5cbiAgbGV0IHBhcmVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgZm9yICg7Oykge1xuICAgIGlmICghcGFyZW50IHx8IHBhcmVudCA9PT0gZG9jdW1lbnQgfHwgcGFyZW50IGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCB8fCAodW50aWwgJiYgdW50aWwocGFyZW50KSkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH0gZWxzZSBpZiAobWF0Y2gocGFyZW50KSkge1xuICAgICAgcmV0dXJuIHBhcmVudDtcbiAgICB9XG4gICAgcGFyZW50ID0gcGFyZW50LnBhcmVudE5vZGU7XG4gIH1cbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG51dGlsLmlzQXR0YWNoZWQgPSBlbGVtZW50ID0+IGRvY3VtZW50LmJvZHkuY29udGFpbnMoZWxlbWVudCk7XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gKiBAcmV0dXJuIHtib29sZWFufVxuICovXG51dGlsLmhhc0FueUNvbXBvbmVudEFzUGFyZW50ID0gKGVsZW1lbnQpID0+IHtcbiAgd2hpbGUgKGVsZW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICE9PSBlbGVtZW50KSB7XG4gICAgZWxlbWVudCA9IGVsZW1lbnQucGFyZW50Tm9kZTtcbiAgICBpZiAoZWxlbWVudCAmJiBlbGVtZW50Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkubWF0Y2goLyhvbnMtbmF2aWdhdG9yfG9ucy10YWJiYXJ8b25zLW1vZGFsKS8pKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gZWxlbWVudFxuICogQHJldHVybiB7QXJyYXl9XG4gKi9cbnV0aWwuZ2V0QWxsQ2hpbGROb2RlcyA9IChlbGVtZW50KSA9PiB7XG4gIHJldHVybiBbZWxlbWVudF0uY29uY2F0KFxuICAgIC4uLkFycmF5LmZyb20oZWxlbWVudC5jaGlsZHJlbikubWFwKGNoaWxkRWwgPT4ge1xuICAgICAgcmV0dXJuIHV0aWwuZ2V0QWxsQ2hpbGROb2RlcyhjaGlsZEVsKTtcbiAgICB9KVxuICApO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xudXRpbC5pc1BhZ2VDb250cm9sID0gZWxlbWVudCA9PiBlbGVtZW50Lm5vZGVOYW1lLm1hdGNoKC9eb25zLShuYXZpZ2F0b3J8c3BsaXR0ZXJ8dGFiYmFyfHBhZ2UpJC9pKTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7U3RyaW5nfSBhY3Rpb24gdG8gcHJvcGFnYXRlXG4gKi9cbnV0aWwucHJvcGFnYXRlQWN0aW9uID0gKGVsZW1lbnQsIGFjdGlvbikgPT4ge1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVsZW1lbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGNoaWxkID0gZWxlbWVudC5jaGlsZE5vZGVzW2ldO1xuICAgIGlmIChjaGlsZFthY3Rpb25dIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIGNoaWxkW2FjdGlvbl0oKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXRpbC5wcm9wYWdhdGVBY3Rpb24oY2hpbGQsIGFjdGlvbik7XG4gICAgfVxuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHJpbmcgLSBzdHJpbmcgdG8gYmUgY2FtZWxpemVkXG4gKiBAcmV0dXJuIHtTdHJpbmd9IENhbWVsaXplZCBzdHJpbmdcbiAqL1xudXRpbC5jYW1lbGl6ZSA9IHN0cmluZyA9PiBzdHJpbmcudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC8tKFthLXpdKS9nLCAobSwgbCkgPT4gbC50b1VwcGVyQ2FzZSgpKTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nIC0gc3RyaW5nIHRvIGJlIGh5cGhlbmF0ZWRcbiAqIEByZXR1cm4ge1N0cmluZ30gSHlwaGVuYXRlZCBzdHJpbmdcbiAqL1xudXRpbC5oeXBoZW5hdGUgPSBzdHJpbmcgPT4gc3RyaW5nLnJlcGxhY2UoLyhbYS16QS1aXSkoW0EtWl0pL2csICckMS0kMicpLnRvTG93ZXJDYXNlKCk7XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHNlbGVjdG9yIC0gdGFnIGFuZCBjbGFzcyBvbmx5XG4gKiBAcGFyYW0ge09iamVjdH0gc3R5bGVcbiAqIEBwYXJhbSB7RWxlbWVudH1cbiAqL1xudXRpbC5jcmVhdGUgPSAoc2VsZWN0b3IgPSAnJywgc3R5bGUgPSB7fSkgPT4ge1xuICBjb25zdCBjbGFzc0xpc3QgPSBzZWxlY3Rvci5zcGxpdCgnLicpO1xuICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChjbGFzc0xpc3Quc2hpZnQoKSB8fCAnZGl2Jyk7XG5cbiAgaWYgKGNsYXNzTGlzdC5sZW5ndGgpIHtcbiAgICBlbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzTGlzdC5qb2luKCcgJyk7XG4gIH1cblxuICBzdHlsZXIoZWxlbWVudCwgc3R5bGUpO1xuXG4gIHJldHVybiBlbGVtZW50O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gaHRtbFxuICogQHJldHVybiB7RWxlbWVudH1cbiAqL1xudXRpbC5jcmVhdGVFbGVtZW50ID0gKGh0bWwpID0+IHtcbiAgY29uc3Qgd3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG4gIGlmIChodG1sIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCkge1xuICAgIHdyYXBwZXIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuaW1wb3J0Tm9kZShodG1sLCB0cnVlKSk7XG4gIH0gZWxzZSB7XG4gICAgd3JhcHBlci5pbm5lckhUTUwgPSBodG1sLnRyaW0oKTtcbiAgfVxuXG4gIGlmICh3cmFwcGVyLmNoaWxkcmVuLmxlbmd0aCA+IDEpIHtcbiAgICB1dGlsLnRocm93KCdIVE1MIHRlbXBsYXRlIG11c3QgY29udGFpbiBhIHNpbmdsZSByb290IGVsZW1lbnQnKVxuICB9XG5cbiAgY29uc3QgZWxlbWVudCA9IHdyYXBwZXIuY2hpbGRyZW5bMF07XG4gIHdyYXBwZXIuY2hpbGRyZW5bMF0ucmVtb3ZlKCk7XG4gIHJldHVybiBlbGVtZW50O1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gaHRtbFxuICogQHJldHVybiB7SFRNTEZyYWdtZW50fVxuICovXG51dGlsLmNyZWF0ZUZyYWdtZW50ID0gKGh0bWwpID0+IHtcbiAgY29uc3QgdGVtcGxhdGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZW1wbGF0ZScpO1xuICB0ZW1wbGF0ZS5pbm5lckhUTUwgPSBodG1sO1xuICByZXR1cm4gZG9jdW1lbnQuaW1wb3J0Tm9kZSh0ZW1wbGF0ZS5jb250ZW50LCB0cnVlKTtcbn07XG5cbi8qXG4gKiBAcGFyYW0ge09iamVjdH0gZHN0IERlc3RpbmF0aW9uIG9iamVjdC5cbiAqIEBwYXJhbSB7Li4uT2JqZWN0fSBzcmMgU291cmNlIG9iamVjdChzKS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJlZmVyZW5jZSB0byBgZHN0YC5cbiAqL1xudXRpbC5leHRlbmQgPSAoZHN0LCAuLi5hcmdzKSA9PiB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYXJncy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChhcmdzW2ldKSB7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoYXJnc1tpXSk7XG4gICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGtleXMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgY29uc3Qga2V5ID0ga2V5c1tqXTtcbiAgICAgICAgZHN0W2tleV0gPSBhcmdzW2ldW2tleV07XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRzdDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3R9IGFycmF5TGlrZVxuICogQHJldHVybiB7QXJyYXl9XG4gKi9cbnV0aWwuYXJyYXlGcm9tID0gKGFycmF5TGlrZSkgPT4ge1xuICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGFycmF5TGlrZSk7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfSBqc29uU3RyaW5nXG4gKiBAcGFyYW0ge09iamVjdH0gW2ZhaWxTYWZlXVxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG51dGlsLnBhcnNlSlNPTk9iamVjdFNhZmVseSA9IChqc29uU3RyaW5nLCBmYWlsU2FmZSA9IHt9KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzdWx0ID0gSlNPTi5wYXJzZSgnJyArIGpzb25TdHJpbmcpO1xuICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnb2JqZWN0JyAmJiByZXN1bHQgIT09IG51bGwpIHtcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhaWxTYWZlO1xuICB9XG4gIHJldHVybiBmYWlsU2FmZTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhdGggLSBwYXRoIHN1Y2ggYXMgJ215QXBwLmNvbnRyb2xsZXJzLmRhdGEubG9hZERhdGEnXG4gKiBAcmV0dXJuIHtBbnl9IC0gd2hhdGV2ZXIgaXMgbG9jYXRlZCBhdCB0aGF0IHBhdGhcbiAqL1xudXRpbC5maW5kRnJvbVBhdGggPSAocGF0aCkgPT4ge1xuICBwYXRoID0gcGF0aC5zcGxpdCgnLicpO1xuICB2YXIgZWwgPSB3aW5kb3csIGtleTtcbiAgd2hpbGUgKGtleSA9IHBhdGguc2hpZnQoKSkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbmQtYXNzaWduXG4gICAgZWwgPSBlbFtrZXldO1xuICB9XG4gIHJldHVybiBlbDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGFpbmVyIC0gUGFnZSBvciBwYWdlLWNvbnRhaW5lciB0aGF0IGltcGxlbWVudHMgJ3RvcFBhZ2UnXG4gKiBAcmV0dXJuIHtIVE1MRWxlbWVudHxudWxsfSAtIFZpc2libGUgcGFnZSBlbGVtZW50IG9yIG51bGwgaWYgbm90IGZvdW5kLlxuICovXG51dGlsLmdldFRvcFBhZ2UgPSBjb250YWluZXIgPT4gY29udGFpbmVyICYmIChjb250YWluZXIudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLXBhZ2UnID8gY29udGFpbmVyIDogY29udGFpbmVyLnRvcFBhZ2UpIHx8IG51bGw7XG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29udGFpbmVyIC0gRWxlbWVudCB3aGVyZSB0aGUgc2VhcmNoIGJlZ2luc1xuICogQHJldHVybiB7SFRNTEVsZW1lbnR8bnVsbH0gLSBQYWdlIGVsZW1lbnQgdGhhdCBjb250YWlucyB0aGUgdmlzaWJsZSB0b29sYmFyIG9yIG51bGwuXG4gKi9cbnV0aWwuZmluZFRvb2xiYXJQYWdlID0gY29udGFpbmVyID0+IHtcbiAgY29uc3QgcGFnZSA9IHV0aWwuZ2V0VG9wUGFnZShjb250YWluZXIpO1xuXG4gIGlmIChwYWdlKSB7XG4gICAgaWYgKHBhZ2UuX2NhbkFuaW1hdGVUb29sYmFyKCkpIHtcbiAgICAgIHJldHVybiBwYWdlO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFnZS5fY29udGVudEVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IG5leHRQYWdlID0gdXRpbC5nZXRUb3BQYWdlKHBhZ2UuX2NvbnRlbnRFbGVtZW50LmNoaWxkcmVuW2ldKTtcbiAgICAgIGlmIChuZXh0UGFnZSAmJiAhL29ucy10YWJiYXIvaS50ZXN0KHBhZ2UuX2NvbnRlbnRFbGVtZW50LmNoaWxkcmVuW2ldLnRhZ05hbWUpKSB7XG4gICAgICAgIHJldHVybiB1dGlsLmZpbmRUb29sYmFyUGFnZShuZXh0UGFnZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50TmFtZVxuICogQHBhcmFtIHtPYmplY3R9IFtkZXRhaWxdXG4gKiBAcmV0dXJuIHtDdXN0b21FdmVudH1cbiAqL1xudXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50ID0gKHRhcmdldCwgZXZlbnROYW1lLCBkZXRhaWwgPSB7fSkgPT4ge1xuXG4gIGNvbnN0IGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KGV2ZW50TmFtZSwge1xuICAgIGJ1YmJsZXM6IHRydWUsXG4gICAgY2FuY2VsYWJsZTogdHJ1ZSxcbiAgICBkZXRhaWw6IGRldGFpbFxuICB9KTtcblxuICBPYmplY3Qua2V5cyhkZXRhaWwpLmZvckVhY2goa2V5ID0+IHtcbiAgICBldmVudFtrZXldID0gZGV0YWlsW2tleV07XG4gIH0pO1xuXG4gIHRhcmdldC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcblxuICByZXR1cm4gZXZlbnQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0XG4gKiBAcGFyYW0ge1N0cmluZ30gbW9kaWZpZXJOYW1lXG4gKiBAcmV0dXJuIHtCb29sZWFufVxuICovXG51dGlsLmhhc01vZGlmaWVyID0gKHRhcmdldCwgbW9kaWZpZXJOYW1lKSA9PiB7XG4gIGlmICghdGFyZ2V0Lmhhc0F0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBSZWdFeHAoYChefFxcXFxzKykke21vZGlmaWVyTmFtZX0oJHxcXFxccyspYCwgJ2knKS50ZXN0KHRhcmdldC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykpO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHRhcmdldFxuICogQHBhcmFtIHtTdHJpbmd9IG1vZGlmaWVyTmFtZVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuYXV0b1N0eWxlIE1hcHMgdGhlIG1vZGlmaWVyTmFtZSB0byB0aGUgY29ycmVzcG9uZGluZyBzdHlsZWQgbW9kaWZpZXIuXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5mb3JjZUF1dG9TdHlsZSBJZ25vcmVzIHBsYXRmb3JtIGxpbWl0YXRpb24uXG4gKiBAcmV0dXJuIHtCb29sZWFufSBXaGV0aGVyIGl0IHdhcyBhZGRlZCBvciBub3QuXG4gKi9cbnV0aWwuYWRkTW9kaWZpZXIgPSAodGFyZ2V0LCBtb2RpZmllck5hbWUsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICBpZiAob3B0aW9ucy5hdXRvU3R5bGUpIHtcbiAgICBtb2RpZmllck5hbWUgPSBhdXRvU3R5bGUubWFwTW9kaWZpZXIobW9kaWZpZXJOYW1lLCB0YXJnZXQsIG9wdGlvbnMuZm9yY2VBdXRvU3R5bGUpO1xuICB9XG5cbiAgaWYgKHV0aWwuaGFzTW9kaWZpZXIodGFyZ2V0LCBtb2RpZmllck5hbWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdGFyZ2V0LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCAoKHRhcmdldC5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykgfHwgJycpICsgJyAnICsgbW9kaWZpZXJOYW1lKS50cmltKCkpO1xuICByZXR1cm4gdHJ1ZTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtFbGVtZW50fSB0YXJnZXRcbiAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllck5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zLmF1dG9TdHlsZSBNYXBzIHRoZSBtb2RpZmllck5hbWUgdG8gdGhlIGNvcnJlc3BvbmRpbmcgc3R5bGVkIG1vZGlmaWVyLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuZm9yY2VBdXRvU3R5bGUgSWdub3JlcyBwbGF0Zm9ybSBsaW1pdGF0aW9uLlxuICogQHJldHVybiB7Qm9vbGVhbn0gV2hldGhlciBpdCB3YXMgZm91bmQgb3Igbm90LlxuICovXG51dGlsLnJlbW92ZU1vZGlmaWVyID0gKHRhcmdldCwgbW9kaWZpZXJOYW1lLCBvcHRpb25zID0ge30pID0+IHtcbiAgaWYgKG9wdGlvbnMuYXV0b1N0eWxlKSB7XG4gICAgbW9kaWZpZXJOYW1lID0gYXV0b1N0eWxlLm1hcE1vZGlmaWVyKG1vZGlmaWVyTmFtZSwgdGFyZ2V0LCBvcHRpb25zLmZvcmNlQXV0b1N0eWxlKTtcbiAgfVxuXG4gIGlmICghdGFyZ2V0LmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSB8fCAhdXRpbC5oYXNNb2RpZmllcih0YXJnZXQsIG1vZGlmaWVyTmFtZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBuZXdNb2RpZmllcnMgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdtb2RpZmllcicpLnNwbGl0KC9cXHMrLykuZmlsdGVyKG0gPT4gbSAmJiBtICE9PSBtb2RpZmllck5hbWUpO1xuICBuZXdNb2RpZmllcnMubGVuZ3RoID8gdGFyZ2V0LnNldEF0dHJpYnV0ZSgnbW9kaWZpZXInLCBuZXdNb2RpZmllcnMuam9pbignICcpKSA6IHRhcmdldC5yZW1vdmVBdHRyaWJ1dGUoJ21vZGlmaWVyJyk7XG4gIHJldHVybiB0cnVlO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IHRhcmdldFxuICogQHBhcmFtIHtTdHJpbmd9IG1vZGlmaWVyTmFtZVxuICogQHBhcmFtIHtCb29sZWFufSBvcHRpb25zLmZvcmNlIEZvcmNlcyBtb2RpZmllciB0byBiZSBhZGRlZCBvciByZW1vdmVkLlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMuYXV0b1N0eWxlIE1hcHMgdGhlIG1vZGlmaWVyTmFtZSB0byB0aGUgY29ycmVzcG9uZGluZyBzdHlsZWQgbW9kaWZpZXIuXG4gKiBAcGFyYW0ge0Jvb2xlYW59IG9wdGlvbnMuZm9yY2VBdXRvU3R5bGUgSWdub3JlcyBwbGF0Zm9ybSBsaW1pdGF0aW9uLlxuICogQHJldHVybiB7Qm9vbGVhbn0gV2hldGhlciBpdCB3YXMgZm91bmQgb3Igbm90LlxuICovXG51dGlsLnRvZ2dsZU1vZGlmaWVyID0gKC4uLmFyZ3MpID0+IHtcbiAgY29uc3Qgb3B0aW9ucyA9IGFyZ3MubGVuZ3RoID4gMiA/IGFyZ3NbMl0gOiB7fTtcbiAgY29uc3QgZm9yY2UgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Jvb2xlYW4nID8gb3B0aW9ucyA6IG9wdGlvbnMuZm9yY2U7XG5cbiAgY29uc3QgdG9nZ2xlID0gdHlwZW9mIGZvcmNlID09PSAnYm9vbGVhbicgPyBmb3JjZSA6ICF1dGlsLmhhc01vZGlmaWVyKC4uLmFyZ3MpO1xuICB0b2dnbGUgPyB1dGlsLmFkZE1vZGlmaWVyKC4uLmFyZ3MpIDogdXRpbC5yZW1vdmVNb2RpZmllciguLi5hcmdzKVxufTtcblxuLyoqXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGVsXG4gKiBAcGFyYW0ge1N0cmluZ30gZGVmYXVsdENsYXNzXG4gKiBAcGFyYW0ge09iamVjdH0gc2NoZW1lXG4gKi9cbnV0aWwucmVzdG9yZUNsYXNzID0gKGVsLCBkZWZhdWx0Q2xhc3MsIHNjaGVtZSkgPT4ge1xuICBkZWZhdWx0Q2xhc3Muc3BsaXQoL1xccysvKS5mb3JFYWNoKGMgPT4gYyAhPT0gJycgJiYgIWVsLmNsYXNzTGlzdC5jb250YWlucyhjKSAmJiBlbC5jbGFzc0xpc3QuYWRkKGMpKTtcbiAgZWwuaGFzQXR0cmlidXRlKCdtb2RpZmllcicpICYmIE1vZGlmaWVyVXRpbC5yZWZyZXNoKGVsLCBzY2hlbWUpO1xufVxuXG4vLyBUT0RPOiBGSVhcbnV0aWwudXBkYXRlUGFyZW50UG9zaXRpb24gPSAoZWwpID0+IHtcbiAgaWYgKCFlbC5fcGFyZW50VXBkYXRlZCAmJiBlbC5wYXJlbnRFbGVtZW50KSB7XG4gICAgaWYgKHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsLnBhcmVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoJ3Bvc2l0aW9uJykgPT09ICdzdGF0aWMnKSB7XG4gICAgICBlbC5wYXJlbnRFbGVtZW50LnN0eWxlLnBvc2l0aW9uID0gJ3JlbGF0aXZlJztcbiAgICB9XG4gICAgZWwuX3BhcmVudFVwZGF0ZWQgPSB0cnVlO1xuICB9XG59O1xuXG51dGlsLnRvZ2dsZUF0dHJpYnV0ZSA9IChlbGVtZW50LCBuYW1lLCB2YWx1ZSkgPT4ge1xuICBpZiAodmFsdWUpIHtcbiAgICBlbGVtZW50LnNldEF0dHJpYnV0ZShuYW1lLCB0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJyA/ICcnIDogdmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIGVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKG5hbWUpO1xuICB9XG59O1xuXG51dGlsLmJpbmRMaXN0ZW5lcnMgPSAoZWxlbWVudCwgbGlzdGVuZXJOYW1lcykgPT4ge1xuICBsaXN0ZW5lck5hbWVzLmZvckVhY2gobmFtZSA9PiB7XG4gICAgY29uc3QgYm91bmROYW1lID0gbmFtZS5yZXBsYWNlKC9eX1thLXpdLywgJ19ib3VuZCcgKyBuYW1lWzFdLnRvVXBwZXJDYXNlKCkpO1xuICAgIGVsZW1lbnRbYm91bmROYW1lXSA9IGVsZW1lbnRbYm91bmROYW1lXSB8fCBlbGVtZW50W25hbWVdLmJpbmQoZWxlbWVudCk7XG4gIH0pO1xufTtcblxudXRpbC5lYWNoID0gKG9iaiwgZikgPT4gT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKGtleSA9PiBmKGtleSwgb2JqW2tleV0pKTtcblxuXG4vKipcbiAqIEBwYXJhbSB7RWxlbWVudH0gdGFyZ2V0XG4gKiBAcGFyYW0ge2Jvb2xlYW59IGhhc1JpcHBsZVxuICogQHBhcmFtIHtPYmplY3R9IGF0dHJzXG4gKi9cbnV0aWwudXBkYXRlUmlwcGxlID0gKHRhcmdldCwgaGFzUmlwcGxlLCBhdHRycyA9IHt9KSA9PiB7XG4gIGlmIChoYXNSaXBwbGUgPT09IHVuZGVmaW5lZCkge1xuICAgIGhhc1JpcHBsZSA9IHRhcmdldC5oYXNBdHRyaWJ1dGUoJ3JpcHBsZScpO1xuICB9XG5cbiAgY29uc3QgcmlwcGxlRWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRhcmdldCwgJ29ucy1yaXBwbGUnKTtcblxuICBpZiAoaGFzUmlwcGxlKSB7XG4gICAgaWYgKCFyaXBwbGVFbGVtZW50KSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb25zLXJpcHBsZScpO1xuICAgICAgT2JqZWN0LmtleXMoYXR0cnMpLmZvckVhY2goa2V5ID0+IGVsZW1lbnQuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSkpO1xuICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShlbGVtZW50LCB0YXJnZXQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICB9IGVsc2UgaWYgKHJpcHBsZUVsZW1lbnQpIHtcbiAgICByaXBwbGVFbGVtZW50LnJlbW92ZSgpO1xuICB9XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7U3RyaW5nfVxuICogQHJldHVybiB7T2JqZWN0fVxuICovXG51dGlsLmFuaW1hdGlvbk9wdGlvbnNQYXJzZSA9IGFuaW1hdGlvbk9wdGlvbnNQYXJzZTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IHZhbHVlXG4gKi9cbnV0aWwuaXNJbnRlZ2VyID0gKHZhbHVlKSA9PiB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmXG4gICAgaXNGaW5pdGUodmFsdWUpICYmXG4gICAgTWF0aC5mbG9vcih2YWx1ZSkgPT09IHZhbHVlO1xufTtcblxuLyoqXG4gKiBAcmV0dXJuIHtPYmplY3R9IERlZmVycmVkIHByb21pc2UuXG4gKi9cbnV0aWwuZGVmZXIgPSAoKSA9PiB7XG4gIGNvbnN0IGRlZmVycmVkID0ge307XG4gIGRlZmVycmVkLnByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgZGVmZXJyZWQucmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgZGVmZXJyZWQucmVqZWN0ID0gcmVqZWN0O1xuICB9KTtcbiAgcmV0dXJuIGRlZmVycmVkO1xufTtcblxuLyoqXG4gKiBTaG93IHdhcm5pbmdzIHdoZW4gdGhleSBhcmUgZW5hYmxlZC5cbiAqXG4gKiBAcGFyYW0geyp9IGFyZ3VtZW50cyB0byBjb25zb2xlLndhcm5cbiAqL1xudXRpbC53YXJuID0gKC4uLmFyZ3MpID0+IHtcbiAgaWYgKCFpbnRlcm5hbC5jb25maWcud2FybmluZ3NEaXNhYmxlZCkge1xuICAgIGNvbnNvbGUud2FybihlcnJvclByZWZpeCwgLi4uYXJncyk7XG4gIH1cbn07XG5cbnV0aWwudGhyb3cgPSAobWVzc2FnZSkgPT4ge1xuICB0aHJvdyBuZXcgRXJyb3IoYCR7ZXJyb3JQcmVmaXh9ICR7bWVzc2FnZX1gKTtcbn07XG5cbnV0aWwudGhyb3dBYnN0cmFjdCA9ICgpID0+IHV0aWwudGhyb3coJ0Nhbm5vdCBpbnN0YW50aWF0ZSBhYnN0cmFjdCBjbGFzcycpO1xudXRpbC50aHJvd01lbWJlciA9ICgpID0+IHV0aWwudGhyb3coJ0NsYXNzIG1lbWJlciBtdXN0IGJlIGltcGxlbWVudGVkJyk7XG51dGlsLnRocm93UGFnZUxvYWRlciA9ICgpID0+IHV0aWwudGhyb3coJ0ZpcnN0IHBhcmFtZXRlciBzaG91bGQgYmUgYW4gaW5zdGFuY2Ugb2YgUGFnZUxvYWRlcicpO1xudXRpbC50aHJvd0FuaW1hdG9yID0gKGVsKSA9PiB1dGlsLnRocm93KGBcIkFuaW1hdG9yXCIgcGFyYW0gbXVzdCBpbmhlcml0ICR7ZWx9QW5pbWF0b3JgKTtcblxuXG5jb25zdCBwcmV2ZW50ID0gZSA9PiBlLmNhbmNlbGFibGUgJiYgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4vKipcbiAqIFByZXZlbnQgc2Nyb2xsaW5nIHdoaWxlIGRyYWdpbmcgaG9yaXpvbnRhbGx5IG9uIGlPUy5cbiAqXG4gKiBAcGFyYW0ge2dkfSBHZXN0dXJlRGV0ZWN0b3IgaW5zdGFuY2VcbiAqL1xudXRpbC5pb3NQcmV2ZW50U2Nyb2xsID0gZ2QgPT4ge1xuICBpZiAodXRpbC5nbG9iYWxzLmFjdHVhbE1vYmlsZU9TID09PSAnaW9zJykge1xuICAgIGNvbnN0IGNsZWFuID0gKGUpID0+IHtcbiAgICAgIGdkLm9mZigndG91Y2htb3ZlJywgcHJldmVudCk7XG4gICAgICBnZC5vZmYoJ2RyYWdlbmQnLCBjbGVhbik7XG4gICAgfTtcblxuICAgIGdkLm9uKCd0b3VjaG1vdmUnLCBwcmV2ZW50KTtcbiAgICBnZC5vbignZHJhZ2VuZCcsIGNsZWFuKTtcbiAgfVxufTtcblxuLyoqXG4gKiBQcmV2ZW50cyBzY3JvbGwgaW4gdW5kZXJseWluZyBwYWdlcyBvbiBpT1MuIFNlZSAjMjIyMCAjMjI3NCAjMTk0OVxuICpcbiAqIEBwYXJhbSB7ZWx9IEhUTUxFbGVtZW50IHRoYXQgcHJldmVudHMgdGhlIGV2ZW50c1xuICogQHBhcmFtIHthZGR9IEJvb2xlYW4gQWRkIG9yIHJlbW92ZSBldmVudCBsaXN0ZW5lcnNcbiAqL1xudXRpbC5pb3NQYWdlU2Nyb2xsRml4ID0gKGFkZCkgPT4geyAvLyBGdWxsIGZpeCAtIE1heSBjYXVzZSBpc3N1ZXMgd2l0aCBVSVdlYlZpZXcncyBtb21lbnR1bSBzY3JvbGxcbiAgaWYgKHV0aWwuZ2xvYmFscy5hY3R1YWxNb2JpbGVPUyA9PT0gJ2lvcycpIHtcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoJ29ucy1pb3Mtc2Nyb2xsJywgYWRkKTsgLy8gQWxsb3dzIGN1c3RvbSBhbmQgbG9jYWxpemVkIGZpeGVzICgjMjI3NClcbiAgICBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC50b2dnbGUoJ29ucy1pb3Mtc2Nyb2xsLWZpeCcsIGFkZCk7XG4gIH1cbn07XG5cbi8qKlxuICogRGlzdGFuY2UgYW5kIGRlbHRhVGltZSBmaWx0ZXIgc29tZSB3ZWlyZCBkcmFnc3RhcnQgZXZlbnRzIHRoYXQgYXJlIG5vdCBmaXJlZCBpbW1lZGlhdGVseS5cbiAqXG4gKiBAcGFyYW0ge2V2ZW50fVxuICovXG51dGlsLmlzVmFsaWRHZXN0dXJlID0gZXZlbnQgPT4gZXZlbnQuZ2VzdHVyZSAhPT0gdW5kZWZpbmVkICYmIChldmVudC5nZXN0dXJlLmRpc3RhbmNlIDw9IDE1IHx8IGV2ZW50Lmdlc3R1cmUuZGVsdGFUaW1lIDw9IDEwMCk7XG5cbnV0aWwuY2hlY2tNaXNzaW5nSW1wb3J0ID0gKC4uLmVsZW1lbnROYW1lcykgPT4ge1xuICBlbGVtZW50TmFtZXMuZm9yRWFjaChuYW1lID0+IHtcbiAgICBpZiAoIW9uc0VsZW1lbnRzW25hbWVdKSB7XG4gICAgICB1dGlsLnRocm93KGBPbnMke25hbWV9IGlzIHJlcXVpcmVkIGJ1dCB3YXMgbm90IGltcG9ydGVkIChDdXN0b20gRWxlbWVudHMpYCk7XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdXRpbDtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuL3BsYXRmb3JtJztcbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5cbmNvbnN0IGVycm9yID0gbWVzc2FnZSA9PiB1dGlsLnRocm93KGBJbiBQYWdlQXR0cmlidXRlRXhwcmVzc2lvbjogJHttZXNzYWdlfWApO1xuXG5jb25zdCBwYWdlQXR0cmlidXRlRXhwcmVzc2lvbiA9IHtcbiAgX3ZhcmlhYmxlczoge30sXG5cbiAgLyoqXG4gICAqIERlZmluZSBhIHZhcmlhYmxlLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBOYW1lIG9mIHRoZSB2YXJpYWJsZVxuICAgKiBAcGFyYW0ge1N0cmluZ3xGdW5jdGlvbn0gdmFsdWUgVmFsdWUgb2YgdGhlIHZhcmlhYmxlLiBDYW4gYmUgYSBzdHJpbmcgb3IgYSBmdW5jdGlvbi4gVGhlIGZ1bmN0aW9uIG11c3QgcmV0dXJuIGEgc3RyaW5nLlxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IG92ZXJ3cml0ZSBJZiB0aGlzIHZhbHVlIGlzIGZhbHNlLCBhbiBlcnJvciB3aWxsIGJlIHRocm93biB3aGVuIHRyeWluZyB0byBkZWZpbmUgYSB2YXJpYWJsZSB0aGF0IGhhcyBhbHJlYWR5IGJlZW4gZGVmaW5lZC5cbiAgICovXG4gIGRlZmluZVZhcmlhYmxlOiBmdW5jdGlvbihuYW1lLCB2YWx1ZSwgb3ZlcndyaXRlPWZhbHNlKSB7XG4gICAgaWYgKHR5cGVvZiBuYW1lICE9PSAnc3RyaW5nJykge1xuICAgICAgZXJyb3IoJ1ZhcmlhYmxlIG5hbWUgbXVzdCBiZSBhIHN0cmluZycpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnICYmIHR5cGVvZiB2YWx1ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZXJyb3IoJ1ZhcmlhYmxlIHZhbHVlIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBmdW5jdGlvbicpO1xuICAgIH1cbiAgICBlbHNlIGlmICh0aGlzLl92YXJpYWJsZXMuaGFzT3duUHJvcGVydHkobmFtZSkgJiYgIW92ZXJ3cml0ZSkge1xuICAgICAgZXJyb3IoYFwiJHtuYW1lfVwiIGlzIGFscmVhZHkgZGVmaW5lZGApO1xuICAgIH1cbiAgICB0aGlzLl92YXJpYWJsZXNbbmFtZV0gPSB2YWx1ZTtcbiAgfSxcblxuICAvKipcbiAgICogR2V0IGEgdmFyaWFibGUuXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lIE5hbWUgb2YgdGhlIHZhcmlhYmxlLlxuICAgKiBAcmV0dXJuIHtTdHJpbmd8RnVuY3Rpb258bnVsbH1cbiAgICovXG4gIGdldFZhcmlhYmxlOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgaWYgKCF0aGlzLl92YXJpYWJsZXMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLl92YXJpYWJsZXNbbmFtZV07XG4gIH0sXG5cbiAgLyoqXG4gICAqIFJlbW92ZSBhIHZhcmlhYmxlLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBOYW1lIG9mIHRoZSB2YXJhaWJsZS5cbiAgICovXG4gIHJlbW92ZVZhcmlhYmxlOiBmdW5jdGlvbihuYW1lKSB7XG4gICAgZGVsZXRlIHRoaXMuX3ZhcmlhYmxlc1tuYW1lXTtcbiAgfSxcblxuICAvKipcbiAgICogR2V0IGFsbCB2YXJpYWJsZXMuXG4gICAqXG4gICAqIEByZXR1cm4ge09iamVjdH1cbiAgICovXG4gIGdldEFsbFZhcmlhYmxlczogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3ZhcmlhYmxlcztcbiAgfSxcbiAgX3BhcnNlUGFydDogZnVuY3Rpb24ocGFydCkge1xuICAgIGxldCBjLFxuICAgICAgaW5JbnRlcnBvbGF0aW9uID0gZmFsc2UsXG4gICAgICBjdXJyZW50SW5kZXggPSAwO1xuXG4gICAgY29uc3QgdG9rZW5zID0gW107XG5cbiAgICBpZiAocGFydC5sZW5ndGggPT09IDApIHtcbiAgICAgIGVycm9yKCdVbmFibGUgdG8gcGFyc2UgZW1wdHkgc3RyaW5nJyk7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXJ0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICBjID0gcGFydC5jaGFyQXQoaSk7XG5cbiAgICAgIGlmIChjID09PSAnJCcgJiYgcGFydC5jaGFyQXQoaSArIDEpID09PSAneycpIHtcbiAgICAgICAgaWYgKGluSW50ZXJwb2xhdGlvbikge1xuICAgICAgICAgIGVycm9yKCdOZXN0ZWQgaW50ZXJwb2xhdGlvbiBub3Qgc3VwcG9ydGVkJyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0b2tlbiA9IHBhcnQuc3Vic3RyaW5nKGN1cnJlbnRJbmRleCwgaSk7XG4gICAgICAgIGlmICh0b2tlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdG9rZW5zLnB1c2gocGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpKSk7XG4gICAgICAgIH1cblxuICAgICAgICBjdXJyZW50SW5kZXggPSBpO1xuICAgICAgICBpbkludGVycG9sYXRpb24gPSB0cnVlO1xuICAgICAgfVxuICAgICAgZWxzZSBpZiAoYyA9PT0gJ30nKSB7XG4gICAgICAgIGlmICghaW5JbnRlcnBvbGF0aW9uKSB7XG4gICAgICAgICAgZXJyb3IoJ30gbXVzdCBiZSBwcmVjZWVkZWQgYnkgJHsnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRva2VuID0gcGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpICsgMSk7XG4gICAgICAgIGlmICh0b2tlbi5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgdG9rZW5zLnB1c2gocGFydC5zdWJzdHJpbmcoY3VycmVudEluZGV4LCBpICsgMSkpO1xuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudEluZGV4ID0gaSArIDE7XG4gICAgICAgIGluSW50ZXJwb2xhdGlvbiA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChpbkludGVycG9sYXRpb24pIHtcbiAgICAgIGVycm9yKCdVbnRlcm1pbmF0ZWQgaW50ZXJwb2xhdGlvbicpO1xuICAgIH1cblxuICAgIHRva2Vucy5wdXNoKHBhcnQuc3Vic3RyaW5nKGN1cnJlbnRJbmRleCwgcGFydC5sZW5ndGgpKTtcblxuICAgIHJldHVybiB0b2tlbnM7XG4gIH0sXG4gIF9yZXBsYWNlVG9rZW46IGZ1bmN0aW9uKHRva2VuKSB7XG4gICAgY29uc3QgcmUgPSAvXlxcJHsoLio/KX0kLyxcbiAgICAgIG1hdGNoID0gdG9rZW4ubWF0Y2gocmUpO1xuXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICBjb25zdCBuYW1lID0gbWF0Y2hbMV0udHJpbSgpO1xuICAgICAgY29uc3QgdmFyaWFibGUgPSB0aGlzLmdldFZhcmlhYmxlKG5hbWUpO1xuXG4gICAgICBpZiAodmFyaWFibGUgPT09IG51bGwpIHtcbiAgICAgICAgZXJyb3IoYFZhcmlhYmxlIFwiJHtuYW1lfVwiIGRvZXMgbm90IGV4aXN0YCk7XG4gICAgICB9XG4gICAgICBlbHNlIGlmICh0eXBlb2YgdmFyaWFibGUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB2YXJpYWJsZTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBydiA9IHZhcmlhYmxlKCk7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBydiAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgICBlcnJvcignTXVzdCByZXR1cm4gYSBzdHJpbmcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBydjtcbiAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICByZXR1cm4gdG9rZW47XG4gICAgfVxuICB9LFxuICBfcmVwbGFjZVRva2VuczogZnVuY3Rpb24odG9rZW5zKSB7XG4gICAgcmV0dXJuIHRva2Vucy5tYXAodGhpcy5fcmVwbGFjZVRva2VuLmJpbmQodGhpcykpO1xuICB9LFxuICBfcGFyc2VFeHByZXNzaW9uOiBmdW5jdGlvbihleHByZXNzaW9uKSB7XG4gICAgcmV0dXJuIGV4cHJlc3Npb24uc3BsaXQoJywnKVxuICAgICAgLm1hcChcbiAgICAgICAgZnVuY3Rpb24ocGFydCkge1xuICAgICAgICAgIHJldHVybiBwYXJ0LnRyaW0oKTtcbiAgICAgICAgfVxuICAgICAgKVxuICAgICAgLm1hcCh0aGlzLl9wYXJzZVBhcnQuYmluZCh0aGlzKSlcbiAgICAgIC5tYXAodGhpcy5fcmVwbGFjZVRva2Vucy5iaW5kKHRoaXMpKVxuICAgICAgLm1hcCgocGFydCkgPT4gcGFydC5qb2luKCcnKSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEV2YWx1YXRlIGFuIGV4cHJlc3Npb24uXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBleHByZXNzaW9uIEFuIHBhZ2UgYXR0cmlidXRlIGV4cHJlc3Npb24uXG4gICAqIEByZXR1cm4ge0FycmF5fVxuICAgKi9cbiAgZXZhbHVhdGU6IGZ1bmN0aW9uKGV4cHJlc3Npb24pIHtcbiAgICBpZiAoIWV4cHJlc3Npb24pIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fcGFyc2VFeHByZXNzaW9uKGV4cHJlc3Npb24pO1xuICB9XG59O1xuXG4vLyBEZWZpbmUgZGVmYXVsdCB2YXJpYWJsZXMuXG5wYWdlQXR0cmlidXRlRXhwcmVzc2lvbi5kZWZpbmVWYXJpYWJsZSgnbW9iaWxlT1MnLCBwbGF0Zm9ybS5nZXRNb2JpbGVPUygpKTtcbnBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uLmRlZmluZVZhcmlhYmxlKCdpT1NEZXZpY2UnLCBwbGF0Zm9ybS5nZXRJT1NEZXZpY2UoKSk7XG5wYWdlQXR0cmlidXRlRXhwcmVzc2lvbi5kZWZpbmVWYXJpYWJsZSgncnVudGltZScsICgpID0+IHtcbiAgcmV0dXJuIHBsYXRmb3JtLmlzV2ViVmlldygpID8gJ2NvcmRvdmEnIDogJ2Jyb3dzZXInO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IHBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0nO1xuaW1wb3J0IHBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uIGZyb20gJy4uL3BhZ2UtYXR0cmlidXRlLWV4cHJlc3Npb24nO1xuXG5jb25zdCBpbnRlcm5hbCA9IHt9O1xuXG5pbnRlcm5hbC5jb25maWcgPSB7XG4gIGF1dG9TdGF0dXNCYXJGaWxsOiB0cnVlLFxuICBhbmltYXRpb25zRGlzYWJsZWQ6IGZhbHNlLFxuICB3YXJuaW5nc0Rpc2FibGVkOiBmYWxzZVxufTtcblxuaW50ZXJuYWwubnVsbEVsZW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cbi8qKlxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqL1xuaW50ZXJuYWwuaXNFbmFibGVkQXV0b1N0YXR1c0JhckZpbGwgPSAoKSA9PiB7XG4gIHJldHVybiAhIWludGVybmFsLmNvbmZpZy5hdXRvU3RhdHVzQmFyRmlsbDtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IGh0bWxcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqL1xuaW50ZXJuYWwubm9ybWFsaXplUGFnZUhUTUwgPSBodG1sID0+ICgnJyArIGh0bWwpLnRyaW0oKTtcblxuaW50ZXJuYWwud2FpdERPTUNvbnRlbnRMb2FkZWQgPSBjYWxsYmFjayA9PiB7XG4gIGlmICh3aW5kb3cuZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnIHx8IHdpbmRvdy5kb2N1bWVudC5yZWFkeVN0YXRlID09ICd1bmluaXRpYWxpemVkJykge1xuICAgIGNvbnN0IHdyYXBwZWRDYWxsYmFjayA9ICgpID0+IHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIHdyYXBwZWRDYWxsYmFjayk7XG4gICAgfTtcbiAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIHdyYXBwZWRDYWxsYmFjayk7XG4gIH0gZWxzZSB7XG4gICAgc2V0SW1tZWRpYXRlKGNhbGxiYWNrKTtcbiAgfVxufTtcblxuaW50ZXJuYWwuYXV0b1N0YXR1c0JhckZpbGwgPSBhY3Rpb24gPT4ge1xuICBjb25zdCBvblJlYWR5ID0gKCkgPT4ge1xuICAgIGlmIChpbnRlcm5hbC5zaG91bGRGaWxsU3RhdHVzQmFyKCkpIHtcbiAgICAgIGFjdGlvbigpO1xuICAgIH1cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIG9uUmVhZHkpO1xuICB9O1xuXG4gIGlmICh0eXBlb2YgZGV2aWNlID09PSAnb2JqZWN0Jykge1xuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5Jywgb25SZWFkeSk7XG4gIH0gZWxzZSBpZiAoWydjb21wbGV0ZScsICdpbnRlcmFjdGl2ZSddLmluZGV4T2YoZG9jdW1lbnQucmVhZHlTdGF0ZSkgPT09IC0xKSB7XG4gICAgaW50ZXJuYWwud2FpdERPTUNvbnRlbnRMb2FkZWQob25SZWFkeSk7XG4gIH0gZWxzZSB7XG4gICAgb25SZWFkeSgpO1xuICB9XG59O1xuXG5pbnRlcm5hbC5zaG91bGRGaWxsU3RhdHVzQmFyID0gKCkgPT5cbiAgaW50ZXJuYWwuaXNFbmFibGVkQXV0b1N0YXR1c0JhckZpbGwoKSAmJiAocGxhdGZvcm0uaXNXZWJWaWV3KCkgJiYgKHBsYXRmb3JtLmlzSU9TN2Fib3ZlKCkgfHwgcGxhdGZvcm0uaXNJUGFkT1MoKSlcbiAgICAmJiAhcGxhdGZvcm0uaXNJUGhvbmVYKCkgfHwgZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKCcub25zLXN0YXR1cy1iYXItbW9jay5pb3MnKSk7XG5cbmludGVybmFsLnRlbXBsYXRlU3RvcmUgPSB7XG4gIF9zdG9yYWdlOiB7fSxcblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IGtleVxuICAgKiBAcmV0dXJuIHtTdHJpbmcvbnVsbH0gdGVtcGxhdGVcbiAgICovXG4gIGdldChrZXkpIHtcbiAgICByZXR1cm4gaW50ZXJuYWwudGVtcGxhdGVTdG9yZS5fc3RvcmFnZVtrZXldIHx8IG51bGw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBrZXlcbiAgICogQHBhcmFtIHtTdHJpbmd9IHRlbXBsYXRlXG4gICAqL1xuICBzZXQoa2V5LCB0ZW1wbGF0ZSkge1xuICAgIGludGVybmFsLnRlbXBsYXRlU3RvcmUuX3N0b3JhZ2Vba2V5XSA9IHRlbXBsYXRlO1xuICB9XG59O1xuXG53aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignX3RlbXBsYXRlbG9hZGVkJywgZnVuY3Rpb24oZSkge1xuICBpZiAoZS50YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy10ZW1wbGF0ZScpIHtcbiAgICBpbnRlcm5hbC50ZW1wbGF0ZVN0b3JlLnNldChlLnRlbXBsYXRlSWQsIGUudGVtcGxhdGUpO1xuICB9XG59LCBmYWxzZSk7XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhZ2VcbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbmludGVybmFsLmdldFRlbXBsYXRlSFRNTEFzeW5jID0gZnVuY3Rpb24ocGFnZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGludGVybmFsLndhaXRET01Db250ZW50TG9hZGVkKCgpID0+IHtcbiAgICAgIGNvbnN0IGNhY2hlID0gaW50ZXJuYWwudGVtcGxhdGVTdG9yZS5nZXQocGFnZSk7XG4gICAgICBpZiAoY2FjaGUpIHtcbiAgICAgICAgaWYgKGNhY2hlIGluc3RhbmNlb2YgRG9jdW1lbnRGcmFnbWVudCkge1xuICAgICAgICAgIHJldHVybiByZXNvbHZlKGNhY2hlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGh0bWwgPSB0eXBlb2YgY2FjaGUgPT09ICdzdHJpbmcnID8gY2FjaGUgOiBjYWNoZVsxXTtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoaW50ZXJuYWwubm9ybWFsaXplUGFnZUhUTUwoaHRtbCkpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCBsb2NhbCA9IHdpbmRvdy5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYWdlKTtcbiAgICAgIGlmIChsb2NhbCkge1xuICAgICAgICBjb25zdCBodG1sID0gbG9jYWwudGV4dENvbnRlbnQgfHwgbG9jYWwuY29udGVudDtcbiAgICAgICAgcmV0dXJuIHJlc29sdmUoaHRtbCk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgeGhyLm9wZW4oJ0dFVCcsIHBhZ2UsIHRydWUpO1xuICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zdCBodG1sID0geGhyLnJlc3BvbnNlVGV4dDtcbiAgICAgICAgaWYgKHhoci5zdGF0dXMgPj0gNDAwICYmIHhoci5zdGF0dXMgPCA2MDApIHtcbiAgICAgICAgICByZWplY3QoaHRtbCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgLy8gUmVmcmVzaCBzY3JpcHQgdGFnc1xuICAgICAgICAgIGNvbnN0IGZyYWdtZW50ID0gdXRpbC5jcmVhdGVGcmFnbWVudChodG1sKTtcbiAgICAgICAgICB1dGlsLmFycmF5RnJvbShmcmFnbWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzY3JpcHQnKSkuZm9yRWFjaChlbCA9PiB7XG4gICAgICAgICAgICBjb25zdCBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgICAgICAgIHNjcmlwdC50eXBlID0gZWwudHlwZSB8fCAndGV4dC9qYXZhc2NyaXB0JztcbiAgICAgICAgICAgIHNjcmlwdC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShlbC50ZXh0IHx8IGVsLnRleHRDb250ZW50IHx8IGVsLmlubmVySFRNTCkpO1xuICAgICAgICAgICAgZWwucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoc2NyaXB0LCBlbCk7XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpbnRlcm5hbC50ZW1wbGF0ZVN0b3JlLnNldChwYWdlLCBmcmFnbWVudCk7XG4gICAgICAgICAgcmVzb2x2ZShmcmFnbWVudCk7XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB4aHIub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB1dGlsLnRocm93KGBQYWdlIHRlbXBsYXRlIG5vdCBmb3VuZDogJHtwYWdlfWApO1xuICAgICAgfTtcbiAgICAgIHhoci5zZW5kKG51bGwpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbi8qKlxuICogQHBhcmFtIHtTdHJpbmd9IHBhZ2VcbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbmludGVybmFsLmdldFBhZ2VIVE1MQXN5bmMgPSBmdW5jdGlvbihwYWdlKSB7XG4gIGNvbnN0IHBhZ2VzID0gcGFnZUF0dHJpYnV0ZUV4cHJlc3Npb24uZXZhbHVhdGUocGFnZSk7XG5cbiAgY29uc3QgZ2V0UGFnZSA9IChwYWdlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBwYWdlICE9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdNdXN0IHNwZWNpZnkgYSBwYWdlLicpO1xuICAgIH1cblxuICAgIHJldHVybiBpbnRlcm5hbC5nZXRUZW1wbGF0ZUhUTUxBc3luYyhwYWdlKVxuICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgIGlmIChwYWdlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGdldFBhZ2UocGFnZXMuc2hpZnQoKSk7XG4gICAgICB9KTtcbiAgfTtcblxuICByZXR1cm4gZ2V0UGFnZShwYWdlcy5zaGlmdCgpKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGludGVybmFsO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vaW50ZXJuYWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbmltYXRvckZhY3Rvcnkge1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0c1xuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0cy5hbmltYXRvcnMgVGhlIGRpY3Rpb25hcnkgZm9yIGFuaW1hdG9yIGNsYXNzZXNcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gb3B0cy5iYXNlQ2xhc3MgVGhlIGJhc2UgY2xhc3Mgb2YgYW5pbWF0b3JzXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0cy5iYXNlQ2xhc3NOYW1lXSBUaGUgbmFtZSBvZiB0aGUgYmFzZSBjbGFzcyBvZiBhbmltYXRvcnNcbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRzLmRlZmF1bHRBbmltYXRpb25dIFRoZSBkZWZhdWx0IGFuaW1hdGlvbiBuYW1lXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0cy5kZWZhdWx0QW5pbWF0aW9uT3B0aW9uc10gVGhlIGRlZmF1bHQgYW5pbWF0aW9uIG9wdGlvbnNcbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICB0aGlzLl9hbmltYXRvcnMgPSBvcHRzLmFuaW1hdG9ycztcbiAgICB0aGlzLl9iYXNlQ2xhc3MgPSBvcHRzLmJhc2VDbGFzcztcbiAgICB0aGlzLl9iYXNlQ2xhc3NOYW1lID0gb3B0cy5iYXNlQ2xhc3NOYW1lIHx8IG9wdHMuYmFzZUNsYXNzLm5hbWU7XG4gICAgdGhpcy5fYW5pbWF0aW9uID0gb3B0cy5kZWZhdWx0QW5pbWF0aW9uIHx8ICdkZWZhdWx0JztcbiAgICB0aGlzLl9hbmltYXRpb25PcHRpb25zID0gb3B0cy5kZWZhdWx0QW5pbWF0aW9uT3B0aW9ucyB8fCB7fTtcblxuICAgIGlmICghdGhpcy5fYW5pbWF0b3JzW3RoaXMuX2FuaW1hdGlvbl0pIHtcbiAgICAgIHV0aWwudGhyb3coJ05vIHN1Y2ggYW5pbWF0aW9uOiAnICsgdGhpcy5fYW5pbWF0aW9uKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IGpzb25TdHJpbmdcbiAgICogQHJldHVybiB7T2JqZWN0L251bGx9XG4gICAqL1xuICBzdGF0aWMgcGFyc2VBbmltYXRpb25PcHRpb25zU3RyaW5nKGpzb25TdHJpbmcpIHtcbiAgICB0cnkge1xuICAgICAgaWYgKHR5cGVvZiBqc29uU3RyaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB1dGlsLmFuaW1hdGlvbk9wdGlvbnNQYXJzZShqc29uU3RyaW5nKTtcbiAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdvYmplY3QnICYmIHJlc3VsdCAhPT0gbnVsbCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignXCJhbmltYXRpb24tb3B0aW9uc1wiIGF0dHJpYnV0ZSBtdXN0IGJlIGEgSlNPTiBvYmplY3Qgc3RyaW5nOiAnICsganNvblN0cmluZyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiB7fTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdcImFuaW1hdGlvbi1vcHRpb25zXCIgYXR0cmlidXRlIG11c3QgYmUgYSBKU09OIG9iamVjdCBzdHJpbmc6ICcgKyBqc29uU3RyaW5nKTtcbiAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICovXG4gIHNldEFuaW1hdGlvbk9wdGlvbnMob3B0aW9ucykge1xuICAgIHRoaXMuX2FuaW1hdGlvbk9wdGlvbnMgPSBvcHRpb25zO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dIFRoZSBhbmltYXRpb24gbmFtZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc10gVGhlIGFuaW1hdGlvbiBvcHRpb25zXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkZWZhdWx0QW5pbWF0b3IgVGhlIGRlZmF1bHQgYW5pbWF0b3IgaW5zdGFuY2VcbiAgICogQHJldHVybiB7T2JqZWN0fSBBbiBhbmltYXRvciBpbnN0YW5jZVxuICAgKi9cbiAgbmV3QW5pbWF0b3Iob3B0aW9ucyA9IHt9LCBkZWZhdWx0QW5pbWF0b3IpIHtcblxuICAgIGxldCBhbmltYXRvciA9IG51bGw7XG5cbiAgICBpZiAob3B0aW9ucy5hbmltYXRpb24gaW5zdGFuY2VvZiB0aGlzLl9iYXNlQ2xhc3MpIHtcbiAgICAgIHJldHVybiBvcHRpb25zLmFuaW1hdGlvbjtcbiAgICB9XG5cbiAgICBsZXQgQW5pbWF0b3IgPSBudWxsO1xuXG4gICAgaWYgKHR5cGVvZiBvcHRpb25zLmFuaW1hdGlvbiA9PT0gJ3N0cmluZycpIHtcbiAgICAgIEFuaW1hdG9yID0gdGhpcy5fYW5pbWF0b3JzW29wdGlvbnMuYW5pbWF0aW9uXTtcbiAgICB9XG5cbiAgICBpZiAoIUFuaW1hdG9yICYmIGRlZmF1bHRBbmltYXRvcikge1xuICAgICAgYW5pbWF0b3IgPSBkZWZhdWx0QW5pbWF0b3I7XG4gICAgfSBlbHNlIHtcbiAgICAgIEFuaW1hdG9yID0gQW5pbWF0b3IgfHwgdGhpcy5fYW5pbWF0b3JzW3RoaXMuX2FuaW1hdGlvbl07XG5cbiAgICAgIGNvbnN0IGFuaW1hdGlvbk9wdHMgPSB1dGlsLmV4dGVuZChcbiAgICAgICAge30sXG4gICAgICAgIHRoaXMuX2FuaW1hdGlvbk9wdGlvbnMsXG4gICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fSxcbiAgICAgICAgaW50ZXJuYWwuY29uZmlnLmFuaW1hdGlvbnNEaXNhYmxlZCA/IHtkdXJhdGlvbjogMCwgZGVsYXk6IDB9IDoge31cbiAgICAgICk7XG5cbiAgICAgIGFuaW1hdG9yID0gbmV3IEFuaW1hdG9yKGFuaW1hdGlvbk9wdHMpO1xuXG4gICAgICBpZiAodHlwZW9mIGFuaW1hdG9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGFuaW1hdG9yID0gbmV3IGFuaW1hdG9yKGFuaW1hdGlvbk9wdHMpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5ldy1jYXBcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIShhbmltYXRvciBpbnN0YW5jZW9mIHRoaXMuX2Jhc2VDbGFzcykpIHtcbiAgICAgIHV0aWwudGhyb3coYFwiYW5pbWF0b3JcIiBpcyBub3QgYW4gaW5zdGFuY2Ugb2YgJHt0aGlzLl9iYXNlQ2xhc3NOYW1lfWApO1xuICAgIH1cblxuICAgIHJldHVybiBhbmltYXRvcjtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtJztcblxuY29uc3QgdXRpbCA9IHtcbiAgX3JlYWR5OiBmYWxzZSxcblxuICBfZG9tQ29udGVudExvYWRlZDogZmFsc2UsXG5cbiAgX29uRE9NQ29udGVudExvYWRlZDogKCkgPT4ge1xuICAgIHV0aWwuX2RvbUNvbnRlbnRMb2FkZWQgPSB0cnVlO1xuXG4gICAgaWYgKHBsYXRmb3JtLmlzV2ViVmlldygpKSB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlcmVhZHknLCAoKSA9PiB7XG4gICAgICAgIHV0aWwuX3JlYWR5ID0gdHJ1ZTtcbiAgICAgIH0sIGZhbHNlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXRpbC5fcmVhZHkgPSB0cnVlO1xuICAgIH1cbiAgfSxcblxuICBhZGRCYWNrQnV0dG9uTGlzdGVuZXI6IGZ1bmN0aW9uKGZuKSB7XG4gICAgaWYgKCF0aGlzLl9kb21Db250ZW50TG9hZGVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgbWV0aG9kIGlzIGF2YWlsYWJsZSBhZnRlciBET01Db250ZW50TG9hZGVkJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX3JlYWR5KSB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmFja2J1dHRvbicsIGZuLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIGZ1bmN0aW9uKCkge1xuICAgICAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYmFja2J1dHRvbicsIGZuLCBmYWxzZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgcmVtb3ZlQmFja0J1dHRvbkxpc3RlbmVyOiBmdW5jdGlvbihmbikge1xuICAgIGlmICghdGhpcy5fZG9tQ29udGVudExvYWRlZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGlzIG1ldGhvZCBpcyBhdmFpbGFibGUgYWZ0ZXIgRE9NQ29udGVudExvYWRlZCcpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9yZWFkeSkge1xuICAgICAgd2luZG93LmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JhY2tidXR0b24nLCBmbiwgZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignZGV2aWNlcmVhZHknLCBmdW5jdGlvbigpIHtcbiAgICAgICAgd2luZG93LmRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JhY2tidXR0b24nLCBmbiwgZmFsc2UpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59O1xud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB1dGlsLl9vbkRPTUNvbnRlbnRMb2FkZWQoKSwgZmFsc2UpO1xuXG5jb25zdCBIYW5kbGVyUmVwb3NpdG9yeSA9IHtcbiAgX3N0b3JlOiB7fSxcblxuICBfZ2VuSWQ6ICgoKSA9PiB7XG4gICAgbGV0IGkgPSAwO1xuICAgIHJldHVybiAoKSA9PiBpKys7XG4gIH0pKCksXG5cbiAgc2V0OiBmdW5jdGlvbihlbGVtZW50LCBoYW5kbGVyKSB7XG4gICAgaWYgKGVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkKSB7XG4gICAgICB0aGlzLnJlbW92ZShlbGVtZW50KTtcbiAgICB9XG4gICAgY29uc3QgaWQgPSBlbGVtZW50LmRhdGFzZXQuZGV2aWNlQmFja0J1dHRvbkhhbmRsZXJJZCA9IEhhbmRsZXJSZXBvc2l0b3J5Ll9nZW5JZCgpO1xuICAgIHRoaXMuX3N0b3JlW2lkXSA9IGhhbmRsZXI7XG4gIH0sXG5cbiAgcmVtb3ZlOiBmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgaWYgKGVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkKSB7XG4gICAgICBkZWxldGUgdGhpcy5fc3RvcmVbZWxlbWVudC5kYXRhc2V0LmRldmljZUJhY2tCdXR0b25IYW5kbGVySWRdO1xuICAgICAgZGVsZXRlIGVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkO1xuICAgIH1cbiAgfSxcblxuICBnZXQ6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBpZiAoIWVsZW1lbnQuZGF0YXNldC5kZXZpY2VCYWNrQnV0dG9uSGFuZGxlcklkKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGNvbnN0IGlkID0gZWxlbWVudC5kYXRhc2V0LmRldmljZUJhY2tCdXR0b25IYW5kbGVySWQ7XG5cbiAgICBpZiAoIXRoaXMuX3N0b3JlW2lkXSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3N0b3JlW2lkXTtcbiAgfSxcblxuICBoYXM6IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICBpZiAoIWVsZW1lbnQuZGF0YXNldCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGlkID0gZWxlbWVudC5kYXRhc2V0LmRldmljZUJhY2tCdXR0b25IYW5kbGVySWQ7XG5cbiAgICByZXR1cm4gISF0aGlzLl9zdG9yZVtpZF07XG4gIH1cbn07XG5cbmNsYXNzIERldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5faXNFbmFibGVkID0gZmFsc2U7XG4gICAgdGhpcy5fYm91bmRDYWxsYmFjayA9IHRoaXMuX2NhbGxiYWNrLmJpbmQodGhpcyk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBFbmFibGUgdG8gaGFuZGxlICdiYWNrYnV0dG9uJyBldmVudHMuXG4gICAqL1xuICBlbmFibGUoKSB7XG4gICAgaWYgKCF0aGlzLl9pc0VuYWJsZWQpIHtcbiAgICAgIHV0aWwuYWRkQmFja0J1dHRvbkxpc3RlbmVyKHRoaXMuX2JvdW5kQ2FsbGJhY2spO1xuICAgICAgdGhpcy5faXNFbmFibGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSB0byBoYW5kbGUgJ2JhY2tidXR0b24nIGV2ZW50cy5cbiAgICovXG4gIGRpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMuX2lzRW5hYmxlZCkge1xuICAgICAgdXRpbC5yZW1vdmVCYWNrQnV0dG9uTGlzdGVuZXIodGhpcy5fYm91bmRDYWxsYmFjayk7XG4gICAgICB0aGlzLl9pc0VuYWJsZWQgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRmlyZSBhICdiYWNrYnV0dG9uJyBldmVudCBtYW51YWxseS5cbiAgICovXG4gIGZpcmVEZXZpY2VCYWNrQnV0dG9uRXZlbnQoKSB7XG4gICAgY29uc3QgZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgnRXZlbnQnKTtcbiAgICBldmVudC5pbml0RXZlbnQoJ2JhY2tidXR0b24nLCB0cnVlLCB0cnVlKTtcbiAgICBkb2N1bWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuXG4gIF9jYWxsYmFjaygpIHtcbiAgICB0aGlzLl9kaXNwYXRjaERldmljZUJhY2tCdXR0b25FdmVudCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIGNyZWF0ZUhhbmRsZXIoZWxlbWVudCwgY2FsbGJhY2spIHtcbiAgICBpZiAoIShlbGVtZW50IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2VsZW1lbnQgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBIVE1MRWxlbWVudCcpO1xuICAgIH1cblxuICAgIGlmICghKGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NhbGxiYWNrIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgRnVuY3Rpb24nKTtcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVyID0ge1xuICAgICAgX2NhbGxiYWNrOiBjYWxsYmFjayxcbiAgICAgIF9lbGVtZW50OiBlbGVtZW50LFxuXG4gICAgICBkaXNhYmxlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgSGFuZGxlclJlcG9zaXRvcnkucmVtb3ZlKGVsZW1lbnQpO1xuICAgICAgfSxcblxuICAgICAgc2V0TGlzdGVuZXI6IGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgICB9LFxuXG4gICAgICBlbmFibGU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBIYW5kbGVyUmVwb3NpdG9yeS5zZXQoZWxlbWVudCwgdGhpcyk7XG4gICAgICB9LFxuXG4gICAgICBpc0VuYWJsZWQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gSGFuZGxlclJlcG9zaXRvcnkuZ2V0KGVsZW1lbnQpID09PSB0aGlzO1xuICAgICAgfSxcblxuICAgICAgZGVzdHJveTogZnVuY3Rpb24oKSB7XG4gICAgICAgIEhhbmRsZXJSZXBvc2l0b3J5LnJlbW92ZShlbGVtZW50KTtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSB0aGlzLl9lbGVtZW50ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaGFuZGxlci5lbmFibGUoKTtcblxuICAgIHJldHVybiBoYW5kbGVyO1xuICB9XG5cbiAgX2Rpc3BhdGNoRGV2aWNlQmFja0J1dHRvbkV2ZW50KCkge1xuICAgIGNvbnN0IHRyZWUgPSB0aGlzLl9jYXB0dXJlVHJlZSgpO1xuXG4gICAgY29uc3QgZWxlbWVudCA9IHRoaXMuX2ZpbmRIYW5kbGVyTGVhZkVsZW1lbnQodHJlZSk7XG5cbiAgICBsZXQgaGFuZGxlciA9IEhhbmRsZXJSZXBvc2l0b3J5LmdldChlbGVtZW50KTtcbiAgICBoYW5kbGVyLl9jYWxsYmFjayhjcmVhdGVFdmVudChlbGVtZW50KSk7XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVFdmVudChlbGVtZW50KSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBfZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgY2FsbFBhcmVudEhhbmRsZXI6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGxldCBwYXJlbnQgPSB0aGlzLl9lbGVtZW50LnBhcmVudE5vZGU7XG5cbiAgICAgICAgICB3aGlsZSAocGFyZW50KSB7XG4gICAgICAgICAgICBoYW5kbGVyID0gSGFuZGxlclJlcG9zaXRvcnkuZ2V0KHBhcmVudCk7XG4gICAgICAgICAgICBpZiAoaGFuZGxlcikge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlci5fY2FsbGJhY2soY3JlYXRlRXZlbnQocGFyZW50KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYXJlbnQgPSBwYXJlbnQucGFyZW50Tm9kZTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge09iamVjdH1cbiAgICovXG4gIF9jYXB0dXJlVHJlZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlVHJlZShkb2N1bWVudC5ib2R5KTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZVRyZWUoZWxlbWVudCkge1xuICAgICAgY29uc3QgdHJlZSA9IHtcbiAgICAgICAgZWxlbWVudDogZWxlbWVudCxcbiAgICAgICAgY2hpbGRyZW46IEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sIGFycmF5T2YoZWxlbWVudC5jaGlsZHJlbikubWFwKGZ1bmN0aW9uKGNoaWxkRWxlbWVudCkge1xuXG4gICAgICAgICAgaWYgKGNoaWxkRWxlbWVudC5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScgfHwgY2hpbGRFbGVtZW50Ll9pc1Nob3duID09PSBmYWxzZSkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChjaGlsZEVsZW1lbnQuY2hpbGRyZW4ubGVuZ3RoID09PSAwICYmICFIYW5kbGVyUmVwb3NpdG9yeS5oYXMoY2hpbGRFbGVtZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGNyZWF0ZVRyZWUoY2hpbGRFbGVtZW50KTtcblxuICAgICAgICAgIGlmIChyZXN1bHQuY2hpbGRyZW4ubGVuZ3RoID09PSAwICYmICFIYW5kbGVyUmVwb3NpdG9yeS5oYXMocmVzdWx0LmVsZW1lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIFtyZXN1bHRdO1xuICAgICAgICB9KSlcbiAgICAgIH07XG5cbiAgICAgIGlmICghSGFuZGxlclJlcG9zaXRvcnkuaGFzKHRyZWUuZWxlbWVudCkpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0cmVlLmNoaWxkcmVuLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICBjb25zdCBzdWJUcmVlID0gdHJlZS5jaGlsZHJlbltpXTtcbiAgICAgICAgICBpZiAoSGFuZGxlclJlcG9zaXRvcnkuaGFzKHN1YlRyZWUuZWxlbWVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBzdWJUcmVlO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHJlZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBhcnJheU9mKHRhcmdldCkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhcmdldC5sZW5ndGg7IGkrKykge1xuICAgICAgICByZXN1bHQucHVzaCh0YXJnZXRbaV0pO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IHRyZWVcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gICAqL1xuICBfZmluZEhhbmRsZXJMZWFmRWxlbWVudCh0cmVlKSB7XG4gICAgcmV0dXJuIGZpbmQodHJlZSk7XG5cbiAgICBmdW5jdGlvbiBmaW5kKG5vZGUpIHtcbiAgICAgIGlmIChub2RlLmNoaWxkcmVuLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gbm9kZS5lbGVtZW50O1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZS5jaGlsZHJlbi5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGZpbmQobm9kZS5jaGlsZHJlblswXSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBub2RlLmNoaWxkcmVuLm1hcChmdW5jdGlvbihjaGlsZE5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGNoaWxkTm9kZS5lbGVtZW50O1xuICAgICAgfSkucmVkdWNlKGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7XG4gICAgICAgIGlmICghbGVmdCkge1xuICAgICAgICAgIHJldHVybiByaWdodDtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGxlZnRaID0gcGFyc2VJbnQod2luZG93LmdldENvbXB1dGVkU3R5bGUobGVmdCwgJycpLnpJbmRleCwgMTApO1xuICAgICAgICBjb25zdCByaWdodFogPSBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShyaWdodCwgJycpLnpJbmRleCwgMTApO1xuXG4gICAgICAgIGlmICghaXNOYU4obGVmdFopICYmICFpc05hTihyaWdodFopKSB7XG4gICAgICAgICAgcmV0dXJuIGxlZnRaID4gcmlnaHRaID8gbGVmdCA6IHJpZ2h0O1xuICAgICAgICB9XG5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYXB0dXJpbmcgYmFja2J1dHRvbi1oYW5kbGVyIGlzIGZhaWx1cmUuJyk7XG4gICAgICB9LCBudWxsKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgbmV3IERldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyKCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4vaW50ZXJuYWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyIGZyb20gJy4vZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuXG5pbnRlcm5hbC5BbmltYXRvckZhY3RvcnkgPSBBbmltYXRvckZhY3Rvcnk7XG5pbnRlcm5hbC5Nb2RpZmllclV0aWwgPSBNb2RpZmllclV0aWw7XG5pbnRlcm5hbC5kYmJEaXNwYXRjaGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXI7XG5cbmV4cG9ydCBkZWZhdWx0IGludGVybmFsO1xuXG4iLCJpbXBvcnQgJy4vb25zL3BsYXRmb3JtJzsgLy8gVGhpcyBmaWxlIG11c3QgYmUgbG9hZGVkIGJlZm9yZSBDdXN0b20gRWxlbWVudHMgcG9seWZpbGxzLlxuaW1wb3J0ICcuL3BvbHlmaWxscy9pbmRleC5qcyc7XG5pbXBvcnQgJy4vdmVuZG9yL2luZGV4LmpzJztcbmltcG9ydCAnLi9vbnMvbWljcm9ldmVudC5qcyc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9vbnMvaW50ZXJuYWwnO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR1cChvbnMpIHtcbiAgaW50ZXJuYWwud2FpdERPTUNvbnRlbnRMb2FkZWQoZnVuY3Rpb24oKSB7XG4gICAgcmVnaXN0ZXIoJ3NjcmlwdFt0eXBlPVwidGV4dC9vbnMtdGVtcGxhdGVcIl0nKTtcbiAgICByZWdpc3Rlcignc2NyaXB0W3R5cGU9XCJ0ZXh0L3RlbXBsYXRlXCJdJyk7XG4gICAgcmVnaXN0ZXIoJ3NjcmlwdFt0eXBlPVwidGV4dC9uZy10ZW1wbGF0ZVwiXScpO1xuICAgIHJlZ2lzdGVyKCd0ZW1wbGF0ZScpO1xuXG4gICAgZnVuY3Rpb24gcmVnaXN0ZXIocXVlcnkpIHtcbiAgICAgIGNvbnN0IHRlbXBsYXRlcyA9IHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKHF1ZXJ5KTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGVtcGxhdGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGludGVybmFsLnRlbXBsYXRlU3RvcmUuc2V0KHRlbXBsYXRlc1tpXS5nZXRBdHRyaWJ1dGUoJ2lkJyksIHRlbXBsYXRlc1tpXS50ZXh0Q29udGVudCB8fCB0ZW1wbGF0ZXNbaV0uY29udGVudCk7XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBpZiAod2luZG93Ll9vbnNMb2FkZWQpIHtcbiAgICBvbnMuX3V0aWwud2FybignT25zZW4gVUkgaXMgbG9hZGVkIG1vcmUgdGhhbiBvbmNlLicpO1xuICB9XG4gIHdpbmRvdy5fb25zTG9hZGVkID0gdHJ1ZTtcblxuICBvbnMucmVhZHkoZnVuY3Rpb24oKSB7XG4gICAgb25zLmVuYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyKCk7XG4gICAgb25zLl9kZWZhdWx0RGV2aWNlQmFja0J1dHRvbkhhbmRsZXIgPSBvbnMuX2ludGVybmFsLmRiYkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih3aW5kb3cuZG9jdW1lbnQuYm9keSwgKCkgPT4ge1xuICAgICAgaWYgKE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG5hdmlnYXRvciwgJ2FwcCcpKSB7XG4gICAgICAgIG5hdmlnYXRvci5hcHAuZXhpdEFwcCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKCdDb3VsZCBub3QgY2xvc2UgdGhlIGFwcC4gSXMgXFwnY29yZG92YS5qc1xcJyBpbmNsdWRlZD9cXG5FcnJvcjogXFwnd2luZG93Lm5hdmlnYXRvci5hcHBcXCcgaXMgdW5kZWZpbmVkLicpO1xuICAgICAgfVxuICAgIH0pO1xuICAgIGRvY3VtZW50LmJvZHkuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBvbnMuR2VzdHVyZURldGVjdG9yKGRvY3VtZW50LmJvZHksIHsgcGFzc2l2ZTogdHJ1ZSB9KTtcblxuICAgIC8vIFNpbXVsYXRlIERldmljZSBCYWNrIEJ1dHRvbiBvbiBFU0MgcHJlc3NcbiAgICBpZiAoIW9ucy5wbGF0Zm9ybS5pc1dlYlZpZXcoKSkge1xuICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDI3KSB7XG4gICAgICAgICAgb25zLmZpcmVEZXZpY2VCYWNrQnV0dG9uRXZlbnQoKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG5cbiAgICAvLyBzZXR1cCBsb2FkaW5nIHBsYWNlaG9sZGVyXG4gICAgb25zLl9zZXR1cExvYWRpbmdQbGFjZUhvbGRlcnMoKTtcbiAgfSk7XG5cbiAgLy8gdmlld3BvcnQuanNcbiAgVmlld3BvcnQuc2V0dXAoKTtcbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cblxuLyoqXG4gKiBNaW5pbWFsIGFuaW1hdGlvbiBsaWJyYXJ5IGZvciBtYW5hZ2luZyBjc3MgdHJhbnNpdGlvbiBvbiBtb2JpbGUgYnJvd3NlcnMuXG4gKi9cbid1c2Ugc3RyaWN0JztcblxudmFyIFRJTUVPVVRfUkFUSU8gPSAxLjQ7XG5cbnZhciB1dGlsID0ge1xufTtcblxuLy8gY2FwaXRhbGl6ZSBzdHJpbmdcbnV0aWwuY2FwaXRhbGl6ZSA9IGZ1bmN0aW9uKHN0cikge1xuICByZXR1cm4gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpO1xufTtcblxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFyYW1zLnByb3BlcnR5XG4gKiBAcGFyYW0ge0Zsb2F0fSBwYXJhbXMuZHVyYXRpb25cbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXJhbXMudGltaW5nXG4gKi9cbnV0aWwuYnVpbGRUcmFuc2l0aW9uVmFsdWUgPSBmdW5jdGlvbihwYXJhbXMpIHtcbiAgcGFyYW1zLnByb3BlcnR5ID0gcGFyYW1zLnByb3BlcnR5IHx8ICdhbGwnO1xuICBwYXJhbXMuZHVyYXRpb24gPSBwYXJhbXMuZHVyYXRpb24gfHwgMC40O1xuICBwYXJhbXMudGltaW5nID0gcGFyYW1zLnRpbWluZyB8fCAnbGluZWFyJztcblxuICB2YXIgcHJvcHMgPSBwYXJhbXMucHJvcGVydHkuc3BsaXQoLyArLyk7XG5cbiAgcmV0dXJuIHByb3BzLm1hcChmdW5jdGlvbihwcm9wKSB7XG4gICAgcmV0dXJuIHByb3AgKyAnICcgKyBwYXJhbXMuZHVyYXRpb24gKyAncyAnICsgcGFyYW1zLnRpbWluZztcbiAgfSkuam9pbignLCAnKTtcbn07XG5cbi8qKlxuICogQWRkIGFuIGV2ZW50IGhhbmRsZXIgb24gXCJ0cmFuc2l0aW9uZW5kXCIgZXZlbnQuXG4gKi9cbnV0aWwub25jZU9uVHJhbnNpdGlvbkVuZCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gIGlmICghZWxlbWVudCkge1xuICAgIHJldHVybiBmdW5jdGlvbigpIHt9O1xuICB9XG5cbiAgdmFyIGZuID0gZnVuY3Rpb24oZXZlbnQpIHtcbiAgICBpZiAoZWxlbWVudCA9PSBldmVudC50YXJnZXQpIHtcbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG5cbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICB9O1xuXG4gIHZhciByZW1vdmVMaXN0ZW5lcnMgPSBmdW5jdGlvbigpIHtcbiAgICB1dGlsLl90cmFuc2l0aW9uRW5kRXZlbnRzLmZvckVhY2goZnVuY3Rpb24oZXZlbnROYW1lKSB7XG4gICAgICBlbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBmbiwgZmFsc2UpO1xuICAgIH0pO1xuICB9O1xuXG4gIHV0aWwuX3RyYW5zaXRpb25FbmRFdmVudHMuZm9yRWFjaChmdW5jdGlvbihldmVudE5hbWUpIHtcbiAgICBlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBmbiwgZmFsc2UpO1xuICB9KTtcblxuICByZXR1cm4gcmVtb3ZlTGlzdGVuZXJzO1xufTtcblxudXRpbC5fdHJhbnNpdGlvbkVuZEV2ZW50cyA9IChmdW5jdGlvbigpIHtcblxuICBpZiAoJ29udHJhbnNpdGlvbmVuZCcgaW4gd2luZG93KSB7XG4gICAgcmV0dXJuIFsndHJhbnNpdGlvbmVuZCddO1xuICB9XG5cbiAgaWYgKCdvbndlYmtpdHRyYW5zaXRpb25lbmQnIGluIHdpbmRvdykge1xuICAgIHJldHVybiBbJ3dlYmtpdFRyYW5zaXRpb25FbmQnXTtcbiAgfVxuXG4gIGlmICh1dGlsLnZlbmRvclByZWZpeCA9PT0gJ3dlYmtpdCcgfHwgdXRpbC52ZW5kb3JQcmVmaXggPT09ICdvJyB8fCB1dGlsLnZlbmRvclByZWZpeCA9PT0gJ21veicgfHwgdXRpbC52ZW5kb3JQcmVmaXggPT09ICdtcycpIHtcbiAgICByZXR1cm4gW3V0aWwudmVuZG9yUHJlZml4ICsgJ1RyYW5zaXRpb25FbmQnLCAndHJhbnNpdGlvbmVuZCddO1xuICB9XG5cbiAgcmV0dXJuIFtdO1xufSkoKTtcblxudXRpbC5fY3NzUHJvcGVydHlEaWN0ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgc3R5bGVzID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAnJyk7XG4gIHZhciBkaWN0ID0ge307XG4gIHZhciBhID0gJ0EnLmNoYXJDb2RlQXQoMCk7XG4gIHZhciB6ID0gJ3onLmNoYXJDb2RlQXQoMCk7XG5cbiAgdmFyIHVwcGVyID0gZnVuY3Rpb24ocykge1xuICAgIHJldHVybiBzLnN1YnN0cigxKS50b1VwcGVyQ2FzZSgpO1xuICB9O1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cbiAgICB2YXIga2V5ID0gc3R5bGVzW2ldXG4gICAgLnJlcGxhY2UoL15bLV0rLywgJycpXG4gICAgLnJlcGxhY2UoL1stXVthLXpdL2csIHVwcGVyKVxuICAgIC5yZXBsYWNlKC9ebW96LywgJ01veicpO1xuXG4gICAgaWYgKGEgPD0ga2V5LmNoYXJDb2RlQXQoMCkgJiYgeiA+PSBrZXkuY2hhckNvZGVBdCgwKSkge1xuICAgICAgaWYgKGtleSAhPT0gJ2Nzc1RleHQnICYmIGtleSAhPT0gJ3BhcmVudFRleHQnKSB7XG4gICAgICAgIGRpY3Rba2V5XSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRpY3Q7XG59KSgpO1xuXG51dGlsLmhhc0Nzc1Byb3BlcnR5ID0gZnVuY3Rpb24obmFtZSkge1xuICByZXR1cm4gbmFtZSBpbiB1dGlsLl9jc3NQcm9wZXJ0eURpY3Q7XG59O1xuXG4vKipcbiAqIFZlbmRvciBwcmVmaXggZm9yIGNzcyBwcm9wZXJ0eS5cbiAqL1xudXRpbC52ZW5kb3JQcmVmaXggPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBzdHlsZXMgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICcnKSxcbiAgICBwcmUgPSAoQXJyYXkucHJvdG90eXBlLnNsaWNlXG4gICAgICAuY2FsbChzdHlsZXMpXG4gICAgICAuam9pbignJylcbiAgICAgIC5tYXRjaCgvLShtb3p8d2Via2l0fG1zKS0vKSB8fCAoc3R5bGVzLk9MaW5rID09PSAnJyAmJiBbJycsICdvJ10pXG4gICAgKVsxXTtcbiAgICByZXR1cm4gcHJlO1xufSkoKTtcblxudXRpbC5mb3JjZUxheW91dEF0T25jZSA9IGZ1bmN0aW9uKGVsZW1lbnRzLCBjYWxsYmFjaykge1xuICB0aGlzLmJhdGNoSW1tZWRpYXRlKGZ1bmN0aW9uKCkge1xuICAgIGVsZW1lbnRzLmZvckVhY2goZnVuY3Rpb24oZWxlbWVudCkge1xuICAgICAgLy8gZm9yY2UgbGF5b3V0XG4gICAgICBlbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICB9KTtcbiAgICBjYWxsYmFjaygpO1xuICB9KTtcbn07XG5cbnV0aWwuYmF0Y2hJbW1lZGlhdGUgPSAoZnVuY3Rpb24oKSB7XG4gIHZhciBjYWxsYmFja3MgPSBbXTtcblxuICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgc2V0SW1tZWRpYXRlKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29uY3JlYXRlQ2FsbGJhY2tzID0gY2FsbGJhY2tzLnNsaWNlKDApO1xuICAgICAgICBjYWxsYmFja3MgPSBbXTtcbiAgICAgICAgY29uY3JlYXRlQ2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcbn0pKCk7XG5cbnV0aWwuYmF0Y2hBbmltYXRpb25GcmFtZSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIGNhbGxiYWNrcyA9IFtdO1xuXG4gIHZhciByYWYgPSB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgd2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIHdpbmRvdy5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICB3aW5kb3cub1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZSB8fFxuICAgIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgc2V0VGltZW91dChjYWxsYmFjaywgMTAwMCAvIDYwKTtcbiAgfTtcblxuICByZXR1cm4gZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAoY2FsbGJhY2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgcmFmKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgY29uY3JlYXRlQ2FsbGJhY2tzID0gY2FsbGJhY2tzLnNsaWNlKDApO1xuICAgICAgICBjYWxsYmFja3MgPSBbXTtcbiAgICAgICAgY29uY3JlYXRlQ2FsbGJhY2tzLmZvckVhY2goZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGNhbGxiYWNrcy5wdXNoKGNhbGxiYWNrKTtcbiAgfTtcbn0pKCk7XG5cbnV0aWwudHJhbnNpdGlvblByb3BlcnR5TmFtZSA9IChmdW5jdGlvbigpIHtcbiAgaWYgKHV0aWwuaGFzQ3NzUHJvcGVydHkoJ3RyYW5zaXRpb25EdXJhdGlvbicpKSB7XG4gICAgcmV0dXJuICd0cmFuc2l0aW9uJztcbiAgfVxuXG4gIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KHV0aWwudmVuZG9yUHJlZml4ICsgJ1RyYW5zaXRpb25EdXJhdGlvbicpKSB7XG4gICAgcmV0dXJuIHV0aWwudmVuZG9yUHJlZml4ICsgJ1RyYW5zaXRpb24nO1xuICB9XG5cbiAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0YXRlJyk7XG59KSgpO1xuXG5cbi8qKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICovXG52YXIgQW5pbWl0ID0gZnVuY3Rpb24oZWxlbWVudCwgZGVmYXVsdHMpIHtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEFuaW1pdCkpIHtcbiAgICByZXR1cm4gbmV3IEFuaW1pdChlbGVtZW50LCBkZWZhdWx0cyk7XG4gIH1cblxuICBpZiAoZWxlbWVudCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSB7XG4gICAgdGhpcy5lbGVtZW50cyA9IFtlbGVtZW50XTtcbiAgfSBlbHNlIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZWxlbWVudCkgPT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICB0aGlzLmVsZW1lbnRzID0gZWxlbWVudDtcblxuICB9IGVsc2Uge1xuICAgIHRocm93IG5ldyBFcnJvcignRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhbiBhcnJheSBvciBhbiBpbnN0YW5jZSBvZiBIVE1MRWxlbWVudC4nKTtcbiAgfVxuXG4gIHRoaXMuZGVmYXVsdHMgPSBkZWZhdWx0cztcbiAgdGhpcy50cmFuc2l0aW9uUXVldWUgPSBbXTtcbiAgdGhpcy5sYXN0U3R5bGVBdHRyaWJ1dGVEaWN0ID0gW107XG59O1xuXG5BbmltaXQucHJvdG90eXBlID0ge1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkge0FycmF5fVxuICAgKi9cbiAgdHJhbnNpdGlvblF1ZXVlOiB1bmRlZmluZWQsXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB7QXJyYXl9XG4gICAqL1xuICBlbGVtZW50czogdW5kZWZpbmVkLFxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkge09iamVjdH1cbiAgICovXG4gIGRlZmF1bHRzOiB1bmRlZmluZWQsXG5cbiAgLyoqXG4gICAqIFN0YXJ0IGFuaW1hdGlvbiBzZXF1ZW5jZSB3aXRoIHBhc3NlZCBhbmltYXRpb25zLlxuICAgKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcGxheTogZnVuY3Rpb24oY2FsbGJhY2spIHtcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdGhpcy5zdGFydEFuaW1hdGlvbigpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgLyoqXG4gICAqIE1vc3Qgb2YgdGhlIGFuaW1hdGlvbnMgZm9sbG93IHRoaXMgZGVmYXVsdCBwcm9jZXNzLlxuICAgKlxuICAgKiBAcGFyYW0ge2Zyb219IGNzcyBvciBvcHRpb25zIG9iamVjdCBjb250YWluaW5nIGNzc1xuICAgKiBAcGFyYW0ge3RvfSBjc3Mgb3Igb3B0aW9ucyBvYmplY3QgY29udGFpbmluZyBjc3NcbiAgICogQHBhcmFtIHtkZWxheX0gZGVsYXkgdG8gd2FpdFxuICAgKi9cbiAgZGVmYXVsdDogZnVuY3Rpb24oZnJvbSwgdG8sIGRlbGF5KSB7XG4gICAgZnVuY3Rpb24gc3RlcChwYXJhbXMsIGR1cmF0aW9uLCB0aW1pbmcpIHtcbiAgICAgIGlmIChwYXJhbXMuZHVyYXRpb24gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBkdXJhdGlvbiA9IHBhcmFtcy5kdXJhdGlvbjtcbiAgICAgIH1cbiAgICAgIGlmIChwYXJhbXMudGltaW5nICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGltaW5nID0gcGFyYW1zLnRpbWluZztcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY3NzOiBwYXJhbXMuY3NzIHx8IHBhcmFtcyxcbiAgICAgICAgZHVyYXRpb246IGR1cmF0aW9uLFxuICAgICAgICB0aW1pbmc6IHRpbWluZ1xuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5zYXZlU3R5bGUoKVxuICAgICAgLnF1ZXVlKHN0ZXAoZnJvbSwgMCwgdGhpcy5kZWZhdWx0cy50aW1pbmcpKVxuICAgICAgLndhaXQoZGVsYXkgPT09IHVuZGVmaW5lZCA/IHRoaXMuZGVmYXVsdHMuZGVsYXkgOiBkZWxheSlcbiAgICAgIC5xdWV1ZShzdGVwKHRvLCB0aGlzLmRlZmF1bHRzLmR1cmF0aW9uLCB0aGlzLmRlZmF1bHRzLnRpbWluZykpXG4gICAgICAucmVzdG9yZVN0eWxlKCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFF1ZXVlIHRyYW5zaXRpb24gYW5pbWF0aW9ucyBvciBvdGhlciBmdW5jdGlvbi5cbiAgICpcbiAgICogZS5nLiBhbmltaXQoZWx0KS5xdWV1ZSh7Y29sb3I6ICdyZWQnfSlcbiAgICogZS5nLiBhbmltaXQoZWx0KS5xdWV1ZSh7Y29sb3I6ICdyZWQnfSwge2R1cmF0aW9uOiAwLjR9KVxuICAgKiBlLmcuIGFuaW1pdChlbHQpLnF1ZXVlKHtjc3M6IHtjb2xvcjogJ3JlZCd9LCBkdXJhdGlvbjogMC4yfSlcbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R8QW5pbWl0LlRyYW5zaXRpb258RnVuY3Rpb259IHRyYW5zaXRpb25cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKi9cbiAgcXVldWU6IGZ1bmN0aW9uKHRyYW5zaXRpb24sIG9wdGlvbnMpIHtcbiAgICB2YXIgcXVldWUgPSB0aGlzLnRyYW5zaXRpb25RdWV1ZTtcblxuICAgIGlmICh0cmFuc2l0aW9uICYmIG9wdGlvbnMpIHtcbiAgICAgIG9wdGlvbnMuY3NzID0gdHJhbnNpdGlvbjtcbiAgICAgIHRyYW5zaXRpb24gPSBuZXcgQW5pbWl0LlRyYW5zaXRpb24ob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWYgKCEodHJhbnNpdGlvbiBpbnN0YW5jZW9mIEZ1bmN0aW9uIHx8IHRyYW5zaXRpb24gaW5zdGFuY2VvZiBBbmltaXQuVHJhbnNpdGlvbikpIHtcbiAgICAgIGlmICh0cmFuc2l0aW9uLmNzcykge1xuICAgICAgICB0cmFuc2l0aW9uID0gbmV3IEFuaW1pdC5UcmFuc2l0aW9uKHRyYW5zaXRpb24pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdHJhbnNpdGlvbiA9IG5ldyBBbmltaXQuVHJhbnNpdGlvbih7XG4gICAgICAgICAgY3NzOiB0cmFuc2l0aW9uXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0cmFuc2l0aW9uIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHF1ZXVlLnB1c2godHJhbnNpdGlvbik7XG4gICAgfSBlbHNlIGlmICh0cmFuc2l0aW9uIGluc3RhbmNlb2YgQW5pbWl0LlRyYW5zaXRpb24pIHtcbiAgICAgIHF1ZXVlLnB1c2godHJhbnNpdGlvbi5idWlsZCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGFyZ3VtZW50cycpO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBRdWV1ZSB0cmFuc2l0aW9uIGFuaW1hdGlvbnMuXG4gICAqXG4gICAqIEBwYXJhbSB7RmxvYXR9IHNlY29uZHNcbiAgICovXG4gIHdhaXQ6IGZ1bmN0aW9uKHNlY29uZHMpIHtcbiAgICBpZiAoc2Vjb25kcyA+IDApIHtcbiAgICAgIHRoaXMudHJhbnNpdGlvblF1ZXVlLnB1c2goZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICBzZXRUaW1lb3V0KGRvbmUsIDEwMDAgKiBzZWNvbmRzKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIHNhdmVTdHlsZTogZnVuY3Rpb24oKSB7XG5cbiAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgICAgICB2YXIgY3NzID0gdGhpcy5sYXN0U3R5bGVBdHRyaWJ1dGVEaWN0W2luZGV4XSA9IHt9O1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZWxlbWVudC5zdHlsZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNzc1tlbGVtZW50LnN0eWxlW2ldXSA9IGVsZW1lbnQuc3R5bGVbZWxlbWVudC5zdHlsZVtpXV07XG4gICAgICAgIH1cbiAgICAgIH0uYmluZCh0aGlzKSk7XG4gICAgICBkb25lKCk7XG4gICAgfS5iaW5kKHRoaXMpKTtcblxuICAgIHJldHVybiB0aGlzO1xuICB9LFxuXG4gIC8qKlxuICAgKiBSZXN0b3JlIGVsZW1lbnQncyBzdHlsZS5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiBAcGFyYW0ge0Zsb2F0fSBbb3B0aW9ucy5kdXJhdGlvbl1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRpbWluZ11cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRyYW5zaXRpb25dXG4gICAqL1xuICByZXN0b3JlU3R5bGU6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBpZiAob3B0aW9ucy50cmFuc2l0aW9uICYmICFvcHRpb25zLmR1cmF0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1wib3B0aW9ucy5kdXJhdGlvblwiIGlzIHJlcXVpcmVkIHdoZW4gXCJvcHRpb25zLnRyYW5zaXRpb25cIiBpcyBlbmFibGVkLicpO1xuICAgIH1cblxuICAgIHZhciB0cmFuc2l0aW9uTmFtZSA9IHV0aWwudHJhbnNpdGlvblByb3BlcnR5TmFtZTtcblxuICAgIGlmIChvcHRpb25zLnRyYW5zaXRpb24gfHwgKG9wdGlvbnMuZHVyYXRpb24gJiYgb3B0aW9ucy5kdXJhdGlvbiA+IDApKSB7XG4gICAgICB2YXIgdHJhbnNpdGlvblZhbHVlID0gb3B0aW9ucy50cmFuc2l0aW9uIHx8ICgnYWxsICcgKyBvcHRpb25zLmR1cmF0aW9uICsgJ3MgJyArIChvcHRpb25zLnRpbWluZyB8fCAnbGluZWFyJykpO1xuXG4gICAgICB0aGlzLnRyYW5zaXRpb25RdWV1ZS5wdXNoKGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgdmFyIGVsZW1lbnRzID0gdGhpcy5lbGVtZW50cztcbiAgICAgICAgdmFyIHRpbWVvdXRJZDtcblxuICAgICAgICB2YXIgY2xlYXJUcmFuc2l0aW9uID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9ICcnO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGFkZCBcInRyYW5zaXRpb25lbmRcIiBldmVudCBoYW5kbGVyXG4gICAgICAgIHZhciByZW1vdmVMaXN0ZW5lcnMgPSB1dGlsLm9uY2VPblRyYW5zaXRpb25FbmQoZWxlbWVudHNbMF0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgIGNsZWFyVHJhbnNpdGlvbigpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gZm9yIGZhaWwgc2FmZS5cbiAgICAgICAgdGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICByZW1vdmVMaXN0ZW5lcnMoKTtcbiAgICAgICAgICBjbGVhclRyYW5zaXRpb24oKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0sIG9wdGlvbnMuZHVyYXRpb24gKiAxMDAwICogVElNRU9VVF9SQVRJTyk7XG5cbiAgICAgICAgLy8gdHJhbnNpdGlvbiBhbmQgc3R5bGUgc2V0dGluZ3NcbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuXG4gICAgICAgICAgdmFyIGNzcyA9IHNlbGYubGFzdFN0eWxlQXR0cmlidXRlRGljdFtpbmRleF07XG5cbiAgICAgICAgICBpZiAoIWNzcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyZXN0b3JlU3R5bGUoKTogVGhlIHN0eWxlIGlzIG5vdCBzYXZlZC4gSW52b2tlIHNhdmVTdHlsZSgpIGJlZm9yZS4nKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBzZWxmLmxhc3RTdHlsZUF0dHJpYnV0ZURpY3RbaW5kZXhdID0gdW5kZWZpbmVkO1xuXG4gICAgICAgICAgdmFyIG5hbWU7XG4gICAgICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGVsZW1lbnQuc3R5bGUubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICAgICAgICAgIG5hbWUgPSBlbGVtZW50LnN0eWxlW2ldO1xuICAgICAgICAgICAgaWYgKGNzc1tuYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIGNzc1tuYW1lXSA9ICcnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGVsZW1lbnQuc3R5bGVbdHJhbnNpdGlvbk5hbWVdID0gdHJhbnNpdGlvblZhbHVlO1xuXG4gICAgICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgaWYgKGtleSAhPT0gdHJhbnNpdGlvbk5hbWUpIHtcbiAgICAgICAgICAgICAgZWxlbWVudC5zdHlsZVtrZXldID0gY3NzW2tleV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9IHRyYW5zaXRpb25WYWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy50cmFuc2l0aW9uUXVldWUucHVzaChmdW5jdGlvbihkb25lKSB7XG4gICAgICAgIHJlc2V0KCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzO1xuXG4gICAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgICAvLyBDbGVhciB0cmFuc2l0aW9uIGFuaW1hdGlvbiBzZXR0aW5ncy5cbiAgICAgIHNlbGYuZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50LCBpbmRleCkge1xuICAgICAgICBlbGVtZW50LnN0eWxlW3RyYW5zaXRpb25OYW1lXSA9ICdub25lJztcblxuICAgICAgICB2YXIgY3NzID0gc2VsZi5sYXN0U3R5bGVBdHRyaWJ1dGVEaWN0W2luZGV4XTtcblxuICAgICAgICBpZiAoIWNzcykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcigncmVzdG9yZVN0eWxlKCk6IFRoZSBzdHlsZSBpcyBub3Qgc2F2ZWQuIEludm9rZSBzYXZlU3R5bGUoKSBiZWZvcmUuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBzZWxmLmxhc3RTdHlsZUF0dHJpYnV0ZURpY3RbaW5kZXhdID0gdW5kZWZpbmVkO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwLCBuYW1lID0gJyc7IGkgPCBlbGVtZW50LnN0eWxlLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgbmFtZSA9IGVsZW1lbnQuc3R5bGVbaV07XG4gICAgICAgICAgaWYgKHR5cGVvZiBjc3NbZWxlbWVudC5zdHlsZVtpXV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBjc3NbZWxlbWVudC5zdHlsZVtpXV0gPSAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBPYmplY3Qua2V5cyhjc3MpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVtrZXldID0gY3NzW2tleV07XG4gICAgICAgIH0pO1xuXG4gICAgICB9KTtcbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIFN0YXJ0IGFuaW1hdGlvbiBzZXF1ZW5jZS5cbiAgICovXG4gIHN0YXJ0QW5pbWF0aW9uOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9kZXF1ZXVlVHJhbnNpdGlvbigpO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgX2RlcXVldWVUcmFuc2l0aW9uOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgdHJhbnNpdGlvbiA9IHRoaXMudHJhbnNpdGlvblF1ZXVlLnNoaWZ0KCk7XG4gICAgaWYgKHRoaXMuX2N1cnJlbnRUcmFuc2l0aW9uKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0N1cnJlbnQgdHJhbnNpdGlvbiBleGlzdHMuJyk7XG4gICAgfVxuICAgIHRoaXMuX2N1cnJlbnRUcmFuc2l0aW9uID0gdHJhbnNpdGlvbjtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGNhbGxlZCA9IGZhbHNlO1xuXG4gICAgdmFyIGRvbmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghY2FsbGVkKSB7XG4gICAgICAgIGNhbGxlZCA9IHRydWU7XG4gICAgICAgIHNlbGYuX2N1cnJlbnRUcmFuc2l0aW9uID0gdW5kZWZpbmVkO1xuICAgICAgICBzZWxmLl9kZXF1ZXVlVHJhbnNpdGlvbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHN0YXRlOiBUaGlzIGNhbGxiYWNrIGlzIGNhbGxlZCB0d2ljZS4nKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgaWYgKHRyYW5zaXRpb24pIHtcbiAgICAgIHRyYW5zaXRpb24uY2FsbCh0aGlzLCBkb25lKTtcbiAgICB9XG4gIH1cblxufTtcblxuLyoqXG4gKiBAcGFyYW0ge0FuaW1pdH0gYXJndW1lbnRzXG4gKi9cbkFuaW1pdC5ydW5BbGwgPSBmdW5jdGlvbigvKiBhcmd1bWVudHMuLi4gKi8pIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICBhcmd1bWVudHNbaV0ucGxheSgpO1xuICB9XG59O1xuXG5cbi8qKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7RmxvYXR9IFtvcHRpb25zLmR1cmF0aW9uXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnByb3BlcnR5XVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLnRpbWluZ11cbiAqL1xuQW5pbWl0LlRyYW5zaXRpb24gPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gIHRoaXMub3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHRoaXMub3B0aW9ucy5kdXJhdGlvbiA9IHRoaXMub3B0aW9ucy5kdXJhdGlvbiB8fCAwO1xuICB0aGlzLm9wdGlvbnMudGltaW5nID0gdGhpcy5vcHRpb25zLnRpbWluZyB8fCAnbGluZWFyJztcbiAgdGhpcy5vcHRpb25zLmNzcyA9IHRoaXMub3B0aW9ucy5jc3MgfHwge307XG4gIHRoaXMub3B0aW9ucy5wcm9wZXJ0eSA9IHRoaXMub3B0aW9ucy5wcm9wZXJ0eSB8fCAnYWxsJztcbn07XG5cbkFuaW1pdC5UcmFuc2l0aW9uLnByb3RvdHlwZSA9IHtcblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn1cbiAgICovXG4gIGJ1aWxkOiBmdW5jdGlvbigpIHtcblxuICAgIGlmIChPYmplY3Qua2V5cyh0aGlzLm9wdGlvbnMuY3NzKS5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignb3B0aW9ucy5jc3MgaXMgcmVxdWlyZWQuJyk7XG4gICAgfVxuXG4gICAgdmFyIGNzcyA9IGNyZWF0ZUFjdHVhbENzc1Byb3BzKHRoaXMub3B0aW9ucy5jc3MpO1xuXG4gICAgaWYgKHRoaXMub3B0aW9ucy5kdXJhdGlvbiA+IDApIHtcbiAgICAgIHZhciB0cmFuc2l0aW9uVmFsdWUgPSB1dGlsLmJ1aWxkVHJhbnNpdGlvblZhbHVlKHRoaXMub3B0aW9ucyk7XG4gICAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBmdW5jdGlvbihjYWxsYmFjaykge1xuICAgICAgICB2YXIgZWxlbWVudHMgPSB0aGlzLmVsZW1lbnRzO1xuICAgICAgICB2YXIgdGltZW91dCA9IHNlbGYub3B0aW9ucy5kdXJhdGlvbiAqIDEwMDAgKiBUSU1FT1VUX1JBVElPO1xuICAgICAgICB2YXIgdGltZW91dElkO1xuXG4gICAgICAgIHZhciByZW1vdmVMaXN0ZW5lcnMgPSB1dGlsLm9uY2VPblRyYW5zaXRpb25FbmQoZWxlbWVudHNbMF0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmVtb3ZlTGlzdGVuZXJzKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgfSwgdGltZW91dCk7XG5cbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVt1dGlsLnRyYW5zaXRpb25Qcm9wZXJ0eU5hbWVdID0gdHJhbnNpdGlvblZhbHVlO1xuXG4gICAgICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgICAgIGVsZW1lbnQuc3R5bGVbbmFtZV0gPSBjc3NbbmFtZV07XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuXG4gICAgICB9O1xuICAgIH1cblxuICAgIGlmICh0aGlzLm9wdGlvbnMuZHVyYXRpb24gPD0gMCkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uKGNhbGxiYWNrKSB7XG4gICAgICAgIHZhciBlbGVtZW50cyA9IHRoaXMuZWxlbWVudHM7XG5cbiAgICAgICAgZWxlbWVudHMuZm9yRWFjaChmdW5jdGlvbihlbGVtZW50KSB7XG4gICAgICAgICAgZWxlbWVudC5zdHlsZVt1dGlsLnRyYW5zaXRpb25Qcm9wZXJ0eU5hbWVdID0gJyc7XG5cbiAgICAgICAgICBPYmplY3Qua2V5cyhjc3MpLmZvckVhY2goZnVuY3Rpb24obmFtZSkge1xuICAgICAgICAgICAgZWxlbWVudC5zdHlsZVtuYW1lXSA9IGNzc1tuYW1lXTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGVsZW1lbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICB1dGlsLmZvcmNlTGF5b3V0QXRPbmNlKGVsZW1lbnRzLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHV0aWwuYmF0Y2hBbmltYXRpb25GcmFtZShjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdXRpbC5iYXRjaEFuaW1hdGlvbkZyYW1lKGNhbGxiYWNrKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjcmVhdGVBY3R1YWxDc3NQcm9wcyhjc3MpIHtcbiAgICAgIHZhciByZXN1bHQgPSB7fTtcblxuICAgICAgT2JqZWN0LmtleXMoY3NzKS5mb3JFYWNoKGZ1bmN0aW9uKG5hbWUpIHtcbiAgICAgICAgdmFyIHZhbHVlID0gY3NzW25hbWVdO1xuXG4gICAgICAgIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KG5hbWUpKSB7XG4gICAgICAgICAgcmVzdWx0W25hbWVdID0gdmFsdWU7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIHByZWZpeGVkID0gdXRpbC52ZW5kb3JQcmVmaXggKyB1dGlsLmNhcGl0YWxpemUobmFtZSk7XG4gICAgICAgIGlmICh1dGlsLmhhc0Nzc1Byb3BlcnR5KHByZWZpeGVkKSkge1xuICAgICAgICAgIHJlc3VsdFtwcmVmaXhlZF0gPSB2YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXN1bHRbcHJlZml4ZWRdID0gdmFsdWU7XG4gICAgICAgICAgcmVzdWx0W25hbWVdID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cblxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBbmltaXQ7XG5cbiIsIi8qXG4gKiBHZXN0dXJlIGRldGVjdG9yIGxpYnJhcnkgdGhhdCBmb3JrZWQgZnJvbSBnaXRodWIuY29tL0VpZ2h0TWVkaWEvaGFtbWVyLmpzLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcblxudmFyIEV2ZW50LCBVdGlscywgRGV0ZWN0aW9uLCBQb2ludGVyRXZlbnQ7XG5cbi8qKlxuICogQG9iamVjdCBvbnMuR2VzdHVyZURldGVjdG9yXG4gKiBAY2F0ZWdvcnkgZ2VzdHVyZVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1VdGlsaXR5IGNsYXNzIGZvciBnZXN0dXJlIGRldGVjdGlvbi5bL2VuXVxuICogICBbamFd44K444Kn44K544OB44Oj44KS5qSc55+l44GZ44KL44Gf44KB44Gu44Om44O844OG44Kj44Oq44OG44Kj44Kv44Op44K544Gn44GZ44CCWy9qYV1cbiAqL1xuXG4vKipcbiAqIEBtZXRob2QgY29uc3RydWN0b3JcbiAqIEBzaWduYXR1cmUgY29uc3RydWN0b3IoZWxlbWVudFssIG9wdGlvbnNdKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXUNyZWF0ZSBhIG5ldyBHZXN0dXJlRGV0ZWN0b3IgaW5zdGFuY2UuWy9lbl1cbiAqICBbamFdR2VzdHVyZURldGVjdG9y44Gu44Kk44Oz44K544K/44Oz44K544KS55Sf5oiQ44GX44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICogICBbZW5dTmFtZSBvZiB0aGUgZXZlbnQuWy9lbl1cbiAqICAgW2phXeOCuOOCp+OCueODgeODo+OCkuaknOefpeOBmeOCi0RPTeimgee0oOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiAgIFtlbl1PcHRpb25zIG9iamVjdC5bL2VuXVxuICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAqIEByZXR1cm4ge29ucy5HZXN0dXJlRGV0ZWN0b3IuSW5zdGFuY2V9XG4gKi9cbnZhciBHZXN0dXJlRGV0ZWN0b3IgPSBmdW5jdGlvbiBHZXN0dXJlRGV0ZWN0b3IoZWxlbWVudCwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IEdlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZShlbGVtZW50LCBvcHRpb25zIHx8IHt9KTtcbn07XG5cblxuLyoqXG4gKiBkZWZhdWx0IHNldHRpbmdzLlxuICogbW9yZSBzZXR0aW5ncyBhcmUgZGVmaW5lZCBwZXIgZ2VzdHVyZSBhdCBgL2dlc3R1cmVzYC4gRWFjaCBnZXN0dXJlIGNhbiBiZSBkaXNhYmxlZC9lbmFibGVkXG4gKiBieSBzZXR0aW5nIGl0J3MgbmFtZSAobGlrZSBgc3dpcGVgKSB0byBmYWxzZS5cbiAqIFlvdSBjYW4gc2V0IHRoZSBkZWZhdWx0cyBmb3IgYWxsIGluc3RhbmNlcyBieSBjaGFuZ2luZyB0aGlzIG9iamVjdCBiZWZvcmUgY3JlYXRpbmcgYW4gaW5zdGFuY2UuXG4gKiBAZXhhbXBsZVxuICogYGBgYFxuICogIEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cy5kcmFnID0gZmFsc2U7XG4gKiAgR2VzdHVyZURldGVjdG9yLmRlZmF1bHRzLmJlaGF2aW9yLnRvdWNoQWN0aW9uID0gJ3Bhbi15JztcbiAqICBkZWxldGUgR2VzdHVyZURldGVjdG9yLmRlZmF1bHRzLmJlaGF2aW9yLnVzZXJTZWxlY3Q7XG4gKiBgYGBgXG4gKiBAcHJvcGVydHkgZGVmYXVsdHNcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbkdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cyA9IHtcbiAgYmVoYXZpb3I6IHtcbiAgICAvLyB1c2VyU2VsZWN0OiAnbm9uZScsIC8vIEFsc28gZGlzYWJsZXMgc2VsZWN0aW9uIGluIGBpbnB1dGAgY2hpbGRyZW5cbiAgICB0b3VjaEFjdGlvbjogJ3Bhbi15JyxcbiAgICB0b3VjaENhbGxvdXQ6ICdub25lJyxcbiAgICBjb250ZW50Wm9vbWluZzogJ25vbmUnLFxuICAgIHVzZXJEcmFnOiAnbm9uZScsXG4gICAgdGFwSGlnaGxpZ2h0Q29sb3I6ICdyZ2JhKDAsMCwwLDApJ1xuICB9XG59O1xuXG4vKipcbiAqIEdlc3R1cmVEZXRlY3RvciBkb2N1bWVudCB3aGVyZSB0aGUgYmFzZSBldmVudHMgYXJlIGFkZGVkIGF0XG4gKiBAcHJvcGVydHkgRE9DVU1FTlRcbiAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAqIEBkZWZhdWx0IHdpbmRvdy5kb2N1bWVudFxuICovXG5HZXN0dXJlRGV0ZWN0b3IuRE9DVU1FTlQgPSBkb2N1bWVudDtcblxuLyoqXG4gKiBkZXRlY3Qgc3VwcG9ydCBmb3IgcG9pbnRlciBldmVudHNcbiAqIEBwcm9wZXJ0eSBIQVNfUE9JTlRFUkVWRU5UU1xuICogQHR5cGUge0Jvb2xlYW59XG4gKi9cbkdlc3R1cmVEZXRlY3Rvci5IQVNfUE9JTlRFUkVWRU5UUyA9IG5hdmlnYXRvci5wb2ludGVyRW5hYmxlZCB8fCBuYXZpZ2F0b3IubXNQb2ludGVyRW5hYmxlZDtcblxuLyoqXG4gKiBkZXRlY3Qgc3VwcG9ydCBmb3IgdG91Y2ggZXZlbnRzXG4gKiBAcHJvcGVydHkgSEFTX1RPVUNIRVZFTlRTXG4gKiBAdHlwZSB7Qm9vbGVhbn1cbiAqL1xuR2VzdHVyZURldGVjdG9yLkhBU19UT1VDSEVWRU5UUyA9ICgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpO1xuXG4vKipcbiAqIGRldGVjdCBtb2JpbGUgYnJvd3NlcnNcbiAqIEBwcm9wZXJ0eSBJU19NT0JJTEVcbiAqIEB0eXBlIHtCb29sZWFufVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuSVNfTU9CSUxFID0gL21vYmlsZXx0YWJsZXR8aXAoYWR8aG9uZXxvZCl8YW5kcm9pZHxzaWxrL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcblxuLyoqXG4gKiBkZXRlY3QgaWYgd2Ugd2FudCB0byBzdXBwb3J0IG1vdXNlZXZlbnRzIGF0IGFsbFxuICogQHByb3BlcnR5IE5PX01PVVNFRVZFTlRTXG4gKiBAdHlwZSB7Qm9vbGVhbn1cbiAqL1xuR2VzdHVyZURldGVjdG9yLk5PX01PVVNFRVZFTlRTID0gKEdlc3R1cmVEZXRlY3Rvci5IQVNfVE9VQ0hFVkVOVFMgJiYgR2VzdHVyZURldGVjdG9yLklTX01PQklMRSkgfHwgR2VzdHVyZURldGVjdG9yLkhBU19QT0lOVEVSRVZFTlRTO1xuXG4vKipcbiAqIGludGVydmFsIGluIHdoaWNoIEdlc3R1cmVEZXRlY3RvciByZWNhbGN1bGF0ZXMgY3VycmVudCB2ZWxvY2l0eS9kaXJlY3Rpb24vYW5nbGUgaW4gbXNcbiAqIEBwcm9wZXJ0eSBDQUxDVUxBVEVfSU5URVJWQUxcbiAqIEB0eXBlIHtOdW1iZXJ9XG4gKiBAZGVmYXVsdCAyNVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuQ0FMQ1VMQVRFX0lOVEVSVkFMID0gMjU7XG5cbi8qKlxuICogZXZlbnR0eXBlcyBwZXIgdG91Y2hldmVudCAoc3RhcnQsIG1vdmUsIGVuZCkgYXJlIGZpbGxlZCBieSBgRXZlbnQuZGV0ZXJtaW5lRXZlbnRUeXBlc2Agb24gYHNldHVwYFxuICogdGhlIG9iamVjdCBjb250YWlucyB0aGUgRE9NIGV2ZW50IG5hbWVzIHBlciB0eXBlIChgRVZFTlRfU1RBUlRgLCBgRVZFTlRfTU9WRWAsIGBFVkVOVF9FTkRgKVxuICogQHByb3BlcnR5IEVWRU5UX1RZUEVTXG4gKiBAcHJpdmF0ZVxuICogQHdyaXRlT25jZVxuICogQHR5cGUge09iamVjdH1cbiAqL1xudmFyIEVWRU5UX1RZUEVTID0ge307XG5cbi8qKlxuICogZGlyZWN0aW9uIHN0cmluZ3MsIGZvciBzYWZlIGNvbXBhcmlzb25zXG4gKiBAcHJvcGVydHkgRElSRUNUSU9OX0RPV058TEVGVHxVUHxSSUdIVFxuICogQGZpbmFsXG4gKiBAdHlwZSB7U3RyaW5nfVxuICogQGRlZmF1bHQgJ2Rvd24nICdsZWZ0JyAndXAnICdyaWdodCdcbiAqL1xudmFyIERJUkVDVElPTl9ET1dOID0gR2VzdHVyZURldGVjdG9yLkRJUkVDVElPTl9ET1dOID0gJ2Rvd24nO1xudmFyIERJUkVDVElPTl9MRUZUID0gR2VzdHVyZURldGVjdG9yLkRJUkVDVElPTl9MRUZUID0gJ2xlZnQnO1xudmFyIERJUkVDVElPTl9VUCA9IEdlc3R1cmVEZXRlY3Rvci5ESVJFQ1RJT05fVVAgPSAndXAnO1xudmFyIERJUkVDVElPTl9SSUdIVCA9IEdlc3R1cmVEZXRlY3Rvci5ESVJFQ1RJT05fUklHSFQgPSAncmlnaHQnO1xuXG4vKipcbiAqIHBvaW50ZXJ0eXBlIHN0cmluZ3MsIGZvciBzYWZlIGNvbXBhcmlzb25zXG4gKiBAcHJvcGVydHkgUE9JTlRFUl9NT1VTRXxUT1VDSHxQRU5cbiAqIEBmaW5hbFxuICogQHR5cGUge1N0cmluZ31cbiAqIEBkZWZhdWx0ICdtb3VzZScgJ3RvdWNoJyAncGVuJ1xuICovXG52YXIgUE9JTlRFUl9NT1VTRSA9IEdlc3R1cmVEZXRlY3Rvci5QT0lOVEVSX01PVVNFID0gJ21vdXNlJztcbnZhciBQT0lOVEVSX1RPVUNIID0gR2VzdHVyZURldGVjdG9yLlBPSU5URVJfVE9VQ0ggPSAndG91Y2gnO1xudmFyIFBPSU5URVJfUEVOID0gR2VzdHVyZURldGVjdG9yLlBPSU5URVJfUEVOID0gJ3Blbic7XG5cbi8qKlxuICogZXZlbnR0eXBlc1xuICogQHByb3BlcnR5IEVWRU5UX1NUQVJUfE1PVkV8RU5EfFJFTEVBU0V8VE9VQ0hcbiAqIEBmaW5hbFxuICogQHR5cGUge1N0cmluZ31cbiAqIEBkZWZhdWx0ICdzdGFydCcgJ2NoYW5nZScgJ21vdmUnICdlbmQnICdyZWxlYXNlJyAndG91Y2gnXG4gKi9cbnZhciBFVkVOVF9TVEFSVCA9IEdlc3R1cmVEZXRlY3Rvci5FVkVOVF9TVEFSVCA9ICdzdGFydCc7XG52YXIgRVZFTlRfTU9WRSA9IEdlc3R1cmVEZXRlY3Rvci5FVkVOVF9NT1ZFID0gJ21vdmUnO1xudmFyIEVWRU5UX0VORCA9IEdlc3R1cmVEZXRlY3Rvci5FVkVOVF9FTkQgPSAnZW5kJztcbnZhciBFVkVOVF9SRUxFQVNFID0gR2VzdHVyZURldGVjdG9yLkVWRU5UX1JFTEVBU0UgPSAncmVsZWFzZSc7XG52YXIgRVZFTlRfVE9VQ0ggPSBHZXN0dXJlRGV0ZWN0b3IuRVZFTlRfVE9VQ0ggPSAndG91Y2gnO1xuXG4vKipcbiAqIGlmIHRoZSB3aW5kb3cgZXZlbnRzIGFyZSBzZXQuLi5cbiAqIEBwcm9wZXJ0eSBSRUFEWVxuICogQHdyaXRlT25jZVxuICogQHR5cGUge0Jvb2xlYW59XG4gKiBAZGVmYXVsdCBmYWxzZVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuUkVBRFkgPSBmYWxzZTtcblxuLyoqXG4gKiBwbHVnaW5zIG5hbWVzcGFjZVxuICogQHByb3BlcnR5IHBsdWdpbnNcbiAqIEB0eXBlIHtPYmplY3R9XG4gKi9cbkdlc3R1cmVEZXRlY3Rvci5wbHVnaW5zID0gR2VzdHVyZURldGVjdG9yLnBsdWdpbnMgfHwge307XG5cbi8qKlxuICogZ2VzdHVyZXMgbmFtZXNwYWNlXG4gKiBzZWUgYC9nZXN0dXJlc2AgZm9yIHRoZSBkZWZpbml0aW9uc1xuICogQHByb3BlcnR5IGdlc3R1cmVzXG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5HZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMgPSBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMgfHwge307XG5cbi8qKlxuICogc2V0dXAgZXZlbnRzIHRvIGRldGVjdCBnZXN0dXJlcyBvbiB0aGUgZG9jdW1lbnRcbiAqIHRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIHdoZW4gY3JlYXRpbmcgYW4gbmV3IGluc3RhbmNlXG4gKiBAcHJpdmF0ZVxuICovXG5mdW5jdGlvbiBzZXR1cChvcHRzKSB7XG4gIGlmIChHZXN0dXJlRGV0ZWN0b3IuUkVBRFkpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBmaW5kIHdoYXQgZXZlbnR0eXBlcyB3ZSBhZGQgbGlzdGVuZXJzIHRvXG4gIEV2ZW50LmRldGVybWluZUV2ZW50VHlwZXMoKTtcblxuICAvLyBSZWdpc3RlciBhbGwgZ2VzdHVyZXMgaW5zaWRlIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlc1xuICBVdGlscy5lYWNoKEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcywgZnVuY3Rpb24oZ2VzdHVyZSkge1xuICAgIERldGVjdGlvbi5yZWdpc3RlcihnZXN0dXJlKTtcbiAgfSk7XG5cbiAgLy8gQWRkIHRvdWNoIGV2ZW50cyBvbiB0aGUgZG9jdW1lbnRcbiAgRXZlbnQub25Ub3VjaChHZXN0dXJlRGV0ZWN0b3IuRE9DVU1FTlQsIEVWRU5UX01PVkUsIERldGVjdGlvbi5kZXRlY3QsIG9wdHMpO1xuICBFdmVudC5vblRvdWNoKEdlc3R1cmVEZXRlY3Rvci5ET0NVTUVOVCwgRVZFTlRfRU5ELCBEZXRlY3Rpb24uZGV0ZWN0LCBvcHRzKTtcblxuICAvLyBHZXN0dXJlRGV0ZWN0b3IgaXMgcmVhZHkuLi4hXG4gIEdlc3R1cmVEZXRlY3Rvci5SRUFEWSA9IHRydWU7XG59XG5cbi8qKlxuICogQG1vZHVsZSBHZXN0dXJlRGV0ZWN0b3JcbiAqXG4gKiBAY2xhc3MgVXRpbHNcbiAqIEBzdGF0aWNcbiAqL1xuVXRpbHMgPSBHZXN0dXJlRGV0ZWN0b3IudXRpbHMgPSB7XG4gIC8qKlxuICAgKiBleHRlbmQgbWV0aG9kLCBjb3VsZCBhbHNvIGJlIHVzZWQgZm9yIGNsb25pbmcgd2hlbiBgZGVzdGAgaXMgYW4gZW1wdHkgb2JqZWN0LlxuICAgKiBjaGFuZ2VzIHRoZSBkZXN0IG9iamVjdFxuICAgKiBAcGFyYW0ge09iamVjdH0gZGVzdFxuICAgKiBAcGFyYW0ge09iamVjdH0gc3JjXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW21lcmdlPWZhbHNlXSAgZG8gYSBtZXJnZVxuICAgKiBAcmV0dXJuIHtPYmplY3R9IGRlc3RcbiAgICovXG4gIGV4dGVuZDogZnVuY3Rpb24gZXh0ZW5kKGRlc3QsIHNyYywgbWVyZ2UpIHtcbiAgICBmb3IgKHZhciBrZXkgaW4gc3JjKSB7XG4gICAgICBpZiAoc3JjLmhhc093blByb3BlcnR5KGtleSkgJiYgKGRlc3Rba2V5XSA9PT0gdW5kZWZpbmVkIHx8ICFtZXJnZSkpIHtcbiAgICAgICAgZGVzdFtrZXldID0gc3JjW2tleV07XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkZXN0O1xuICB9LFxuXG4gIC8qKlxuICAgKiBzaW1wbGUgYWRkRXZlbnRMaXN0ZW5lciB3cmFwcGVyXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgb246IGZ1bmN0aW9uIG9uKGVsZW1lbnQsIHR5cGUsIGhhbmRsZXIsIG9wdCkge1xuICAgIHV0aWwuYWRkRXZlbnRMaXN0ZW5lcihlbGVtZW50LCB0eXBlLCBoYW5kbGVyLCBvcHQsIHRydWUpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBzaW1wbGUgcmVtb3ZlRXZlbnRMaXN0ZW5lciB3cmFwcGVyXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKi9cbiAgb2ZmOiBmdW5jdGlvbiBvZmYoZWxlbWVudCwgdHlwZSwgaGFuZGxlciwgb3B0KSB7XG4gICAgdXRpbC5yZW1vdmVFdmVudExpc3RlbmVyKGVsZW1lbnQsIHR5cGUsIGhhbmRsZXIsIG9wdCwgdHJ1ZSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGZvckVhY2ggb3ZlciBhcnJheXMgYW5kIG9iamVjdHNcbiAgICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IG9ialxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRvclxuICAgKiBAcGFyYW0ge2FueX0gaXRlcmF0b3IuaXRlbVxuICAgKiBAcGFyYW0ge051bWJlcn0gaXRlcmF0b3IuaW5kZXhcbiAgICogQHBhcmFtIHtPYmplY3R8QXJyYXl9IGl0ZXJhdG9yLm9iaiB0aGUgc291cmNlIG9iamVjdFxuICAgKiBAcGFyYW0ge09iamVjdH0gY29udGV4dCB2YWx1ZSB0byB1c2UgYXMgYHRoaXNgIGluIHRoZSBpdGVyYXRvclxuICAgKi9cbiAgZWFjaDogZnVuY3Rpb24gZWFjaChvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7XG4gICAgdmFyIGksIGxlbjtcblxuICAgIC8vIG5hdGl2ZSBmb3JFYWNoIG9uIGFycmF5c1xuICAgIGlmICgnZm9yRWFjaCcgaW4gb2JqKSB7XG4gICAgICBvYmouZm9yRWFjaChpdGVyYXRvciwgY29udGV4dCk7XG4gICAgICAvLyBhcnJheXNcbiAgICB9IGVsc2UgaWYgKG9iai5sZW5ndGggIT09IHVuZGVmaW5lZCkge1xuICAgICAgZm9yIChpID0gMCwgbGVuID0gb2JqLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKSA9PT0gZmFsc2UpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIG9iamVjdHNcbiAgICB9IGVsc2Uge1xuICAgICAgZm9yIChpIGluIG9iaikge1xuICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGkpICYmXG4gICAgICAgICAgaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpbaV0sIGksIG9iaikgPT09IGZhbHNlKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBmaW5kIGlmIGEgc3RyaW5nIGNvbnRhaW5zIHRoZSBzdHJpbmcgdXNpbmcgaW5kZXhPZlxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3JjXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBmaW5kXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59IGZvdW5kXG4gICAqL1xuICBpblN0cjogZnVuY3Rpb24gaW5TdHIoc3JjLCBmaW5kKSB7XG4gICAgcmV0dXJuIHNyYy5pbmRleE9mKGZpbmQpID4gLTE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGZpbmQgaWYgYSBhcnJheSBjb250YWlucyB0aGUgb2JqZWN0IHVzaW5nIGluZGV4T2Ygb3IgYSBzaW1wbGUgcG9seWZpbGxcbiAgICogQHBhcmFtIHtTdHJpbmd9IHNyY1xuICAgKiBAcGFyYW0ge1N0cmluZ30gZmluZFxuICAgKiBAcmV0dXJuIHtCb29sZWFufE51bWJlcn0gZmFsc2Ugd2hlbiBub3QgZm91bmQsIG9yIHRoZSBpbmRleFxuICAgKi9cbiAgaW5BcnJheTogZnVuY3Rpb24gaW5BcnJheShzcmMsIGZpbmQsIGRlZXApIHtcbiAgICBpZiAoZGVlcCkge1xuICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHNyYy5sZW5ndGg7IGkgPCBsZW47IGkrKykgeyAvLyBBcnJheS5maW5kSW5kZXhcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKGZpbmQpLmV2ZXJ5KGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gc3JjW2ldW2tleV0gPT09IGZpbmRba2V5XTsgfSkpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cblxuICAgIGlmIChzcmMuaW5kZXhPZikge1xuICAgICAgcmV0dXJuIHNyYy5pbmRleE9mKGZpbmQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gc3JjLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmIChzcmNbaV0gPT09IGZpbmQpIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogY29udmVydCBhbiBhcnJheS1saWtlIG9iamVjdCAoYGFyZ3VtZW50c2AsIGB0b3VjaGxpc3RgKSB0byBhbiBhcnJheVxuICAgKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gICAqIEByZXR1cm4ge0FycmF5fVxuICAgKi9cbiAgdG9BcnJheTogZnVuY3Rpb24gdG9BcnJheShvYmopIHtcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwob2JqLCAwKTtcbiAgfSxcblxuICAvKipcbiAgICogZmluZCBpZiBhIG5vZGUgaXMgaW4gdGhlIGdpdmVuIHBhcmVudFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBub2RlXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHBhcmVudFxuICAgKiBAcmV0dXJuIHtCb29sZWFufSBmb3VuZFxuICAgKi9cbiAgaGFzUGFyZW50OiBmdW5jdGlvbiBoYXNQYXJlbnQobm9kZSwgcGFyZW50KSB7XG4gICAgd2hpbGUgKG5vZGUpIHtcbiAgICAgIGlmIChub2RlID09IHBhcmVudCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICAgIG5vZGUgPSBub2RlLnBhcmVudE5vZGU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfSxcblxuICAvKipcbiAgICogZ2V0IHRoZSBjZW50ZXIgb2YgYWxsIHRoZSB0b3VjaGVzXG4gICAqIEBwYXJhbSB7QXJyYXl9IHRvdWNoZXNcbiAgICogQHJldHVybiB7T2JqZWN0fSBjZW50ZXIgY29udGFpbnMgYHBhZ2VYYCwgYHBhZ2VZYCwgYGNsaWVudFhgIGFuZCBgY2xpZW50WWAgcHJvcGVydGllc1xuICAgKi9cbiAgZ2V0Q2VudGVyOiBmdW5jdGlvbiBnZXRDZW50ZXIodG91Y2hlcykge1xuICAgIHZhciBwYWdlWCA9IFtdLFxuICAgICAgICBwYWdlWSA9IFtdLFxuICAgICAgICBjbGllbnRYID0gW10sXG4gICAgICAgIGNsaWVudFkgPSBbXSxcbiAgICAgICAgbWluID0gTWF0aC5taW4sXG4gICAgICAgIG1heCA9IE1hdGgubWF4O1xuXG4gICAgLy8gbm8gbmVlZCB0byBsb29wIHdoZW4gb25seSBvbmUgdG91Y2hcbiAgICBpZiAodG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhZ2VYOiB0b3VjaGVzWzBdLnBhZ2VYLFxuICAgICAgICBwYWdlWTogdG91Y2hlc1swXS5wYWdlWSxcbiAgICAgICAgY2xpZW50WDogdG91Y2hlc1swXS5jbGllbnRYLFxuICAgICAgICBjbGllbnRZOiB0b3VjaGVzWzBdLmNsaWVudFlcbiAgICAgIH07XG4gICAgfVxuXG4gICAgVXRpbHMuZWFjaCh0b3VjaGVzLCBmdW5jdGlvbih0b3VjaCkge1xuICAgICAgcGFnZVgucHVzaCh0b3VjaC5wYWdlWCk7XG4gICAgICBwYWdlWS5wdXNoKHRvdWNoLnBhZ2VZKTtcbiAgICAgIGNsaWVudFgucHVzaCh0b3VjaC5jbGllbnRYKTtcbiAgICAgIGNsaWVudFkucHVzaCh0b3VjaC5jbGllbnRZKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICBwYWdlWDogKG1pbi5hcHBseShNYXRoLCBwYWdlWCkgKyBtYXguYXBwbHkoTWF0aCwgcGFnZVgpKSAvIDIsXG4gICAgICBwYWdlWTogKG1pbi5hcHBseShNYXRoLCBwYWdlWSkgKyBtYXguYXBwbHkoTWF0aCwgcGFnZVkpKSAvIDIsXG4gICAgICBjbGllbnRYOiAobWluLmFwcGx5KE1hdGgsIGNsaWVudFgpICsgbWF4LmFwcGx5KE1hdGgsIGNsaWVudFgpKSAvIDIsXG4gICAgICBjbGllbnRZOiAobWluLmFwcGx5KE1hdGgsIGNsaWVudFkpICsgbWF4LmFwcGx5KE1hdGgsIGNsaWVudFkpKSAvIDJcbiAgICB9O1xuICB9LFxuXG4gIC8qKlxuICAgKiBjYWxjdWxhdGUgdGhlIHZlbG9jaXR5IGJldHdlZW4gdHdvIHBvaW50cy4gdW5pdCBpcyBpbiBweCBwZXIgbXMuXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBkZWx0YVRpbWVcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGRlbHRhWFxuICAgKiBAcGFyYW0ge051bWJlcn0gZGVsdGFZXG4gICAqIEByZXR1cm4ge09iamVjdH0gdmVsb2NpdHkgYHhgIGFuZCBgeWBcbiAgICovXG4gIGdldFZlbG9jaXR5OiBmdW5jdGlvbiBnZXRWZWxvY2l0eShkZWx0YVRpbWUsIGRlbHRhWCwgZGVsdGFZKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHg6IE1hdGguYWJzKGRlbHRhWCAvIGRlbHRhVGltZSkgfHwgMCxcbiAgICAgIHk6IE1hdGguYWJzKGRlbHRhWSAvIGRlbHRhVGltZSkgfHwgMFxuICAgIH07XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB0aGUgYW5nbGUgYmV0d2VlbiB0d28gY29vcmRpbmF0ZXNcbiAgICogQHBhcmFtIHtUb3VjaH0gdG91Y2gxXG4gICAqIEBwYXJhbSB7VG91Y2h9IHRvdWNoMlxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9IGFuZ2xlXG4gICAqL1xuICBnZXRBbmdsZTogZnVuY3Rpb24gZ2V0QW5nbGUodG91Y2gxLCB0b3VjaDIpIHtcbiAgICB2YXIgeCA9IHRvdWNoMi5jbGllbnRYIC0gdG91Y2gxLmNsaWVudFgsXG4gICAgICAgIHkgPSB0b3VjaDIuY2xpZW50WSAtIHRvdWNoMS5jbGllbnRZO1xuXG4gICAgcmV0dXJuIE1hdGguYXRhbjIoeSwgeCkgKiAxODAgLyBNYXRoLlBJO1xuICB9LFxuXG4gIC8qKlxuICAgKiBkbyBhIHNtYWxsIGNvbXBhcmlzb24gdG8gZ2V0IHRoZSBkaXJlY3Rpb24gYmV0d2VlbiB0d28gdG91Y2hlcy5cbiAgICogQHBhcmFtIHtUb3VjaH0gdG91Y2gxXG4gICAqIEBwYXJhbSB7VG91Y2h9IHRvdWNoMlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9IGRpcmVjdGlvbiBtYXRjaGVzIGBESVJFQ1RJT05fTEVGVHxSSUdIVHxVUHxET1dOYFxuICAgKi9cbiAgZ2V0RGlyZWN0aW9uOiBmdW5jdGlvbiBnZXREaXJlY3Rpb24odG91Y2gxLCB0b3VjaDIpIHtcbiAgICB2YXIgeCA9IE1hdGguYWJzKHRvdWNoMS5jbGllbnRYIC0gdG91Y2gyLmNsaWVudFgpLFxuICAgICAgICB5ID0gTWF0aC5hYnModG91Y2gxLmNsaWVudFkgLSB0b3VjaDIuY2xpZW50WSk7XG5cbiAgICBpZiAoeCA+PSB5KSB7XG4gICAgICByZXR1cm4gdG91Y2gxLmNsaWVudFggLSB0b3VjaDIuY2xpZW50WCA+IDAgPyBESVJFQ1RJT05fTEVGVCA6IERJUkVDVElPTl9SSUdIVDtcbiAgICB9XG4gICAgcmV0dXJuIHRvdWNoMS5jbGllbnRZIC0gdG91Y2gyLmNsaWVudFkgPiAwID8gRElSRUNUSU9OX1VQIDogRElSRUNUSU9OX0RPV047XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0d28gdG91Y2hlc1xuICAgKiBAcGFyYW0ge1RvdWNofXRvdWNoMVxuICAgKiBAcGFyYW0ge1RvdWNofSB0b3VjaDJcbiAgICogQHJldHVybiB7TnVtYmVyfSBkaXN0YW5jZVxuICAgKi9cbiAgZ2V0RGlzdGFuY2U6IGZ1bmN0aW9uIGdldERpc3RhbmNlKHRvdWNoMSwgdG91Y2gyKSB7XG4gICAgdmFyIHggPSB0b3VjaDIuY2xpZW50WCAtIHRvdWNoMS5jbGllbnRYLFxuICAgICAgICB5ID0gdG91Y2gyLmNsaWVudFkgLSB0b3VjaDEuY2xpZW50WTtcblxuICAgIHJldHVybiBNYXRoLnNxcnQoKHggKiB4KSArICh5ICogeSkpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBjYWxjdWxhdGUgdGhlIHNjYWxlIGZhY3RvciBiZXR3ZWVuIHR3byB0b3VjaExpc3RzXG4gICAqIG5vIHNjYWxlIGlzIDEsIGFuZCBnb2VzIGRvd24gdG8gMCB3aGVuIHBpbmNoZWQgdG9nZXRoZXIsIGFuZCBiaWdnZXIgd2hlbiBwaW5jaGVkIG91dFxuICAgKiBAcGFyYW0ge0FycmF5fSBzdGFydCBhcnJheSBvZiB0b3VjaGVzXG4gICAqIEBwYXJhbSB7QXJyYXl9IGVuZCBhcnJheSBvZiB0b3VjaGVzXG4gICAqIEByZXR1cm4ge051bWJlcn0gc2NhbGVcbiAgICovXG4gIGdldFNjYWxlOiBmdW5jdGlvbiBnZXRTY2FsZShzdGFydCwgZW5kKSB7XG4gICAgLy8gbmVlZCB0d28gZmluZ2Vycy4uLlxuICAgIGlmIChzdGFydC5sZW5ndGggPj0gMiAmJiBlbmQubGVuZ3RoID49IDIpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldERpc3RhbmNlKGVuZFswXSwgZW5kWzFdKSAvIHRoaXMuZ2V0RGlzdGFuY2Uoc3RhcnRbMF0sIHN0YXJ0WzFdKTtcbiAgICB9XG4gICAgcmV0dXJuIDE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNhbGN1bGF0ZSB0aGUgcm90YXRpb24gZGVncmVlcyBiZXR3ZWVuIHR3byB0b3VjaExpc3RzXG4gICAqIEBwYXJhbSB7QXJyYXl9IHN0YXJ0IGFycmF5IG9mIHRvdWNoZXNcbiAgICogQHBhcmFtIHtBcnJheX0gZW5kIGFycmF5IG9mIHRvdWNoZXNcbiAgICogQHJldHVybiB7TnVtYmVyfSByb3RhdGlvblxuICAgKi9cbiAgZ2V0Um90YXRpb246IGZ1bmN0aW9uIGdldFJvdGF0aW9uKHN0YXJ0LCBlbmQpIHtcbiAgICAvLyBuZWVkIHR3byBmaW5nZXJzXG4gICAgaWYgKHN0YXJ0Lmxlbmd0aCA+PSAyICYmIGVuZC5sZW5ndGggPj0gMikge1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0QW5nbGUoZW5kWzFdLCBlbmRbMF0pIC0gdGhpcy5nZXRBbmdsZShzdGFydFsxXSwgc3RhcnRbMF0pO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbiAgfSxcblxuICAvKipcbiAgICogZmluZCBvdXQgaWYgdGhlIGRpcmVjdGlvbiBpcyB2ZXJ0aWNhbCAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IGRpcmVjdGlvbiBtYXRjaGVzIGBESVJFQ1RJT05fVVB8RE9XTmBcbiAgICogQHJldHVybiB7Qm9vbGVhbn0gaXNfdmVydGljYWxcbiAgICovXG4gIGlzVmVydGljYWw6IGZ1bmN0aW9uIGlzVmVydGljYWwoZGlyZWN0aW9uKSB7XG4gICAgcmV0dXJuIGRpcmVjdGlvbiA9PSBESVJFQ1RJT05fVVAgfHwgZGlyZWN0aW9uID09IERJUkVDVElPTl9ET1dOO1xuICB9LFxuXG4gIC8qKlxuICAgKiBzZXQgY3NzIHByb3BlcnRpZXMgd2l0aCB0aGVpciBwcmVmaXhlc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwcm9wXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFt0b2dnbGU9dHJ1ZV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIHNldFByZWZpeGVkQ3NzOiBmdW5jdGlvbiBzZXRQcmVmaXhlZENzcyhlbGVtZW50LCBwcm9wLCB2YWx1ZSwgdG9nZ2xlKSB7XG4gICAgdmFyIHByZWZpeGVzID0gWycnLCAnV2Via2l0JywgJ01veicsICdPJywgJ21zJ107XG4gICAgcHJvcCA9IFV0aWxzLnRvQ2FtZWxDYXNlKHByb3ApO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcmVmaXhlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIHAgPSBwcm9wO1xuICAgICAgLy8gcHJlZml4ZXNcbiAgICAgIGlmIChwcmVmaXhlc1tpXSkge1xuICAgICAgICBwID0gcHJlZml4ZXNbaV0gKyBwLnNsaWNlKDAsIDEpLnRvVXBwZXJDYXNlKCkgKyBwLnNsaWNlKDEpO1xuICAgICAgfVxuXG4gICAgICAvLyB0ZXN0IHRoZSBzdHlsZVxuICAgICAgaWYgKHAgaW4gZWxlbWVudC5zdHlsZSkge1xuICAgICAgICBlbGVtZW50LnN0eWxlW3BdID0gKHRvZ2dsZSA9PT0gbnVsbCB8fCB0b2dnbGUpICYmIHZhbHVlIHx8ICcnO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH0sXG5cbiAgLyoqXG4gICAqIHRvZ2dsZSBicm93c2VyIGRlZmF1bHQgYmVoYXZpb3IgYnkgc2V0dGluZyBjc3MgcHJvcGVydGllcy5cbiAgICogYHVzZXJTZWxlY3Q9J25vbmUnYCBhbHNvIHNldHMgYGVsZW1lbnQub25zZWxlY3RzdGFydGAgdG8gZmFsc2VcbiAgICogYHVzZXJEcmFnPSdub25lJ2AgYWxzbyBzZXRzIGBlbGVtZW50Lm9uZHJhZ3N0YXJ0YCB0byBmYWxzZVxuICAgKlxuICAgKiBAcGFyYW0ge0h0bWxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwcm9wc1xuICAgKiBAcGFyYW0ge0Jvb2xlYW59IFt0b2dnbGU9dHJ1ZV1cbiAgICovXG4gIHRvZ2dsZUJlaGF2aW9yOiBmdW5jdGlvbiB0b2dnbGVCZWhhdmlvcihlbGVtZW50LCBwcm9wcywgdG9nZ2xlKSB7XG4gICAgaWYgKCFwcm9wcyB8fCAhZWxlbWVudCB8fCAhZWxlbWVudC5zdHlsZSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIHNldCB0aGUgY3NzIHByb3BlcnRpZXNcbiAgICBVdGlscy5lYWNoKHByb3BzLCBmdW5jdGlvbih2YWx1ZSwgcHJvcCkge1xuICAgICAgVXRpbHMuc2V0UHJlZml4ZWRDc3MoZWxlbWVudCwgcHJvcCwgdmFsdWUsIHRvZ2dsZSk7XG4gICAgfSk7XG5cbiAgICB2YXIgZmFsc2VGbiA9IHRvZ2dsZSAmJiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuXG4gICAgLy8gYWxzbyB0aGUgZGlzYWJsZSBvbnNlbGVjdHN0YXJ0XG4gICAgaWYgKHByb3BzLnVzZXJTZWxlY3QgPT0gJ25vbmUnKSB7XG4gICAgICBlbGVtZW50Lm9uc2VsZWN0c3RhcnQgPSBmYWxzZUZuO1xuICAgIH1cbiAgICAvLyBhbmQgZGlzYWJsZSBvbmRyYWdzdGFydFxuICAgIGlmIChwcm9wcy51c2VyRHJhZyA9PSAnbm9uZScpIHtcbiAgICAgIGVsZW1lbnQub25kcmFnc3RhcnQgPSBmYWxzZUZuO1xuICAgIH1cbiAgfSxcblxuICAvKipcbiAgICogY29udmVydCBhIHN0cmluZyB3aXRoIHVuZGVyc2NvcmVzIHRvIGNhbWVsQ2FzZVxuICAgKiBzbyBwcmV2ZW50X2RlZmF1bHQgYmVjb21lcyBwcmV2ZW50RGVmYXVsdFxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyXG4gICAqIEByZXR1cm4ge1N0cmluZ30gY2FtZWxDYXNlU3RyXG4gICAqL1xuICB0b0NhbWVsQ2FzZTogZnVuY3Rpb24gdG9DYW1lbENhc2Uoc3RyKSB7XG4gICAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bXy1dKFthLXpdKS9nLCBmdW5jdGlvbihzKSB7XG4gICAgICByZXR1cm4gc1sxXS50b1VwcGVyQ2FzZSgpO1xuICAgIH0pO1xuICB9XG59O1xuXG5cbi8qKlxuICogQG1vZHVsZSBHZXN0dXJlRGV0ZWN0b3JcbiAqL1xuLyoqXG4gKiBAY2xhc3MgRXZlbnRcbiAqIEBzdGF0aWNcbiAqL1xuRXZlbnQgPSBHZXN0dXJlRGV0ZWN0b3IuZXZlbnQgPSB7XG4gIC8qKlxuICAgKiB3aGVuIHRvdWNoIGV2ZW50cyBoYXZlIGJlZW4gZmlyZWQsIHRoaXMgaXMgdHJ1ZVxuICAgKiB0aGlzIGlzIHVzZWQgdG8gc3RvcCBtb3VzZSBldmVudHNcbiAgICogQHByb3BlcnR5IHByZXZlbnRfbW91c2VldmVudHNcbiAgICogQHByaXZhdGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqL1xuICBwcmV2ZW50TW91c2VFdmVudHM6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiBpZiBFVkVOVF9TVEFSVCBoYXMgYmVlbiBmaXJlZFxuICAgKiBAcHJvcGVydHkgc3RhcnRlZFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICovXG4gIHN0YXJ0ZWQ6IGZhbHNlLFxuXG4gIC8qKlxuICAgKiB3aGVuIHRoZSBtb3VzZSBpcyBob2xkIGRvd24sIHRoaXMgaXMgdHJ1ZVxuICAgKiBAcHJvcGVydHkgc2hvdWxkX2RldGVjdFxuICAgKiBAcHJpdmF0ZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICovXG4gIHNob3VsZERldGVjdDogZmFsc2UsXG5cbiAgLyoqXG4gICAqIHNpbXBsZSBldmVudCBiaW5kZXIgd2l0aCBhIGhvb2sgYW5kIHN1cHBvcnQgZm9yIG11bHRpcGxlIHR5cGVzXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdF1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2hvb2tdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBob29rLnR5cGVcbiAgICovXG4gIG9uOiBmdW5jdGlvbiBvbihlbGVtZW50LCB0eXBlLCBoYW5kbGVyLCBvcHQsIGhvb2spIHtcbiAgICB2YXIgdHlwZXMgPSB0eXBlLnNwbGl0KCcgJyk7XG4gICAgVXRpbHMuZWFjaCh0eXBlcywgZnVuY3Rpb24odHlwZSkge1xuICAgICAgVXRpbHMub24oZWxlbWVudCwgdHlwZSwgaGFuZGxlciwgb3B0KTtcbiAgICAgIGhvb2sgJiYgaG9vayh0eXBlKTtcbiAgICB9KTtcbiAgfSxcblxuICAvKipcbiAgICogc2ltcGxlIGV2ZW50IHVuYmluZGVyIHdpdGggYSBob29rIGFuZCBzdXBwb3J0IGZvciBtdWx0aXBsZSB0eXBlc1xuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtob29rXVxuICAgKiBAcGFyYW0ge09iamVjdH0gaG9vay50eXBlXG4gICAqL1xuICBvZmY6IGZ1bmN0aW9uIG9mZihlbGVtZW50LCB0eXBlLCBoYW5kbGVyLCBvcHQsIGhvb2spIHtcbiAgICB2YXIgdHlwZXMgPSB0eXBlLnNwbGl0KCcgJyk7XG4gICAgVXRpbHMuZWFjaCh0eXBlcywgZnVuY3Rpb24odHlwZSkge1xuICAgICAgVXRpbHMub2ZmKGVsZW1lbnQsIHR5cGUsIGhhbmRsZXIsIG9wdCk7XG4gICAgICBob29rICYmIGhvb2sodHlwZSk7XG4gICAgfSk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHRoZSBjb3JlIHRvdWNoIGV2ZW50IGhhbmRsZXIuXG4gICAqIHRoaXMgZmluZHMgb3V0IGlmIHdlIHNob3VsZCB0byBkZXRlY3QgZ2VzdHVyZXNcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRUeXBlIG1hdGNoZXMgYEVWRU5UX1NUQVJUfE1PVkV8RU5EYFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAqIEByZXR1cm4gb25Ub3VjaEhhbmRsZXIge0Z1bmN0aW9ufSB0aGUgY29yZSBldmVudCBoYW5kbGVyXG4gICAqL1xuICBvblRvdWNoOiBmdW5jdGlvbiBvblRvdWNoKGVsZW1lbnQsIGV2ZW50VHlwZSwgaGFuZGxlciwgb3B0KSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuXG4gICAgdmFyIG9uVG91Y2hIYW5kbGVyID0gZnVuY3Rpb24gb25Ub3VjaEhhbmRsZXIoZXYpIHtcbiAgICAgIHZhciBzcmNUeXBlID0gZXYudHlwZS50b0xvd2VyQ2FzZSgpLFxuICAgICAgICAgIGlzUG9pbnRlciA9IEdlc3R1cmVEZXRlY3Rvci5IQVNfUE9JTlRFUkVWRU5UUyxcbiAgICAgICAgICBpc01vdXNlID0gVXRpbHMuaW5TdHIoc3JjVHlwZSwgJ21vdXNlJyksXG4gICAgICAgICAgdHJpZ2dlclR5cGU7XG5cbiAgICAgIC8vIGlmIHdlIGFyZSBpbiBhIG1vdXNlZXZlbnQsIGJ1dCB0aGVyZSBoYXMgYmVlbiBhIHRvdWNoZXZlbnQgdHJpZ2dlcmVkIGluIHRoaXMgc2Vzc2lvblxuICAgICAgLy8gd2Ugd2FudCB0byBkbyBub3RoaW5nLiBzaW1wbHkgYnJlYWsgb3V0IG9mIHRoZSBldmVudC5cbiAgICAgIGlmIChpc01vdXNlICYmIHNlbGYucHJldmVudE1vdXNlRXZlbnRzKSB7XG4gICAgICAgIHJldHVybjtcblxuICAgICAgICAvLyBtb3VzZWJ1dHRvbiBtdXN0IGJlIGRvd25cbiAgICAgIH0gZWxzZSBpZiAoaXNNb3VzZSAmJiBldmVudFR5cGUgPT0gRVZFTlRfU1RBUlQgJiYgZXYuYnV0dG9uID09PSAwKSB7XG4gICAgICAgIHNlbGYucHJldmVudE1vdXNlRXZlbnRzID0gZmFsc2U7XG4gICAgICAgIHNlbGYuc2hvdWxkRGV0ZWN0ID0gdHJ1ZTtcbiAgICAgIH0gZWxzZSBpZiAoaXNQb2ludGVyICYmIGV2ZW50VHlwZSA9PSBFVkVOVF9TVEFSVCkge1xuICAgICAgICBzZWxmLnNob3VsZERldGVjdCA9IChldi5idXR0b25zID09PSAxIHx8IFBvaW50ZXJFdmVudC5tYXRjaFR5cGUoUE9JTlRFUl9UT1VDSCwgZXYpKTtcbiAgICAgICAgLy8ganVzdCBhIHZhbGlkIHN0YXJ0IGV2ZW50LCBidXQgbm8gbW91c2VcbiAgICAgIH0gZWxzZSBpZiAoIWlzTW91c2UgJiYgZXZlbnRUeXBlID09IEVWRU5UX1NUQVJUKSB7XG4gICAgICAgIHNlbGYucHJldmVudE1vdXNlRXZlbnRzID0gdHJ1ZTtcbiAgICAgICAgc2VsZi5zaG91bGREZXRlY3QgPSB0cnVlO1xuICAgICAgfVxuXG4gICAgICAvLyB1cGRhdGUgdGhlIHBvaW50ZXIgZXZlbnQgYmVmb3JlIGVudGVyaW5nIHRoZSBkZXRlY3Rpb25cbiAgICAgIGlmIChpc1BvaW50ZXIgJiYgZXZlbnRUeXBlICE9IEVWRU5UX0VORCkge1xuICAgICAgICBQb2ludGVyRXZlbnQudXBkYXRlUG9pbnRlcihldmVudFR5cGUsIGV2KTtcbiAgICAgIH1cblxuICAgICAgLy8gd2UgYXJlIGluIGEgdG91Y2gvZG93biBzdGF0ZSwgc28gYWxsb3dlZCBkZXRlY3Rpb24gb2YgZ2VzdHVyZXNcbiAgICAgIGlmIChzZWxmLnNob3VsZERldGVjdCkge1xuICAgICAgICB0cmlnZ2VyVHlwZSA9IHNlbGYuZG9EZXRlY3QuY2FsbChzZWxmLCBldiwgZXZlbnRUeXBlLCBlbGVtZW50LCBoYW5kbGVyKTtcbiAgICAgIH1cblxuICAgICAgLy8gLi4uYW5kIHdlIGFyZSBkb25lIHdpdGggdGhlIGRldGVjdGlvblxuICAgICAgLy8gc28gcmVzZXQgZXZlcnl0aGluZyB0byBzdGFydCBlYWNoIGRldGVjdGlvbiB0b3RhbGx5IGZyZXNoXG4gICAgICBpZiAodHJpZ2dlclR5cGUgPT0gRVZFTlRfRU5EKSB7XG4gICAgICAgIHNlbGYucHJldmVudE1vdXNlRXZlbnRzID0gZmFsc2U7XG4gICAgICAgIHNlbGYuc2hvdWxkRGV0ZWN0ID0gZmFsc2U7XG4gICAgICAgIFBvaW50ZXJFdmVudC5yZXNldCgpO1xuICAgICAgICAvLyB1cGRhdGUgdGhlIHBvaW50ZXJldmVudCBvYmplY3QgYWZ0ZXIgdGhlIGRldGVjdGlvblxuICAgICAgfVxuXG4gICAgICBpZiAoaXNQb2ludGVyICYmIGV2ZW50VHlwZSA9PSBFVkVOVF9FTkQpIHtcbiAgICAgICAgUG9pbnRlckV2ZW50LnVwZGF0ZVBvaW50ZXIoZXZlbnRUeXBlLCBldik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMub24oZWxlbWVudCwgRVZFTlRfVFlQRVNbZXZlbnRUeXBlXSwgb25Ub3VjaEhhbmRsZXIsIG9wdCk7XG4gICAgcmV0dXJuIG9uVG91Y2hIYW5kbGVyO1xuICB9LFxuXG4gIC8qKlxuICAgKiB0aGUgY29yZSBkZXRlY3Rpb24gbWV0aG9kXG4gICAqIHRoaXMgZmluZHMgb3V0IHdoYXQgR2VzdHVyZURldGVjdG9yLXRvdWNoLWV2ZW50cyB0byB0cmlnZ2VyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnRUeXBlIG1hdGNoZXMgYEVWRU5UX1NUQVJUfE1PVkV8RU5EYFxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGhhbmRsZXJcbiAgICogQHJldHVybiB7U3RyaW5nfSB0cmlnZ2VyVHlwZSBtYXRjaGVzIGBFVkVOVF9TVEFSVHxNT1ZFfEVORGBcbiAgICovXG4gIGRvRGV0ZWN0OiBmdW5jdGlvbiBkb0RldGVjdChldiwgZXZlbnRUeXBlLCBlbGVtZW50LCBoYW5kbGVyKSB7XG4gICAgdmFyIHRvdWNoTGlzdCA9IHRoaXMuZ2V0VG91Y2hMaXN0KGV2LCBldmVudFR5cGUpO1xuICAgIHZhciB0b3VjaExpc3RMZW5ndGggPSB0b3VjaExpc3QubGVuZ3RoO1xuICAgIHZhciB0cmlnZ2VyVHlwZSA9IGV2ZW50VHlwZTtcbiAgICB2YXIgdHJpZ2dlckNoYW5nZSA9IHRvdWNoTGlzdC50cmlnZ2VyOyAvLyB1c2VkIGJ5IGZha2VNdWx0aXRvdWNoIHBsdWdpblxuICAgIHZhciBjaGFuZ2VkTGVuZ3RoID0gdG91Y2hMaXN0TGVuZ3RoO1xuXG4gICAgLy8gYXQgZWFjaCB0b3VjaHN0YXJ0LWxpa2UgZXZlbnQgd2Ugd2FudCBhbHNvIHdhbnQgdG8gdHJpZ2dlciBhIFRPVUNIIGV2ZW50Li4uXG4gICAgaWYgKGV2ZW50VHlwZSA9PSBFVkVOVF9TVEFSVCkge1xuICAgICAgdHJpZ2dlckNoYW5nZSA9IEVWRU5UX1RPVUNIO1xuICAgICAgLy8gLi4udGhlIHNhbWUgZm9yIGEgdG91Y2hlbmQtbGlrZSBldmVudFxuICAgIH0gZWxzZSBpZiAoZXZlbnRUeXBlID09IEVWRU5UX0VORCkge1xuICAgICAgdHJpZ2dlckNoYW5nZSA9IEVWRU5UX1JFTEVBU0U7XG5cbiAgICAgIC8vIGtlZXAgdHJhY2sgb2YgaG93IG1hbnkgdG91Y2hlcyBoYXZlIGJlZW4gcmVtb3ZlZFxuICAgICAgY2hhbmdlZExlbmd0aCA9IHRvdWNoTGlzdC5sZW5ndGggLSAoKGV2LmNoYW5nZWRUb3VjaGVzKSA/IGV2LmNoYW5nZWRUb3VjaGVzLmxlbmd0aCA6IDEpO1xuICAgIH1cblxuICAgIC8vIGFmdGVyIHRoZXJlIGFyZSBzdGlsbCB0b3VjaGVzIG9uIHRoZSBzY3JlZW4sXG4gICAgLy8gd2UganVzdCB3YW50IHRvIHRyaWdnZXIgYSBNT1ZFIGV2ZW50LiBzbyBjaGFuZ2UgdGhlIFNUQVJUIG9yIEVORCB0byBhIE1PVkVcbiAgICAvLyBidXQgb25seSBhZnRlciBkZXRlY3Rpb24gaGFzIGJlZW4gc3RhcnRlZCwgdGhlIGZpcnN0IHRpbWUgd2UgYWN0dWFsbHkgd2FudCBhIFNUQVJUXG4gICAgaWYgKGNoYW5nZWRMZW5ndGggPiAwICYmIHRoaXMuc3RhcnRlZCkge1xuICAgICAgdHJpZ2dlclR5cGUgPSBFVkVOVF9NT1ZFO1xuICAgIH1cblxuICAgIC8vIGRldGVjdGlvbiBoYXMgYmVlbiBzdGFydGVkLCB3ZSBrZWVwIHRyYWNrIG9mIHRoaXMsIHNlZSBhYm92ZVxuICAgIHRoaXMuc3RhcnRlZCA9IHRydWU7XG5cbiAgICAvLyBnZW5lcmF0ZSBzb21lIGV2ZW50IGRhdGEsIHNvbWUgYmFzaWMgaW5mb3JtYXRpb25cbiAgICB2YXIgZXZEYXRhID0gdGhpcy5jb2xsZWN0RXZlbnREYXRhKGVsZW1lbnQsIHRyaWdnZXJUeXBlLCB0b3VjaExpc3QsIGV2KTtcblxuICAgIC8vIHRyaWdnZXIgdGhlIHRyaWdnZXJUeXBlIGV2ZW50IGJlZm9yZSB0aGUgY2hhbmdlIChUT1VDSCwgUkVMRUFTRSkgZXZlbnRzXG4gICAgLy8gYnV0IHRoZSBFTkQgZXZlbnQgc2hvdWxkIGJlIGF0IGxhc3RcbiAgICBpZiAoZXZlbnRUeXBlICE9IEVWRU5UX0VORCkge1xuICAgICAgaGFuZGxlci5jYWxsKERldGVjdGlvbiwgZXZEYXRhKTtcbiAgICB9XG5cbiAgICAvLyB0cmlnZ2VyIGEgY2hhbmdlIChUT1VDSCwgUkVMRUFTRSkgZXZlbnQsIHRoaXMgbWVhbnMgdGhlIGxlbmd0aCBvZiB0aGUgdG91Y2hlcyBjaGFuZ2VkXG4gICAgaWYgKHRyaWdnZXJDaGFuZ2UpIHtcbiAgICAgIGV2RGF0YS5jaGFuZ2VkTGVuZ3RoID0gY2hhbmdlZExlbmd0aDtcbiAgICAgIGV2RGF0YS5ldmVudFR5cGUgPSB0cmlnZ2VyQ2hhbmdlO1xuXG4gICAgICBoYW5kbGVyLmNhbGwoRGV0ZWN0aW9uLCBldkRhdGEpO1xuXG4gICAgICBldkRhdGEuZXZlbnRUeXBlID0gdHJpZ2dlclR5cGU7XG4gICAgICBkZWxldGUgZXZEYXRhLmNoYW5nZWRMZW5ndGg7XG4gICAgfVxuXG4gICAgLy8gdHJpZ2dlciB0aGUgRU5EIGV2ZW50XG4gICAgaWYgKHRyaWdnZXJUeXBlID09IEVWRU5UX0VORCkge1xuICAgICAgaGFuZGxlci5jYWxsKERldGVjdGlvbiwgZXZEYXRhKTtcblxuICAgICAgLy8gLi4uYW5kIHdlIGFyZSBkb25lIHdpdGggdGhlIGRldGVjdGlvblxuICAgICAgLy8gc28gcmVzZXQgZXZlcnl0aGluZyB0byBzdGFydCBlYWNoIGRldGVjdGlvbiB0b3RhbGx5IGZyZXNoXG4gICAgICB0aGlzLnN0YXJ0ZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJpZ2dlclR5cGU7XG4gIH0sXG5cbiAgLyoqXG4gICAqIHdlIGhhdmUgZGlmZmVyZW50IGV2ZW50cyBmb3IgZWFjaCBkZXZpY2UvYnJvd3NlclxuICAgKiBkZXRlcm1pbmUgd2hhdCB3ZSBuZWVkIGFuZCBzZXQgdGhlbSBpbiB0aGUgRVZFTlRfVFlQRVMgY29uc3RhbnRcbiAgICogdGhlIGBvblRvdWNoYCBtZXRob2QgaXMgYmluZCB0byB0aGVzZSBwcm9wZXJ0aWVzLlxuICAgKiBAcmV0dXJuIHtPYmplY3R9IGV2ZW50c1xuICAgKi9cbiAgZGV0ZXJtaW5lRXZlbnRUeXBlczogZnVuY3Rpb24gZGV0ZXJtaW5lRXZlbnRUeXBlcygpIHtcbiAgICB2YXIgdHlwZXM7XG4gICAgaWYgKEdlc3R1cmVEZXRlY3Rvci5IQVNfUE9JTlRFUkVWRU5UUykge1xuICAgICAgaWYgKHdpbmRvdy5Qb2ludGVyRXZlbnQpIHtcbiAgICAgICAgdHlwZXMgPSBbXG4gICAgICAgICAgJ3BvaW50ZXJkb3duJyxcbiAgICAgICAgICAncG9pbnRlcm1vdmUnLFxuICAgICAgICAgICdwb2ludGVydXAgcG9pbnRlcmNhbmNlbCBsb3N0cG9pbnRlcmNhcHR1cmUnXG4gICAgICAgIF07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0eXBlcyA9IFtcbiAgICAgICAgICAnTVNQb2ludGVyRG93bicsXG4gICAgICAgICAgJ01TUG9pbnRlck1vdmUnLFxuICAgICAgICAgICdNU1BvaW50ZXJVcCBNU1BvaW50ZXJDYW5jZWwgTVNMb3N0UG9pbnRlckNhcHR1cmUnXG4gICAgICAgIF07XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChHZXN0dXJlRGV0ZWN0b3IuTk9fTU9VU0VFVkVOVFMpIHtcbiAgICAgIHR5cGVzID0gW1xuICAgICAgICAndG91Y2hzdGFydCcsXG4gICAgICAgICd0b3VjaG1vdmUnLFxuICAgICAgICAndG91Y2hlbmQgdG91Y2hjYW5jZWwnXG4gICAgICBdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0eXBlcyA9IFtcbiAgICAgICAgJ3RvdWNoc3RhcnQgbW91c2Vkb3duJyxcbiAgICAgICAgJ3RvdWNobW92ZSBtb3VzZW1vdmUnLFxuICAgICAgICAndG91Y2hlbmQgdG91Y2hjYW5jZWwgbW91c2V1cCdcbiAgICAgIF07XG4gICAgfVxuXG4gICAgRVZFTlRfVFlQRVNbRVZFTlRfU1RBUlRdID0gdHlwZXNbMF07XG4gICAgRVZFTlRfVFlQRVNbRVZFTlRfTU9WRV0gPSB0eXBlc1sxXTtcbiAgICBFVkVOVF9UWVBFU1tFVkVOVF9FTkRdID0gdHlwZXNbMl07XG4gICAgcmV0dXJuIEVWRU5UX1RZUEVTO1xuICB9LFxuXG4gIC8qKlxuICAgKiBjcmVhdGUgdG91Y2hMaXN0IGRlcGVuZGluZyBvbiB0aGUgZXZlbnRcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFR5cGVcbiAgICogQHJldHVybiB7QXJyYXl9IHRvdWNoZXNcbiAgICovXG4gIGdldFRvdWNoTGlzdDogZnVuY3Rpb24gZ2V0VG91Y2hMaXN0KGV2LCBldmVudFR5cGUpIHtcbiAgICAvLyBnZXQgdGhlIGZha2UgcG9pbnRlckV2ZW50IHRvdWNobGlzdFxuICAgIGlmIChHZXN0dXJlRGV0ZWN0b3IuSEFTX1BPSU5URVJFVkVOVFMpIHtcbiAgICAgIHJldHVybiBQb2ludGVyRXZlbnQuZ2V0VG91Y2hMaXN0KCk7XG4gICAgfVxuXG4gICAgLy8gZ2V0IHRoZSB0b3VjaGxpc3RcbiAgICBpZiAoZXYudG91Y2hlcykge1xuICAgICAgaWYgKGV2ZW50VHlwZSA9PSBFVkVOVF9NT1ZFKSB7XG4gICAgICAgIHJldHVybiBldi50b3VjaGVzO1xuICAgICAgfVxuXG4gICAgICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcbiAgICAgIHZhciBjb25jYXQgPSBbXS5jb25jYXQoVXRpbHMudG9BcnJheShldi50b3VjaGVzKSwgVXRpbHMudG9BcnJheShldi5jaGFuZ2VkVG91Y2hlcykpO1xuICAgICAgdmFyIHRvdWNoTGlzdCA9IFtdO1xuXG4gICAgICBVdGlscy5lYWNoKGNvbmNhdCwgZnVuY3Rpb24odG91Y2gpIHtcbiAgICAgICAgaWYgKFV0aWxzLmluQXJyYXkoaWRlbnRpZmllcnMsIHRvdWNoLmlkZW50aWZpZXIpID09PSAtMSkge1xuICAgICAgICAgIHRvdWNoTGlzdC5wdXNoKHRvdWNoKTtcbiAgICAgICAgfVxuICAgICAgICBpZGVudGlmaWVycy5wdXNoKHRvdWNoLmlkZW50aWZpZXIpO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiB0b3VjaExpc3Q7XG4gICAgfVxuXG4gICAgLy8gbWFrZSBmYWtlIHRvdWNoTGlzdCBmcm9tIG1vdXNlIHBvc2l0aW9uXG4gICAgZXYuaWRlbnRpZmllciA9IDE7XG4gICAgcmV0dXJuIFtldl07XG4gIH0sXG5cbiAgLyoqXG4gICAqIGNvbGxlY3QgYmFzaWMgZXZlbnQgZGF0YVxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudFR5cGUgbWF0Y2hlcyBgRVZFTlRfU1RBUlR8TU9WRXxFTkRgXG4gICAqIEBwYXJhbSB7QXJyYXl9IHRvdWNoZXNcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqIEByZXR1cm4ge09iamVjdH0gZXZcbiAgICovXG4gIGNvbGxlY3RFdmVudERhdGE6IGZ1bmN0aW9uIGNvbGxlY3RFdmVudERhdGEoZWxlbWVudCwgZXZlbnRUeXBlLCB0b3VjaGVzLCBldikge1xuICAgIC8vIGZpbmQgb3V0IHBvaW50ZXJUeXBlXG4gICAgdmFyIHBvaW50ZXJUeXBlID0gUE9JTlRFUl9UT1VDSDtcbiAgICBpZiAoVXRpbHMuaW5TdHIoZXYudHlwZSwgJ21vdXNlJykgfHwgUG9pbnRlckV2ZW50Lm1hdGNoVHlwZShQT0lOVEVSX01PVVNFLCBldikpIHtcbiAgICAgIHBvaW50ZXJUeXBlID0gUE9JTlRFUl9NT1VTRTtcbiAgICB9IGVsc2UgaWYgKFBvaW50ZXJFdmVudC5tYXRjaFR5cGUoUE9JTlRFUl9QRU4sIGV2KSkge1xuICAgICAgcG9pbnRlclR5cGUgPSBQT0lOVEVSX1BFTjtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgY2VudGVyOiBVdGlscy5nZXRDZW50ZXIodG91Y2hlcyksXG4gICAgICB0aW1lU3RhbXA6IERhdGUubm93KCksXG4gICAgICB0YXJnZXQ6IGV2LnRhcmdldCxcbiAgICAgIHRvdWNoZXM6IHRvdWNoZXMsXG4gICAgICBldmVudFR5cGU6IGV2ZW50VHlwZSxcbiAgICAgIHBvaW50ZXJUeXBlOiBwb2ludGVyVHlwZSxcbiAgICAgIHNyY0V2ZW50OiBldixcblxuICAgICAgLyoqXG4gICAgICAgKiBwcmV2ZW50IHRoZSBicm93c2VyIGRlZmF1bHQgYWN0aW9uc1xuICAgICAgICogbW9zdGx5IHVzZWQgdG8gZGlzYWJsZSBzY3JvbGxpbmcgb2YgdGhlIGJyb3dzZXJcbiAgICAgICAqL1xuICAgICAgcHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc3JjRXZlbnQgPSB0aGlzLnNyY0V2ZW50O1xuICAgICAgICBzcmNFdmVudC5wcmV2ZW50TWFuaXB1bGF0aW9uICYmIHNyY0V2ZW50LnByZXZlbnRNYW5pcHVsYXRpb24oKTtcbiAgICAgICAgc3JjRXZlbnQucHJldmVudERlZmF1bHQgJiYgc3JjRXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH0sXG5cbiAgICAgIC8qKlxuICAgICAgICogc3RvcCBidWJibGluZyB0aGUgZXZlbnQgdXAgdG8gaXRzIHBhcmVudHNcbiAgICAgICAqL1xuICAgICAgc3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgICAgdGhpcy5zcmNFdmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgIH0sXG5cbiAgICAgIC8qKlxuICAgICAgICogaW1tZWRpYXRlbHkgc3RvcCBnZXN0dXJlIGRldGVjdGlvblxuICAgICAgICogbWlnaHQgYmUgdXNlZnVsIGFmdGVyIGEgc3dpcGUgd2FzIGRldGVjdGVkXG4gICAgICAgKiBAcmV0dXJuIHsqfVxuICAgICAgICovXG4gICAgICBzdG9wRGV0ZWN0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIERldGVjdGlvbi5zdG9wRGV0ZWN0KCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgR2VzdHVyZURldGVjdG9yXG4gKlxuICogQGNsYXNzIFBvaW50ZXJFdmVudFxuICogQHN0YXRpY1xuICovXG5Qb2ludGVyRXZlbnQgPSBHZXN0dXJlRGV0ZWN0b3IuUG9pbnRlckV2ZW50ID0ge1xuICAvKipcbiAgICogaG9sZHMgYWxsIHBvaW50ZXJzLCBieSBgaWRlbnRpZmllcmBcbiAgICogQHByb3BlcnR5IHBvaW50ZXJzXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqL1xuICBwb2ludGVyczoge30sXG5cbiAgLyoqXG4gICAqIGdldCB0aGUgcG9pbnRlcnMgYXMgYW4gYXJyYXlcbiAgICogQHJldHVybiB7QXJyYXl9IHRvdWNobGlzdFxuICAgKi9cbiAgZ2V0VG91Y2hMaXN0OiBmdW5jdGlvbiBnZXRUb3VjaExpc3QoKSB7XG4gICAgdmFyIHRvdWNobGlzdCA9IFtdO1xuICAgIC8vIHdlIGNhbiB1c2UgZm9yRWFjaCBzaW5jZSBwb2ludGVyRXZlbnRzIG9ubHkgaXMgaW4gSUUxMFxuICAgIFV0aWxzLmVhY2godGhpcy5wb2ludGVycywgZnVuY3Rpb24ocG9pbnRlcikge1xuICAgICAgdG91Y2hsaXN0LnB1c2gocG9pbnRlcik7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRvdWNobGlzdDtcbiAgfSxcblxuICAvKipcbiAgICogdXBkYXRlIHRoZSBwb3NpdGlvbiBvZiBhIHBvaW50ZXJcbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50VHlwZSBtYXRjaGVzIGBFVkVOVF9TVEFSVHxNT1ZFfEVORGBcbiAgICogQHBhcmFtIHtPYmplY3R9IHBvaW50ZXJFdmVudFxuICAgKi9cbiAgdXBkYXRlUG9pbnRlcjogZnVuY3Rpb24gdXBkYXRlUG9pbnRlcihldmVudFR5cGUsIHBvaW50ZXJFdmVudCkge1xuICAgIGlmIChldmVudFR5cGUgPT0gRVZFTlRfRU5EIHx8IChldmVudFR5cGUgIT0gRVZFTlRfRU5EICYmIHBvaW50ZXJFdmVudC5idXR0b25zICE9PSAxKSkge1xuICAgICAgZGVsZXRlIHRoaXMucG9pbnRlcnNbcG9pbnRlckV2ZW50LnBvaW50ZXJJZF07XG4gICAgfSBlbHNlIHtcbiAgICAgIHBvaW50ZXJFdmVudC5pZGVudGlmaWVyID0gcG9pbnRlckV2ZW50LnBvaW50ZXJJZDtcbiAgICAgIHRoaXMucG9pbnRlcnNbcG9pbnRlckV2ZW50LnBvaW50ZXJJZF0gPSBwb2ludGVyRXZlbnQ7XG4gICAgfVxuICB9LFxuXG4gIC8qKlxuICAgKiBjaGVjayBpZiBldiBtYXRjaGVzIHBvaW50ZXJ0eXBlXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwb2ludGVyVHlwZSBtYXRjaGVzIGBQT0lOVEVSX01PVVNFfFRPVUNIfFBFTmBcbiAgICogQHBhcmFtIHtQb2ludGVyRXZlbnR9IGV2XG4gICAqL1xuICBtYXRjaFR5cGU6IGZ1bmN0aW9uIG1hdGNoVHlwZShwb2ludGVyVHlwZSwgZXYpIHtcbiAgICBpZiAoIWV2LnBvaW50ZXJUeXBlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgdmFyIHB0ID0gZXYucG9pbnRlclR5cGUsXG4gICAgICAgIHR5cGVzID0ge307XG5cbiAgICB0eXBlc1tQT0lOVEVSX01PVVNFXSA9IChwdCA9PT0gKGV2Lk1TUE9JTlRFUl9UWVBFX01PVVNFIHx8IFBPSU5URVJfTU9VU0UpKTtcbiAgICB0eXBlc1tQT0lOVEVSX1RPVUNIXSA9IChwdCA9PT0gKGV2Lk1TUE9JTlRFUl9UWVBFX1RPVUNIIHx8IFBPSU5URVJfVE9VQ0gpKTtcbiAgICB0eXBlc1tQT0lOVEVSX1BFTl0gPSAocHQgPT09IChldi5NU1BPSU5URVJfVFlQRV9QRU4gfHwgUE9JTlRFUl9QRU4pKTtcbiAgICByZXR1cm4gdHlwZXNbcG9pbnRlclR5cGVdO1xuICB9LFxuXG4gIC8qKlxuICAgKiByZXNldCB0aGUgc3RvcmVkIHBvaW50ZXJzXG4gICAqL1xuICByZXNldDogZnVuY3Rpb24gcmVzZXRMaXN0KCkge1xuICAgIHRoaXMucG9pbnRlcnMgPSB7fTtcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgR2VzdHVyZURldGVjdG9yXG4gKlxuICogQGNsYXNzIERldGVjdGlvblxuICogQHN0YXRpY1xuICovXG5EZXRlY3Rpb24gPSBHZXN0dXJlRGV0ZWN0b3IuZGV0ZWN0aW9uID0ge1xuICAvLyBjb250YWlucyBhbGwgcmVnaXN0ZXJlZCBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMgaW4gdGhlIGNvcnJlY3Qgb3JkZXJcbiAgZ2VzdHVyZXM6IFtdLFxuXG4gIC8vIGRhdGEgb2YgdGhlIGN1cnJlbnQgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgZGV0ZWN0aW9uIHNlc3Npb25cbiAgY3VycmVudDogbnVsbCxcblxuICAvLyB0aGUgcHJldmlvdXMgR2VzdHVyZURldGVjdG9yLmdlc3R1cmUgc2Vzc2lvbiBkYXRhXG4gIC8vIGlzIGEgZnVsbCBjbG9uZSBvZiB0aGUgcHJldmlvdXMgZ2VzdHVyZS5jdXJyZW50IG9iamVjdFxuICBwcmV2aW91czogbnVsbCxcblxuICAvLyB3aGVuIHRoaXMgYmVjb21lcyB0cnVlLCBubyBnZXN0dXJlcyBhcmUgZmlyZWRcbiAgc3RvcHBlZDogZmFsc2UsXG5cbiAgLyoqXG4gICAqIHN0YXJ0IEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIGRldGVjdGlvblxuICAgKiBAcGFyYW0ge0dlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZX0gaW5zdFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnREYXRhXG4gICAqL1xuICBzdGFydERldGVjdDogZnVuY3Rpb24gc3RhcnREZXRlY3QoaW5zdCwgZXZlbnREYXRhKSB7XG4gICAgLy8gYWxyZWFkeSBidXN5IHdpdGggYSBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSBkZXRlY3Rpb24gb24gYW4gZWxlbWVudFxuICAgIGlmICh0aGlzLmN1cnJlbnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLnN0b3BwZWQgPSBmYWxzZTtcblxuICAgIC8vIGhvbGRzIGN1cnJlbnQgc2Vzc2lvblxuICAgIHRoaXMuY3VycmVudCA9IHtcbiAgICAgIGluc3Q6IGluc3QsIC8vIHJlZmVyZW5jZSB0byBHZXN0dXJlRGV0ZWN0b3JJbnN0YW5jZSB3ZSdyZSB3b3JraW5nIGZvclxuICAgICAgc3RhcnRFdmVudDogVXRpbHMuZXh0ZW5kKHt9LCBldmVudERhdGEpLCAvLyBzdGFydCBldmVudERhdGEgZm9yIGRpc3RhbmNlcywgdGltaW5nIGV0Y1xuICAgICAgbGFzdEV2ZW50OiBmYWxzZSwgLy8gbGFzdCBldmVudERhdGFcbiAgICAgIGxhc3RDYWxjRXZlbnQ6IGZhbHNlLCAvLyBsYXN0IGV2ZW50RGF0YSBmb3IgY2FsY3VsYXRpb25zLlxuICAgICAgZnV0dXJlQ2FsY0V2ZW50OiBmYWxzZSwgLy8gbGFzdCBldmVudERhdGEgZm9yIGNhbGN1bGF0aW9ucy5cbiAgICAgIGxhc3RDYWxjRGF0YToge30sIC8vIGxhc3QgbGFzdENhbGNEYXRhXG4gICAgICBuYW1lOiAnJyAvLyBjdXJyZW50IGdlc3R1cmUgd2UncmUgaW4vZGV0ZWN0ZWQsIGNhbiBiZSAndGFwJywgJ2hvbGQnIGV0Y1xuICAgIH07XG5cbiAgICB0aGlzLmRldGVjdChldmVudERhdGEpO1xuICB9LFxuXG4gIC8qKlxuICAgKiBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSBkZXRlY3Rpb25cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50RGF0YVxuICAgKiBAcmV0dXJuIHthbnl9XG4gICAqL1xuICBkZXRlY3Q6IGZ1bmN0aW9uIGRldGVjdChldmVudERhdGEpIHtcbiAgICBpZiAoIXRoaXMuY3VycmVudCB8fCB0aGlzLnN0b3BwZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBleHRlbmQgZXZlbnQgZGF0YSB3aXRoIGNhbGN1bGF0aW9ucyBhYm91dCBzY2FsZSwgZGlzdGFuY2UgZXRjXG4gICAgZXZlbnREYXRhID0gdGhpcy5leHRlbmRFdmVudERhdGEoZXZlbnREYXRhKTtcblxuICAgIC8vIEdlc3R1cmVEZXRlY3RvciBpbnN0YW5jZSBhbmQgaW5zdGFuY2Ugb3B0aW9uc1xuICAgIHZhciBpbnN0ID0gdGhpcy5jdXJyZW50Lmluc3QsXG4gICAgICAgIGluc3RPcHRpb25zID0gaW5zdC5vcHRpb25zO1xuXG4gICAgLy8gY2FsbCBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSBoYW5kbGVyc1xuICAgIFV0aWxzLmVhY2godGhpcy5nZXN0dXJlcywgZnVuY3Rpb24gdHJpZ2dlckdlc3R1cmUoZ2VzdHVyZSkge1xuICAgICAgLy8gb25seSB3aGVuIHRoZSBpbnN0YW5jZSBvcHRpb25zIGhhdmUgZW5hYmxlZCB0aGlzIGdlc3R1cmVcbiAgICAgIGlmICghdGhpcy5zdG9wcGVkICYmIGluc3QuZW5hYmxlZCAmJiBpbnN0T3B0aW9uc1tnZXN0dXJlLm5hbWVdKSB7XG4gICAgICAgIGdlc3R1cmUuaGFuZGxlci5jYWxsKGdlc3R1cmUsIGV2ZW50RGF0YSwgaW5zdCk7XG4gICAgICB9XG4gICAgfSwgdGhpcyk7XG5cbiAgICAvLyBzdG9yZSBhcyBwcmV2aW91cyBldmVudCBldmVudFxuICAgIGlmICh0aGlzLmN1cnJlbnQpIHtcbiAgICAgIHRoaXMuY3VycmVudC5sYXN0RXZlbnQgPSBldmVudERhdGE7XG4gICAgfVxuXG4gICAgaWYgKGV2ZW50RGF0YS5ldmVudFR5cGUgPT0gRVZFTlRfRU5EKSB7XG4gICAgICB0aGlzLnN0b3BEZXRlY3QoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZXZlbnREYXRhOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIGNvbnNpc3RlbnQtcmV0dXJuXG4gIH0sXG5cbiAgLyoqXG4gICAqIGNsZWFyIHRoZSBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZSB2YXJzXG4gICAqIHRoaXMgaXMgY2FsbGVkIG9uIGVuZERldGVjdCwgYnV0IGNhbiBhbHNvIGJlIHVzZWQgd2hlbiBhIGZpbmFsIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIGhhcyBiZWVuIGRldGVjdGVkXG4gICAqIHRvIHN0b3Agb3RoZXIgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzIGZyb20gYmVpbmcgZmlyZWRcbiAgICovXG4gIHN0b3BEZXRlY3Q6IGZ1bmN0aW9uIHN0b3BEZXRlY3QoKSB7XG4gICAgLy8gY2xvbmUgY3VycmVudCBkYXRhIHRvIHRoZSBzdG9yZSBhcyB0aGUgcHJldmlvdXMgZ2VzdHVyZVxuICAgIC8vIHVzZWQgZm9yIHRoZSBkb3VibGUgdGFwIGdlc3R1cmUsIHNpbmNlIHRoaXMgaXMgYW4gb3RoZXIgZ2VzdHVyZSBkZXRlY3Qgc2Vzc2lvblxuICAgIHRoaXMucHJldmlvdXMgPSBVdGlscy5leHRlbmQoe30sIHRoaXMuY3VycmVudCk7XG5cbiAgICAvLyByZXNldCB0aGUgY3VycmVudFxuICAgIHRoaXMuY3VycmVudCA9IG51bGw7XG4gICAgdGhpcy5zdG9wcGVkID0gdHJ1ZTtcbiAgfSxcblxuICAvKipcbiAgICogY2FsY3VsYXRlIHZlbG9jaXR5LCBhbmdsZSBhbmQgZGlyZWN0aW9uXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKiBAcGFyYW0ge09iamVjdH0gY2VudGVyXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBkZWx0YVRpbWVcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGRlbHRhWFxuICAgKiBAcGFyYW0ge051bWJlcn0gZGVsdGFZXG4gICAqL1xuICBnZXRDYWxjdWxhdGVkRGF0YTogZnVuY3Rpb24gZ2V0Q2FsY3VsYXRlZERhdGEoZXYsIGNlbnRlciwgZGVsdGFUaW1lLCBkZWx0YVgsIGRlbHRhWSkge1xuICAgIHZhciBjdXIgPSB0aGlzLmN1cnJlbnQsXG4gICAgICAgIHJlY2FsYyA9IGZhbHNlLFxuICAgICAgICBjYWxjRXYgPSBjdXIubGFzdENhbGNFdmVudCxcbiAgICAgICAgY2FsY0RhdGEgPSBjdXIubGFzdENhbGNEYXRhO1xuXG4gICAgaWYgKGNhbGNFdiAmJiBldi50aW1lU3RhbXAgLSBjYWxjRXYudGltZVN0YW1wID4gR2VzdHVyZURldGVjdG9yLkNBTENVTEFURV9JTlRFUlZBTCkge1xuICAgICAgY2VudGVyID0gY2FsY0V2LmNlbnRlcjtcbiAgICAgIGRlbHRhVGltZSA9IGV2LnRpbWVTdGFtcCAtIGNhbGNFdi50aW1lU3RhbXA7XG4gICAgICBkZWx0YVggPSBldi5jZW50ZXIuY2xpZW50WCAtIGNhbGNFdi5jZW50ZXIuY2xpZW50WDtcbiAgICAgIGRlbHRhWSA9IGV2LmNlbnRlci5jbGllbnRZIC0gY2FsY0V2LmNlbnRlci5jbGllbnRZO1xuICAgICAgcmVjYWxjID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoZXYuZXZlbnRUeXBlID09IEVWRU5UX1RPVUNIIHx8IGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9SRUxFQVNFKSB7XG4gICAgICBjdXIuZnV0dXJlQ2FsY0V2ZW50ID0gZXY7XG4gICAgfVxuXG4gICAgaWYgKCFjdXIubGFzdENhbGNFdmVudCB8fCByZWNhbGMpIHtcbiAgICAgIGNhbGNEYXRhLnZlbG9jaXR5ID0gVXRpbHMuZ2V0VmVsb2NpdHkoZGVsdGFUaW1lLCBkZWx0YVgsIGRlbHRhWSk7XG4gICAgICBjYWxjRGF0YS5hbmdsZSA9IFV0aWxzLmdldEFuZ2xlKGNlbnRlciwgZXYuY2VudGVyKTtcbiAgICAgIGNhbGNEYXRhLmRpcmVjdGlvbiA9IFV0aWxzLmdldERpcmVjdGlvbihjZW50ZXIsIGV2LmNlbnRlcik7XG5cbiAgICAgIGN1ci5sYXN0Q2FsY0V2ZW50ID0gY3VyLmZ1dHVyZUNhbGNFdmVudCB8fCBldjtcbiAgICAgIGN1ci5mdXR1cmVDYWxjRXZlbnQgPSBldjtcbiAgICB9XG5cbiAgICBldi52ZWxvY2l0eVggPSBjYWxjRGF0YS52ZWxvY2l0eS54O1xuICAgIGV2LnZlbG9jaXR5WSA9IGNhbGNEYXRhLnZlbG9jaXR5Lnk7XG4gICAgZXYuaW50ZXJpbUFuZ2xlID0gY2FsY0RhdGEuYW5nbGU7XG4gICAgZXYuaW50ZXJpbURpcmVjdGlvbiA9IGNhbGNEYXRhLmRpcmVjdGlvbjtcbiAgfSxcblxuICAvKipcbiAgICogZXh0ZW5kIGV2ZW50RGF0YSBmb3IgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKiBAcmV0dXJuIHtPYmplY3R9IGV2XG4gICAqL1xuICBleHRlbmRFdmVudERhdGE6IGZ1bmN0aW9uIGV4dGVuZEV2ZW50RGF0YShldikge1xuICAgIHZhciBjdXIgPSB0aGlzLmN1cnJlbnQsXG4gICAgICAgIHN0YXJ0RXYgPSBjdXIuc3RhcnRFdmVudCxcbiAgICAgICAgbGFzdEV2ID0gY3VyLmxhc3RFdmVudCB8fCBzdGFydEV2O1xuXG4gICAgLy8gdXBkYXRlIHRoZSBzdGFydCB0b3VjaGxpc3QgdG8gY2FsY3VsYXRlIHRoZSBzY2FsZS9yb3RhdGlvblxuICAgIGlmIChldi5ldmVudFR5cGUgPT0gRVZFTlRfVE9VQ0ggfHwgZXYuZXZlbnRUeXBlID09IEVWRU5UX1JFTEVBU0UpIHtcbiAgICAgIHN0YXJ0RXYudG91Y2hlcyA9IFtdO1xuICAgICAgVXRpbHMuZWFjaChldi50b3VjaGVzLCBmdW5jdGlvbih0b3VjaCkge1xuICAgICAgICBzdGFydEV2LnRvdWNoZXMucHVzaCh7XG4gICAgICAgICAgY2xpZW50WDogdG91Y2guY2xpZW50WCxcbiAgICAgICAgICBjbGllbnRZOiB0b3VjaC5jbGllbnRZXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdmFyIGRlbHRhVGltZSA9IGV2LnRpbWVTdGFtcCAtIHN0YXJ0RXYudGltZVN0YW1wLFxuICAgICAgICBkZWx0YVggPSBldi5jZW50ZXIuY2xpZW50WCAtIHN0YXJ0RXYuY2VudGVyLmNsaWVudFgsXG4gICAgICAgIGRlbHRhWSA9IGV2LmNlbnRlci5jbGllbnRZIC0gc3RhcnRFdi5jZW50ZXIuY2xpZW50WTtcblxuICAgIHRoaXMuZ2V0Q2FsY3VsYXRlZERhdGEoZXYsIGxhc3RFdi5jZW50ZXIsIGRlbHRhVGltZSwgZGVsdGFYLCBkZWx0YVkpO1xuXG4gICAgVXRpbHMuZXh0ZW5kKGV2LCB7XG4gICAgICBzdGFydEV2ZW50OiBzdGFydEV2LFxuXG4gICAgICBkZWx0YVRpbWU6IGRlbHRhVGltZSxcbiAgICAgIGRlbHRhWDogZGVsdGFYLFxuICAgICAgZGVsdGFZOiBkZWx0YVksXG5cbiAgICAgIGRpc3RhbmNlOiBVdGlscy5nZXREaXN0YW5jZShzdGFydEV2LmNlbnRlciwgZXYuY2VudGVyKSxcbiAgICAgIGFuZ2xlOiBVdGlscy5nZXRBbmdsZShzdGFydEV2LmNlbnRlciwgZXYuY2VudGVyKSxcbiAgICAgIGRpcmVjdGlvbjogVXRpbHMuZ2V0RGlyZWN0aW9uKHN0YXJ0RXYuY2VudGVyLCBldi5jZW50ZXIpLFxuICAgICAgc2NhbGU6IFV0aWxzLmdldFNjYWxlKHN0YXJ0RXYudG91Y2hlcywgZXYudG91Y2hlcyksXG4gICAgICByb3RhdGlvbjogVXRpbHMuZ2V0Um90YXRpb24oc3RhcnRFdi50b3VjaGVzLCBldi50b3VjaGVzKVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGV2O1xuICB9LFxuXG4gIC8qKlxuICAgKiByZWdpc3RlciBuZXcgZ2VzdHVyZVxuICAgKiBAcGFyYW0ge09iamVjdH0gZ2VzdHVyZSBvYmplY3QsIHNlZSBgZ2VzdHVyZXMvYCBmb3IgZG9jdW1lbnRhdGlvblxuICAgKiBAcmV0dXJuIHtBcnJheX0gZ2VzdHVyZXNcbiAgICovXG4gIHJlZ2lzdGVyOiBmdW5jdGlvbiByZWdpc3RlcihnZXN0dXJlKSB7XG4gICAgLy8gYWRkIGFuIGVuYWJsZSBnZXN0dXJlIG9wdGlvbnMgaWYgdGhlcmUgaXMgbm8gZ2l2ZW5cbiAgICB2YXIgb3B0aW9ucyA9IGdlc3R1cmUuZGVmYXVsdHMgfHwge307XG4gICAgaWYgKG9wdGlvbnNbZ2VzdHVyZS5uYW1lXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBvcHRpb25zW2dlc3R1cmUubmFtZV0gPSB0cnVlO1xuICAgIH1cblxuICAgIC8vIGV4dGVuZCBHZXN0dXJlRGV0ZWN0b3IgZGVmYXVsdCBvcHRpb25zIHdpdGggdGhlIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIG9wdGlvbnNcbiAgICBVdGlscy5leHRlbmQoR2VzdHVyZURldGVjdG9yLmRlZmF1bHRzLCBvcHRpb25zLCB0cnVlKTtcblxuICAgIC8vIHNldCBpdHMgaW5kZXhcbiAgICBnZXN0dXJlLmluZGV4ID0gZ2VzdHVyZS5pbmRleCB8fCAxMDAwO1xuXG4gICAgLy8gYWRkIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlIHRvIHRoZSBsaXN0XG4gICAgdGhpcy5nZXN0dXJlcy5wdXNoKGdlc3R1cmUpO1xuXG4gICAgLy8gc29ydCB0aGUgbGlzdCBieSBpbmRleFxuICAgIHRoaXMuZ2VzdHVyZXMuc29ydChmdW5jdGlvbihhLCBiKSB7XG4gICAgICBpZiAoYS5pbmRleCA8IGIuaW5kZXgpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgICAgaWYgKGEuaW5kZXggPiBiLmluZGV4KSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgICAgfVxuICAgICAgcmV0dXJuIDA7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5nZXN0dXJlcztcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgR2VzdHVyZURldGVjdG9yXG4gKi9cblxuLyoqXG4gKiBjcmVhdGUgbmV3IEdlc3R1cmVEZXRlY3RvciBpbnN0YW5jZVxuICogYWxsIG1ldGhvZHMgc2hvdWxkIHJldHVybiB0aGUgaW5zdGFuY2UgaXRzZWxmLCBzbyBpdCBpcyBjaGFpbmFibGUuXG4gKlxuICogQGNsYXNzIEluc3RhbmNlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGVsZW1lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gb3B0aW9ucyBhcmUgbWVyZ2VkIHdpdGggYEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0c2BcbiAqIEByZXR1cm4ge0dlc3R1cmVEZXRlY3Rvci5JbnN0YW5jZX1cbiAqL1xuR2VzdHVyZURldGVjdG9yLkluc3RhbmNlID0gZnVuY3Rpb24oZWxlbWVudCwgb3B0aW9ucykge1xuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBsaXN0ZW5lck9wdGlvbnMgPSAob3B0aW9ucyAmJiBvcHRpb25zLnBhc3NpdmUpID8geyBwYXNzaXZlOiB0cnVlIH0gOiB1bmRlZmluZWQ7XG5cbiAgLy8gc2V0dXAgR2VzdHVyZURldGVjdG9ySlMgd2luZG93IGV2ZW50cyBhbmQgcmVnaXN0ZXIgYWxsIGdlc3R1cmVzXG4gIC8vIHRoaXMgYWxzbyBzZXRzIHVwIHRoZSBkZWZhdWx0IG9wdGlvbnNcbiAgc2V0dXAobGlzdGVuZXJPcHRpb25zKTtcblxuICAvKipcbiAgICogQHByb3BlcnR5IGVsZW1lbnRcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcblxuICAvKipcbiAgICogQHByb3BlcnR5IGVuYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBwcm90ZWN0ZWRcbiAgICovXG4gIHRoaXMuZW5hYmxlZCA9IHRydWU7XG5cbiAgLyoqXG4gICAqIG9wdGlvbnMsIG1lcmdlZCB3aXRoIHRoZSBkZWZhdWx0c1xuICAgKiBvcHRpb25zIHdpdGggYW4gXyBhcmUgY29udmVydGVkIHRvIGNhbWVsQ2FzZVxuICAgKiBAcHJvcGVydHkgb3B0aW9uc1xuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKi9cbiAgVXRpbHMuZWFjaChvcHRpb25zLCBmdW5jdGlvbih2YWx1ZSwgbmFtZSkge1xuICAgIGRlbGV0ZSBvcHRpb25zW25hbWVdO1xuICAgIG9wdGlvbnNbVXRpbHMudG9DYW1lbENhc2UobmFtZSldID0gdmFsdWU7XG4gIH0pO1xuXG4gIHRoaXMub3B0aW9ucyA9IFV0aWxzLmV4dGVuZChVdGlscy5leHRlbmQoe30sIEdlc3R1cmVEZXRlY3Rvci5kZWZhdWx0cyksIG9wdGlvbnMgfHwge30pO1xuICB0aGlzLm9wdGlvbnMubGlzdGVuZXJPcHRpb25zID0gbGlzdGVuZXJPcHRpb25zO1xuXG4gIC8vIGFkZCBzb21lIGNzcyB0byB0aGUgZWxlbWVudCB0byBwcmV2ZW50IHRoZSBicm93c2VyIGZyb20gZG9pbmcgaXRzIG5hdGl2ZSBiZWhhdmlvclxuICBpZiAodGhpcy5vcHRpb25zLmJlaGF2aW9yKSB7XG4gICAgVXRpbHMudG9nZ2xlQmVoYXZpb3IodGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMuYmVoYXZpb3IsIHRydWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIGV2ZW50IHN0YXJ0IGhhbmRsZXIgb24gdGhlIGVsZW1lbnQgdG8gc3RhcnQgdGhlIGRldGVjdGlvblxuICAgKiBAcHJvcGVydHkgZXZlbnRTdGFydEhhbmRsZXJcbiAgICogQHR5cGUge09iamVjdH1cbiAgICovXG4gIHRoaXMuZXZlbnRTdGFydEhhbmRsZXIgPSBFdmVudC5vblRvdWNoKGVsZW1lbnQsIEVWRU5UX1NUQVJULCBmdW5jdGlvbihldikge1xuICAgIGlmIChzZWxmLmVuYWJsZWQgJiYgZXYuZXZlbnRUeXBlID09IEVWRU5UX1NUQVJUKSB7XG4gICAgICBEZXRlY3Rpb24uc3RhcnREZXRlY3Qoc2VsZiwgZXYpO1xuICAgIH0gZWxzZSBpZiAoZXYuZXZlbnRUeXBlID09IEVWRU5UX1RPVUNIKSB7XG4gICAgICBEZXRlY3Rpb24uZGV0ZWN0KGV2KTtcbiAgICB9XG4gIH0sIGxpc3RlbmVyT3B0aW9ucyk7XG5cbiAgLyoqXG4gICAqIGtlZXAgYSBsaXN0IG9mIHVzZXIgZXZlbnQgaGFuZGxlcnMgd2hpY2ggbmVlZHMgdG8gYmUgcmVtb3ZlZCB3aGVuIGNhbGxpbmcgJ2Rpc3Bvc2UnXG4gICAqIEBwcm9wZXJ0eSBldmVudEhhbmRsZXJzXG4gICAqIEB0eXBlIHtBcnJheX1cbiAgICovXG4gIHRoaXMuZXZlbnRIYW5kbGVycyA9IFtdO1xufTtcblxuR2VzdHVyZURldGVjdG9yLkluc3RhbmNlLnByb3RvdHlwZSA9IHtcbiAgLyoqXG4gICAqIEBtZXRob2Qgb25cbiAgICogQHNpZ25hdHVyZSBvbihnZXN0dXJlcywgaGFuZGxlcilcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dQWRkcyBhbiBldmVudCBoYW5kbGVyIGZvciBhIGdlc3R1cmUuIEF2YWlsYWJsZSBnZXN0dXJlcyBhcmU6IGRyYWcsIGRyYWdsZWZ0LCBkcmFncmlnaHQsIGRyYWd1cCwgZHJhZ2Rvd24sIGhvbGQsIHJlbGVhc2UsIHN3aXBlLCBzd2lwZWxlZnQsIHN3aXBlcmlnaHQsIHN3aXBldXAsIHN3aXBlZG93biwgdGFwLCBkb3VibGV0YXAsIHRvdWNoLCB0cmFuc2Zvcm0sIHBpbmNoLCBwaW5jaGluLCBwaW5jaG91dCBhbmQgcm90YXRlLiBbL2VuXVxuICAgKiAgW2phXeOCuOOCp+OCueODgeODo+OBq+WvvuOBmeOCi+OCpOODmeODs+ODiOODj+ODs+ODieODqeOCkui/veWKoOOBl+OBvuOBmeOAguaMh+WumuOBp+OBjeOCi+OCuOOCp+OCueODgeODo+WQjeOBr+OAgWRyYWcgZHJhZ2xlZnQgZHJhZ3JpZ2h0IGRyYWd1cCBkcmFnZG93biBob2xkIHJlbGVhc2Ugc3dpcGUgc3dpcGVsZWZ0IHN3aXBlcmlnaHQgc3dpcGV1cCBzd2lwZWRvd24gdGFwIGRvdWJsZXRhcCB0b3VjaCB0cmFuc2Zvcm0gcGluY2ggcGluY2hpbiBwaW5jaG91dCByb3RhdGUg44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IGdlc3R1cmVzXG4gICAqICAgW2VuXUEgc3BhY2Ugc2VwYXJhdGVkIGxpc3Qgb2YgZ2VzdHVyZXMuWy9lbl1cbiAgICogICBbamFd5qSc55+l44GZ44KL44K444Kn44K544OB44Oj5ZCN44KS5oyH5a6a44GX44G+44GZ44CC44K544Oa44O844K544Gn6KSH5pWw5oyH5a6a44GZ44KL44GT44Go44GM44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlclxuICAgKiAgIFtlbl1BbiBldmVudCBoYW5kbGluZyBmdW5jdGlvbi5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjg4/jg7Pjg4njg6njgajjgarjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgb246IGZ1bmN0aW9uIG9uRXZlbnQoZ2VzdHVyZXMsIGhhbmRsZXIsIG9wdCkge1xuICAgIHZhciBzZWxmID0gdGhpcztcblxuICAgIEV2ZW50Lm9uKHNlbGYuZWxlbWVudCwgZ2VzdHVyZXMsIGhhbmRsZXIsIHV0aWwuZXh0ZW5kKHt9LCBzZWxmLm9wdGlvbnMubGlzdGVuZXJPcHRpb25zLCBvcHQpLCBmdW5jdGlvbih0eXBlKSB7XG4gICAgICBzZWxmLmV2ZW50SGFuZGxlcnMucHVzaCh7IGdlc3R1cmU6IHR5cGUsIGhhbmRsZXI6IGhhbmRsZXIgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgb2ZmXG4gICAqIEBzaWduYXR1cmUgb2ZmKGdlc3R1cmVzLCBoYW5kbGVyKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1SZW1vdmUgYW4gZXZlbnQgbGlzdGVuZXIuWy9lbl1cbiAgICogIFtqYV3jgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLliYrpmaTjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gZ2VzdHVyZXNcbiAgICogICBbZW5dQSBzcGFjZSBzZXBhcmF0ZWQgbGlzdCBvZiBnZXN0dXJlcy5bL2VuXVxuICAgKiAgIFtqYV3jgrjjgqfjgrnjg4Hjg6PlkI3jgpLmjIflrprjgZfjgb7jgZnjgILjgrnjg5rjg7zjgrnjgafopIfmlbDmjIflrprjgZnjgovjgZPjgajjgYzjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyXG4gICAqICAgW2VuXUFuIGV2ZW50IGhhbmRsaW5nIGZ1bmN0aW9uLlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOODj+ODs+ODieODqeOBqOOBquOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBvZmY6IGZ1bmN0aW9uIG9mZkV2ZW50KGdlc3R1cmVzLCBoYW5kbGVyLCBvcHQpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG5cbiAgICBFdmVudC5vZmYoc2VsZi5lbGVtZW50LCBnZXN0dXJlcywgaGFuZGxlciwgdXRpbC5leHRlbmQoe30sIHNlbGYub3B0aW9ucy5saXN0ZW5lck9wdGlvbnMsIG9wdCksIGZ1bmN0aW9uKHR5cGUpIHtcbiAgICAgIHZhciBpbmRleCA9IFV0aWxzLmluQXJyYXkoc2VsZi5ldmVudEhhbmRsZXJzLCB7IGdlc3R1cmU6IHR5cGUsIGhhbmRsZXI6IGhhbmRsZXIgfSwgdHJ1ZSk7XG4gICAgICBpZiAoaW5kZXggPj0gMCkge1xuICAgICAgICBzZWxmLmV2ZW50SGFuZGxlcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gc2VsZjtcbiAgfSxcblxuICAvKipcbiAgICogdHJpZ2dlciBnZXN0dXJlIGV2ZW50XG4gICAqIEBtZXRob2QgdHJpZ2dlclxuICAgKiBAc2lnbmF0dXJlIHRyaWdnZXIoZ2VzdHVyZSwgZXZlbnREYXRhKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gZ2VzdHVyZVxuICAgKiBAcGFyYW0ge09iamVjdH0gW2V2ZW50RGF0YV1cbiAgICovXG4gIHRyaWdnZXI6IGZ1bmN0aW9uIHRyaWdnZXJFdmVudChnZXN0dXJlLCBldmVudERhdGEpIHtcbiAgICAvLyBvcHRpb25hbFxuICAgIGlmICghZXZlbnREYXRhKSB7XG4gICAgICBldmVudERhdGEgPSB7fTtcbiAgICB9XG5cbiAgICAvLyBjcmVhdGUgRE9NIGV2ZW50XG4gICAgdmFyIGV2ZW50ID0gR2VzdHVyZURldGVjdG9yLkRPQ1VNRU5ULmNyZWF0ZUV2ZW50KCdFdmVudCcpO1xuICAgIGV2ZW50LmluaXRFdmVudChnZXN0dXJlLCB0cnVlLCB0cnVlKTtcbiAgICBldmVudC5nZXN0dXJlID0gZXZlbnREYXRhO1xuXG4gICAgLy8gdHJpZ2dlciBvbiB0aGUgdGFyZ2V0IGlmIGl0IGlzIGluIHRoZSBpbnN0YW5jZSBlbGVtZW50LFxuICAgIC8vIHRoaXMgaXMgZm9yIGV2ZW50IGRlbGVnYXRpb24gdHJpY2tzXG4gICAgdmFyIGVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7XG4gICAgaWYgKFV0aWxzLmhhc1BhcmVudChldmVudERhdGEudGFyZ2V0LCBlbGVtZW50KSkge1xuICAgICAgZWxlbWVudCA9IGV2ZW50RGF0YS50YXJnZXQ7XG4gICAgfVxuXG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgICByZXR1cm4gdGhpcztcbiAgfSxcblxuICAvKipcbiAgICogQG1ldGhvZCBlbmFibGVcbiAgICogQHNpZ25hdHVyZSBlbmFibGUoc3RhdGUpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUVuYWJsZSBvciBkaXNhYmxlIGdlc3R1cmUgZGV0ZWN0aW9uLlsvZW5dXG4gICAqICBbamFd44K444Kn44K544OB44Oj5qSc55+l44KS5pyJ5Yq55YyWL+eEoeWKueWMluOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gc3RhdGVcbiAgICogICBbZW5dU3BlY2lmeSBpZiBpdCBzaG91bGQgYmUgZW5hYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd5pyJ5Yq544Gr44GZ44KL44GL44Gp44GG44GL44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGVuYWJsZTogZnVuY3Rpb24gZW5hYmxlKHN0YXRlKSB7XG4gICAgdGhpcy5lbmFibGVkID0gc3RhdGU7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZGlzcG9zZVxuICAgKiBAc2lnbmF0dXJlIGRpc3Bvc2UoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1SZW1vdmUgYW5kIGRlc3Ryb3kgYWxsIGV2ZW50IGhhbmRsZXJzIGZvciB0aGlzIGluc3RhbmNlLlsvZW5dXG4gICAqICBbamFd44GT44Gu44Kk44Oz44K544K/44Oz44K544Gn44Gu44K444Kn44K544OB44Oj44Gu5qSc55+l44KE44CB44Kk44OZ44Oz44OI44OP44Oz44OJ44Op44KS5YWo44Gm6Kej6Zmk44GX44Gm5buD5qOE44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGRpc3Bvc2U6IGZ1bmN0aW9uIGRpc3Bvc2UoKSB7XG4gICAgdmFyIGksIGVoO1xuXG4gICAgLy8gdW5kbyBhbGwgY2hhbmdlcyBtYWRlIGJ5IHN0b3BfYnJvd3Nlcl9iZWhhdmlvclxuICAgIFV0aWxzLnRvZ2dsZUJlaGF2aW9yKHRoaXMuZWxlbWVudCwgdGhpcy5vcHRpb25zLmJlaGF2aW9yLCBmYWxzZSk7XG5cbiAgICAvLyB1bmJpbmQgYWxsIGN1c3RvbSBldmVudCBoYW5kbGVyc1xuICAgIGZvciAoaSA9IC0xOyAoZWggPSB0aGlzLmV2ZW50SGFuZGxlcnNbKytpXSk7KSB7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uZC1hc3NpZ25cbiAgICAgIFV0aWxzLm9mZih0aGlzLmVsZW1lbnQsIGVoLmdlc3R1cmUsIGVoLmhhbmRsZXIpO1xuICAgIH1cblxuICAgIHRoaXMuZXZlbnRIYW5kbGVycyA9IFtdO1xuXG4gICAgLy8gdW5iaW5kIHRoZSBzdGFydCBldmVudCBsaXN0ZW5lclxuICAgIEV2ZW50Lm9mZih0aGlzLmVsZW1lbnQsIEVWRU5UX1RZUEVTW0VWRU5UX1NUQVJUXSwgdGhpcy5ldmVudFN0YXJ0SGFuZGxlcik7XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxuXG4vKipcbiAqIEBtb2R1bGUgZ2VzdHVyZXNcbiAqL1xuLyoqXG4gKiBNb3ZlIHdpdGggeCBmaW5nZXJzIChkZWZhdWx0IDEpIGFyb3VuZCBvbiB0aGUgcGFnZS5cbiAqIFByZXZlbnRpbmcgdGhlIGRlZmF1bHQgYnJvd3NlciBiZWhhdmlvciBpcyBhIGdvb2Qgd2F5IHRvIGltcHJvdmUgZmVlbCBhbmQgd29ya2luZy5cbiAqIGBgYGBcbiAqICBHZXN0dXJlRGV0ZWN0b3J0aW1lLm9uKFwiZHJhZ1wiLCBmdW5jdGlvbihldikge1xuICogICAgY29uc29sZS5sb2coZXYpO1xuICogICAgZXYuZ2VzdHVyZS5wcmV2ZW50RGVmYXVsdCgpO1xuICogIH0pO1xuICogYGBgYFxuICpcbiAqIEBjbGFzcyBEcmFnXG4gKiBAc3RhdGljXG4gKi9cbi8qKlxuICogQGV2ZW50IGRyYWdcbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG4vKipcbiAqIEBldmVudCBkcmFnc3RhcnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG4vKipcbiAqIEBldmVudCBkcmFnZW5kXG4gKiBAcGFyYW0ge09iamVjdH0gZXZcbiAqL1xuLyoqXG4gKiBAZXZlbnQgZHJhcGxlZnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG4vKipcbiAqIEBldmVudCBkcmFncmlnaHRcbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG4vKipcbiAqIEBldmVudCBkcmFndXBcbiAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICovXG4vKipcbiAqIEBldmVudCBkcmFnZG93blxuICogQHBhcmFtIHtPYmplY3R9IGV2XG4gKi9cblxuLyoqXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICovXG4oZnVuY3Rpb24obmFtZSkge1xuICB2YXIgdHJpZ2dlcmVkID0gZmFsc2U7XG5cbiAgZnVuY3Rpb24gZHJhZ0dlc3R1cmUoZXYsIGluc3QpIHtcbiAgICB2YXIgY3VyID0gRGV0ZWN0aW9uLmN1cnJlbnQ7XG5cbiAgICAvLyBtYXggdG91Y2hlc1xuICAgIGlmIChpbnN0Lm9wdGlvbnMuZHJhZ01heFRvdWNoZXMgPiAwICYmXG4gICAgICBldi50b3VjaGVzLmxlbmd0aCA+IGluc3Qub3B0aW9ucy5kcmFnTWF4VG91Y2hlcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN3aXRjaCAoZXYuZXZlbnRUeXBlKSB7XG4gICAgY2FzZSBFVkVOVF9TVEFSVDpcbiAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIEVWRU5UX01PVkU6XG4gICAgICAvLyB3aGVuIHRoZSBkaXN0YW5jZSB3ZSBtb3ZlZCBpcyB0b28gc21hbGwgd2Ugc2tpcCB0aGlzIGdlc3R1cmVcbiAgICAgIC8vIG9yIHdlIGNhbiBiZSBhbHJlYWR5IGluIGRyYWdnaW5nXG4gICAgICBpZiAoZXYuZGlzdGFuY2UgPCBpbnN0Lm9wdGlvbnMuZHJhZ01pbkRpc3RhbmNlICYmXG4gICAgICAgIGN1ci5uYW1lICE9IG5hbWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RhcnRDZW50ZXIgPSBjdXIuc3RhcnRFdmVudC5jZW50ZXI7XG5cbiAgICAgIC8vIHdlIGFyZSBkcmFnZ2luZyFcbiAgICAgIGlmIChjdXIubmFtZSAhPSBuYW1lKSB7XG4gICAgICAgIGN1ci5uYW1lID0gbmFtZTtcbiAgICAgICAgaWYgKGluc3Qub3B0aW9ucy5kcmFnRGlzdGFuY2VDb3JyZWN0aW9uICYmIGV2LmRpc3RhbmNlID4gMCkge1xuICAgICAgICAgIC8vIFdoZW4gYSBkcmFnIGlzIHRyaWdnZXJlZCwgc2V0IHRoZSBldmVudCBjZW50ZXIgdG8gZHJhZ01pbkRpc3RhbmNlIHBpeGVscyBmcm9tIHRoZSBvcmlnaW5hbCBldmVudCBjZW50ZXIuXG4gICAgICAgICAgLy8gV2l0aG91dCB0aGlzIGNvcnJlY3Rpb24sIHRoZSBkcmFnZ2VkIGRpc3RhbmNlIHdvdWxkIGp1bXBzdGFydCBhdCBkcmFnTWluRGlzdGFuY2UgcGl4ZWxzIGluc3RlYWQgb2YgYXQgMC5cbiAgICAgICAgICAvLyBJdCBtaWdodCBiZSB1c2VmdWwgdG8gc2F2ZSB0aGUgb3JpZ2luYWwgc3RhcnQgcG9pbnQgc29tZXdoZXJlXG4gICAgICAgICAgdmFyIGZhY3RvciA9IE1hdGguYWJzKGluc3Qub3B0aW9ucy5kcmFnTWluRGlzdGFuY2UgLyBldi5kaXN0YW5jZSk7XG4gICAgICAgICAgc3RhcnRDZW50ZXIucGFnZVggKz0gZXYuZGVsdGFYICogZmFjdG9yO1xuICAgICAgICAgIHN0YXJ0Q2VudGVyLnBhZ2VZICs9IGV2LmRlbHRhWSAqIGZhY3RvcjtcbiAgICAgICAgICBzdGFydENlbnRlci5jbGllbnRYICs9IGV2LmRlbHRhWCAqIGZhY3RvcjtcbiAgICAgICAgICBzdGFydENlbnRlci5jbGllbnRZICs9IGV2LmRlbHRhWSAqIGZhY3RvcjtcblxuICAgICAgICAgIC8vIHJlY2FsY3VsYXRlIGV2ZW50IGRhdGEgdXNpbmcgbmV3IHN0YXJ0IHBvaW50XG4gICAgICAgICAgZXYgPSBEZXRlY3Rpb24uZXh0ZW5kRXZlbnREYXRhKGV2KTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBsb2NrIGRyYWcgdG8gYXhpcz9cbiAgICAgIGlmIChjdXIubGFzdEV2ZW50LmRyYWdMb2NrVG9BeGlzIHx8XG4gICAgICAgICggaW5zdC5vcHRpb25zLmRyYWdMb2NrVG9BeGlzICYmXG4gICAgICAgICAgaW5zdC5vcHRpb25zLmRyYWdMb2NrTWluRGlzdGFuY2UgPD0gZXYuZGlzdGFuY2VcbiAgICAgICAgKSkge1xuICAgICAgICAgIGV2LmRyYWdMb2NrVG9BeGlzID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGtlZXAgZGlyZWN0aW9uIG9uIHRoZSBheGlzIHRoYXQgdGhlIGRyYWcgZ2VzdHVyZSBzdGFydGVkIG9uXG4gICAgICAgIHZhciBsYXN0RGlyZWN0aW9uID0gY3VyLmxhc3RFdmVudC5kaXJlY3Rpb247XG4gICAgICAgIGlmIChldi5kcmFnTG9ja1RvQXhpcyAmJiBsYXN0RGlyZWN0aW9uICE9PSBldi5kaXJlY3Rpb24pIHtcbiAgICAgICAgICBpZiAoVXRpbHMuaXNWZXJ0aWNhbChsYXN0RGlyZWN0aW9uKSkge1xuICAgICAgICAgICAgZXYuZGlyZWN0aW9uID0gKGV2LmRlbHRhWSA8IDApID8gRElSRUNUSU9OX1VQIDogRElSRUNUSU9OX0RPV047XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGV2LmRpcmVjdGlvbiA9IChldi5kZWx0YVggPCAwKSA/IERJUkVDVElPTl9MRUZUIDogRElSRUNUSU9OX1JJR0hUO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZpcnN0IHRpbWUsIHRyaWdnZXIgZHJhZ3N0YXJ0IGV2ZW50XG4gICAgICAgIGlmICghdHJpZ2dlcmVkKSB7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKG5hbWUgKyAnc3RhcnQnLCBldik7XG4gICAgICAgICAgdHJpZ2dlcmVkID0gdHJ1ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHRyaWdnZXIgZXZlbnRzXG4gICAgICAgIGluc3QudHJpZ2dlcihuYW1lLCBldik7XG4gICAgICAgIGluc3QudHJpZ2dlcihuYW1lICsgZXYuZGlyZWN0aW9uLCBldik7XG5cbiAgICAgICAgdmFyIGlzVmVydGljYWwgPSBVdGlscy5pc1ZlcnRpY2FsKGV2LmRpcmVjdGlvbik7XG5cbiAgICAgICAgLy8gYmxvY2sgdGhlIGJyb3dzZXIgZXZlbnRzXG4gICAgICAgIGlmICgoaW5zdC5vcHRpb25zLmRyYWdCbG9ja1ZlcnRpY2FsICYmIGlzVmVydGljYWwpIHx8XG4gICAgICAgICAgKGluc3Qub3B0aW9ucy5kcmFnQmxvY2tIb3Jpem9udGFsICYmICFpc1ZlcnRpY2FsKSkge1xuICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfUkVMRUFTRTpcbiAgICAgICAgaWYgKHRyaWdnZXJlZCAmJiBldi5jaGFuZ2VkTGVuZ3RoIDw9IGluc3Qub3B0aW9ucy5kcmFnTWF4VG91Y2hlcykge1xuICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lICsgJ2VuZCcsIGV2KTtcbiAgICAgICAgICB0cmlnZ2VyZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBFVkVOVF9FTkQ6XG4gICAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuRHJhZyA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBpbmRleDogNTAsXG4gICAgICBoYW5kbGVyOiBkcmFnR2VzdHVyZSxcbiAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtaW5pbWFsIG1vdmVtZW50IHRoYXQgaGF2ZSB0byBiZSBtYWRlIGJlZm9yZSB0aGUgZHJhZyBldmVudCBnZXRzIHRyaWdnZXJlZFxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ01pbkRpc3RhbmNlXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDEwXG4gICAgICAgICAqL1xuICAgICAgICBkcmFnTWluRGlzdGFuY2U6IDEwLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBTZXQgZHJhZ0Rpc3RhbmNlQ29ycmVjdGlvbiB0byB0cnVlIHRvIG1ha2UgdGhlIHN0YXJ0aW5nIHBvaW50IG9mIHRoZSBkcmFnXG4gICAgICAgICAqIGJlIGNhbGN1bGF0ZWQgZnJvbSB3aGVyZSB0aGUgZHJhZyB3YXMgdHJpZ2dlcmVkLCBub3QgZnJvbSB3aGVyZSB0aGUgdG91Y2ggc3RhcnRlZC5cbiAgICAgICAgICogVXNlZnVsIHRvIGF2b2lkIGEgamVyay1zdGFydGluZyBkcmFnLCB3aGljaCBjYW4gbWFrZSBmaW5lLWFkanVzdG1lbnRzXG4gICAgICAgICAqIHRocm91Z2ggZHJhZ2dpbmcgZGlmZmljdWx0LCBhbmQgYmUgdmlzdWFsbHkgdW5hcHBlYWxpbmcuXG4gICAgICAgICAqIEBwcm9wZXJ0eSBkcmFnRGlzdGFuY2VDb3JyZWN0aW9uXG4gICAgICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAgICAgKiBAZGVmYXVsdCB0cnVlXG4gICAgICAgICAqL1xuICAgICAgICBkcmFnRGlzdGFuY2VDb3JyZWN0aW9uOiB0cnVlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBzZXQgMCBmb3IgdW5saW1pdGVkLCBidXQgdGhpcyBjYW4gY29uZmxpY3Qgd2l0aCB0cmFuc2Zvcm1cbiAgICAgICAgICogQHByb3BlcnR5IGRyYWdNYXhUb3VjaGVzXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDFcbiAgICAgICAgICovXG4gICAgICAgIGRyYWdNYXhUb3VjaGVzOiAxLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBwcmV2ZW50IGRlZmF1bHQgYnJvd3NlciBiZWhhdmlvciB3aGVuIGRyYWdnaW5nIG9jY3Vyc1xuICAgICAgICAgKiBiZSBjYXJlZnVsIHdpdGggaXQsIGl0IG1ha2VzIHRoZSBlbGVtZW50IGEgYmxvY2tpbmcgZWxlbWVudFxuICAgICAgICAgKiB3aGVuIHlvdSBhcmUgdXNpbmcgdGhlIGRyYWcgZ2VzdHVyZSwgaXQgaXMgYSBnb29kIHByYWN0aWNlIHRvIHNldCB0aGlzIHRydWVcbiAgICAgICAgICogQHByb3BlcnR5IGRyYWdCbG9ja0hvcml6b250YWxcbiAgICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgICAqIEBkZWZhdWx0IGZhbHNlXG4gICAgICAgICAqL1xuICAgICAgICBkcmFnQmxvY2tIb3Jpem9udGFsOiBmYWxzZSxcblxuICAgICAgICAvKipcbiAgICAgICAgICogc2FtZSBhcyBgZHJhZ0Jsb2NrSG9yaXpvbnRhbGAsIGJ1dCBmb3IgdmVydGljYWwgbW92ZW1lbnRcbiAgICAgICAgICogQHByb3BlcnR5IGRyYWdCbG9ja1ZlcnRpY2FsXG4gICAgICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICAgKi9cbiAgICAgICAgZHJhZ0Jsb2NrVmVydGljYWw6IGZhbHNlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkcmFnTG9ja1RvQXhpcyBrZWVwcyB0aGUgZHJhZyBnZXN0dXJlIG9uIHRoZSBheGlzIHRoYXQgaXQgc3RhcnRlZCBvbixcbiAgICAgICAgICogSXQgZGlzYWxsb3dzIHZlcnRpY2FsIGRpcmVjdGlvbnMgaWYgdGhlIGluaXRpYWwgZGlyZWN0aW9uIHdhcyBob3Jpem9udGFsLCBhbmQgdmljZSB2ZXJzYS5cbiAgICAgICAgICogQHByb3BlcnR5IGRyYWdMb2NrVG9BeGlzXG4gICAgICAgICAqIEB0eXBlIHtCb29sZWFufVxuICAgICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICAgKi9cbiAgICAgICAgZHJhZ0xvY2tUb0F4aXM6IGZhbHNlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBkcmFnIGxvY2sgb25seSBraWNrcyBpbiB3aGVuIGRpc3RhbmNlID4gZHJhZ0xvY2tNaW5EaXN0YW5jZVxuICAgICAgICAgKiBUaGlzIHdheSwgbG9ja2luZyBvY2N1cnMgb25seSB3aGVuIHRoZSBkaXN0YW5jZSBoYXMgYmVjb21lIGxhcmdlIGVub3VnaCB0byByZWxpYWJseSBkZXRlcm1pbmUgdGhlIGRpcmVjdGlvblxuICAgICAgICAgKiBAcHJvcGVydHkgZHJhZ0xvY2tNaW5EaXN0YW5jZVxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAyNVxuICAgICAgICAgKi9cbiAgICAgICAgZHJhZ0xvY2tNaW5EaXN0YW5jZTogMjVcbiAgICAgIH1cbiAgICB9O1xuICB9KSgnZHJhZycpO1xuXG4gIC8qKlxuICAgKiBAbW9kdWxlIGdlc3R1cmVzXG4gICAqL1xuICAvKipcbiAgICogdHJpZ2dlciBhIHNpbXBsZSBnZXN0dXJlIGV2ZW50LCBzbyB5b3UgY2FuIGRvIGFueXRoaW5nIGluIHlvdXIgaGFuZGxlci5cbiAgICogb25seSB1c2FibGUgaWYgeW91IGtub3cgd2hhdCB5b3VyIGRvaW5nLi4uXG4gICAqXG4gICAqIEBjbGFzcyBHZXN0dXJlXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgZ2VzdHVyZVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIEdlc3R1cmVEZXRlY3Rvci5nZXN0dXJlcy5HZXN0dXJlID0ge1xuICAgIG5hbWU6ICdnZXN0dXJlJyxcbiAgICBpbmRleDogMTMzNyxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiByZWxlYXNlR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgaW5zdC50cmlnZ2VyKHRoaXMubmFtZSwgZXYpO1xuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIFRvdWNoIHN0YXlzIGF0IHRoZSBzYW1lIHBsYWNlIGZvciB4IHRpbWVcbiAgICpcbiAgICogQGNsYXNzIEhvbGRcbiAgICogQHN0YXRpY1xuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBob2xkXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICovXG4gIChmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIHRpbWVyO1xuXG4gICAgZnVuY3Rpb24gaG9sZEdlc3R1cmUoZXYsIGluc3QpIHtcbiAgICAgIHZhciBvcHRpb25zID0gaW5zdC5vcHRpb25zLFxuICAgICAgICAgIGN1cnJlbnQgPSBEZXRlY3Rpb24uY3VycmVudDtcblxuICAgICAgc3dpdGNoIChldi5ldmVudFR5cGUpIHtcbiAgICAgIGNhc2UgRVZFTlRfU1RBUlQ6XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lcik7XG5cbiAgICAgICAgLy8gc2V0IHRoZSBnZXN0dXJlIHNvIHdlIGNhbiBjaGVjayBpbiB0aGUgdGltZW91dCBpZiBpdCBzdGlsbCBpc1xuICAgICAgICBjdXJyZW50Lm5hbWUgPSBuYW1lO1xuXG4gICAgICAgIC8vIHNldCB0aW1lciBhbmQgaWYgYWZ0ZXIgdGhlIHRpbWVvdXQgaXQgc3RpbGwgaXMgaG9sZCxcbiAgICAgICAgLy8gd2UgdHJpZ2dlciB0aGUgaG9sZCBldmVudFxuICAgICAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKGN1cnJlbnQgJiYgY3VycmVudC5uYW1lID09IG5hbWUpIHtcbiAgICAgICAgICAgIGluc3QudHJpZ2dlcihuYW1lLCBldik7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBvcHRpb25zLmhvbGRUaW1lb3V0KTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfTU9WRTpcbiAgICAgICAgaWYgKGV2LmRpc3RhbmNlID4gb3B0aW9ucy5ob2xkVGhyZXNob2xkKSB7XG4gICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBFVkVOVF9SRUxFQVNFOlxuICAgICAgICBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuSG9sZCA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBpbmRleDogMTAsXG4gICAgICBkZWZhdWx0czoge1xuICAgICAgICAvKipcbiAgICAgICAgICogQHByb3BlcnR5IGhvbGRUaW1lb3V0XG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDUwMFxuICAgICAgICAgKi9cbiAgICAgICAgaG9sZFRpbWVvdXQ6IDUwMCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbW92ZW1lbnQgYWxsb3dlZCB3aGlsZSBob2xkaW5nXG4gICAgICAgICAqIEBwcm9wZXJ0eSBob2xkVGhyZXNob2xkXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDJcbiAgICAgICAgICovXG4gICAgICAgIGhvbGRUaHJlc2hvbGQ6IDJcbiAgICAgIH0sXG4gICAgICBoYW5kbGVyOiBob2xkR2VzdHVyZVxuICAgIH07XG4gIH0pKCdob2xkJyk7XG5cbiAgLyoqXG4gICAqIEBtb2R1bGUgZ2VzdHVyZXNcbiAgICovXG4gIC8qKlxuICAgKiB3aGVuIGEgdG91Y2ggaXMgYmVpbmcgcmVsZWFzZWQgZnJvbSB0aGUgcGFnZVxuICAgKlxuICAgKiBAY2xhc3MgUmVsZWFzZVxuICAgKiBAc3RhdGljXG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHJlbGVhc2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuUmVsZWFzZSA9IHtcbiAgICBuYW1lOiAncmVsZWFzZScsXG4gICAgaW5kZXg6IEluZmluaXR5LFxuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIHJlbGVhc2VHZXN0dXJlKGV2LCBpbnN0KSB7XG4gICAgICBpZiAoZXYuZXZlbnRUeXBlID09IEVWRU5UX1JFTEVBU0UpIHtcbiAgICAgICAgaW5zdC50cmlnZ2VyKHRoaXMubmFtZSwgZXYpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIHRyaWdnZXJzIHN3aXBlIGV2ZW50cyB3aGVuIHRoZSBlbmQgdmVsb2NpdHkgaXMgYWJvdmUgdGhlIHRocmVzaG9sZFxuICAgKiBmb3IgYmVzdCB1c2FnZSwgc2V0IGBwcmV2ZW50RGVmYXVsdGAgKG9uIHRoZSBkcmFnIGdlc3R1cmUpIHRvIGB0cnVlYFxuICAgKiBgYGBgXG4gICAqICBHZXN0dXJlRGV0ZWN0b3J0aW1lLm9uKFwiZHJhZ2xlZnQgc3dpcGVsZWZ0XCIsIGZ1bmN0aW9uKGV2KSB7XG4gICAqICAgIGNvbnNvbGUubG9nKGV2KTtcbiAgICogICAgZXYuZ2VzdHVyZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgKiAgfSk7XG4gICAqIGBgYGBcbiAgICpcbiAgICogQGNsYXNzIFN3aXBlXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgc3dpcGVcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHN3aXBlbGVmdFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgc3dpcGVyaWdodFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgc3dpcGV1cFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgc3dpcGVkb3duXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLlN3aXBlID0ge1xuICAgIG5hbWU6ICdzd2lwZScsXG4gICAgaW5kZXg6IDQwLFxuICAgIGRlZmF1bHRzOiB7XG4gICAgICAvKipcbiAgICAgICAqIEBwcm9wZXJ0eSBzd2lwZU1pblRvdWNoZXNcbiAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgKiBAZGVmYXVsdCAxXG4gICAgICAgKi9cbiAgICAgIHN3aXBlTWluVG91Y2hlczogMSxcblxuICAgICAgLyoqXG4gICAgICAgKiBAcHJvcGVydHkgc3dpcGVNYXhUb3VjaGVzXG4gICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICogQGRlZmF1bHQgMVxuICAgICAgICovXG4gICAgICBzd2lwZU1heFRvdWNoZXM6IDEsXG5cbiAgICAgIC8qKlxuICAgICAgICogaG9yaXpvbnRhbCBzd2lwZSB2ZWxvY2l0eVxuICAgICAgICogQHByb3BlcnR5IHN3aXBlVmVsb2NpdHlYXG4gICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICogQGRlZmF1bHQgMC42XG4gICAgICAgKi9cbiAgICAgIHN3aXBlVmVsb2NpdHlYOiAwLjYsXG5cbiAgICAgIC8qKlxuICAgICAgICogdmVydGljYWwgc3dpcGUgdmVsb2NpdHlcbiAgICAgICAqIEBwcm9wZXJ0eSBzd2lwZVZlbG9jaXR5WVxuICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAqIEBkZWZhdWx0IDAuNlxuICAgICAgICovXG4gICAgICBzd2lwZVZlbG9jaXR5WTogMC42XG4gICAgfSxcblxuICAgIGhhbmRsZXI6IGZ1bmN0aW9uIHN3aXBlR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgaWYgKGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9SRUxFQVNFKSB7XG4gICAgICAgIHZhciB0b3VjaGVzID0gZXYudG91Y2hlcy5sZW5ndGgsXG4gICAgICAgICAgICBvcHRpb25zID0gaW5zdC5vcHRpb25zO1xuXG4gICAgICAgIC8vIG1heCB0b3VjaGVzXG4gICAgICAgIGlmICh0b3VjaGVzIDwgb3B0aW9ucy5zd2lwZU1pblRvdWNoZXMgfHxcbiAgICAgICAgICB0b3VjaGVzID4gb3B0aW9ucy5zd2lwZU1heFRvdWNoZXMpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyB3aGVuIHRoZSBkaXN0YW5jZSB3ZSBtb3ZlZCBpcyB0b28gc21hbGwgd2Ugc2tpcCB0aGlzIGdlc3R1cmVcbiAgICAgICAgLy8gb3Igd2UgY2FuIGJlIGFscmVhZHkgaW4gZHJhZ2dpbmdcbiAgICAgICAgaWYgKGV2LnZlbG9jaXR5WCA+IG9wdGlvbnMuc3dpcGVWZWxvY2l0eVggfHxcbiAgICAgICAgICBldi52ZWxvY2l0eVkgPiBvcHRpb25zLnN3aXBlVmVsb2NpdHlZKSB7XG4gICAgICAgICAgLy8gdHJpZ2dlciBzd2lwZSBldmVudHNcbiAgICAgICAgICBpbnN0LnRyaWdnZXIodGhpcy5uYW1lLCBldik7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKHRoaXMubmFtZSArIGV2LmRpcmVjdGlvbiwgZXYpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIC8qKlxuICAgKiBAbW9kdWxlIGdlc3R1cmVzXG4gICAqL1xuICAvKipcbiAgICogU2luZ2xlIHRhcCBhbmQgYSBkb3VibGUgdGFwIG9uIGEgcGxhY2VcbiAgICpcbiAgICogQGNsYXNzIFRhcFxuICAgKiBAc3RhdGljXG4gICAqL1xuICAvKipcbiAgICogQGV2ZW50IHRhcFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgZG91YmxldGFwXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICovXG4gIChmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIGhhc01vdmVkID0gZmFsc2U7XG5cbiAgICBmdW5jdGlvbiB0YXBHZXN0dXJlKGV2LCBpbnN0KSB7XG4gICAgICB2YXIgb3B0aW9ucyA9IGluc3Qub3B0aW9ucyxcbiAgICAgICAgICBjdXJyZW50ID0gRGV0ZWN0aW9uLmN1cnJlbnQsXG4gICAgICAgICAgcHJldiA9IERldGVjdGlvbi5wcmV2aW91cyxcbiAgICAgICAgICBzaW5jZVByZXYsXG4gICAgICAgICAgZGlkRG91YmxlVGFwO1xuXG4gICAgICBzd2l0Y2ggKGV2LmV2ZW50VHlwZSkge1xuICAgICAgY2FzZSBFVkVOVF9TVEFSVDpcbiAgICAgICAgaGFzTW92ZWQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfTU9WRTpcbiAgICAgICAgaGFzTW92ZWQgPSBoYXNNb3ZlZCB8fCAoZXYuZGlzdGFuY2UgPiBvcHRpb25zLnRhcE1heERpc3RhbmNlKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgRVZFTlRfRU5EOlxuICAgICAgICBpZiAoIVV0aWxzLmluU3RyKGV2LnNyY0V2ZW50LnR5cGUsICdjYW5jZWwnKSAmJiBldi5kZWx0YVRpbWUgPCBvcHRpb25zLnRhcE1heFRpbWUgJiYgIWhhc01vdmVkKSB7XG4gICAgICAgICAgLy8gcHJldmlvdXMgZ2VzdHVyZSwgZm9yIHRoZSBkb3VibGUgdGFwIHNpbmNlIHRoZXNlIGFyZSB0d28gZGlmZmVyZW50IGdlc3R1cmUgZGV0ZWN0aW9uc1xuICAgICAgICAgIHNpbmNlUHJldiA9IHByZXYgJiYgcHJldi5sYXN0RXZlbnQgJiYgZXYudGltZVN0YW1wIC0gcHJldi5sYXN0RXZlbnQudGltZVN0YW1wO1xuICAgICAgICAgIGRpZERvdWJsZVRhcCA9IGZhbHNlO1xuXG4gICAgICAgICAgLy8gY2hlY2sgaWYgZG91YmxlIHRhcFxuICAgICAgICAgIGlmIChwcmV2ICYmIHByZXYubmFtZSA9PSBuYW1lICYmXG4gICAgICAgICAgICAoc2luY2VQcmV2ICYmIHNpbmNlUHJldiA8IG9wdGlvbnMuZG91YmxlVGFwSW50ZXJ2YWwpICYmXG4gICAgICAgICAgICBldi5kaXN0YW5jZSA8IG9wdGlvbnMuZG91YmxlVGFwRGlzdGFuY2UpIHtcbiAgICAgICAgICAgIGluc3QudHJpZ2dlcignZG91YmxldGFwJywgZXYpO1xuICAgICAgICAgICAgZGlkRG91YmxlVGFwID0gdHJ1ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBkbyBhIHNpbmdsZSB0YXBcbiAgICAgICAgICBpZiAoIWRpZERvdWJsZVRhcCB8fCBvcHRpb25zLnRhcEFsd2F5cykge1xuICAgICAgICAgICAgY3VycmVudC5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgIGluc3QudHJpZ2dlcihjdXJyZW50Lm5hbWUsIGV2KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLlRhcCA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBpbmRleDogMTAwLFxuICAgICAgaGFuZGxlcjogdGFwR2VzdHVyZSxcbiAgICAgIGRlZmF1bHRzOiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtYXggdGltZSBvZiBhIHRhcCwgdGhpcyBpcyBmb3IgdGhlIHNsb3cgdGFwcGVyc1xuICAgICAgICAgKiBAcHJvcGVydHkgdGFwTWF4VGltZVxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAyNTBcbiAgICAgICAgICovXG4gICAgICAgIHRhcE1heFRpbWU6IDI1MCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbWF4IGRpc3RhbmNlIG9mIG1vdmVtZW50IG9mIGEgdGFwLCB0aGlzIGlzIGZvciB0aGUgc2xvdyB0YXBwZXJzXG4gICAgICAgICAqIEBwcm9wZXJ0eSB0YXBNYXhEaXN0YW5jZVxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAxMFxuICAgICAgICAgKi9cbiAgICAgICAgdGFwTWF4RGlzdGFuY2U6IDEwLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBhbHdheXMgdHJpZ2dlciB0aGUgYHRhcGAgZXZlbnQsIGV2ZW4gd2hpbGUgZG91YmxlLXRhcHBpbmdcbiAgICAgICAgICogQHByb3BlcnR5IHRhcEFsd2F5c1xuICAgICAgICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICAgICAgICogQGRlZmF1bHQgdHJ1ZVxuICAgICAgICAgKi9cbiAgICAgICAgdGFwQWx3YXlzOiB0cnVlLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtYXggZGlzdGFuY2UgYmV0d2VlbiB0d28gdGFwc1xuICAgICAgICAgKiBAcHJvcGVydHkgZG91YmxlVGFwRGlzdGFuY2VcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMjBcbiAgICAgICAgICovXG4gICAgICAgIGRvdWJsZVRhcERpc3RhbmNlOiAyMCxcblxuICAgICAgICAvKipcbiAgICAgICAgICogbWF4IHRpbWUgYmV0d2VlbiB0d28gdGFwc1xuICAgICAgICAgKiBAcHJvcGVydHkgZG91YmxlVGFwSW50ZXJ2YWxcbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICogQGRlZmF1bHQgMzAwXG4gICAgICAgICAqL1xuICAgICAgICBkb3VibGVUYXBJbnRlcnZhbDogMzAwXG4gICAgICB9XG4gICAgfTtcbiAgfSkoJ3RhcCcpO1xuXG4gIC8qKlxuICAgKiBAbW9kdWxlIGdlc3R1cmVzXG4gICAqL1xuICAvKipcbiAgICogd2hlbiBhIHRvdWNoIGlzIGJlaW5nIHRvdWNoZWQgYXQgdGhlIHBhZ2VcbiAgICpcbiAgICogQGNsYXNzIFRvdWNoXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdG91Y2hcbiAgICogQHBhcmFtIHtPYmplY3R9IGV2XG4gICAqL1xuICBHZXN0dXJlRGV0ZWN0b3IuZ2VzdHVyZXMuVG91Y2ggPSB7XG4gICAgbmFtZTogJ3RvdWNoJyxcbiAgICBpbmRleDogLUluZmluaXR5LFxuICAgIGRlZmF1bHRzOiB7XG4gICAgICAvKipcbiAgICAgICAqIGNhbGwgcHJldmVudERlZmF1bHQgYXQgdG91Y2hzdGFydCwgYW5kIG1ha2VzIHRoZSBlbGVtZW50IGJsb2NraW5nIGJ5IGRpc2FibGluZyB0aGUgc2Nyb2xsaW5nIG9mIHRoZSBwYWdlLFxuICAgICAgICogYnV0IGl0IGltcHJvdmVzIGdlc3R1cmVzIGxpa2UgdHJhbnNmb3JtaW5nIGFuZCBkcmFnZ2luZy5cbiAgICAgICAqIGJlIGNhcmVmdWwgd2l0aCB1c2luZyB0aGlzLCBpdCBjYW4gYmUgdmVyeSBhbm5veWluZyBmb3IgdXNlcnMgdG8gYmUgc3R1Y2sgb24gdGhlIHBhZ2VcbiAgICAgICAqIEBwcm9wZXJ0eSBwcmV2ZW50RGVmYXVsdFxuICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICovXG4gICAgICBwcmV2ZW50RGVmYXVsdDogZmFsc2UsXG5cbiAgICAgIC8qKlxuICAgICAgICogZGlzYWJsZSBtb3VzZSBldmVudHMsIHNvIG9ubHkgdG91Y2ggKG9yIHBlbiEpIGlucHV0IHRyaWdnZXJzIGV2ZW50c1xuICAgICAgICogQHByb3BlcnR5IHByZXZlbnRNb3VzZVxuICAgICAgICogQHR5cGUge0Jvb2xlYW59XG4gICAgICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgICAgICovXG4gICAgICBwcmV2ZW50TW91c2U6IGZhbHNlXG4gICAgfSxcbiAgICBoYW5kbGVyOiBmdW5jdGlvbiB0b3VjaEdlc3R1cmUoZXYsIGluc3QpIHtcbiAgICAgIGlmIChpbnN0Lm9wdGlvbnMucHJldmVudE1vdXNlICYmIGV2LnBvaW50ZXJUeXBlID09IFBPSU5URVJfTU9VU0UpIHtcbiAgICAgICAgZXYuc3RvcERldGVjdCgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChpbnN0Lm9wdGlvbnMucHJldmVudERlZmF1bHQpIHtcbiAgICAgICAgZXYucHJldmVudERlZmF1bHQoKTtcbiAgICAgIH1cblxuICAgICAgaWYgKGV2LmV2ZW50VHlwZSA9PSBFVkVOVF9UT1VDSCkge1xuICAgICAgICBpbnN0LnRyaWdnZXIoJ3RvdWNoJywgZXYpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICAvKipcbiAgICogQG1vZHVsZSBnZXN0dXJlc1xuICAgKi9cbiAgLyoqXG4gICAqIFVzZXIgd2FudCB0byBzY2FsZSBvciByb3RhdGUgd2l0aCAyIGZpbmdlcnNcbiAgICogUHJldmVudGluZyB0aGUgZGVmYXVsdCBicm93c2VyIGJlaGF2aW9yIGlzIGEgZ29vZCB3YXkgdG8gaW1wcm92ZSBmZWVsIGFuZCB3b3JraW5nLiBUaGlzIGNhbiBiZSBkb25lIHdpdGggdGhlXG4gICAqIGBwcmV2ZW50RGVmYXVsdGAgb3B0aW9uLlxuICAgKlxuICAgKiBAY2xhc3MgVHJhbnNmb3JtXG4gICAqIEBzdGF0aWNcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdHJhbnNmb3JtXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCB0cmFuc2Zvcm1zdGFydFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgdHJhbnNmb3JtZW5kXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBwaW5jaGluXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cbiAgLyoqXG4gICAqIEBldmVudCBwaW5jaG91dFxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZcbiAgICovXG4gIC8qKlxuICAgKiBAZXZlbnQgcm90YXRlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldlxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICovXG4gIChmdW5jdGlvbihuYW1lKSB7XG4gICAgdmFyIHRyaWdnZXJlZCA9IGZhbHNlO1xuXG4gICAgZnVuY3Rpb24gdHJhbnNmb3JtR2VzdHVyZShldiwgaW5zdCkge1xuICAgICAgc3dpdGNoIChldi5ldmVudFR5cGUpIHtcbiAgICAgIGNhc2UgRVZFTlRfU1RBUlQ6XG4gICAgICAgIHRyaWdnZXJlZCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSBFVkVOVF9NT1ZFOlxuICAgICAgICAvLyBhdCBsZWFzdCBtdWx0aXRvdWNoXG4gICAgICAgIGlmIChldi50b3VjaGVzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgc2NhbGVUaHJlc2hvbGQgPSBNYXRoLmFicygxIC0gZXYuc2NhbGUpO1xuICAgICAgICB2YXIgcm90YXRpb25UaHJlc2hvbGQgPSBNYXRoLmFicyhldi5yb3RhdGlvbik7XG5cbiAgICAgICAgLy8gd2hlbiB0aGUgZGlzdGFuY2Ugd2UgbW92ZWQgaXMgdG9vIHNtYWxsIHdlIHNraXAgdGhpcyBnZXN0dXJlXG4gICAgICAgIC8vIG9yIHdlIGNhbiBiZSBhbHJlYWR5IGluIGRyYWdnaW5nXG4gICAgICAgIGlmIChzY2FsZVRocmVzaG9sZCA8IGluc3Qub3B0aW9ucy50cmFuc2Zvcm1NaW5TY2FsZSAmJlxuICAgICAgICAgIHJvdGF0aW9uVGhyZXNob2xkIDwgaW5zdC5vcHRpb25zLnRyYW5zZm9ybU1pblJvdGF0aW9uKSB7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gd2UgYXJlIHRyYW5zZm9ybWluZyFcbiAgICAgICAgRGV0ZWN0aW9uLmN1cnJlbnQubmFtZSA9IG5hbWU7XG5cbiAgICAgICAgLy8gZmlyc3QgdGltZSwgdHJpZ2dlciBkcmFnc3RhcnQgZXZlbnRcbiAgICAgICAgaWYgKCF0cmlnZ2VyZWQpIHtcbiAgICAgICAgICBpbnN0LnRyaWdnZXIobmFtZSArICdzdGFydCcsIGV2KTtcbiAgICAgICAgICB0cmlnZ2VyZWQgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaW5zdC50cmlnZ2VyKG5hbWUsIGV2KTsgLy8gYmFzaWMgdHJhbnNmb3JtIGV2ZW50XG5cbiAgICAgICAgLy8gdHJpZ2dlciByb3RhdGUgZXZlbnRcbiAgICAgICAgaWYgKHJvdGF0aW9uVGhyZXNob2xkID4gaW5zdC5vcHRpb25zLnRyYW5zZm9ybU1pblJvdGF0aW9uKSB7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKCdyb3RhdGUnLCBldik7XG4gICAgICAgIH1cblxuICAgICAgICAvLyB0cmlnZ2VyIHBpbmNoIGV2ZW50XG4gICAgICAgIGlmIChzY2FsZVRocmVzaG9sZCA+IGluc3Qub3B0aW9ucy50cmFuc2Zvcm1NaW5TY2FsZSkge1xuICAgICAgICAgIGluc3QudHJpZ2dlcigncGluY2gnLCBldik7XG4gICAgICAgICAgaW5zdC50cmlnZ2VyKCdwaW5jaCcgKyAoZXYuc2NhbGUgPCAxID8gJ2luJyA6ICdvdXQnKSwgZXYpO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlIEVWRU5UX1JFTEVBU0U6XG4gICAgICAgIGlmICh0cmlnZ2VyZWQgJiYgZXYuY2hhbmdlZExlbmd0aCA8IDIpIHtcbiAgICAgICAgICBpbnN0LnRyaWdnZXIobmFtZSArICdlbmQnLCBldik7XG4gICAgICAgICAgdHJpZ2dlcmVkID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuXG4gICAgR2VzdHVyZURldGVjdG9yLmdlc3R1cmVzLlRyYW5zZm9ybSA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICBpbmRleDogNDUsXG4gICAgICBkZWZhdWx0czoge1xuICAgICAgICAvKipcbiAgICAgICAgICogbWluaW1hbCBzY2FsZSBmYWN0b3IsIG5vIHNjYWxlIGlzIDEsIHpvb21pbiBpcyB0byAwIGFuZCB6b29tb3V0IHVudGlsIGhpZ2hlciB0aGVuIDFcbiAgICAgICAgICogQHByb3BlcnR5IHRyYW5zZm9ybU1pblNjYWxlXG4gICAgICAgICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAgICAgICAqIEBkZWZhdWx0IDAuMDFcbiAgICAgICAgICovXG4gICAgICAgIHRyYW5zZm9ybU1pblNjYWxlOiAwLjAxLFxuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiByb3RhdGlvbiBpbiBkZWdyZWVzXG4gICAgICAgICAqIEBwcm9wZXJ0eSB0cmFuc2Zvcm1NaW5Sb3RhdGlvblxuICAgICAgICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgICAgICAgKiBAZGVmYXVsdCAxXG4gICAgICAgICAqL1xuICAgICAgICB0cmFuc2Zvcm1NaW5Sb3RhdGlvbjogMVxuICAgICAgfSxcblxuICAgICAgaGFuZGxlcjogdHJhbnNmb3JtR2VzdHVyZVxuICAgIH07XG4gIH0pKCd0cmFuc2Zvcm0nKTtcblxuZXhwb3J0IGRlZmF1bHQgR2VzdHVyZURldGVjdG9yO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxubGV0IHJlYWR5TWFwLCBxdWV1ZU1hcDtcblxuZnVuY3Rpb24gaXNDb250ZW50UmVhZHkoZWxlbWVudCkge1xuICBpZiAoZWxlbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA+IDApIHtcbiAgICBzZXRDb250ZW50UmVhZHkoZWxlbWVudCk7XG4gIH1cbiAgcmV0dXJuIHJlYWR5TWFwLmhhcyhlbGVtZW50KTtcbn1cblxuZnVuY3Rpb24gc2V0Q29udGVudFJlYWR5KGVsZW1lbnQpIHtcbiAgcmVhZHlNYXAuc2V0KGVsZW1lbnQsIHRydWUpO1xufVxuXG5mdW5jdGlvbiBhZGRDYWxsYmFjayhlbGVtZW50LCBmbikge1xuICBpZiAoIXF1ZXVlTWFwLmhhcyhlbGVtZW50KSkge1xuICAgIHF1ZXVlTWFwLnNldChlbGVtZW50LCBbXSk7XG4gIH1cbiAgcXVldWVNYXAuZ2V0KGVsZW1lbnQpLnB1c2goZm4pO1xufVxuXG5mdW5jdGlvbiBjb25zdW1lUXVldWUoZWxlbWVudCkge1xuICBjb25zdCBjYWxsYmFja3MgPSBxdWV1ZU1hcC5nZXQoZWxlbWVudCwgW10pIHx8IFtdO1xuICBxdWV1ZU1hcC5kZWxldGUoZWxlbWVudCk7XG4gIGNhbGxiYWNrcy5mb3JFYWNoKGNhbGxiYWNrID0+IGNhbGxiYWNrKCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb250ZW50UmVhZHkoZWxlbWVudCwgZm4gPSAoKSA9PiB7fSkge1xuICBpZiAocmVhZHlNYXAgPT09IHVuZGVmaW5lZCkge1xuICAgIHJlYWR5TWFwID0gbmV3IFdlYWtNYXAoKTtcbiAgICBxdWV1ZU1hcCA9IG5ldyBXZWFrTWFwKCk7XG4gIH1cblxuICBhZGRDYWxsYmFjayhlbGVtZW50LCBmbik7XG5cbiAgaWYgKGlzQ29udGVudFJlYWR5KGVsZW1lbnQpKSB7XG4gICAgY29uc3VtZVF1ZXVlKGVsZW1lbnQpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGNvbnN0IG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoY2hhbmdlcyA9PiB7XG4gICAgc2V0Q29udGVudFJlYWR5KGVsZW1lbnQpO1xuICAgIGNvbnN1bWVRdWV1ZShlbGVtZW50KTtcbiAgfSk7XG4gIG9ic2VydmVyLm9ic2VydmUoZWxlbWVudCwge2NoaWxkTGlzdDogdHJ1ZSwgY2hhcmFjdGVyRGF0YTogdHJ1ZX0pO1xuXG4gIC8vIGZhaWxiYWNrIGZvciBlbGVtZW50cyBoYXMgZW1wdHkgY29udGVudC5cbiAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICBzZXRDb250ZW50UmVhZHkoZWxlbWVudCk7XG4gICAgY29uc3VtZVF1ZXVlKGVsZW1lbnQpO1xuICB9KTtcbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmNsYXNzIFRvYXN0UXVldWUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnF1ZXVlID0gW107XG4gIH1cblxuICBhZGQoZm4sIHByb21pc2UpIHtcbiAgICB0aGlzLnF1ZXVlLnB1c2goZm4pO1xuXG4gICAgaWYgKHRoaXMucXVldWUubGVuZ3RoID09PSAxKSB7XG4gICAgICBzZXRJbW1lZGlhdGUodGhpcy5xdWV1ZVswXSk7XG4gICAgfVxuXG4gICAgcHJvbWlzZS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMucXVldWUuc2hpZnQoKTtcblxuICAgICAgaWYgKHRoaXMucXVldWUubGVuZ3RoID4gMCkge1xuICAgICAgICBzZXRUaW1lb3V0KHRoaXMucXVldWVbMF0sIDEwMDAvMzApOyAvLyBBcHBseSBzb21lIHZpc3VhbCBkZWxheVxuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IG5ldyBUb2FzdFF1ZXVlKCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuL3V0aWwnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IFRvYXN0UXVldWUgZnJvbSAnLi9pbnRlcm5hbC90b2FzdC1xdWV1ZSc7XG5cbmNvbnN0IF9zZXRBdHRyaWJ1dGVzID0gKGVsZW1lbnQsIG9wdGlvbnMpID0+IHtcbiAgWydpZCcsICdjbGFzcycsICdhbmltYXRpb24nXVxuICAgIC5mb3JFYWNoKGEgPT4gb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShhKSAmJiBlbGVtZW50LnNldEF0dHJpYnV0ZShhLCBvcHRpb25zW2FdKSk7XG5cbiAgaWYgKG9wdGlvbnMubW9kaWZpZXIpIHtcbiAgICB1dGlsLmFkZE1vZGlmaWVyKGVsZW1lbnQsIG9wdGlvbnMubW9kaWZpZXIpO1xuICB9XG59O1xuXG5jb25zdCBfbm9ybWFsaXplQXJndW1lbnRzID0gKG1lc3NhZ2UsIG9wdGlvbnMgPSB7fSwgZGVmYXVsdHMgPSB7fSkgPT4ge1xuICBvcHRpb25zID0geyAuLi5vcHRpb25zIH07XG4gIHR5cGVvZiBtZXNzYWdlID09PSAnc3RyaW5nJyA/IChvcHRpb25zLm1lc3NhZ2UgPSBtZXNzYWdlKSA6IChvcHRpb25zID0gbWVzc2FnZSk7XG4gIGlmICghb3B0aW9ucyB8fCAhb3B0aW9ucy5tZXNzYWdlICYmICFvcHRpb25zLm1lc3NhZ2VIVE1MKSB7XG4gICAgdXRpbC50aHJvdygnTm90aWZpY2F0aW9ucyBtdXN0IGNvbnRhaW4gYSBtZXNzYWdlJyk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnYnV0dG9uTGFiZWxzJykgfHwgb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnYnV0dG9uTGFiZWwnKSkge1xuICAgIG9wdGlvbnMuYnV0dG9uTGFiZWxzID0gb3B0aW9ucy5idXR0b25MYWJlbHMgfHwgb3B0aW9ucy5idXR0b25MYWJlbDtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkob3B0aW9ucy5idXR0b25MYWJlbHMpKSB7XG4gICAgICBvcHRpb25zLmJ1dHRvbkxhYmVscyA9IFtvcHRpb25zLmJ1dHRvbkxhYmVscyB8fCAnJ11cbiAgICB9XG4gIH1cblxuICByZXR1cm4gdXRpbC5leHRlbmQoe1xuICAgICAgY29tcGlsZTogcGFyYW0gPT4gcGFyYW0sXG4gICAgICBjYWxsYmFjazogcGFyYW0gPT4gcGFyYW0sXG4gICAgICBhbmltYXRpb246ICdkZWZhdWx0JyxcbiAgICAgIGNhbmNlbGFibGU6IGZhbHNlLFxuICAgICAgcHJpbWFyeUJ1dHRvbkluZGV4OiAob3B0aW9ucy5idXR0b25MYWJlbHMgfHwgZGVmYXVsdHMuYnV0dG9uTGFiZWxzIHx8IFtdKS5sZW5ndGggLSAxXG4gICAgfSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xufTtcblxuLyoqXG4gKiBAb2JqZWN0IG9ucy5ub3RpZmljYXRpb25cbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9ub3RpZmljYXRpb25cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgVXRpbGl0eSBtZXRob2RzIHRvIGNyZWF0ZSBkaWZmZXJlbnQga2luZHMgb2Ygbm90aWZpY2F0aW9ucy4gVGhlcmUgYXJlIHRocmVlIG1ldGhvZHMgYXZhaWxhYmxlOlxuICpcbiAqICAgICAqIGBvbnMubm90aWZpY2F0aW9uLmFsZXJ0KClgXG4gKiAgICAgKiBgb25zLm5vdGlmaWNhdGlvbi5jb25maXJtKClgXG4gKiAgICAgKiBgb25zLm5vdGlmaWNhdGlvbi5wcm9tcHQoKWBcbiAqICAgICAqIGBvbnMubm90aWZpY2F0aW9uLnRvYXN0KClgXG4gKlxuICogICAgIEl0IHdpbGwgYXV0b21hdGljYWxseSBkaXNwbGF5IGEgTWF0ZXJpYWwgRGVzaWduIGRpYWxvZyBvbiBBbmRyb2lkIGRldmljZXMuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV3jgYTjgY/jgaTjgYvjga7nqK7poZ7jga7jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgpLkvZzmiJDjgZnjgovjgZ/jgoHjga7jg6bjg7zjg4bjgqPjg6rjg4bjgqPjg6Hjgr3jg4Pjg4njgpLlj47jgoHjgZ/jgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICogQGV4YW1wbGVcbiAqIG9ucy5ub3RpZmljYXRpb24uYWxlcnQoJ0hlbGxvLCB3b3JsZCEnKTtcbiAqXG4gKiBvbnMubm90aWZpY2F0aW9uLmNvbmZpcm0oJ0FyZSB5b3UgcmVhZHk/JylcbiAqICAgLnRoZW4oXG4gKiAgICAgZnVuY3Rpb24oYW5zd2VyKSB7XG4gKiAgICAgICBpZiAoYW5zd2VyID09PSAxKSB7XG4gKiAgICAgICAgIG9ucy5ub3RpZmljYXRpb24uYWxlcnQoJ0xldFxcJ3MgZ28hJyk7XG4gKiAgICAgICB9XG4gKiAgICAgfVxuICogICApO1xuICpcbiAqIG9ucy5ub3RpZmljYXRpb24ucHJvbXB0KCdIb3cgb2xkIGFyZSA/JylcbiAqICAgLnRoZW4oXG4gKiAgICAgZnVuY3Rpb24oYWdlKSB7XG4gKiAgICAgICBvbnMubm90aWZpY2F0aW9uLmFsZXJ0KCdZb3UgYXJlICcgKyBhZ2UgKyAnIHllYXJzIG9sZC4nKTtcbiAqICAgICB9XG4gKiAgICk7XG4gKi9cbmNvbnN0IG5vdGlmaWNhdGlvbiA9IHt9O1xuXG5ub3RpZmljYXRpb24uX2NyZWF0ZUFsZXJ0RGlhbG9nID0gKC4uLnBhcmFtcykgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gIGNvbnN0IG9wdGlvbnMgPSBfbm9ybWFsaXplQXJndW1lbnRzKC4uLnBhcmFtcyk7XG4gIHV0aWwuY2hlY2tNaXNzaW5nSW1wb3J0KCdBbGVydERpYWxvZycsICdBbGVydERpYWxvZ0J1dHRvbicpO1xuXG4gIC8vIFByb21wdCBpbnB1dCBzdHJpbmdcbiAgbGV0IGlucHV0U3RyaW5nID0gJyc7XG4gIGlmIChvcHRpb25zLmlzUHJvbXB0KSB7XG4gICAgaW5wdXRTdHJpbmcgPSBgXG4gICAgICA8aW5wdXRcbiAgICAgICAgY2xhc3M9XCJ0ZXh0LWlucHV0IHRleHQtaW5wdXQtLXVuZGVyYmFyXCJcbiAgICAgICAgdHlwZT1cIiR7b3B0aW9ucy5pbnB1dFR5cGUgfHwgJ3RleHQnfVwiXG4gICAgICAgIHBsYWNlaG9sZGVyPVwiJHtvcHRpb25zLnBsYWNlaG9sZGVyIHx8ICcnfVwiXG4gICAgICAgIHZhbHVlPVwiJHtvcHRpb25zLmRlZmF1bHRWYWx1ZSB8fCAnJ31cIlxuICAgICAgICBzdHlsZT1cIndpZHRoOiAxMDAlOyBtYXJnaW4tdG9wOiAxMHB4O1wiXG4gICAgICAvPlxuICAgIGA7XG4gIH1cblxuICAvLyBCdXR0b25zIHN0cmluZ1xuICBsZXQgYnV0dG9ucyA9ICcnO1xuICBvcHRpb25zLmJ1dHRvbkxhYmVscy5mb3JFYWNoKChsYWJlbCwgaW5kZXgpID0+IHtcbiAgICBidXR0b25zICs9IGBcbiAgICAgIDxvbnMtYWxlcnQtZGlhbG9nLWJ1dHRvblxuICAgICAgICBjbGFzcz1cIlxuICAgICAgICAgICR7aW5kZXggPT09IG9wdGlvbnMucHJpbWFyeUJ1dHRvbkluZGV4ID8gJyBhbGVydC1kaWFsb2ctYnV0dG9uLS1wcmltYWwnIDogJyd9XG4gICAgICAgICAgJHtvcHRpb25zLmJ1dHRvbkxhYmVscy5sZW5ndGggPD0gMiA/ICcgYWxlcnQtZGlhbG9nLWJ1dHRvbi0tcm93Zm9vdGVyJyA6ICcnfVxuICAgICAgICBcIlxuICAgICAgICBzdHlsZT1cInBvc2l0aW9uOiByZWxhdGl2ZTtcIj5cbiAgICAgICAgJHtsYWJlbH1cbiAgICAgIDwvb25zLWFsZXJ0LWRpYWxvZy1idXR0b24+XG4gICAgYDtcbiAgfSk7XG5cbiAgLy8gRGlhbG9nIEVsZW1lbnRcbiAgbGV0IGVsID0ge307XG4gIGNvbnN0IF9kZXN0cm95RGlhbG9nID0gKCkgPT4ge1xuICAgIGlmIChlbC5kaWFsb2cub25EaWFsb2dDYW5jZWwpIHtcbiAgICAgIGVsLmRpYWxvZy5yZW1vdmVFdmVudExpc3RlbmVyKCdkaWFsb2ctY2FuY2VsJywgZWwuZGlhbG9nLm9uRGlhbG9nQ2FuY2VsKTtcbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyhlbCkuZm9yRWFjaChrZXkgPT4gZGVsZXRlIGVsW2tleV0pO1xuICAgIGVsID0gbnVsbDtcblxuICAgIGlmIChvcHRpb25zLmRlc3Ryb3kgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgb3B0aW9ucy5kZXN0cm95KCk7XG4gICAgfVxuICB9O1xuXG4gIGVsLmRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29ucy1hbGVydC1kaWFsb2cnKTtcbiAgZWwuZGlhbG9nLmlubmVySFRNTCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLW1hc2tcIlxuICAgICAgc3R5bGU9XCJcbiAgICAgICAgJHtvcHRpb25zLm1hc2tDb2xvciA/ICdiYWNrZ3JvdW5kLWNvbG9yOiAnICsgb3B0aW9ucy5tYXNrQ29sb3IgOiAnJ31cbiAgICAgIFwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctY29udGFpbmVyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctdGl0bGVcIj5cbiAgICAgICAgICAke29wdGlvbnMudGl0bGUgfHwgJyd9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLWNvbnRlbnRcIj5cbiAgICAgICAgICAke29wdGlvbnMubWVzc2FnZSB8fCBvcHRpb25zLm1lc3NhZ2VIVE1MfVxuICAgICAgICAgICR7aW5wdXRTdHJpbmd9XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwiXG4gICAgICAgICAgYWxlcnQtZGlhbG9nLWZvb3RlclxuICAgICAgICAgICR7b3B0aW9ucy5idXR0b25MYWJlbHMubGVuZ3RoIDw9IDIgPyAnIGFsZXJ0LWRpYWxvZy1mb290ZXItLXJvd2Zvb3RlcicgOiAnJ31cbiAgICAgICAgXCI+XG4gICAgICAgICAgJHtidXR0b25zfVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgO1xuICBjb250ZW50UmVhZHkoZWwuZGlhbG9nKTtcblxuICAvLyBTZXQgYXR0cmlidXRlc1xuICBfc2V0QXR0cmlidXRlcyhlbC5kaWFsb2csIG9wdGlvbnMpO1xuXG4gIC8vIFByb21wdCBldmVudHNcbiAgaWYgKG9wdGlvbnMuaXNQcm9tcHQpIHtcbiAgICBlbC5pbnB1dCA9IGVsLmRpYWxvZy5xdWVyeVNlbGVjdG9yKCcudGV4dC1pbnB1dCcpO1xuXG4gICAgaWYgKG9wdGlvbnMuc3VibWl0T25FbnRlcikge1xuICAgICAgZWwuaW5wdXQub25rZXlwcmVzcyA9IGV2ZW50ID0+IHtcbiAgICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7XG4gICAgICAgICAgZWwuZGlhbG9nLmhpZGUoKVxuICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICBpZiAoZWwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNvbHZlVmFsdWUgPSBlbC5pbnB1dC52YWx1ZTtcbiAgICAgICAgICAgICAgICBfZGVzdHJveURpYWxvZygpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2socmVzb2x2ZVZhbHVlKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHJlc29sdmVWYWx1ZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIC8vIEJ1dHRvbiBldmVudHNcbiAgZWwuZm9vdGVyID0gZWwuZGlhbG9nLnF1ZXJ5U2VsZWN0b3IoJy5hbGVydC1kaWFsb2ctZm9vdGVyJyk7XG4gIHV0aWwuYXJyYXlGcm9tKGVsLmRpYWxvZy5xdWVyeVNlbGVjdG9yQWxsKCcuYWxlcnQtZGlhbG9nLWJ1dHRvbicpKS5mb3JFYWNoKChidXR0b25FbGVtZW50LCBpbmRleCkgPT4ge1xuICAgIGJ1dHRvbkVsZW1lbnQub25jbGljayA9ICgpID0+IHtcbiAgICAgICAgZWwuZGlhbG9nLmhpZGUoKVxuICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIGlmIChlbCkge1xuICAgICAgICAgICAgICBsZXQgcmVzb2x2ZVZhbHVlID0gaW5kZXg7XG4gICAgICAgICAgICAgIGlmIChvcHRpb25zLmlzUHJvbXB0KSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZVZhbHVlID0gaW5kZXggPT09IG9wdGlvbnMucHJpbWFyeUJ1dHRvbkluZGV4ID8gZWwuaW5wdXQudmFsdWUgOiBudWxsO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGVsLmRpYWxvZy5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgX2Rlc3Ryb3lEaWFsb2coKTtcbiAgICAgICAgICAgICAgb3B0aW9ucy5jYWxsYmFjayhyZXNvbHZlVmFsdWUpO1xuICAgICAgICAgICAgICByZXNvbHZlKHJlc29sdmVWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgfTtcblxuICAgIGVsLmZvb3Rlci5hcHBlbmRDaGlsZChidXR0b25FbGVtZW50KTtcbiAgfSk7XG5cbiAgLy8gQ2FuY2VsIGV2ZW50c1xuICBpZiAob3B0aW9ucy5jYW5jZWxhYmxlKSB7XG4gICAgZWwuZGlhbG9nLmNhbmNlbGFibGUgPSB0cnVlO1xuICAgIGVsLmRpYWxvZy5vbkRpYWxvZ0NhbmNlbCA9ICgpID0+IHtcbiAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgIGVsLmRpYWxvZy5yZW1vdmUoKTtcbiAgICAgICAgX2Rlc3Ryb3lEaWFsb2coKTtcbiAgICAgIH0pO1xuICAgICAgY29uc3QgcmVzb2x2ZVZhbHVlID0gb3B0aW9ucy5pc1Byb21wdCA/IG51bGwgOiAtMTtcbiAgICAgIG9wdGlvbnMuY2FsbGJhY2socmVzb2x2ZVZhbHVlKTtcbiAgICAgIHJlc29sdmUocmVzb2x2ZVZhbHVlKTtcbiAgICB9O1xuICAgIGVsLmRpYWxvZy5hZGRFdmVudExpc3RlbmVyKCdkaWFsb2ctY2FuY2VsJywgZWwuZGlhbG9nLm9uRGlhbG9nQ2FuY2VsLCBmYWxzZSk7XG4gIH1cblxuICAvLyBTaG93IGRpYWxvZ1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGVsLmRpYWxvZyk7XG4gIG9wdGlvbnMuY29tcGlsZShlbC5kaWFsb2cpO1xuICBzZXRJbW1lZGlhdGUoKCkgPT4ge1xuICAgIGVsLmRpYWxvZy5zaG93KClcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKGVsLmlucHV0ICYmIG9wdGlvbnMuaXNQcm9tcHQgJiYgb3B0aW9ucy5hdXRvZm9jdXMpIHtcbiAgICAgICAgICBjb25zdCBzdHJMZW5ndGggPSBlbC5pbnB1dC52YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgZWwuaW5wdXQuZm9jdXMoKTtcbiAgICAgICAgICBpZiAoZWwuaW5wdXQudHlwZSAmJlxuICAgICAgICAgICAgWyd0ZXh0JywgJ3NlYXJjaCcsICd1cmwnLCAndGVsJywgJ3Bhc3N3b3JkJ10uaW5jbHVkZXMoZWwuaW5wdXQudHlwZSkpIHtcbiAgICAgICAgICAgIGVsLmlucHV0LnNldFNlbGVjdGlvblJhbmdlKHN0ckxlbmd0aCwgc3RyTGVuZ3RoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9KTtcbn0pO1xuXG4vKipcbiAqIEBtZXRob2QgYWxlcnRcbiAqIEBzaWduYXR1cmUgYWxlcnQobWVzc2FnZSBbLCBvcHRpb25zXSB8IG9wdGlvbnMpXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dV2lsbCByZXNvbHZlIHRvIHRoZSBpbmRleCBvZiB0aGUgYnV0dG9uIHRoYXQgd2FzIHByZXNzZWQgb3IgYC0xYCB3aGVuIGNhbmNlbGVkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2VcbiAqICAgW2VuXU5vdGlmaWNhdGlvbiBtZXNzYWdlLiBUaGlzIGFyZ3VtZW50IGlzIG9wdGlvbmFsIGJ1dCBpZiBpdCdzIG5vdCBkZWZpbmVkIGVpdGhlciBgb3B0aW9ucy5tZXNzYWdlYCBvciBgb3B0aW9ucy5tZXNzYWdlSFRNTGAgbXVzdCBiZSBkZWZpbmVkIGluc3RlYWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5tZXNzYWdlXVxuICogICBbZW5dTm90aWZpY2F0aW9uIG1lc3NhZ2UuWy9lbl1cbiAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBq+ihqOekuuOBmeOCi+aWh+Wtl+WIl+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubWVzc2FnZUhUTUxdXG4gKiAgIFtlbl1Ob3RpZmljYXRpb24gbWVzc2FnZSBpbiBIVE1MLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgavooajnpLrjgZnjgotIVE1M44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nIHwgQXJyYXl9IFtvcHRpb25zLmJ1dHRvbkxhYmVsc11cbiAqICAgW2VuXUxhYmVscyBmb3IgdGhlIGJ1dHRvbnMuIERlZmF1bHQgaXMgYFwiT0tcImAuWy9lbl1cbiAqICAgW2phXeeiuuiqjeODnOOCv+ODs+OBruODqeODmeODq+OCkuaMh+WumuOBl+OBvuOBmeOAglwiT0tcIuOBjOODh+ODleOCqeODq+ODiOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge051bWJlcn0gW29wdGlvbnMucHJpbWFyeUJ1dHRvbkluZGV4XVxuICogICBbZW5dSW5kZXggb2YgcHJpbWFyeSBidXR0b24uIERlZmF1bHQgaXMgdGhlIGxhc3Qgb25lLlsvZW5dXG4gKiAgIFtqYV3jg5fjg6njgqTjg57jg6rjg5zjgr/jg7Pjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga8gMCDjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jYW5jZWxhYmxlXVxuICogICBbZW5dV2hldGhlciB0aGUgZGlhbG9nIGlzIGNhbmNlbGFibGUgb3Igbm90LiBEZWZhdWx0IGlzIGBmYWxzZWAuIElmIHRoZSBkaWFsb2cgaXMgY2FuY2VsYWJsZSBpdCBjYW4gYmUgY2xvc2VkIGJ5IGNsaWNraW5nIHRoZSBiYWNrZ3JvdW5kIG9yIHByZXNzaW5nIHRoZSBBbmRyb2lkIGJhY2sgYnV0dG9uLlsvZW5dXG4gKiAgIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzjgq3jg6Pjg7Pjgrvjg6vlj6/og73jgYvjganjgYbjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYG5vbmVgIGFuZCBgZmFkZWAuIERlZmF1bHQgaXMgYGZhZGVgLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgpLooajnpLrjgZnjgovpmpvjga7jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcIm5vbmVcIiwgXCJmYWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmlkXVxuICogICBbZW5dVGhlIGA8b25zLWFsZXJ0LWRpYWxvZz5gIGVsZW1lbnQncyBJRC5bL2VuXVxuICogICBbamFdb25zLWFsZXJ0LWRpYWxvZ+imgee0oOOBrklE44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5jbGFzc11cbiAqICAgW2VuXVRoZSBgPG9ucy1hbGVydC1kaWFsb2c+YCBlbGVtZW50J3MgY2xhc3MuWy9lbl1cbiAqICAgW2phXW9ucy1hbGVydC1kaWFsb2fopoHntKDjga5jbGFzc+OAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMudGl0bGVdXG4gKiAgIFtlbl1EaWFsb2cgdGl0bGUuIERlZmF1bHQgaXMgYFwiQWxlcnRcImAuWy9lbl1cbiAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBruS4iumDqOOBq+ihqOekuuOBmeOCi+OCv+OCpOODiOODq+OCkuaMh+WumuOBl+OBvuOBmeOAglwiQWxlcnRcIuOBjOODh+ODleOCqeODq+ODiOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubW9kaWZpZXJdXG4gKiAgIFtlbl1Nb2RpZmllciBmb3IgdGhlIGRpYWxvZy5bL2VuXVxuICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GubW9kaWZpZXLlsZ7mgKfjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLm1hc2tDb2xvcl1cbiAqICAgW2VuXUNvbG9yIG9mIHRoZSBiYWNrZ3JvdW5kIG1hc2suIERlZmF1bHQgaXMgXCJyZ2JhKDAsIDAsIDAsIDAuMilcIiAoXCJyZ2JhKDAsIDAsIDAsIDAuMylcIiBmb3IgTWF0ZXJpYWwpLlsvZW5dXG4gKiAgIFtqYV3og4zmma/jga7jg57jgrnjgq/jga7oibLjgpLmjIflrprjgZfjgb7jgZnjgIJcInJnYmEoMCwgMCwgMCwgMC4yKVwi44GM44OH44OV44Kp44Or44OI5YCk44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICogICBbZW5dRnVuY3Rpb24gdGhhdCBleGVjdXRlcyBhZnRlciBkaWFsb2cgaGFzIGJlZW4gY2xvc2VkLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgYzplonjgZjjgonjgozjgZ/mmYLjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBEaXNwbGF5IGFuIGFsZXJ0IGRpYWxvZyB0byBzaG93IHRoZSB1c2VyIGEgbWVzc2FnZS5cbiAqXG4gKiAgICAgVGhlIGNvbnRlbnQgb2YgdGhlIG1lc3NhZ2UgY2FuIGJlIGVpdGhlciBzaW1wbGUgdGV4dCBvciBIVE1MLlxuICpcbiAqICAgICBJdCBjYW4gYmUgY2FsbGVkIGluIHRoZSBmb2xsb3dpbmcgd2F5czpcbiAqXG4gKiAgICAgYGBgXG4gKiAgICAgb25zLm5vdGlmaWNhdGlvbi5hbGVydChtZXNzYWdlLCBvcHRpb25zKTtcbiAqICAgICBvbnMubm90aWZpY2F0aW9uLmFsZXJ0KG9wdGlvbnMpO1xuICogICAgIGBgYFxuICpcbiAqICAgICBNdXN0IHNwZWNpZnkgZWl0aGVyIGBtZXNzYWdlYCBvciBgbWVzc2FnZUhUTUxgLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg44Om44O844K244O844G444Oh44OD44K744O844K444KS6KaL44Gb44KL44Gf44KB44Gu44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCXG4gKiAgICAg6KGo56S644GZ44KL44Oh44OD44K744O844K444Gv44CB44OG44Kt44K544OI44GL44KC44GX44GP44GvSFRNTOOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglxuICogICAgIOOBk+OBruODoeOCveODg+ODieOBruW8leaVsOOBq+OBr+OAgW9wdGlvbnMubWVzc2FnZeOCguOBl+OBj+OBr29wdGlvbnMubWVzc2FnZUhUTUzjga7jganjgaHjgonjgYvjgpLlv4XjgZrmjIflrprjgZnjgovlv4XopoHjgYzjgYLjgorjgb7jgZnjgIJcbiAqICAgWy9qYV1cbiAqL1xubm90aWZpY2F0aW9uLmFsZXJ0ID0gKG1lc3NhZ2UsIG9wdGlvbnMpID0+XG4gIG5vdGlmaWNhdGlvbi5fY3JlYXRlQWxlcnREaWFsb2cobWVzc2FnZSwgb3B0aW9ucywge1xuICAgIGJ1dHRvbkxhYmVsczogWydPSyddLFxuICAgIHRpdGxlOiAnQWxlcnQnXG4gIH0pO1xuXG4vKipcbiAqIEBtZXRob2QgY29uZmlybVxuICogQHNpZ25hdHVyZSBjb25maXJtKG1lc3NhZ2UgWywgb3B0aW9uc10gfCBvcHRpb25zKVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVdpbGwgcmVzb2x2ZSB0byB0aGUgaW5kZXggb2YgdGhlIGJ1dHRvbiB0aGF0IHdhcyBwcmVzc2VkIG9yIGAtMWAgd2hlbiBjYW5jZWxlZC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlXG4gKiAgIFtlbl1Ob3RpZmljYXRpb24gbWVzc2FnZS4gVGhpcyBhcmd1bWVudCBpcyBvcHRpb25hbCBidXQgaWYgaXQncyBub3QgZGVmaW5lZCBlaXRoZXIgYG9wdGlvbnMubWVzc2FnZWAgb3IgYG9wdGlvbnMubWVzc2FnZUhUTUxgIG11c3QgYmUgZGVmaW5lZCBpbnN0ZWFkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqIEBwYXJhbSB7QXJyYXl9IFtvcHRpb25zLmJ1dHRvbkxhYmVsc11cbiAqICAgW2VuXUxhYmVscyBmb3IgdGhlIGJ1dHRvbnMuIERlZmF1bHQgaXMgYFtcIkNhbmNlbFwiLCBcIk9LXCJdYC5bL2VuXVxuICogICBbamFd44Oc44K/44Oz44Gu44Op44OZ44Or44Gu6YWN5YiX44KS5oyH5a6a44GX44G+44GZ44CCW1wiQ2FuY2VsXCIsIFwiT0tcIl3jgYzjg4fjg5Xjgqnjg6vjg4jjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnByaW1hcnlCdXR0b25JbmRleF1cbiAqICAgW2VuXUluZGV4IG9mIHByaW1hcnkgYnV0dG9uLiBEZWZhdWx0IGlzIHRoZSBsYXN0IG9uZS5bL2VuXVxuICogICBbamFd44OX44Op44Kk44Oe44Oq44Oc44K/44Oz44Gu44Kk44Oz44OH44OD44Kv44K544KS5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI44GvIDEg44Gn44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRGlzcGxheSBhIGRpYWxvZyB0byBhc2sgdGhlIHVzZXIgZm9yIGNvbmZpcm1hdGlvbi4gRXh0ZW5kcyBgYWxlcnQoKWAgcGFyYW1ldGVycy5cbiAqICAgICBUaGUgZGVmYXVsdCBidXR0b24gbGFiZWxzIGFyZSBgXCJDYW5jZWxcImAgYW5kIGBcIk9LXCJgIGJ1dCB0aGV5IGNhbiBiZSBjdXN0b21pemVkLlxuICpcbiAqICAgICBJdCBjYW4gYmUgY2FsbGVkIGluIHRoZSBmb2xsb3dpbmcgd2F5czpcbiAqXG4gKiAgICAgYGBgXG4gKiAgICAgb25zLm5vdGlmaWNhdGlvbi5jb25maXJtKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICogICAgIG9ucy5ub3RpZmljYXRpb24uY29uZmlybShvcHRpb25zKTtcbiAqICAgICBgYGBcbiAqXG4gKiAgICAgTXVzdCBzcGVjaWZ5IGVpdGhlciBgbWVzc2FnZWAgb3IgYG1lc3NhZ2VIVE1MYC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVxuICogICAgIOODpuODvOOCtuOBq+eiuuiqjeOCkuS/g+OBmeODgOOCpOOCouODreOCsOOCkuihqOekuuOBl+OBvuOBmeOAglxuICogICAgIOODh+OCquODq+OBqOOBruODnOOCv+ODs+ODqeODmeODq+OBr+OAgVwiQ2FuY2VsXCLjgahcIk9LXCLjgafjgZnjgYzjgIHjgZPjgozjga/jgZPjga7jg6Hjgr3jg4Pjg4njga7lvJXmlbDjgafjgqvjgrnjgr/jg57jgqTjgrrjgafjgY3jgb7jgZnjgIJcbiAqICAgICDjgZPjga7jg6Hjgr3jg4Pjg4njga7lvJXmlbDjgavjga/jgIFvcHRpb25zLm1lc3NhZ2XjgoLjgZfjgY/jga9vcHRpb25zLm1lc3NhZ2VIVE1M44Gu44Gp44Gh44KJ44GL44KS5b+F44Ga5oyH5a6a44GZ44KL5b+F6KaB44GM44GC44KK44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKi9cbm5vdGlmaWNhdGlvbi5jb25maXJtID0gKG1lc3NhZ2UsIG9wdGlvbnMpID0+XG4gIG5vdGlmaWNhdGlvbi5fY3JlYXRlQWxlcnREaWFsb2cobWVzc2FnZSwgb3B0aW9ucywge1xuICAgIGJ1dHRvbkxhYmVsczogWydDYW5jZWwnLCAnT0snXSxcbiAgICB0aXRsZTogJ0NvbmZpcm0nXG4gIH0pO1xuXG4vKipcbiAqIEBtZXRob2QgcHJvbXB0XG4gKiBAc2lnbmF0dXJlIHByb21wdChtZXNzYWdlIFssIG9wdGlvbnNdIHwgb3B0aW9ucylcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlXG4gKiAgIFtlbl1Ob3RpZmljYXRpb24gbWVzc2FnZS4gVGhpcyBhcmd1bWVudCBpcyBvcHRpb25hbCBidXQgaWYgaXQncyBub3QgZGVmaW5lZCBlaXRoZXIgYG9wdGlvbnMubWVzc2FnZWAgb3IgYG9wdGlvbnMubWVzc2FnZUhUTUxgIG11c3QgYmUgZGVmaW5lZCBpbnN0ZWFkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVdpbGwgcmVzb2x2ZSB0byB0aGUgaW5wdXQgdmFsdWUgd2hlbiB0aGUgZGlhbG9nIGlzIGNsb3NlZCBvciBgbnVsbGAgd2hlbiBjYW5jZWxlZC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmcgfCBBcnJheX0gW29wdGlvbnMuYnV0dG9uTGFiZWxzXVxuICogICBbZW5dTGFiZWxzIGZvciB0aGUgYnV0dG9ucy4gRGVmYXVsdCBpcyBgXCJPS1wiYC5bL2VuXVxuICogICBbamFd56K66KqN44Oc44K/44Oz44Gu44Op44OZ44Or44KS5oyH5a6a44GX44G+44GZ44CCXCJPS1wi44GM44OH44OV44Kp44Or44OI44Gn44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7TnVtYmVyfSBbb3B0aW9ucy5wcmltYXJ5QnV0dG9uSW5kZXhdXG4gKiAgIFtlbl1JbmRleCBvZiBwcmltYXJ5IGJ1dHRvbi4gRGVmYXVsdCBpcyB0aGUgbGFzdCBvbmUuWy9lbl1cbiAqICAgW2phXeODl+ODqeOCpOODnuODquODnOOCv+ODs+OBruOCpOODs+ODh+ODg+OCr+OCueOCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBryAwIOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucGxhY2Vob2xkZXJdXG4gKiAgIFtlbl1QbGFjZWhvbGRlciBmb3IgdGhlIHRleHQgaW5wdXQuWy9lbl1cbiAqICAgW2phXeODhuOCreOCueODiOashOOBruODl+ODrOODvOOCueODm+ODq+ODgOOBq+ihqOekuuOBmeOCi+ODhuOCreOCueODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuZGVmYXVsdFZhbHVlXVxuICogICBbZW5dRGVmYXVsdCB2YWx1ZSBmb3IgdGhlIHRleHQgaW5wdXQuWy9lbl1cbiAqICAgW2phXeODhuOCreOCueODiOashOOBruODh+ODleOCqeODq+ODiOOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaW5wdXRUeXBlXVxuICogICBbZW5dVHlwZSBvZiB0aGUgaW5wdXQgZWxlbWVudCAoYHBhc3N3b3JkYCwgYGRhdGVgLi4uKS4gRGVmYXVsdCBpcyBgdGV4dGAuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLmF1dG9mb2N1c11cbiAqICAgW2VuXUF1dG9mb2N1cyB0aGUgaW5wdXQgZWxlbWVudC4gRGVmYXVsdCBpcyBgdHJ1ZWAuIEluIENvcmRvdmEsIGBLZXlib2FyZERpc3BsYXlSZXF1aXJlc1VzZXJBY3Rpb25gIGluIGBjb25maWcueG1sYCBtdXN0IGJlIGBmYWxzZWAgdG8gYWN0aXZhdGUgdGhpcyBmZWF0dXJlLlsvZW5dXG4gKiAgIFtqYV1pbnB1dOimgee0oOOBq+iHquWLleeahOOBq+ODleOCqeODvOOCq+OCueOBmeOCi+OBi+OBqeOBhuOBi+OCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBr3RydWXjgafjgZnjgIJDb3Jkb3Zh55Kw5aKD44Gn44Gv44CB44GT44Gu5qmf6IO944KS5pyJ5Yq544Gr44GZ44KL44Gf44KB44Gr44GvIGBjb25maWcueG1sYCDjgacgYEtleWJvYXJkRGlzcGxheVJlcXVpcmVzVXNlckFjdGlvbmAg44KSIGBmYWxzZWAg44Gr6Kit5a6a44GZ44KL5b+F6KaB44GM44GC44KK44G+44GZ44CCWy9qYV1cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc3VibWl0T25FbnRlcl1cbiAqICAgW2VuXVN1Ym1pdCBhdXRvbWF0aWNhbGx5IHdoZW4gZW50ZXIgaXMgcHJlc3NlZC4gRGVmYXVsdCBpcyBgdHJ1ZWAuWy9lbl1cbiAqICAgW2phXUVudGVy44GM5oq844GV44KM44Gf6Zqb44Gr44Gd44GuZm9ybeOCknN1Ym1pdOOBmeOCi+OBi+OBqeOBhuOBi+OCkuaMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBr3RydWXjgafjgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBEaXNwbGF5IGEgZGlhbG9nIHdpdGggYSBwcm9tcHQgdG8gYXNrIHRoZSB1c2VyIGEgcXVlc3Rpb24uIEV4dGVuZHMgYGFsZXJ0KClgIHBhcmFtZXRlcnMuXG4gKlxuICogICAgIEl0IGNhbiBiZSBjYWxsZWQgaW4gdGhlIGZvbGxvd2luZyB3YXlzOlxuICpcbiAqICAgICBgYGBcbiAqICAgICBvbnMubm90aWZpY2F0aW9uLnByb21wdChtZXNzYWdlLCBvcHRpb25zKTtcbiAqICAgICBvbnMubm90aWZpY2F0aW9uLnByb21wdChvcHRpb25zKTtcbiAqICAgICBgYGBcbiAqXG4gKiAgICAgTXVzdCBzcGVjaWZ5IGVpdGhlciBgbWVzc2FnZWAgb3IgYG1lc3NhZ2VIVE1MYC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVxuICogICAgIOODpuODvOOCtuODvOOBq+WFpeWKm+OCkuS/g+OBmeODgOOCpOOCouODreOCsOOCkuihqOekuuOBl+OBvuOBmeOAglxuICogICAgIOOBk+OBruODoeOCveODg+ODieOBruW8leaVsOOBq+OBr+OAgW9wdGlvbnMubWVzc2FnZeOCguOBl+OBj+OBr29wdGlvbnMubWVzc2FnZUhUTUzjga7jganjgaHjgonjgYvjgpLlv4XjgZrmjIflrprjgZnjgovlv4XopoHjgYzjgYLjgorjgb7jgZnjgIJcbiAqICAgWy9qYV1cbiAqL1xubm90aWZpY2F0aW9uLnByb21wdCA9IChtZXNzYWdlLCBvcHRpb25zKSA9PlxuICBub3RpZmljYXRpb24uX2NyZWF0ZUFsZXJ0RGlhbG9nKG1lc3NhZ2UsIG9wdGlvbnMsIHtcbiAgICBidXR0b25MYWJlbHM6IFsnT0snXSxcbiAgICB0aXRsZTogJ0FsZXJ0JyxcbiAgICBpc1Byb21wdDogdHJ1ZSxcbiAgICBhdXRvZm9jdXM6IHRydWUsXG4gICAgc3VibWl0T25FbnRlcjogdHJ1ZVxuICB9KTtcblxuLyoqXG4gKiBAbWV0aG9kIHRvYXN0XG4gKiBAc2lnbmF0dXJlIHRvYXN0KG1lc3NhZ2UgWywgb3B0aW9uc10gfCBvcHRpb25zKVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVdpbGwgcmVzb2x2ZSB3aGVuIHRoZSB0b2FzdCBpcyBoaWRkZW4uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gbWVzc2FnZVxuICogICBbZW5dVG9hc3QgbWVzc2FnZS4gVGhpcyBhcmd1bWVudCBpcyBvcHRpb25hbCBidXQgaWYgaXQncyBub3QgZGVmaW5lZCB0aGVuIGBvcHRpb25zLm1lc3NhZ2VgIG11c3QgYmUgZGVmaW5lZCBpbnN0ZWFkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMubWVzc2FnZV1cbiAqICAgW2VuXU5vdGlmaWNhdGlvbiBtZXNzYWdlLlsvZW5dXG4gKiAgIFtqYV3jg4jjg7zjgrnjg4jjgavooajnpLrjgZnjgovmloflrZfliJfjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmJ1dHRvbkxhYmVsXVxuICogICBbZW5dTGFiZWwgZm9yIHRoZSBidXR0b24uWy9lbl1cbiAqICAgW2phXeeiuuiqjeODnOOCv+ODs+OBruODqeODmeODq+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgbm9uZWAsIGBmYWRlYCwgYGFzY2VuZGAsIGBsaWZ0YCBhbmQgYGZhbGxgLiBEZWZhdWx0IGlzIGBhc2NlbmRgIGZvciBBbmRyb2lkIGFuZCBgbGlmdGAgZm9yIGlPUy5bL2VuXVxuICogICBbamFd44OI44O844K544OI44KS6KGo56S644GZ44KL6Zqb44Gu44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJub25lXCIsIFwiZmFkZVwiLCBcImFzY2VuZFwiLCBcImxpZnRcIiwgXCJmYWxsXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnRpbWVvdXRdXG4gKiAgIFtlbl1OdW1iZXIgb2YgbWlsaXNlY29uZHMgd2hlcmUgdGhlIHRvYXN0IGlzIHZpc2libGUgYmVmb3JlIGhpZGluZyBhdXRvbWF0aWNhbGx5LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5mb3JjZV1cbiAqICAgW2VuXUlmIGB0cnVlYCwgdGhlIHRvYXN0IHNraXBzIHRoZSBub3RpZmljYXRpb24gcXVldWUgYW5kIGlzIHNob3duIGltbWVkaWF0ZWx5LiBEZWZhdWx0cyB0byBgZmFsc2VgLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmlkXVxuICogICBbZW5dVGhlIGA8b25zLXRvYXN0PmAgZWxlbWVudCdzIElELlsvZW5dXG4gKiAgIFtqYV1vbnMtdG9hc3TopoHntKDjga5JROOAglsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuY2xhc3NdXG4gKiAgIFtlbl1UaGUgYDxvbnMtdG9hc3Q+YCBlbGVtZW50J3MgY2xhc3MuWy9lbl1cbiAqICAgW2phXW9ucy10b2FzdOimgee0oOOBrmNsYXNz44CCWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5tb2RpZmllcl1cbiAqICAgW2VuXU1vZGlmaWVyIGZvciB0aGUgZWxlbWVudC5bL2VuXVxuICogICBbamFd44OI44O844K544OI44GubW9kaWZpZXLlsZ7mgKfjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGV4ZWN1dGVzIGFmdGVyIHRvYXN0IGhhcyBiZWVuIGhpZGRlbi5bL2VuXVxuICogICBbamFd44OI44O844K544OI44GM6ZaJ44GY44KJ44KM44Gf5pmC44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgRGlzcGxheSBhIHNpbXBsZSBub3RpZmljYXRpb24gdG9hc3Qgd2l0aCBhbiBvcHRpb25hbCBidXR0b24gdGhhdCBjYW4gYmUgdXNlZCBmb3Igc2ltcGxlIGFjdGlvbnMuXG4gKlxuICogICAgIEl0IGNhbiBiZSBjYWxsZWQgaW4gdGhlIGZvbGxvd2luZyB3YXlzOlxuICpcbiAqICAgICBgYGBcbiAqICAgICBvbnMubm90aWZpY2F0aW9uLnRvYXN0KG1lc3NhZ2UsIG9wdGlvbnMpO1xuICogICAgIG9ucy5ub3RpZmljYXRpb24udG9hc3Qob3B0aW9ucyk7XG4gKiAgICAgYGBgXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5ub3RpZmljYXRpb24udG9hc3QgPSAobWVzc2FnZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgdXRpbC5jaGVja01pc3NpbmdJbXBvcnQoJ1RvYXN0Jyk7IC8vIFRocm93cyBlcnJvciwgbXVzdCBiZSBpbnNpZGUgcHJvbWlzZVxuXG4gICAgb3B0aW9ucyA9IF9ub3JtYWxpemVBcmd1bWVudHMobWVzc2FnZSwgb3B0aW9ucywge1xuICAgICAgdGltZW91dDogMCxcbiAgICAgIGZvcmNlOiBmYWxzZVxuICAgIH0pO1xuXG4gICAgbGV0IHRvYXN0ID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgICAgIDxvbnMtdG9hc3Q+XG4gICAgICAgICR7b3B0aW9ucy5tZXNzYWdlfVxuICAgICAgICAke29wdGlvbnMuYnV0dG9uTGFiZWxzID8gYDxidXR0b24+JHtvcHRpb25zLmJ1dHRvbkxhYmVsc1swXX08L2J1dHRvbj5gIDogJyd9XG4gICAgICA8L29ucy10b2FzdD5cbiAgICBgKTtcblxuICAgIF9zZXRBdHRyaWJ1dGVzKHRvYXN0LCBvcHRpb25zKTtcblxuICAgIGNvbnN0IG9yaWdpbmFsSGlkZSA9IHRvYXN0LmhpZGUuYmluZCh0b2FzdCk7XG5cbiAgICBjb25zdCBmaW5pc2ggPSB2YWx1ZSA9PiB7XG4gICAgICBpZiAodG9hc3QpIHtcbiAgICAgICAgb3JpZ2luYWxIaWRlKClcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIGlmICh0b2FzdCkge1xuICAgICAgICAgICAgdG9hc3QucmVtb3ZlKCk7XG4gICAgICAgICAgICB0b2FzdCA9IG51bGw7XG4gICAgICAgICAgICBvcHRpb25zLmNhbGxiYWNrKHZhbHVlKTtcbiAgICAgICAgICAgIHJlc29sdmUodmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmIChvcHRpb25zLmJ1dHRvbkxhYmVscykge1xuICAgICAgdXRpbC5maW5kQ2hpbGQodG9hc3QuX3RvYXN0LCAnYnV0dG9uJykub25jbGljayA9ICgpID0+IGZpbmlzaCgwKTtcbiAgICB9XG5cbiAgICAvLyBvdmVyd3JpdGUgc28gdGhhdCBvbnMubm90aWZpY2F0aW9uLmhpZGUgcmVzb2x2ZXMgd2hlbiB0b2FzdC5oaWRlIGlzIGNhbGxlZFxuICAgIHRvYXN0LmhpZGUgPSAoKSA9PiBmaW5pc2goLTEpO1xuXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b2FzdCk7XG4gICAgb3B0aW9ucy5jb21waWxlKHRvYXN0KTtcblxuICAgIGNvbnN0IHNob3cgPSAoKSA9PiB7XG4gICAgICB0b2FzdC5wYXJlbnRFbGVtZW50ICYmIHRvYXN0LnNob3cob3B0aW9ucykudGhlbigoKSA9PiB7XG4gICAgICAgIGlmIChvcHRpb25zLnRpbWVvdXQpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IGZpbmlzaCgtMSksIG9wdGlvbnMudGltZW91dClcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHNldEltbWVkaWF0ZSgoKSA9PiBvcHRpb25zLmZvcmNlID8gc2hvdygpIDogVG9hc3RRdWV1ZS5hZGQoc2hvdywgcHJvbWlzZSkpXG4gIH0pO1xuXG4gIHJldHVybiBwcm9taXNlO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbm90aWZpY2F0aW9uO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcblxuLy8gVmFsaWRhdGUgcGFyYW1ldGVyc1xuY29uc3QgY2hlY2tPcHRpb25zID0gb3B0aW9ucyA9PiB7XG4gIGNvbnN0IGVyciA9IChwcm9wLCB0eXBlID0gJ0Z1bmN0aW9uJykgPT4gdXRpbC50aHJvdyhgXCJvcHRpb25zLiR7cHJvcH1cIiBtdXN0IGJlIGFuIGluc3RhbmNlIG9mICR7dHlwZX1gKTtcbiAgY29uc3QgaGFzT3duUHJvcGVydHkgPSBwcm9wID0+IE9iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIHByb3ApO1xuICBjb25zdCBpbnN0YW5jZU9mID0gKHByb3AsIHR5cGUgPSBGdW5jdGlvbikgPT4gb3B0aW9uc1twcm9wXSBpbnN0YW5jZW9mIHR5cGU7XG5cbiAgY29uc3QgYiA9ICdidXR0b25zJywgY2IgPSAnY2FsbGJhY2snLCBjID0gJ2NvbXBpbGUnLCBkID0gJ2Rlc3Ryb3knO1xuICAoIWhhc093blByb3BlcnR5KGIpIHx8ICFpbnN0YW5jZU9mKGIsIEFycmF5KSkgJiYgZXJyKGIsICdBcnJheScpO1xuICAoaGFzT3duUHJvcGVydHkoY2IpICYmICFpbnN0YW5jZU9mKGNiKSkgJiYgZXJyKGNiKTtcbiAgKGhhc093blByb3BlcnR5KGMpICYmICFpbnN0YW5jZU9mKGMpKSAmJiBlcnIoYyk7XG4gIChoYXNPd25Qcm9wZXJ0eShkKSAmJiAhaW5zdGFuY2VPZihkKSkgJiYgZXJyKGQpO1xufTtcblxuLy8gQWN0aW9uIFNoZWV0XG5leHBvcnQgZGVmYXVsdCAob3B0aW9ucyA9IHt9KSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgdXRpbC5jaGVja01pc3NpbmdJbXBvcnQoJ0FjdGlvblNoZWV0Jyk7XG4gIGNoZWNrT3B0aW9ucyhvcHRpb25zKTtcblxuICAvLyBNYWluIGNvbXBvbmVudFxuICBsZXQgYWN0aW9uU2hlZXQgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYFxuICAgIDxvbnMtYWN0aW9uLXNoZWV0XG4gICAgICAke29wdGlvbnMudGl0bGUgPyBgdGl0bGU9XCIke29wdGlvbnMudGl0bGV9XCJgIDogJyd9XG4gICAgICAke29wdGlvbnMuY2FuY2VsYWJsZSA/ICdjYW5jZWxhYmxlJyA6ICcnfVxuICAgICAgJHtvcHRpb25zLm1vZGlmaWVyID8gYG1vZGlmaWVyPVwiJHtvcHRpb25zLm1vZGlmaWVyfVwiYCA6ICcnfVxuICAgICAgJHtvcHRpb25zLm1hc2tDb2xvciA/IGBtYXNrLWNvbG9yPVwiJHtvcHRpb25zLm1hc2tDb2xvcn1cImAgOiAnJ31cbiAgICAgICR7b3B0aW9ucy5pZCA/IGBpZD1cIiR7b3B0aW9ucy5pZH1cImAgOiAnJ31cbiAgICAgICR7b3B0aW9ucy5jbGFzcyA/IGBjbGFzcz1cIiR7b3B0aW9ucy5jbGFzc31cImAgOiAnJ31cbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLXNoZWV0XCI+PC9kaXY+XG4gICAgPC9vbnMtYWN0aW9uLXNoZWV0PlxuICBgKTtcblxuICAvLyBSZXNvbHZlIGFjdGlvbiBhbmQgY2xlYW4gdXBcbiAgY29uc3QgZmluaXNoID0gKGV2ZW50LCBpbmRleCA9IC0xKSA9PiB7XG4gICAgaWYgKGFjdGlvblNoZWV0KSB7XG4gICAgICBvcHRpb25zLmRlc3Ryb3kgJiYgb3B0aW9ucy5kZXN0cm95KGFjdGlvblNoZWV0KTtcblxuICAgICAgYWN0aW9uU2hlZXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZGlhbG9nLWNhbmNlbCcsIGZpbmlzaCwgZmFsc2UpO1xuICAgICAgYWN0aW9uU2hlZXQucmVtb3ZlKCk7XG4gICAgICBhY3Rpb25TaGVldCA9IG51bGw7XG5cbiAgICAgIG9wdGlvbnMuY2FsbGJhY2sgJiYgb3B0aW9ucy5jYWxsYmFjayhpbmRleCk7XG4gICAgICByZXNvbHZlKGluZGV4KTtcbiAgICB9XG4gIH07XG5cbiAgLy8gTGluayBjYW5jZWwgaGFuZGxlclxuICBhY3Rpb25TaGVldC5hZGRFdmVudExpc3RlbmVyKCdkaWFsb2ctY2FuY2VsJywgZmluaXNoLCBmYWxzZSk7XG5cbiAgLy8gQ3JlYXRlIGJ1dHRvbnMgYW5kIGxpbmsgYWN0aW9uIGhhbmRsZXJcbiAgY29uc3QgYnV0dG9ucyA9IGRvY3VtZW50LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKTtcbiAgb3B0aW9ucy5idXR0b25zLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XG4gICAgY29uc3QgYnV0dG9uT3B0aW9ucyA9ICh0eXBlb2YgaXRlbSA9PT0gJ3N0cmluZycpID8geyBsYWJlbDogaXRlbSB9IDogeyAuLi5pdGVtIH07XG4gICAgaWYgKG9wdGlvbnMuZGVzdHJ1Y3RpdmUgPT09IGluZGV4KSB7XG4gICAgICBidXR0b25PcHRpb25zLm1vZGlmaWVyID0gKGJ1dHRvbk9wdGlvbnMubW9kaWZpZXIgfHwgJycpICsgJyBkZXN0cnVjdGl2ZSc7XG4gICAgfVxuXG4gICAgY29uc3QgYnV0dG9uID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgICAgIDxvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvblxuICAgICAgICAke2J1dHRvbk9wdGlvbnMuaWNvbiA/IGBpY29uPVwiJHtidXR0b25PcHRpb25zLmljb259XCJgIDogJyd9XG4gICAgICAgICR7YnV0dG9uT3B0aW9ucy5tb2RpZmllciA/IGBtb2RpZmllcj1cIiR7YnV0dG9uT3B0aW9ucy5tb2RpZmllcn1cImAgOiAnJ31cbiAgICAgID5cbiAgICAgICAgJHtidXR0b25PcHRpb25zLmxhYmVsfVxuICAgICAgPC9vbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbj5cbiAgICBgKTtcblxuICAgIGJ1dHRvbi5vbmNsaWNrID0gZXZlbnQgPT4gYWN0aW9uU2hlZXQuaGlkZSgpLnRoZW4oKCkgPT4gZmluaXNoKGV2ZW50LCBpbmRleCkpO1xuICAgIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgfSk7XG5cbiAgLy8gRmluaXNoIGNvbXBvbmVudCBhbmQgYXR0YWNoXG4gIHV0aWwuZmluZENoaWxkKGFjdGlvblNoZWV0LCAnLmFjdGlvbi1zaGVldCcpLmFwcGVuZENoaWxkKGJ1dHRvbnMpO1xuICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGFjdGlvblNoZWV0KTtcbiAgb3B0aW9ucy5jb21waWxlICYmIG9wdGlvbnMuY29tcGlsZShlbC5kaWFsb2cpO1xuXG4gIC8vIFNob3dcbiAgc2V0SW1tZWRpYXRlKCgpID0+IGFjdGlvblNoZWV0LnNob3coe1xuICAgIGFuaW1hdGlvbjogb3B0aW9ucy5hbmltYXRpb24sXG4gICAgYW5pbWF0aW9uT3B0aW9uczogb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXG4gIH0pKTtcbn0pO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IE1pY3JvRXZlbnQgZnJvbSAnLi9taWNyb2V2ZW50JztcblxuY29uc3QgY3JlYXRlID0gKCkgPT4ge1xuXG4gIC8qKlxuICAgKiBAb2JqZWN0IG9ucy5vcmllbnRhdGlvblxuICAgKiBAY2F0ZWdvcnkgdXRpbFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXRpbGl0eSBtZXRob2RzIGZvciBvcmllbnRhdGlvbiBkZXRlY3Rpb24uWy9lbl1cbiAgICogICBbamFd55S76Z2i44Gu44Kq44Oq44Ko44Oz44OG44O844K344On44Oz5qSc55+l44Gu44Gf44KB44Gu44Om44O844OG44Kj44Oq44OG44Kj44Oh44K944OD44OJ44KS5Y+O44KB44Gm44GE44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICovXG4gIGNvbnN0IG9iaiA9IHtcbiAgICAvKipcbiAgICAgKiBAZXZlbnQgY2hhbmdlXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZXMuWy9lbl1cbiAgICAgKiAgIFtqYV3jg4fjg5DjgqTjgrnjga7jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYzlpInljJbjgZfjgZ/pmpvjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBldmVudC5pc1BvcnRyYWl0XG4gICAgICogICBbZW5dV2lsbCBiZSB0cnVlIGlmIHRoZSBjdXJyZW50IG9yaWVudGF0aW9uIGlzIHBvcnRyYWl0IG1vZGUuWy9lbl1cbiAgICAgKiAgIFtqYV3nj77lnKjjga7jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxwb3J0cmFpdOOBruWgtOWQiOOBq3RydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBvblxuICAgICAqIEBzaWduYXR1cmUgb24oZXZlbnROYW1lLCBsaXN0ZW5lcilcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgIFtlbl1BZGQgYW4gZXZlbnQgbGlzdGVuZXIuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLov73liqDjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudE5hbWVcbiAgICAgKiAgIFtlbl1OYW1lIG9mIHRoZSBldmVudC5bL2VuXVxuICAgICAqICAgW2phXeOCpOODmeODs+ODiOWQjeOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXJcbiAgICAgKiAgIFtlbl1GdW5jdGlvbiB0byBleGVjdXRlIHdoZW4gdGhlIGV2ZW50IGlzIHRyaWdnZXJlZC5bL2VuXVxuICAgICAqICAgW2phXeOBk+OBruOCpOODmeODs+ODiOOBjOeZuueBq+OBleOCjOOBn+mam+OBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIG9uY2VcbiAgICAgKiBAc2lnbmF0dXJlIG9uY2UoZXZlbnROYW1lLCBsaXN0ZW5lcilcbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgW2VuXUFkZCBhbiBldmVudCBsaXN0ZW5lciB0aGF0J3Mgb25seSB0cmlnZ2VyZWQgb25jZS5bL2VuXVxuICAgICAqICBbamFd5LiA5bqm44Gg44GR5ZG844Gz5Ye644GV44KM44KL44Kk44OZ44Oz44OI44Oq44K544OK44O844KS6L+95Yqg44GX44G+44GZ44CCWy9qYV1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lXG4gICAgICogICBbZW5dTmFtZSBvZiB0aGUgZXZlbnQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgYznmbrngavjgZfjgZ/pmpvjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLyoqXG4gICAgICogQG1ldGhvZCBvZmZcbiAgICAgKiBAc2lnbmF0dXJlIG9mZihldmVudE5hbWUsIFtsaXN0ZW5lcl0pXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogIFtlbl1SZW1vdmUgYW4gZXZlbnQgbGlzdGVuZXIuIElmIHRoZSBsaXN0ZW5lciBpcyBub3Qgc3BlY2lmaWVkIGFsbCBsaXN0ZW5lcnMgZm9yIHRoZSBldmVudCB0eXBlIHdpbGwgYmUgcmVtb3ZlZC5bL2VuXVxuICAgICAqICBbamFd44Kk44OZ44Oz44OI44Oq44K544OK44O844KS5YmK6Zmk44GX44G+44GZ44CC44KC44GX44Kk44OZ44Oz44OI44Oq44K544OK44O844KS5oyH5a6a44GX44Gq44GL44Gj44Gf5aC05ZCI44Gr44Gv44CB44Gd44Gu44Kk44OZ44Oz44OI44Gr57SQ44Gl44GP5YWo44Gm44Gu44Kk44OZ44Oz44OI44Oq44K544OK44O844GM5YmK6Zmk44GV44KM44G+44GZ44CCWy9qYV1cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZXZlbnROYW1lXG4gICAgICogICBbZW5dTmFtZSBvZiB0aGUgZXZlbnQuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyXG4gICAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSB3aGVuIHRoZSBldmVudCBpcyB0cmlnZ2VyZWQuWy9lbl1cbiAgICAgKiAgIFtqYV3liYrpmaTjgZnjgovjgqTjg5njg7Pjg4jjg6rjgrnjg4rjg7zjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuXG4gICAgLy8gYWN0dWFsIGltcGxlbWVudGF0aW9uIHRvIGRldGVjdCBpZiB3aGV0aGVyIGN1cnJlbnQgc2NyZWVuIGlzIHBvcnRyYWl0IG9yIG5vdFxuICAgIF9pc1BvcnRyYWl0OiBmYWxzZSxcblxuICAgIC8qKlxuICAgICAqIEBtZXRob2QgaXNQb3J0cmFpdFxuICAgICAqIEBzaWduYXR1cmUgaXNQb3J0cmFpdCgpXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKiAgIFtlbl1XaWxsIGJlIHRydWUgaWYgdGhlIGN1cnJlbnQgb3JpZW50YXRpb24gaXMgcG9ydHJhaXQgbW9kZS5bL2VuXVxuICAgICAqICAgW2phXeOCquODquOCqOODs+ODhuODvOOCt+ODp+ODs+OBjHBvcnRyYWl044Oi44O844OJ44Gu5aC05ZCI44GrdHJ1ZeOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAgICogQGRlc2NyaXB0aW9uXG4gICAgICogICBbZW5dUmV0dXJucyB3aGV0aGVyIHRoZSBjdXJyZW50IHNjcmVlbiBvcmllbnRhdGlvbiBpcyBwb3J0cmFpdCBvciBub3QuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxwb3J0cmFpdOODouODvOODieOBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAgICovXG4gICAgaXNQb3J0cmFpdDogZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gdGhpcy5faXNQb3J0cmFpdCgpO1xuICAgIH0sXG5cbiAgICAvKipcbiAgICAgKiBAbWV0aG9kIGlzTGFuZHNjYXBlXG4gICAgICogQHNpZ25hdHVyZSBpc0xhbmRzY2FwZSgpXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICAgKiAgIFtlbl1XaWxsIGJlIHRydWUgaWYgdGhlIGN1cnJlbnQgb3JpZW50YXRpb24gaXMgbGFuZHNjYXBlIG1vZGUuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxsYW5kc2NhcGXjg6Ljg7zjg4njga7loLTlkIjjgat0cnVl44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICAgKiBAZGVzY3JpcHRpb25cbiAgICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIGN1cnJlbnQgc2NyZWVuIG9yaWVudGF0aW9uIGlzIGxhbmRzY2FwZSBvciBub3QuWy9lbl1cbiAgICAgKiAgIFtqYV3jgqrjg6rjgqjjg7Pjg4bjg7zjgrfjg6fjg7PjgYxsYW5kc2NhcGXjg6Ljg7zjg4njgYvjganjgYbjgYvjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgICAqL1xuICAgIGlzTGFuZHNjYXBlOiBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiAhdGhpcy5pc1BvcnRyYWl0KCk7XG4gICAgfSxcblxuICAgIF9pbml0OiBmdW5jdGlvbigpIHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCB0aGlzLl9vbkRPTUNvbnRlbnRMb2FkZWQuYmluZCh0aGlzKSwgZmFsc2UpO1xuXG4gICAgICBpZiAoJ29yaWVudGF0aW9uJyBpbiB3aW5kb3cpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29yaWVudGF0aW9uY2hhbmdlJywgdGhpcy5fb25PcmllbnRhdGlvbkNoYW5nZS5iaW5kKHRoaXMpLCBmYWxzZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fb25SZXNpemUuYmluZCh0aGlzKSwgZmFsc2UpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQgPiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIH07XG5cbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sXG5cbiAgICBfb25ET01Db250ZW50TG9hZGVkOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuX2luc3RhbGxJc1BvcnRyYWl0SW1wbGVtZW50YXRpb24oKTtcbiAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywge2lzUG9ydHJhaXQ6IHRoaXMuaXNQb3J0cmFpdCgpfSk7XG4gICAgfSxcblxuICAgIF9pbnN0YWxsSXNQb3J0cmFpdEltcGxlbWVudGF0aW9uOiBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnN0IGlzUG9ydHJhaXQgPSB3aW5kb3cuaW5uZXJXaWR0aCA8IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgICAgaWYgKCEoJ29yaWVudGF0aW9uJyBpbiB3aW5kb3cpKSB7XG4gICAgICAgIHRoaXMuX2lzUG9ydHJhaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gd2luZG93LmlubmVySGVpZ2h0ID4gd2luZG93LmlubmVyV2lkdGg7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2UgaWYgKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCA9PT0gMCkge1xuICAgICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCkgPT09IDAgPyBpc1BvcnRyYWl0IDogIWlzUG9ydHJhaXQ7XG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9pc1BvcnRyYWl0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIE1hdGguYWJzKHdpbmRvdy5vcmllbnRhdGlvbiAlIDE4MCkgPT09IDkwID8gaXNQb3J0cmFpdCA6ICFpc1BvcnRyYWl0O1xuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0sXG5cbiAgICBfb25PcmllbnRhdGlvbkNoYW5nZTogZnVuY3Rpb24oKSB7XG4gICAgICBjb25zdCBpc1BvcnRyYWl0ID0gdGhpcy5faXNQb3J0cmFpdCgpO1xuXG4gICAgICAvLyBXYWl0IGZvciB0aGUgZGltZW5zaW9ucyB0byBjaGFuZ2UgYmVjYXVzZVxuICAgICAgLy8gb2YgQW5kcm9pZCBpbmNvbnNpc3RlbmN5LlxuICAgICAgbGV0IG5JdGVyID0gMDtcbiAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICBuSXRlcisrO1xuXG4gICAgICAgIGNvbnN0IHcgPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgY29uc3QgaCA9IHdpbmRvdy5pbm5lckhlaWdodDtcblxuICAgICAgICBpZiAoKGlzUG9ydHJhaXQgJiYgdyA8PSBoKSB8fFxuICAgICAgICAgICAoIWlzUG9ydHJhaXQgJiYgdyA+PSBoKSkge1xuICAgICAgICAgIHRoaXMuZW1pdCgnY2hhbmdlJywge2lzUG9ydHJhaXQ6IGlzUG9ydHJhaXR9KTtcbiAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTtcbiAgICAgICAgfSBlbHNlIGlmIChuSXRlciA9PT0gNTApIHtcbiAgICAgICAgICB0aGlzLmVtaXQoJ2NoYW5nZScsIHtpc1BvcnRyYWl0OiBpc1BvcnRyYWl0fSk7XG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7XG4gICAgICAgIH1cbiAgICAgIH0sIDIwKTtcbiAgICB9LFxuXG4gICAgLy8gUnVuIG9uIG5vdCBtb2JpbGUgYnJvd3Nlci5cbiAgICBfb25SZXNpemU6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5lbWl0KCdjaGFuZ2UnLCB7aXNQb3J0cmFpdDogdGhpcy5pc1BvcnRyYWl0KCl9KTtcbiAgICB9XG4gIH07XG5cbiAgTWljcm9FdmVudC5taXhpbihvYmopO1xuXG4gIHJldHVybiBvYmo7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGUoKS5faW5pdCgpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcblxuLyoqXG4gKiBAb2JqZWN0IG9ucy5tb2RpZmllclxuICogQGNhdGVnb3J5IHZpc3VhbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBVdGlsaXR5IG1ldGhvZHMgdG8gY2hhbmdlIG1vZGlmaWVyIGF0dHJpYnV0ZXMgb2YgT25zZW4gVUkgZWxlbWVudHMuLlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBleGFtcGxlXG4gKiBvbnMubW9kaWZpZXIuYWRkKG15T25zSW5wdXRFbGVtZW50LCAndW5kZXJiYXInKTtcbiAqIG9ucy5tb2RpZmllci50b2dnbGUobXlPbnNUb2FzdEVsZW1lbnQsICdjdXN0b20tbW9kaWZpZXInKTtcbiAqXG4gKi9cbmV4cG9ydCBkZWZhdWx0IHtcbiAgLyoqXG4gICAqIEBtZXRob2QgYWRkXG4gICAqIEBzaWduYXR1cmUgYWRkKGVsZW1lbnQsIG1vZGlmaWVyIFssIG1vZGlmaWVyXSlcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUFkZCB0aGUgc3BlY2lmaWVkIG1vZGlmaWVycyB0byB0aGUgZWxlbWVudCBpZiB0aGV5IGFyZSBub3QgYWxyZWFkeSBpbmNsdWRlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqICAgW2VuXVRhcmdldCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllclxuICAgKiAgIFtlbl1OYW1lIG9mIHRoZSBtb2RpZmllci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgYWRkOiAoZWxlbWVudCwgLi4ubW9kaWZpZXJzKSA9PiBtb2RpZmllcnMuZm9yRWFjaChtb2RpZmllciA9PiB1dGlsLmFkZE1vZGlmaWVyKGVsZW1lbnQsIG1vZGlmaWVyKSksXG4gIC8qKlxuICAgKiBAbWV0aG9kIHJlbW92ZVxuICAgKiBAc2lnbmF0dXJlIHJlbW92ZShlbGVtZW50LCBtb2RpZmllciBbLCBtb2RpZmllcl0pXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZW1vdmUgdGhlIHNwZWNpZmllZCBtb2RpZmllcnMgZnJvbSB0aGUgZWxlbWVudCBpZiB0aGV5IGFyZSBpbmNsdWRlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqICAgW2VuXVRhcmdldCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllclxuICAgKiAgIFtlbl1OYW1lIG9mIHRoZSBtb2RpZmllci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgcmVtb3ZlOiAoZWxlbWVudCwgLi4ubW9kaWZpZXJzKSA9PiBtb2RpZmllcnMuZm9yRWFjaChtb2RpZmllciA9PiB1dGlsLnJlbW92ZU1vZGlmaWVyKGVsZW1lbnQsIG1vZGlmaWVyKSksXG4gIC8qKlxuICAgKiBAbWV0aG9kIGNvbnRhaW5zXG4gICAqIEBzaWduYXR1cmUgY29udGFpbnMoZWxlbWVudCwgbW9kaWZpZXIpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DaGVjayB3aGV0aGVyIHRoZSBzcGVjaWZpZWQgbW9kaWZpZXIgaXMgaW5jbHVkZWQgaW4gdGhlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZWxlbWVudFxuICAgKiAgIFtlbl1UYXJnZXQgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gbW9kaWZpZXJcbiAgICogICBbZW5dTmFtZSBvZiB0aGUgbW9kaWZpZXIuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICogICBbZW5dYHRydWVgIHdoZW4gdGhlIHNwZWNpZmllZCBtb2RpZmllciBpcyBmb3VuZCBpbiB0aGUgZWxlbWVudCdzIGBtb2RpZmllcmAgYXR0cmlidXRlLiBgZmFsc2VgIG90aGVyd2lzZS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgY29udGFpbnM6IHV0aWwuaGFzTW9kaWZpZXIsXG4gIC8qKlxuICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgKiBAc2lnbmF0dXJlIHRvZ2dsZShlbGVtZW50LCBtb2RpZmllciBbLCBmb3JjZV0pXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ub2dnbGUgdGhlIHNwZWNpZmllZCBtb2RpZmllci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gICAqICAgW2VuXVRhcmdldCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBtb2RpZmllclxuICAgKiAgIFtlbl1OYW1lIG9mIHRoZSBtb2RpZmllci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gZm9yY2VcbiAgICogICBbZW5dSWYgaXQgZXZhbHVhdGVzIHRvIHRydWUsIGFkZCBzcGVjaWZpZWQgbW9kaWZpZXIgdmFsdWUsIGFuZCBpZiBpdCBldmFsdWF0ZXMgdG8gZmFsc2UsIHJlbW92ZSBpdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgdG9nZ2xlOiB1dGlsLnRvZ2dsZU1vZGlmaWVyXG59O1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi91dGlsJztcbmltcG9ydCBNaWNyb0V2ZW50IGZyb20gJy4vbWljcm9ldmVudCc7XG5cbmNvbnN0IHNvZnR3YXJlS2V5Ym9hcmQgPSBuZXcgTWljcm9FdmVudCgpO1xuc29mdHdhcmVLZXlib2FyZC5fdmlzaWJsZSA9IGZhbHNlO1xuXG5jb25zdCBvblNob3cgPSAoKSA9PiB7XG4gIHNvZnR3YXJlS2V5Ym9hcmQuX3Zpc2libGUgPSB0cnVlO1xuICBzb2Z0d2FyZUtleWJvYXJkLmVtaXQoJ3Nob3cnKTtcbn07XG5cbmNvbnN0IG9uSGlkZSA9ICgpID0+IHtcbiAgc29mdHdhcmVLZXlib2FyZC5fdmlzaWJsZSA9IGZhbHNlO1xuICBzb2Z0d2FyZUtleWJvYXJkLmVtaXQoJ2hpZGUnKTtcbn07XG5cbmNvbnN0IGJpbmRFdmVudHMgPSAoKSA9PiB7XG4gIGlmICh0eXBlb2YgS2V5Ym9hcmQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL21hcnRpbm1vc2UvY29yZG92YS1rZXlib2FyZC9ibG9iLzk1ZjNkYTNhMzhkOGY4ZTFmYTQxZmJmNDAxNDUzNTJjMTM1MzVhMDAvUkVBRE1FLm1kXG4gICAgS2V5Ym9hcmQub25zaG93ID0gb25TaG93O1xuICAgIEtleWJvYXJkLm9uaGlkZSA9IG9uSGlkZTtcbiAgICBzb2Z0d2FyZUtleWJvYXJkLmVtaXQoJ2luaXQnLCB7dmlzaWJsZTogS2V5Ym9hcmQuaXNWaXNpYmxlfSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgY29yZG92YS5wbHVnaW5zICE9PSAndW5kZWZpbmVkJyAmJiB0eXBlb2YgY29yZG92YS5wbHVnaW5zLktleWJvYXJkICE9PSAndW5kZWZpbmVkJykge1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kcmlmdHljby9pb25pYy1wbHVnaW5zLWtleWJvYXJkL2Jsb2IvY2EyN2VjZi9SRUFETUUubWRcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbmF0aXZlLmtleWJvYXJkc2hvdycsIG9uU2hvdyk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ25hdGl2ZS5rZXlib2FyZGhpZGUnLCBvbkhpZGUpO1xuICAgIHNvZnR3YXJlS2V5Ym9hcmQuZW1pdCgnaW5pdCcsIHt2aXNpYmxlOiBjb3Jkb3ZhLnBsdWdpbnMuS2V5Ym9hcmQuaXNWaXNpYmxlfSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBmYWxzZTtcbn07XG5cbmNvbnN0IG5vUGx1Z2luRXJyb3IgPSAoKSA9PiB7XG4gIHV0aWwud2Fybignb25zLWtleWJvYXJkOiBDb3Jkb3ZhIEtleWJvYXJkIHBsdWdpbiBpcyBub3QgcHJlc2VudC4nKTtcbn07XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2RldmljZXJlYWR5JywgKCkgPT4ge1xuICBpZiAoIWJpbmRFdmVudHMoKSkge1xuICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbb25zLWtleWJvYXJkLWFjdGl2ZV0nKSB8fFxuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW29ucy1rZXlib2FyZC1pbmFjdGl2ZV0nKSkge1xuICAgICAgbm9QbHVnaW5FcnJvcigpO1xuICAgIH1cblxuICAgIHNvZnR3YXJlS2V5Ym9hcmQub24gPSBub1BsdWdpbkVycm9yO1xuICB9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc29mdHdhcmVLZXlib2FyZDtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmNvbnN0IGdlbmVyYXRlSWQgPSAoZnVuY3Rpb24oKSB7XG4gIGxldCBpID0gMDtcbiAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBpKys7XG4gIH07XG59KSgpO1xuXG4vKipcbiAqIERvb3IgbG9ja2luZyBzeXN0ZW0uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMubG9nXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEb29yTG9jayB7XG5cbiAgY29uc3RydWN0b3Iob3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5fbG9ja0xpc3QgPSBbXTtcbiAgICB0aGlzLl93YWl0TGlzdCA9IFtdO1xuICAgIHRoaXMuX2xvZyA9IG9wdGlvbnMubG9nIHx8IGZ1bmN0aW9uKCkge307XG4gIH1cblxuICAvKipcbiAgICogUmVnaXN0ZXIgYSBsb2NrLlxuICAgKlxuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gQ2FsbGJhY2sgZm9yIHVubG9ja2luZy5cbiAgICovXG4gIGxvY2soKSB7XG4gICAgY29uc3QgdW5sb2NrID0gKCkgPT4ge1xuICAgICAgdGhpcy5fdW5sb2NrKHVubG9jayk7XG4gICAgfTtcbiAgICB1bmxvY2suaWQgPSBnZW5lcmF0ZUlkKCk7XG4gICAgdGhpcy5fbG9ja0xpc3QucHVzaCh1bmxvY2spO1xuICAgIHRoaXMuX2xvZygnbG9jazogJyArICh1bmxvY2suaWQpKTtcblxuICAgIHJldHVybiB1bmxvY2s7XG4gIH1cblxuICBfdW5sb2NrKGZuKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLl9sb2NrTGlzdC5pbmRleE9mKGZuKTtcbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgZnVuY3Rpb24gaXMgbm90IHJlZ2lzdGVyZWQgaW4gdGhlIGxvY2sgbGlzdC4nKTtcbiAgICB9XG5cbiAgICB0aGlzLl9sb2NrTGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgIHRoaXMuX2xvZygndW5sb2NrOiAnICsgZm4uaWQpO1xuXG4gICAgdGhpcy5fdHJ5VG9GcmVlV2FpdExpc3QoKTtcbiAgfVxuXG4gIF90cnlUb0ZyZWVXYWl0TGlzdCgpIHtcbiAgICB3aGlsZSAoIXRoaXMuaXNMb2NrZWQoKSAmJiB0aGlzLl93YWl0TGlzdC5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLl93YWl0TGlzdC5zaGlmdCgpKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIGEgY2FsbGJhY2sgZm9yIHdhaXRpbmcgdW5sb2NrZWQgZG9vci5cbiAgICpcbiAgICogQHBhcmFtcyB7RnVuY3Rpb259IGNhbGxiYWNrIENhbGxiYWNrIG9uIHVubG9ja2luZyB0aGUgZG9vciBjb21wbGV0ZWx5LlxuICAgKi9cbiAgd2FpdFVubG9jayhjYWxsYmFjaykge1xuICAgIGlmICghKGNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSBjYWxsYmFjayBwYXJhbSBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuaXNMb2NrZWQoKSkge1xuICAgICAgdGhpcy5fd2FpdExpc3QucHVzaChjYWxsYmFjayk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0Jvb2xlYW59XG4gICAqL1xuICBpc0xvY2tlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5fbG9ja0xpc3QubGVuZ3RoID4gMDtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9pbnRlcm5hbCc7XG5cbi8vIERlZmF1bHQgaW1wbGVtZW50YXRpb24gZm9yIGdsb2JhbCBQYWdlTG9hZGVyLlxuZnVuY3Rpb24gbG9hZFBhZ2Uoe3BhZ2UsIHBhcmVudCwgcGFyYW1zID0ge319LCBkb25lLCBlcnJvcikge1xuICBpbnRlcm5hbC5nZXRQYWdlSFRNTEFzeW5jKHBhZ2UpLnRoZW4oaHRtbCA9PiB7XG4gICAgY29uc3QgcGFnZUVsZW1lbnQgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoaHRtbCk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKHBhZ2VFbGVtZW50KTtcblxuICAgIGRvbmUocGFnZUVsZW1lbnQpO1xuICB9KS5jYXRjaChlID0+IGVycm9yKGUpKTtcbn1cblxuZnVuY3Rpb24gdW5sb2FkUGFnZShlbGVtZW50KSB7XG4gIGlmIChlbGVtZW50Ll9kZXN0cm95IGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICBlbGVtZW50Ll9kZXN0cm95KCk7XG4gIH0gZWxzZSB7XG4gICAgZWxlbWVudC5yZW1vdmUoKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgUGFnZUxvYWRlciB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbZm5dIFJldHVybnMgYW4gb2JqZWN0IHRoYXQgaGFzIFwiZWxlbWVudFwiIHByb3BlcnR5IGFuZCBcInVubG9hZFwiIGZ1bmN0aW9uLlxuICAgKi9cbiAgY29uc3RydWN0b3IobG9hZGVyLCB1bmxvYWRlcikge1xuICAgIHRoaXMuX2xvYWRlciA9IGxvYWRlciBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gbG9hZGVyIDogbG9hZFBhZ2U7XG4gICAgdGhpcy5fdW5sb2FkZXIgPSB1bmxvYWRlciBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gdW5sb2FkZXIgOiB1bmxvYWRQYWdlO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCBpbnRlcm5hbCBsb2FkZXIgaW1wbGVtZW50YXRpb24uXG4gICAqL1xuICBzZXQgaW50ZXJuYWxMb2FkZXIoZm4pIHtcbiAgICBpZiAoIShmbiBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdGhyb3cgRXJyb3IoJ0ZpcnN0IHBhcmFtZXRlciBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIEZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHRoaXMuX2xvYWRlciA9IGZuO1xuICB9XG5cbiAgZ2V0IGludGVybmFsTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9sb2FkZXI7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHthbnl9IG9wdGlvbnMucGFnZVxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IG9wdGlvbnMucGFyZW50IEEgbG9jYXRpb24gdG8gbG9hZCBwYWdlLlxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucGFyYW1zXSBFeHRyYSBwYXJhbWV0ZXJzIGZvciBvbnMtcGFnZS5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZSBUYWtlIGFuIG9iamVjdCB0aGF0IGhhcyBcImVsZW1lbnRcIiBwcm9wZXJ0eSBhbmQgXCJ1bmxvYWRcIiBmdW5jdGlvbi5cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXJyb3IgRnVuY3Rpb24gY2FsbGVkIHdoZW4gdGhlcmUgaXMgYW4gZXJyb3IuXG4gICAqL1xuICBsb2FkKHtwYWdlLCBwYXJlbnQsIHBhcmFtcyA9IHt9fSwgZG9uZSwgZXJyb3IpIHtcbiAgICB0aGlzLl9sb2FkZXIoe3BhZ2UsIHBhcmVudCwgcGFyYW1zfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgaWYgKCEocGFnZUVsZW1lbnQgaW5zdGFuY2VvZiBFbGVtZW50KSkge1xuICAgICAgICB0aHJvdyBFcnJvcigncGFnZUVsZW1lbnQgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBFbGVtZW50LicpO1xuICAgICAgfVxuXG4gICAgICBkb25lKHBhZ2VFbGVtZW50KTtcbiAgICB9LCBlcnJvcik7XG4gIH1cblxuICB1bmxvYWQocGFnZUVsZW1lbnQpIHtcbiAgICBpZiAoIShwYWdlRWxlbWVudCBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgICB0aHJvdyBFcnJvcigncGFnZUVsZW1lbnQgbXVzdCBiZSBhbiBpbnN0YW5jZSBvZiBFbGVtZW50LicpO1xuICAgIH1cblxuICAgIHRoaXMuX3VubG9hZGVyKHBhZ2VFbGVtZW50KTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVmYXVsdFBhZ2VMb2FkZXIgPSBuZXcgUGFnZUxvYWRlcigpO1xuXG5leHBvcnQgY29uc3QgaW5zdGFudFBhZ2VMb2FkZXIgPSBuZXcgUGFnZUxvYWRlcihcbiAgZnVuY3Rpb24oe3BhZ2UsIHBhcmVudCwgcGFyYW1zID0ge319LCBkb25lKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHV0aWwuY3JlYXRlRWxlbWVudChwYWdlLnRyaW0oKSk7XG4gICAgcGFyZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuXG4gICAgZG9uZShlbGVtZW50KTtcbiAgfSxcbiAgdW5sb2FkUGFnZVxuKTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4vdXRpbCc7XG5pbXBvcnQgZWxlbWVudHMgZnJvbSAnLi9lbGVtZW50cydcbmltcG9ydCBhbmltaXQgZnJvbSAnLi9hbmltaXQnXG5pbXBvcnQgR2VzdHVyZURldGVjdG9yIGZyb20gJy4vZ2VzdHVyZS1kZXRlY3Rvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi9wbGF0Zm9ybSc7XG5pbXBvcnQgbm90aWZpY2F0aW9uIGZyb20gJy4vbm90aWZpY2F0aW9uJztcbmltcG9ydCBhY3Rpb25TaGVldCBmcm9tICcuL2FjdGlvbi1zaGVldCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi9pbnRlcm5hbCc7XG5pbXBvcnQgb3JpZW50YXRpb24gZnJvbSAnLi9vcmllbnRhdGlvbic7XG5pbXBvcnQgbW9kaWZpZXIgZnJvbSAnLi9tb2RpZmllcic7XG5pbXBvcnQgc29mdHdhcmVLZXlib2FyZCBmcm9tICcuL3NvZnR3YXJlLWtleWJvYXJkJztcbmltcG9ydCBwYWdlQXR0cmlidXRlRXhwcmVzc2lvbiBmcm9tICcuL3BhZ2UtYXR0cmlidXRlLWV4cHJlc3Npb24nO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuL2F1dG9zdHlsZSc7XG5pbXBvcnQgRG9vckxvY2sgZnJvbSAnLi9kb29ybG9jayc7XG5pbXBvcnQgeyBkZWZhdWx0UGFnZUxvYWRlciwgUGFnZUxvYWRlciB9IGZyb20gJy4vcGFnZS1sb2FkZXInO1xuXG4vKipcbiAqIEBvYmplY3Qgb25zXG4gKiBAY2F0ZWdvcnkgdXRpbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtqYV1PbnNlbiBVSeOBp+WIqeeUqOOBp+OBjeOCi+OCsOODreODvOODkOODq+OBquOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gKiAgIFtlbl1BIGdsb2JhbCBvYmplY3QgdGhhdCdzIHVzZWQgaW4gT25zZW4gVUkuIFsvZW5dXG4gKi9cbmNvbnN0IG9ucyA9IHtcbiAgYW5pbWl0LFxuICBkZWZhdWx0UGFnZUxvYWRlcixcbiAgZWxlbWVudHMsXG4gIEdlc3R1cmVEZXRlY3RvcixcbiAgbW9kaWZpZXIsXG4gIG5vdGlmaWNhdGlvbixcbiAgb3JpZW50YXRpb24sXG4gIHBhZ2VBdHRyaWJ1dGVFeHByZXNzaW9uLFxuICBQYWdlTG9hZGVyLFxuICBwbGF0Zm9ybSxcbiAgc29mdHdhcmVLZXlib2FyZCxcbiAgX2F1dG9TdHlsZTogYXV0b1N0eWxlLFxuICBfaW50ZXJuYWw6IGludGVybmFsLFxuICBfcmVhZHlMb2NrOiBuZXcgRG9vckxvY2soKSxcbiAgX3V0aWw6IHV0aWwsXG59O1xuXG5vbnMucGxhdGZvcm0uc2VsZWN0KCh3aW5kb3cubG9jYXRpb24uc2VhcmNoLm1hdGNoKC9wbGF0Zm9ybT0oW1xcdy1dKykvKSB8fCBbXSlbMV0pO1xuXG53YWl0RGV2aWNlUmVhZHkoKTtcblxuY29uc3QgcmVhZHlFcnJvciA9IGFmdGVyID0+IHV0aWwudGhyb3coYFRoaXMgbWV0aG9kIG11c3QgYmUgY2FsbGVkICR7YWZ0ZXIgPyAnYWZ0ZXInIDogJ2JlZm9yZSd9IG9ucy5pc1JlYWR5KCkgaXMgdHJ1ZWApO1xuXG4vKipcbiAqIEBtZXRob2QgaXNSZWFkeVxuICogQHNpZ25hdHVyZSBpc1JlYWR5KClcbiAqIEByZXR1cm4ge0Jvb2xlYW59XG4gKiAgIFtlbl1XaWxsIGJlIHRydWUgaWYgT25zZW4gVUkgaXMgaW5pdGlhbGl6ZWQuWy9lbl1cbiAqICAgW2phXeWIneacn+WMluOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJldHVybnMgdHJ1ZSBpZiBPbnNlbiBVSSBpcyBpbml0aWFsaXplZC5bL2VuXVxuICogICBbamFdT25zZW4gVUnjgYzjgZnjgafjgavliJ3mnJ/ljJbjgZXjgozjgabjgYTjgovjgYvjganjgYbjgYvjgpLov5TjgZnjg6Hjgr3jg4Pjg4njgafjgZnjgIJbL2phXVxuICovXG5vbnMuaXNSZWFkeSA9ICgpID0+IHtcbiAgcmV0dXJuICFvbnMuX3JlYWR5TG9jay5pc0xvY2tlZCgpO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGlzV2ViVmlld1xuICogQHNpZ25hdHVyZSBpc1dlYlZpZXcoKVxuICogQHJldHVybiB7Qm9vbGVhbn1cbiAqICAgW2VuXVdpbGwgYmUgdHJ1ZSBpZiB0aGUgYXBwIGlzIHJ1bm5pbmcgaW4gQ29yZG92YS5bL2VuXVxuICogICBbamFdQ29yZG92YeOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq3RydWXjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1SZXR1cm5zIHRydWUgaWYgcnVubmluZyBpbnNpZGUgQ29yZG92YS5bL2VuXVxuICogICBbamFdQ29yZG92YeOBp+Wun+ihjOOBleOCjOOBpuOBhOOCi+OBi+OBqeOBhuOBi+OCkui/lOOBmeODoeOCveODg+ODieOBp+OBmeOAglsvamFdXG4gKi9cbm9ucy5pc1dlYlZpZXcgPSBvbnMucGxhdGZvcm0uaXNXZWJWaWV3O1xuXG4vKipcbiAqIEBtZXRob2QgcmVhZHlcbiAqIEBzaWduYXR1cmUgcmVhZHkoY2FsbGJhY2spXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2phXeOCouODl+ODquOBruWIneacn+WMluOBq+WIqeeUqOOBmeOCi+ODoeOCveODg+ODieOBp+OBmeOAgua4oeOBleOCjOOBn+mWouaVsOOBr+OAgU9uc2VuIFVJ44Gu5Yid5pyf5YyW44GM57WC5LqG44GX44Gm44GE44KL5pmC54K544Gn5b+F44Ga5ZG844Gw44KM44G+44GZ44CCWy9qYV1cbiAqICAgW2VuXU1ldGhvZCB1c2VkIHRvIHdhaXQgZm9yIGFwcCBpbml0aWFsaXphdGlvbi4gV2FpdHMgZm9yIGBET01Db250ZW50TG9hZGVkYCBhbmQgYGRldmljZXJlYWR5YCwgd2hlbiBuZWNlc3NhcnksIGJlZm9yZSBleGVjdXRpbmcgdGhlIGNhbGxiYWNrLlsvZW5dXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICogICBbZW5dRnVuY3Rpb24gdGhhdCBleGVjdXRlcyBhZnRlciBPbnNlbiBVSSBoYXMgYmVlbiBpbml0aWFsaXplZC5bL2VuXVxuICogICBbamFdT25zZW4gVUnjgYzliJ3mnJ/ljJbjgYzlrozkuobjgZfjgZ/lvozjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMucmVhZHkgPSBjYWxsYmFjayA9PiB7XG4gIGlmIChvbnMuaXNSZWFkeSgpKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfSBlbHNlIHtcbiAgICBvbnMuX3JlYWR5TG9jay53YWl0VW5sb2NrKGNhbGxiYWNrKTtcbiAgfVxufTtcblxuLyoqXG4gKiBAbWV0aG9kIHNldERlZmF1bHREZXZpY2VCYWNrQnV0dG9uTGlzdGVuZXJcbiAqIEBzaWduYXR1cmUgc2V0RGVmYXVsdERldmljZUJhY2tCdXR0b25MaXN0ZW5lcihsaXN0ZW5lcilcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGxpc3RlbmVyXG4gKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGV4ZWN1dGVzIHdoZW4gZGV2aWNlIGJhY2sgYnV0dG9uIGlzIHByZXNzZWQuIE11c3QgYmUgY2FsbGVkIG9uIGBvbnMucmVhZHlgLlsvZW5dXG4gKiAgIFtqYV3jg4fjg5DjgqTjgrnjga7jg5Djg4Pjgq/jg5zjgr/jg7PjgYzmirzjgZXjgozjgZ/mmYLjgavlrp/ooYzjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1TZXQgZGVmYXVsdCBoYW5kbGVyIGZvciBkZXZpY2UgYmFjayBidXR0b24uWy9lbl1cbiAqICAgW2phXeODh+ODkOOCpOOCueOBruODkOODg+OCr+ODnOOCv+ODs+OBruOBn+OCgeOBruODh+ODleOCqeODq+ODiOOBruODj+ODs+ODieODqeOCkuioreWumuOBl+OBvuOBmeOAglsvamFdXG4gKi9cbm9ucy5zZXREZWZhdWx0RGV2aWNlQmFja0J1dHRvbkxpc3RlbmVyID0gZnVuY3Rpb24obGlzdGVuZXIpIHtcbiAgaWYgKCFvbnMuaXNSZWFkeSgpKSB7XG4gICAgcmVhZHlFcnJvcih0cnVlKTtcbiAgfVxuICBvbnMuX2RlZmF1bHREZXZpY2VCYWNrQnV0dG9uSGFuZGxlci5zZXRMaXN0ZW5lcihsaXN0ZW5lcik7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZGlzYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyXG4gKiBAc2lnbmF0dXJlIGRpc2FibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlcigpXG4gKiBAZGVzY3JpcHRpb25cbiAqIFtlbl1EaXNhYmxlIGRldmljZSBiYWNrIGJ1dHRvbiBldmVudCBoYW5kbGVyLiBNdXN0IGJlIGNhbGxlZCBvbiBgb25zLnJlYWR5YC5bL2VuXVxuICogW2phXeODh+ODkOOCpOOCueOBruODkOODg+OCr+ODnOOCv+ODs+OBruOCpOODmeODs+ODiOOCkuWPl+OBkeS7mOOBkeOBquOBhOOCiOOBhuOBq+OBl+OBvuOBmeOAglsvamFdXG4gKi9cbm9ucy5kaXNhYmxlRGV2aWNlQmFja0J1dHRvbkhhbmRsZXIgPSBmdW5jdGlvbigpIHtcbiAgaWYgKCFvbnMuaXNSZWFkeSgpKSB7XG4gICAgcmVhZHlFcnJvcih0cnVlKTtcbiAgfVxuICBpbnRlcm5hbC5kYmJEaXNwYXRjaGVyLmRpc2FibGUoKTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBlbmFibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlclxuICogQHNpZ25hdHVyZSBlbmFibGVEZXZpY2VCYWNrQnV0dG9uSGFuZGxlcigpXG4gKiBAZGVzY3JpcHRpb25cbiAqIFtlbl1FbmFibGUgZGV2aWNlIGJhY2sgYnV0dG9uIGV2ZW50IGhhbmRsZXIuIE11c3QgYmUgY2FsbGVkIG9uIGBvbnMucmVhZHlgLlsvZW5dXG4gKiBbamFd44OH44OQ44Kk44K544Gu44OQ44OD44Kv44Oc44K/44Oz44Gu44Kk44OZ44Oz44OI44KS5Y+X44GR5LuY44GR44KL44KI44GG44Gr44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLmVuYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyID0gZnVuY3Rpb24oKSB7XG4gIGlmICghb25zLmlzUmVhZHkoKSkge1xuICAgIHJlYWR5RXJyb3IodHJ1ZSk7XG4gIH1cbiAgaW50ZXJuYWwuZGJiRGlzcGF0Y2hlci5lbmFibGUoKTtcbn07XG5cbm9ucy5maXJlRGV2aWNlQmFja0J1dHRvbkV2ZW50ID0gZnVuY3Rpb24oKSB7XG4gIGludGVybmFsLmRiYkRpc3BhdGNoZXIuZmlyZURldmljZUJhY2tCdXR0b25FdmVudCgpO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGVuYWJsZUF1dG9TdGF0dXNCYXJGaWxsXG4gKiBAc2lnbmF0dXJlIGVuYWJsZUF1dG9TdGF0dXNCYXJGaWxsKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRW5hYmxlIHN0YXR1cyBiYXIgZmlsbCBmZWF0dXJlIG9uIGlPUzcgYW5kIGFib3ZlIChleGNlcHQgZm9yIGlQaG9uZSBYKS4gTXVzdCBiZSBjYWxsZWQgYmVmb3JlIGBvbnMucmVhZHlgLlsvZW5dXG4gKiAgIFtqYV1pT1M35Lul5LiK77yIaVBob25lIFjjga/pmaTjgY/vvInjgafjgIHjgrnjg4bjg7zjgr/jgrnjg5Djg7zpg6jliIbjga7pq5jjgZXjgpLoh6rli5XnmoTjgavln4vjgoHjgovlh6bnkIbjgpLmnInlirnjgavjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuZW5hYmxlQXV0b1N0YXR1c0JhckZpbGwgPSAoKSA9PiB7XG4gIGlmIChvbnMuaXNSZWFkeSgpKSB7XG4gICAgcmVhZHlFcnJvcihmYWxzZSk7XG4gIH1cbiAgaW50ZXJuYWwuY29uZmlnLmF1dG9TdGF0dXNCYXJGaWxsID0gdHJ1ZTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBkaXNhYmxlQXV0b1N0YXR1c0JhckZpbGxcbiAqIEBzaWduYXR1cmUgZGlzYWJsZUF1dG9TdGF0dXNCYXJGaWxsKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRGlzYWJsZSBzdGF0dXMgYmFyIGZpbGwgZmVhdHVyZSBvbiBpT1M3IGFuZCBhYm92ZSAoZXhjZXB0IGZvciBpUGhvbmUgWCkuIE11c3QgYmUgY2FsbGVkIGJlZm9yZSBgb25zLnJlYWR5YC5bL2VuXVxuICogICBbamFdaU9TN+S7peS4iu+8iGlQaG9uZSBY44Gv6Zmk44GP77yJ44Gn44CB44K544OG44O844K/44K544OQ44O86YOo5YiG44Gu6auY44GV44KS6Ieq5YuV55qE44Gr5Z+L44KB44KL5Yem55CG44KS54Sh5Yq544Gr44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLmRpc2FibGVBdXRvU3RhdHVzQmFyRmlsbCA9ICgpID0+IHtcbiAgaWYgKG9ucy5pc1JlYWR5KCkpIHtcbiAgICByZWFkeUVycm9yKGZhbHNlKTtcbiAgfVxuICBpbnRlcm5hbC5jb25maWcuYXV0b1N0YXR1c0JhckZpbGwgPSBmYWxzZTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBtb2NrU3RhdHVzQmFyXG4gKiBAc2lnbmF0dXJlIG1vY2tTdGF0dXNCYXIoKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1DcmVhdGVzIGEgc3RhdGljIGVsZW1lbnQgc2ltaWxhciB0byBpT1Mgc3RhdHVzIGJhci4gT25seSB1c2VmdWwgZm9yIGJyb3dzZXIgdGVzdGluZy4gTXVzdCBiZSBjYWxsZWQgYmVmb3JlIGBvbnMucmVhZHlgLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5vbnMubW9ja1N0YXR1c0JhciA9ICgpID0+IHtcbiAgaWYgKG9ucy5pc1JlYWR5KCkpIHtcbiAgICByZWFkeUVycm9yKGZhbHNlKTtcbiAgfVxuXG4gIGNvbnN0IG1vY2sgPSAoKSA9PiB7XG4gICAgaWYgKCFkb2N1bWVudC5ib2R5LmNoaWxkcmVuWzBdIHx8ICFkb2N1bWVudC5ib2R5LmNoaWxkcmVuWzBdLmNsYXNzTGlzdC5jb250YWlucygnb25zLXN0YXR1cy1iYXItbW9jaycpKSB7XG4gICAgICBjb25zdCBhbmRyb2lkID0gcGxhdGZvcm0uaXNBbmRyb2lkKCksIGkgPSBpID0+IGA8aSBjbGFzcz1cIiR7aS5zcGxpdCgnLScpWzBdfSAke2l9XCI+PC9pPmA7XG4gICAgICBjb25zdCBsZWZ0ID0gYW5kcm9pZCA/IGAke2koJ3ptZGktdHdpdHRlcicpfSAke2koJ3ptZGktZ29vZ2xlLXBsYXknKX1gIDogYE5vIFNJTSAke2koJ2ZhLXdpZmknKX1gLFxuICAgICAgICBjZW50ZXIgPSBhbmRyb2lkID8gJycgOiAnMTI6MjggUE0nLFxuICAgICAgICByaWdodCA9IGFuZHJvaWQgPyBgJHtpKCd6bWRpLW5ldHdvcmsnKX0gJHtpKCd6bWRpLXdpZmknKX0gJHtpKCd6bWRpLWJhdHRlcnknKX0gMTI6MjggUE1gIDogYDgwJSAke2koJ2ZhLWJhdHRlcnktdGhyZWUtcXVhcnRlcnMnKX1gO1xuXG4gICAgICBkb2N1bWVudC5ib2R5Lmluc2VydEJlZm9yZSh1dGlsLmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIGA8ZGl2IGNsYXNzPVwib25zLXN0YXR1cy1iYXItbW9jayAke2FuZHJvaWQgPyAnYW5kcm9pZCcgOiAnaW9zJ31cIj5gICtcbiAgICAgICAgICBgPGRpdj4ke2xlZnR9PC9kaXY+PGRpdj4ke2NlbnRlcn08L2Rpdj48ZGl2PiR7cmlnaHR9PC9kaXY+YCArXG4gICAgICAgIGA8L2Rpdj5gXG4gICAgICApLCBkb2N1bWVudC5ib2R5LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgfTtcblxuICBkb2N1bWVudC5ib2R5XG4gICAgPyBtb2NrKClcbiAgICA6IGludGVybmFsLndhaXRET01Db250ZW50TG9hZGVkKG1vY2spO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGRpc2FibGVBbmltYXRpb25zXG4gKiBAc2lnbmF0dXJlIGRpc2FibGVBbmltYXRpb25zKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRGlzYWJsZSBhbGwgYW5pbWF0aW9ucy4gQ291bGQgYmUgaGFuZHkgZm9yIHRlc3RpbmcgYW5kIG9sZGVyIGRldmljZXMuWy9lbl1cbiAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+OCkuWFqOOBpueEoeWKueOBq+OBl+OBvuOBmeOAguODhuOCueODiOOBrumam+OBq+S+v+WIqeOBp+OBmeOAglsvamFdXG4gKi9cbm9ucy5kaXNhYmxlQW5pbWF0aW9ucyA9ICgpID0+IHtcbiAgaW50ZXJuYWwuY29uZmlnLmFuaW1hdGlvbnNEaXNhYmxlZCA9IHRydWU7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZW5hYmxlQW5pbWF0aW9uc1xuICogQHNpZ25hdHVyZSBlbmFibGVBbmltYXRpb25zKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRW5hYmxlIGFuaW1hdGlvbnMgKGRlZmF1bHQpLlsvZW5dXG4gKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgpLmnInlirnjgavjgZfjgb7jgZnjgIJbL2phXVxuICovXG5vbnMuZW5hYmxlQW5pbWF0aW9ucyA9ICgpID0+IHtcbiAgaW50ZXJuYWwuY29uZmlnLmFuaW1hdGlvbnNEaXNhYmxlZCA9IGZhbHNlO1xufTtcblxub25zLl9kaXNhYmxlV2FybmluZ3MgPSAoKSA9PiB7XG4gIGludGVybmFsLmNvbmZpZy53YXJuaW5nc0Rpc2FibGVkID0gdHJ1ZTtcbn07XG5cbm9ucy5fZW5hYmxlV2FybmluZ3MgPSAoKSA9PiB7XG4gIGludGVybmFsLmNvbmZpZy53YXJuaW5nc0Rpc2FibGVkID0gZmFsc2U7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgZGlzYWJsZUF1dG9TdHlsaW5nXG4gKiBAc2lnbmF0dXJlIGRpc2FibGVBdXRvU3R5bGluZygpXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXURpc2FibGUgYXV0b21hdGljIHN0eWxpbmcuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKi9cbm9ucy5kaXNhYmxlQXV0b1N0eWxpbmcgPSBhdXRvU3R5bGUuZGlzYWJsZTtcblxuLyoqXG4gKiBAbWV0aG9kIGVuYWJsZUF1dG9TdHlsaW5nXG4gKiBAc2lnbmF0dXJlIGVuYWJsZUF1dG9TdHlsaW5nKClcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dRW5hYmxlIGF1dG9tYXRpYyBzdHlsaW5nIGJhc2VkIG9uIE9TIChkZWZhdWx0KS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqL1xub25zLmVuYWJsZUF1dG9TdHlsaW5nID0gYXV0b1N0eWxlLmVuYWJsZTtcblxuLyoqXG4gKiBAbWV0aG9kIGRpc2FibGVJY29uQXV0b1ByZWZpeFxuICogQHNpZ25hdHVyZSBkaXNhYmxlSWNvbkF1dG9QcmVmaXgoKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1EaXNhYmxlIGFkZGluZyBgZmEtYCBwcmVmaXggYXV0b21hdGljYWxseSB0byBgb25zLWljb25gIGNsYXNzZXMuIFVzZWZ1bCB3aGVuIGluY2x1ZGluZyBjdXN0b20gaWNvbiBwYWNrcy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqL1xub25zLmRpc2FibGVJY29uQXV0b1ByZWZpeCA9ICgpID0+IHtcbiAgdXRpbC5jaGVja01pc3NpbmdJbXBvcnQoJ0ljb24nKTtcbiAgZWxlbWVudHMuSWNvbi5zZXRBdXRvUHJlZml4KGZhbHNlKTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBmb3JjZVBsYXRmb3JtU3R5bGluZ1xuICogQHNpZ25hdHVyZSBmb3JjZVBsYXRmb3JtU3R5bGluZyhwbGF0Zm9ybSlcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dUmVmcmVzaCBzdHlsaW5nIGZvciB0aGUgZ2l2ZW4gcGxhdGZvcm0uIE9ubHkgdXNlZnVsIGZvciBkZW1vcy4gVXNlIGBvbnMucGxhdGZvcm0uc2VsZWN0KC4uLilgIGluc3RlYWQgZm9yIGRldmVsb3BtZW50IGFuZCBwcm9kdWN0aW9uLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtzdHJpbmd9IHBsYXRmb3JtIE5ldyBwbGF0Zm9ybSB0byBzdHlsZSB0aGUgZWxlbWVudHMuXG4gKi9cbm9ucy5mb3JjZVBsYXRmb3JtU3R5bGluZyA9IG5ld1BsYXRmb3JtID0+IHtcbiAgb25zLmVuYWJsZUF1dG9TdHlsaW5nKCk7XG4gIG9ucy5wbGF0Zm9ybS5zZWxlY3QobmV3UGxhdGZvcm0gfHwgJ2lvcycpO1xuXG4gIG9ucy5fdXRpbC5hcnJheUZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnKicpKVxuICAgIC5mb3JFYWNoKGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgIGlmIChlbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy1pZicpIHtcbiAgICAgICAgZWxlbWVudC5fcGxhdGZvcm1VcGRhdGUoKTtcbiAgICAgIH0gZWxzZSBpZiAoZWxlbWVudC50YWdOYW1lLm1hdGNoKC9eb25zLS9pKSkge1xuICAgICAgICBhdXRvU3R5bGUucHJlcGFyZShlbGVtZW50LCB0cnVlKTtcbiAgICAgICAgaWYgKGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAnb25zLXRhYmJhcicpIHtcbiAgICAgICAgICBlbGVtZW50Ll91cGRhdGVQb3NpdGlvbigpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG59O1xuXG4vKipcbiAqIEBtZXRob2QgcHJlbG9hZFxuICogQHNpZ25hdHVyZSBwcmVsb2FkKHRlbXBsYXRlUGF0aHMpXG4gKiBAcGFyYW0ge1N0cmluZ3xBcnJheX0gdGVtcGxhdGVQYXRoc1xuICogICBbZW5dU2V0IG9mIEhUTUwgZmlsZSBwYXRocyBjb250YWluaW5nICdvbnMtcGFnZScgZWxlbWVudHMuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICogICBbZW5dUHJvbWlzZSB0aGF0IHJlc29sdmVzIHdoZW4gYWxsIHRoZSB0ZW1wbGF0ZXMgYXJlIGNhY2hlZC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dU2VwYXJhdGVkIGZpbGVzIG5lZWQgdG8gYmUgcmVxdWVzdGVkIG9uIGRlbWFuZCBhbmQgdGhpcyBjYW4gc2xpZ2h0bHkgZGVsYXkgcHVzaGluZyBuZXcgcGFnZXMuIFRoaXMgbWV0aG9kIHJlcXVlc3RzIGFuZCBjYWNoZXMgdGVtcGxhdGVzIGZvciBsYXRlciB1c2UuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKi9cbm9ucy5wcmVsb2FkID0gZnVuY3Rpb24odGVtcGxhdGVzID0gW10pIHtcbiAgcmV0dXJuIFByb21pc2UuYWxsKCh0ZW1wbGF0ZXMgaW5zdGFuY2VvZiBBcnJheSA/IHRlbXBsYXRlcyA6IFt0ZW1wbGF0ZXNdKS5tYXAodGVtcGxhdGUgPT4ge1xuICAgIGlmICh0eXBlb2YgdGVtcGxhdGUgIT09ICdzdHJpbmcnKSB7XG4gICAgICB1dGlsLnRocm93KCdFeHBlY3RlZCBzdHJpbmcgYXJndW1lbnRzIGJ1dCBnb3QgJyArIHR5cGVvZiB0ZW1wbGF0ZSk7XG4gICAgfVxuICAgIHJldHVybiBpbnRlcm5hbC5nZXRUZW1wbGF0ZUhUTUxBc3luYyh0ZW1wbGF0ZSk7XG4gIH0pKTtcbn07XG5cbi8qKlxuICogQG1ldGhvZCBjcmVhdGVFbGVtZW50XG4gKiBAc2lnbmF0dXJlIGNyZWF0ZUVsZW1lbnQodGVtcGxhdGUsIG9wdGlvbnMpXG4gKiBAcGFyYW0ge1N0cmluZ30gdGVtcGxhdGVcbiAqICAgW2VuXUVpdGhlciBhbiBIVE1MIGZpbGUgcGF0aCwgYSBgPHRlbXBsYXRlPmAgaWQgb3IgYW4gSFRNTCBzdHJpbmcgc3VjaCBhcyBgJzxkaXYgaWQ9XCJmb29cIj5ob2dlPC9kaXY+J2AuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICogQHBhcmFtIHtCb29sZWFufEhUTUxFbGVtZW50fSBbb3B0aW9ucy5hcHBlbmRdXG4gKiAgIFtlbl1XaGV0aGVyIG9yIG5vdCB0aGUgZWxlbWVudCBzaG91bGQgYmUgYXV0b21hdGljYWxseSBhcHBlbmRlZCB0byB0aGUgRE9NLiAgRGVmYXVsdHMgdG8gYGZhbHNlYC4gSWYgYHRydWVgIHZhbHVlIGlzIGdpdmVuLCBgZG9jdW1lbnQuYm9keWAgd2lsbCBiZSB1c2VkIGFzIHRoZSB0YXJnZXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBbb3B0aW9ucy5pbnNlcnRCZWZvcmVdXG4gKiAgIFtlbl1SZWZlcmVuY2Ugbm9kZSB0aGF0IGJlY29tZXMgdGhlIG5leHQgc2libGluZyBvZiB0aGUgbmV3IG5vZGUgKGBvcHRpb25zLmFwcGVuZGAgZWxlbWVudCkuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcmV0dXJuIHtIVE1MRWxlbWVudHxQcm9taXNlfVxuICogICBbZW5dSWYgdGhlIHByb3ZpZGVkIHRlbXBsYXRlIHdhcyBhbiBpbmxpbmUgSFRNTCBzdHJpbmcsIGl0IHJldHVybnMgdGhlIG5ldyBlbGVtZW50LiBPdGhlcndpc2UsIGl0IHJldHVybnMgYSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIG5ldyBlbGVtZW50LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1DcmVhdGUgYSBuZXcgZWxlbWVudCBmcm9tIGEgdGVtcGxhdGUuIEJvdGggaW5saW5lIEhUTUwgYW5kIGV4dGVybmFsIGZpbGVzIGFyZSBzdXBwb3J0ZWQgYWx0aG91Z2ggdGhlIHJldHVybiB2YWx1ZSBkaWZmZXJzLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5vbnMuY3JlYXRlRWxlbWVudCA9ICh0ZW1wbGF0ZSwgb3B0aW9ucyA9IHt9KSA9PiB7XG4gIHRlbXBsYXRlID0gdGVtcGxhdGUudHJpbSgpO1xuXG4gIGNvbnN0IGNyZWF0ZSA9IGh0bWwgPT4ge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBvbnMuX3V0aWwuY3JlYXRlRWxlbWVudChodG1sKTtcbiAgICBlbGVtZW50LnJlbW92ZSgpO1xuXG4gICAgaWYgKG9wdGlvbnMuYXBwZW5kKSB7XG4gICAgICBjb25zdCB0YXJnZXQgPSBvcHRpb25zLmFwcGVuZCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50ID8gb3B0aW9ucy5hcHBlbmQgOiBkb2N1bWVudC5ib2R5O1xuICAgICAgdGFyZ2V0Lmluc2VydEJlZm9yZShlbGVtZW50LCBvcHRpb25zLmluc2VydEJlZm9yZSB8fCBudWxsKTtcbiAgICAgIG9wdGlvbnMubGluayBpbnN0YW5jZW9mIEZ1bmN0aW9uICYmIG9wdGlvbnMubGluayhlbGVtZW50KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfTtcblxuICByZXR1cm4gdGVtcGxhdGUuY2hhckF0KDApID09PSAnPCcgPyBjcmVhdGUodGVtcGxhdGUpIDogaW50ZXJuYWwuZ2V0UGFnZUhUTUxBc3luYyh0ZW1wbGF0ZSkudGhlbihjcmVhdGUpO1xufTtcblxuLyoqXG4gKiBAbWV0aG9kIGNyZWF0ZVBvcG92ZXJcbiAqIEBzaWduYXR1cmUgY3JlYXRlUG9wb3ZlcihwYWdlLCBbb3B0aW9uc10pXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhIDx0ZW1wbGF0ZT4gY29udGFpbmluZyBhIDxvbnMtZGlhbG9nPiBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIHjgoLjgZfjgY/jga9gPHRlbXBsYXRlPmDjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLnBhcmVudFNjb3BlXVxuICogICBbZW5dUGFyZW50IHNjb3BlIG9mIHRoZSBkaWFsb2cuIFVzZWQgdG8gYmluZCBtb2RlbHMgYW5kIGFjY2VzcyBzY29wZSBtZXRob2RzIGZyb20gdGhlIGRpYWxvZy5bL2VuXVxuICogICBbamFd44OA44Kk44Ki44Ot44Kw5YaF44Gn5Yip55So44GZ44KL6Kaq44K544Kz44O844OX44KS5oyH5a6a44GX44G+44GZ44CC44OA44Kk44Ki44Ot44Kw44GL44KJ44Oi44OH44Or44KE44K544Kz44O844OX44Gu44Oh44K944OD44OJ44Gr44Ki44Kv44K744K544GZ44KL44Gu44Gr5L2/44GE44G+44GZ44CC44GT44Gu44OR44Op44Oh44O844K/44GvQW5ndWxhckpT44OQ44Kk44Oz44OH44Kj44Oz44Kw44Gn44Gu44G/5Yip55So44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKiAgIFtlbl1Qcm9taXNlIG9iamVjdCB0aGF0IHJlc29sdmVzIHRvIHRoZSBwb3BvdmVyIGNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBruOCs+ODs+ODneODvOODjeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOCkuino+axuuOBmeOCi1Byb21pc2Xjgqrjg5bjgrjjgqfjgq/jg4jjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1DcmVhdGUgYSBwb3BvdmVyIGluc3RhbmNlIGZyb20gYSB0ZW1wbGF0ZS5bL2VuXVxuICogICBbamFd44OG44Oz44OX44Os44O844OI44GL44KJ44Od44OD44OX44Kq44O844OQ44O844Gu44Kk44Oz44K544K/44Oz44K544KS55Sf5oiQ44GX44G+44GZ44CCWy9qYV1cbiAqL1xuLyoqXG4gKiBAbWV0aG9kIGNyZWF0ZURpYWxvZ1xuICogQHNpZ25hdHVyZSBjcmVhdGVEaWFsb2cocGFnZSwgW29wdGlvbnNdKVxuICogQHBhcmFtIHtTdHJpbmd9IHBhZ2VcbiAqICAgW2VuXVBhZ2UgbmFtZS4gQ2FuIGJlIGVpdGhlciBhbiBIVE1MIGZpbGUgb3IgYW4gYDx0ZW1wbGF0ZT5gIGNvbnRhaW5pbmcgYSA8b25zLWRpYWxvZz4gY29tcG9uZW50LlsvZW5dXG4gKiAgIFtqYV1wYWdl44GuVVJM44GL44CB44KC44GX44GP44GvYDx0ZW1wbGF0ZT5g44Gn5a6j6KiA44GX44Gf44OG44Oz44OX44Os44O844OI44GuaWTlsZ7mgKfjga7lgKTjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKiAgIFtlbl1Qcm9taXNlIG9iamVjdCB0aGF0IHJlc29sdmVzIHRvIHRoZSBkaWFsb2cgY29tcG9uZW50IG9iamVjdC5bL2VuXVxuICogICBbamFd44OA44Kk44Ki44Ot44Kw44Gu44Kz44Oz44Od44O844ON44Oz44OI44Kq44OW44K444Kn44Kv44OI44KS6Kej5rG644GZ44KLUHJvbWlzZeOCquODluOCuOOCp+OCr+ODiOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUNyZWF0ZSBhIGRpYWxvZyBpbnN0YW5jZSBmcm9tIGEgdGVtcGxhdGUuWy9lbl1cbiAqICAgW2phXeODhuODs+ODl+ODrOODvOODiOOBi+OCieODgOOCpOOCouODreOCsOOBruOCpOODs+OCueOCv+ODs+OCueOCkueUn+aIkOOBl+OBvuOBmeOAglsvamFdXG4gKi9cbi8qKlxuICogQG1ldGhvZCBjcmVhdGVBbGVydERpYWxvZ1xuICogQHNpZ25hdHVyZSBjcmVhdGVBbGVydERpYWxvZyhwYWdlLCBbb3B0aW9uc10pXG4gKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICogICBbZW5dUGFnZSBuYW1lLiBDYW4gYmUgZWl0aGVyIGFuIEhUTUwgZmlsZSBvciBhbiBgPHRlbXBsYXRlPmAgY29udGFpbmluZyBhIDxvbnMtYWxlcnQtZGlhbG9nPiBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIHjgoLjgZfjgY/jga9gPHRlbXBsYXRlPmDjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVByb21pc2Ugb2JqZWN0IHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGFsZXJ0IGRpYWxvZyBjb21wb25lbnQgb2JqZWN0LlsvZW5dXG4gKiAgIFtqYV3jg4DjgqTjgqLjg63jgrDjga7jgrPjg7Pjg53jg7zjg43jg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgpLop6PmsbrjgZnjgotQcm9taXNl44Kq44OW44K444Kn44Kv44OI44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dQ3JlYXRlIGEgYWxlcnQgZGlhbG9nIGluc3RhbmNlIGZyb20gYSB0ZW1wbGF0ZS5bL2VuXVxuICogICBbamFd44OG44Oz44OX44Os44O844OI44GL44KJ44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44Gu44Kk44Oz44K544K/44Oz44K544KS55Sf5oiQ44GX44G+44GZ44CCWy9qYV1cbiAqL1xub25zLmNyZWF0ZVBvcG92ZXIgPSBvbnMuY3JlYXRlRGlhbG9nID0gb25zLmNyZWF0ZUFsZXJ0RGlhbG9nID0gKHRlbXBsYXRlLCBvcHRpb25zID0ge30pID0+IG9ucy5jcmVhdGVFbGVtZW50KHRlbXBsYXRlLCB7IGFwcGVuZDogdHJ1ZSwgLi4ub3B0aW9ucyB9KTtcblxuLyoqXG4gKiBAbWV0aG9kIG9wZW5BY3Rpb25TaGVldFxuICogQHNpZ25hdHVyZSBvcGVuQWN0aW9uU2hlZXQob3B0aW9ucylcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dU2hvd3MgYW4gaW5zdGFudCBBY3Rpb24gU2hlZXQgYW5kIGxldHMgdGhlIHVzZXIgY2hvb3NlIGFuIGFjdGlvbi5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gKiBAcGFyYW0ge0FycmF5fSBbb3B0aW9ucy5idXR0b25zXVxuICogICBbZW5dUmVwcmVzZW50IGVhY2ggYnV0dG9uIG9mIHRoZSBhY3Rpb24gc2hlZXQgZm9sbG93aW5nIHRoZSBzcGVjaWZpZWQgb3JkZXIuIEV2ZXJ5IGl0ZW0gY2FuIGJlIGVpdGhlciBhIHN0cmluZyBsYWJlbCBvciBhbiBvYmplY3QgY29udGFpbmluZyBgbGFiZWxgLCBgaWNvbmAgYW5kIGBtb2RpZmllcmAgcHJvcGVydGllcy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy50aXRsZV1cbiAqICAgW2VuXU9wdGlvbmFsIHRpdGxlIGZvciB0aGUgYWN0aW9uIHNoZWV0LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLmRlc3RydWN0aXZlXVxuICogICBbZW5dT3B0aW9uYWwgaW5kZXggb2YgdGhlIFwiZGVzdHJ1Y3RpdmVcIiBidXR0b24gKG9ubHkgZm9yIGlPUykuIEl0IGNhbiBiZSBzcGVjaWZpZWQgaW4gdGhlIGJ1dHRvbiBhcnJheSBhcyB3ZWxsLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtCb29sZWFufSBbb3B0aW9ucy5jYW5jZWxhYmxlXVxuICogICBbZW5dV2hldGhlciB0aGUgYWN0aW9uIHNoZWV0IGNhbiBiZSBjYW5jZWxlZCBieSB0YXBwaW5nIG9uIHRoZSBiYWNrZ3JvdW5kIG1hc2sgb3Igbm90LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLm1vZGlmaWVyXVxuICogICBbZW5dTW9kaWZpZXIgYXR0cmlidXRlIG9mIHRoZSBhY3Rpb24gc2hlZXQuIEUuZy4gYCdkZXN0cnVjdGl2ZSdgLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLm1hc2tDb2xvcl1cbiAqICAgW2VuXU9wdGlvbmFsbHkgY2hhbmdlIHRoZSBiYWNrZ3JvdW5kIG1hc2sgY29sb3IuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuaWRdXG4gKiAgIFtlbl1UaGUgZWxlbWVudCdzIGlkIGF0dHJpYnV0ZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5jbGFzc11cbiAqICAgW2VuXVRoZSBlbGVtZW50J3MgY2xhc3MgYXR0cmlidXRlLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHJldHVybiB7UHJvbWlzZX1cbiAqICAgW2VuXVdpbGwgcmVzb2x2ZSB3aGVuIHRoZSBhY3Rpb24gc2hlZXQgaXMgY2xvc2VkLiBUaGUgcmVzb2x2ZSB2YWx1ZSBpcyBlaXRoZXIgdGhlIGluZGV4IG9mIHRoZSB0YXBwZWQgYnV0dG9uIG9yIC0xIHdoZW4gY2FuY2VsZWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKi9cbm9ucy5vcGVuQWN0aW9uU2hlZXQgPSBhY3Rpb25TaGVldDtcblxuLyoqXG4gKiBAbWV0aG9kIHJlc29sdmVMb2FkaW5nUGxhY2Vob2xkZXJcbiAqIEBzaWduYXR1cmUgcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlcihwYWdlKVxuICogQHBhcmFtIHtTdHJpbmd9IHBhZ2VcbiAqICAgW2VuXVBhZ2UgbmFtZS4gQ2FuIGJlIGVpdGhlciBhbiBIVE1MIGZpbGUgb3IgYSBgPHRlbXBsYXRlPmAgaWQuWy9lbl1cbiAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIHjgoLjgZfjgY/jga9gPHRlbXBsYXRlPmDjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUlmIG5vIHBhZ2UgaXMgZGVmaW5lZCBmb3IgdGhlIGBvbnMtbG9hZGluZy1wbGFjZWhvbGRlcmAgYXR0cmlidXRlIGl0IHdpbGwgd2FpdCBmb3IgdGhpcyBtZXRob2QgYmVpbmcgY2FsbGVkIGJlZm9yZSBsb2FkaW5nIHRoZSBwYWdlLlsvZW5dXG4gKiAgIFtqYV1vbnMtbG9hZGluZy1wbGFjZWhvbGRlcuOBruWxnuaAp+WApOOBqOOBl+OBpuODmuODvOOCuOOBjOaMh+WumuOBleOCjOOBpuOBhOOBquOBhOWgtOWQiOOBr+OAgeODmuODvOOCuOODreODvOODieWJjeOBq+WRvOOBsOOCjOOCi29ucy5yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVy5Yem55CG44GM6KGM44KP44KM44KL44G+44Gn6KGo56S644GV44KM44G+44Gb44KT44CCWy9qYV1cbiAqL1xub25zLnJlc29sdmVMb2FkaW5nUGxhY2Vob2xkZXIgPSAocGFnZSwgbGluaykgPT4ge1xuICBjb25zdCBlbGVtZW50cyA9IG9ucy5fdXRpbC5hcnJheUZyb20od2luZG93LmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tvbnMtbG9hZGluZy1wbGFjZWhvbGRlcl0nKSk7XG4gIGlmIChlbGVtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICB1dGlsLnRocm93KCdObyBvbnMtbG9hZGluZy1wbGFjZWhvbGRlciBleGlzdHMnKTtcbiAgfVxuXG4gIGVsZW1lbnRzXG4gICAgLmZpbHRlcihlbGVtZW50ID0+ICFlbGVtZW50LmdldEF0dHJpYnV0ZSgncGFnZScpKVxuICAgIC5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ29ucy1sb2FkaW5nLXBsYWNlaG9sZGVyJywgcGFnZSk7XG4gICAgICBvbnMuX3Jlc29sdmVMb2FkaW5nUGxhY2Vob2xkZXIoZWxlbWVudCwgcGFnZSwgbGluayk7XG4gICAgfSk7XG59O1xuXG5cbm9ucy5fc2V0dXBMb2FkaW5nUGxhY2VIb2xkZXJzID0gZnVuY3Rpb24oKSB7XG4gIG9ucy5yZWFkeSgoKSA9PiB7XG4gICAgY29uc3QgZWxlbWVudHMgPSBvbnMuX3V0aWwuYXJyYXlGcm9tKHdpbmRvdy5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbb25zLWxvYWRpbmctcGxhY2Vob2xkZXJdJykpO1xuXG4gICAgZWxlbWVudHMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgIGNvbnN0IHBhZ2UgPSBlbGVtZW50LmdldEF0dHJpYnV0ZSgnb25zLWxvYWRpbmctcGxhY2Vob2xkZXInKTtcbiAgICAgIGlmICh0eXBlb2YgcGFnZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgb25zLl9yZXNvbHZlTG9hZGluZ1BsYWNlaG9sZGVyKGVsZW1lbnQsIHBhZ2UpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG5cbm9ucy5fcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlciA9IGZ1bmN0aW9uKHBhcmVudCwgcGFnZSwgbGluayA9ICgoZWwsIGRvbmUpID0+IGRvbmUoKSkpIHtcbiAgcGFnZSAmJiBvbnMuY3JlYXRlRWxlbWVudChwYWdlKVxuICAgIC50aGVuKGVsZW1lbnQgPT4ge1xuICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgcGFyZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgbGluayhlbGVtZW50LCAoKSA9PiB7XG4gICAgICAgIHdoaWxlIChwYXJlbnQuZmlyc3RDaGlsZCAmJiBwYXJlbnQuZmlyc3RDaGlsZCAhPT0gZWxlbWVudCkge1xuICAgICAgICAgIHBhcmVudC5yZW1vdmVDaGlsZChwYXJlbnQuZmlyc3RDaGlsZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJyc7XG4gICAgICB9KTtcbiAgICB9KVxuICAgIC5jYXRjaChlcnJvciA9PiBQcm9taXNlLnJlamVjdCgnVW5hYmxlZCB0byByZXNvbHZlIHBsYWNlaG9sZGVyOiAnICsgZXJyb3IpKTtcbn07XG5cbmZ1bmN0aW9uIHdhaXREZXZpY2VSZWFkeSgpIHtcbiAgY29uc3QgdW5sb2NrRGV2aWNlUmVhZHkgPSBvbnMuX3JlYWR5TG9jay5sb2NrKCk7XG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICAgIGlmIChvbnMuaXNXZWJWaWV3KCkpIHtcbiAgICAgIHdpbmRvdy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdkZXZpY2VyZWFkeScsIHVubG9ja0RldmljZVJlYWR5LCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVubG9ja0RldmljZVJlYWR5KCk7XG4gICAgfVxuICB9LCBmYWxzZSk7XG59XG5cbi8qKlxuICogQG1ldGhvZCBnZXRTY3JpcHRQYWdlXG4gKiBAc2lnbmF0dXJlIGdldFNjcmlwdFBhZ2UoKVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1BY2Nlc3MgdGhlIGxhc3QgY3JlYXRlZCBwYWdlIGZyb20gdGhlIGN1cnJlbnQgYHNjcmlwdGAgc2NvcGUuIE9ubHkgd29ya3MgaW5zaWRlIGA8c2NyaXB0Pjwvc2NyaXB0PmAgdGFncyB0aGF0IGFyZSBkaXJlY3QgY2hpbGRyZW4gb2YgYG9ucy1wYWdlYCBlbGVtZW50LiBVc2UgdGhpcyB0byBhZGQgbGlmZWN5Y2xlIGhvb2tzIHRvIGEgcGFnZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICogICBbZW5dUmV0dXJucyB0aGUgY29ycmVzcG9uZGluZyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKi9cbmNvbnN0IGdldENTID0gJ2N1cnJlbnRTY3JpcHQnIGluIGRvY3VtZW50ID8gKCkgPT4gZG9jdW1lbnQuY3VycmVudFNjcmlwdCA6ICgpID0+IGRvY3VtZW50LnNjcmlwdHNbZG9jdW1lbnQuc2NyaXB0cy5sZW5ndGggLSAxXTtcbm9ucy5nZXRTY3JpcHRQYWdlID0gKCkgPT4gZ2V0Q1MoKSAmJiAvb25zLXBhZ2UvaS50ZXN0KGdldENTKCkucGFyZW50RWxlbWVudC50YWdOYW1lKSAmJiBnZXRDUygpLnBhcmVudEVsZW1lbnQgfHwgbnVsbDtcblxuZXhwb3J0IGRlZmF1bHQgb25zO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuZnVuY3Rpb24gZ2V0RWxlbWVudENsYXNzKCkge1xuICBpZiAodHlwZW9mIEhUTUxFbGVtZW50ICE9PSAnZnVuY3Rpb24nKSB7IC8vIGNhc2Ugb2YgU2FmYXJpXG4gICAgY29uc3QgQmFzZUVsZW1lbnQgPSAoKSA9PiB7fTtcbiAgICBCYXNlRWxlbWVudC5wcm90b3R5cGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICByZXR1cm4gQmFzZUVsZW1lbnQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIEhUTUxFbGVtZW50O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VFbGVtZW50IGV4dGVuZHMgZ2V0RWxlbWVudENsYXNzKCkge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1lbGVtZW50JztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtdGVtcGxhdGVcbiAqIEBjYXRlZ29yeSB1dGlsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIERlZmluZSBhIHNlcGFyYXRlIEhUTUwgZnJhZ21lbnQgYW5kIHVzZSBhcyBhIHRlbXBsYXRlLiBUaGVzZSB0ZW1wbGF0ZXMgY2FuIGJlIGxvYWRlZCBhcyBwYWdlcyBpbiBgPG9ucy1uYXZpZ2F0b3I+YCwgYDxvbnMtdGFiYmFyPmAgYW5kIGA8b25zLXNwbGl0dGVyPmAuIFRoZXkgY2FuIGFsc28gYmUgdXNlZCB0byBnZW5lcmF0ZSBkaWFsb2dzLiBTaW5jZSBPbnNlbiBVSSAyLjQuMCwgdGhlIG5hdGl2ZSBgPHRlbXBsYXRlPmAgZWxlbWVudCBjYW4gYmUgdXNlZCBpbnN0ZWFkIG9mIGA8b25zLXRlbXBsYXRlPmAgZm9yIGJldHRlciBwZXJmb3JtYW5jZSBhbmQgZmVhdHVyZXMuIGA8b25zLXRlbXBsYXRlPmAgaXMgc3RpbGwgc3VwcG9ydGVkIGZvciBiYWNrd2FyZCBjb21wYXRpYmlsaXR5LlxuICogICBbL2VuXVxuICogICBbamFd44OG44Oz44OX44Os44O844OI44Go44GX44Gm5L2/55So44GZ44KL44Gf44KB44GuSFRNTOODleODqeOCsOODoeODs+ODiOOCkuWumue+qeOBl+OBvuOBmeOAguOBk+OBruimgee0oOOBp0hUTUzjgpLlrqPoqIDjgZnjgovjgajjgIFpZOWxnuaAp+OBq+aMh+WumuOBl+OBn+WQjeWJjeOCknBhZ2Xjga5VUkzjgajjgZfjgaZvbnMtbmF2aWdhdG9y44Gq44Gp44Gu44Kz44Oz44Od44O844ON44Oz44OI44GL44KJ5Y+C54Wn44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1uYXZpZ2F0b3JcbiAqICAgW2VuXVRoZSBgPG9ucy1uYXZpZ2F0b3I+YCBjb21wb25lbnQgZW5hYmxlcyBzdGFjayBiYXNlZCBuYXZpZ2F0aW9uLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLXRhYmJhclxuICogICBbZW5dVGhlIGA8b25zLXRhYmJhcj5gIGNvbXBvbmVudCBpcyB1c2VkIHRvIGFkZCB0YWIgbmF2aWdhdGlvbi5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zcGxpdHRlclxuICogICBbZW5dVGhlIGA8b25zLXNwbGl0dGVyPmAgY29tcG9uZW50IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhIGRyYWdnYWJsZSBtZW51IG9yIGNvbHVtbiBiYXNlZCBsYXlvdXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy10ZW1wbGF0ZSBpZD1cImZvb2Jhci5odG1sXCI+XG4gKiAgIDxvbnMtcGFnZT5cbiAqICAgICBQYWdlIGNvbnRlbnRcbiAqICAgPC9vbnMtcGFnZT5cbiAqIDwvb25zLXRlbXBsYXRlPlxuICpcbiAqIDxvbnMtbmF2aWdhdG9yIHBhZ2U9XCJmb29iYXIuaHRtbFwiPjwvb25zLW5hdmlnYXRvcj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGVtcGxhdGVFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdGVtcGxhdGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGVtcGxhdGUgY29udGVudC4gVGhpcyBwcm9wZXJ0eSBjYW4gbm90IGJlIHVzZWQgd2l0aCBBbmd1bGFySlMgYmluZGluZ3MuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRoaXMuaW5uZXJIVE1MO1xuXG4gICAgd2hpbGUgKHRoaXMuZmlyc3RDaGlsZCkge1xuICAgICAgdGhpcy5yZW1vdmVDaGlsZCh0aGlzLmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLnBhcmVudE5vZGUpIHsgLy8gTm90ZTogdGhpcy5wYXJlbnROb2RlIGlzIG5vdCBzZXQgaW4gc29tZSBDRTAvQ0UxIHBvbHlmaWxscy5cbiAgICAgIC8vIFNob3cgd2FybmluZyB3aGVuIHRoZSBvbnMtdGVtcGxhdGUgaXMgbm90IGxvY2F0ZWQganVzdCB1bmRlciBkb2N1bWVudC5ib2R5XG4gICAgICBpZiAodGhpcy5wYXJlbnROb2RlICE9PSBkb2N1bWVudC5ib2R5KSB7IC8vIGlmIHRoZSBwYXJlbnQgaXMgbm90IGRvY3VtZW50LmJvZHlcbiAgICAgICAgdXRpbC53YXJuKGBvbnMtdGVtcGxhdGUgKGlkID0gJHt0aGlzLmdldEF0dHJpYnV0ZSgnaWQnKX0pIG11c3QgYmUgbG9jYXRlZCBqdXN0IHVuZGVyIGRvY3VtZW50LmJvZHkkeyB0aGlzLnBhcmVudE5vZGUub3V0ZXJIVE1MID8gYDpcXG5cXG4ke3RoaXMucGFyZW50Tm9kZS5vdXRlckhUTUx9YCA6ICcuJyB9YCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdmFyIGV2ZW50ID0gbmV3IEN1c3RvbUV2ZW50KCdfdGVtcGxhdGVsb2FkZWQnLCB7YnViYmxlczogdHJ1ZSwgY2FuY2VsYWJsZTogdHJ1ZX0pO1xuICAgIGV2ZW50LnRlbXBsYXRlID0gdGhpcy50ZW1wbGF0ZTtcbiAgICBldmVudC50ZW1wbGF0ZUlkID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG5cbiAgICB0aGlzLmRpc3BhdGNoRXZlbnQoZXZlbnQpO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLlRlbXBsYXRlID0gVGVtcGxhdGVFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtdGVtcGxhdGUnLCBUZW1wbGF0ZUVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgb3JpZW50YXRpb24gZnJvbSAnLi4vb25zL29yaWVudGF0aW9uJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9vbnMvcGxhdGZvcm0nO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWlmXG4gKiBAY2F0ZWdvcnkgY29uZGl0aW9uYWxcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9pZlxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBDb25kaXRpb25hbGx5IGRpc3BsYXkgY29udGVudCBkZXBlbmRpbmcgb24gdGhlIHBsYXRmb3JtLCBkZXZpY2Ugb3JpZW50YXRpb24gb3IgYm90aC5cbiAqXG4gKiAgICAgU29tZXRpbWVzIGl0IGlzIHVzZWZ1bCB0byBjb25kaXRpb25hbGx5IGhpZGUgb3Igc2hvdyBjZXJ0YWluIGNvbXBvbmVudHMgYmFzZWQgb24gcGxhdGZvcm0uIFdoZW4gcnVubmluZyBvbiBpT1MgdGhlIGA8b25zLWlmPmAgZWxlbWVudCBjYW4gYmUgdXNlZCB0byBoaWRlIHRoZSBgPG9ucy1mYWI+YCBlbGVtZW50LlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBndWlkZSB0aGVtaW5nLmh0bWwjY3Jvc3MtcGxhdGZvcm0tc3R5bGluZy1hdXRvc3R5bGluZyBbZW5dSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svZW5dW2phXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtcGFnZT5cbiAqICAgPG9ucy1pZiBvcmllbnRhdGlvbj1cImxhbmRzY2FwZVwiPlxuICogICAgIExhbmRzY2FwZSB2aWV3IVxuICogICA8L29ucy1pZj5cbiAqICAgPG9ucy1pZiBwbGF0Zm9ybT1cImFuZHJvaWRcIj5cbiAqICAgICBUaGlzIGlzIEFuZHJvaWQuXG4gKiAgIDwvb25zLWlmPlxuICogICA8b25zLWlmIHBsYXRmb3JtPVwiaW9zIG90aGVyXCI+XG4gKiAgICAgVGhpcyBpcyBub3QgQW5kcm9pZC5cbiAqICAgPC9vbnMtaWY+XG4gKiA8L29ucy1wYWdlPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJZkVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcGxhdGZvcm1cbiAgICogQGluaXRvbmx5XG4gICAqIEB0eXBlIHtzdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwYWNlLXNlcGFyYXRlZCBwbGF0Zm9ybSBuYW1lcy4gUG9zc2libGUgdmFsdWVzIGFyZSBgXCJpb3NcImAsIGBcImFuZHJvaWRcImAsIGBcIndpbmRvd3NcImAgYW5kIGBcIm90aGVyXCJgLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgb3JpZW50YXRpb25cbiAgICogQHR5cGUge3N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dRWl0aGVyIGBcInBvcnRyYWl0XCJgIG9yIGBcImxhbmRzY2FwZVwiYC5bL2VuXVxuICAgKiAgW2phXXBvcnRyYWl044KC44GX44GP44GvbGFuZHNjYXBl44KS5oyH5a6a44GX44G+44GZWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAocGxhdGZvcm0uX2dldFNlbGVjdGVkUGxhdGZvcm0oKSAhPT0gbnVsbCkge1xuICAgICAgICB0aGlzLl9wbGF0Zm9ybVVwZGF0ZSgpO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5faXNBbGxvd2VkUGxhdGZvcm0oKSkge1xuICAgICAgICB3aGlsZSAodGhpcy5jaGlsZE5vZGVzWzBdKSB7XG4gICAgICAgICAgdGhpcy5jaGlsZE5vZGVzWzBdLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3BsYXRmb3JtVXBkYXRlKCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLl9vbk9yaWVudGF0aW9uQ2hhbmdlKCk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBvcmllbnRhdGlvbi5vbignY2hhbmdlJywgdGhpcy5fb25PcmllbnRhdGlvbkNoYW5nZS5iaW5kKHRoaXMpKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ29yaWVudGF0aW9uJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSkge1xuICAgIGlmIChuYW1lID09PSAnb3JpZW50YXRpb24nKSB7XG4gICAgICB0aGlzLl9vbk9yaWVudGF0aW9uQ2hhbmdlKCk7XG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgb3JpZW50YXRpb24ub2ZmKCdjaGFuZ2UnLCB0aGlzLl9vbk9yaWVudGF0aW9uQ2hhbmdlKTtcbiAgfVxuXG4gIF9wbGF0Zm9ybVVwZGF0ZSgpIHtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSB0aGlzLl9pc0FsbG93ZWRQbGF0Zm9ybSgpID8gJycgOiAnbm9uZSc7XG4gIH1cblxuICBfaXNBbGxvd2VkUGxhdGZvcm0oKSB7XG4gICAgcmV0dXJuICF0aGlzLmdldEF0dHJpYnV0ZSgncGxhdGZvcm0nKSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGxhdGZvcm0nKS5zcGxpdCgvXFxzKy8pLmluZGV4T2YocGxhdGZvcm0uZ2V0TW9iaWxlT1MoKSkgPj0gMDtcbiAgfVxuXG4gIF9vbk9yaWVudGF0aW9uQ2hhbmdlKCkge1xuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnb3JpZW50YXRpb24nKSAmJiB0aGlzLl9pc0FsbG93ZWRQbGF0Zm9ybSgpKSB7XG4gICAgICBjb25zdCBjb25kaXRpb25hbE9yaWVudGF0aW9uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ29yaWVudGF0aW9uJykudG9Mb3dlckNhc2UoKTtcbiAgICAgIGNvbnN0IGN1cnJlbnRPcmllbnRhdGlvbiA9IG9yaWVudGF0aW9uLmlzUG9ydHJhaXQoKSA/ICdwb3J0cmFpdCcgOiAnbGFuZHNjYXBlJztcblxuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gKGNvbmRpdGlvbmFsT3JpZW50YXRpb24gPT09IGN1cnJlbnRPcmllbnRhdGlvbikgPyAnJyA6ICdub25lJztcbiAgICB9XG4gIH1cbn1cblxub25zRWxlbWVudHMuSWYgPSBJZkVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1pZicsIElmRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuL3V0aWwnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlQW5pbWF0b3Ige1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy50aW1pbmdcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZHVyYXRpb25cbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZGVsYXlcbiAgICovXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMudGltaW5nID0gb3B0aW9ucy50aW1pbmcgfHwgJ2xpbmVhcic7XG4gICAgdGhpcy5kdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gfHwgMDtcbiAgICB0aGlzLmRlbGF5ID0gb3B0aW9ucy5kZWxheSB8fCAwO1xuXG4gICAgdGhpcy5kZWYgPSB7XG4gICAgICB0aW1pbmc6IHRoaXMudGltaW5nLFxuICAgICAgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sXG4gICAgICBkZWxheTogdGhpcy5kZWxheVxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZXh0ZW5kKHByb3BlcnRpZXMgPSB7fSkge1xuICAgIGNvbnN0IGV4dGVuZGVkQW5pbWF0b3IgPSB0aGlzO1xuICAgIGNvbnN0IG5ld0FuaW1hdG9yID0gZnVuY3Rpb24oKSB7XG4gICAgICBleHRlbmRlZEFuaW1hdG9yLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB1dGlsLmV4dGVuZCh0aGlzLCBwcm9wZXJ0aWVzKTtcbiAgICB9O1xuXG4gICAgbmV3QW5pbWF0b3IucHJvdG90eXBlID0gdGhpcy5wcm90b3R5cGU7XG4gICAgcmV0dXJuIG5ld0FuaW1hdG9yO1xuICB9XG59XG5cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbi8vIFRoaXMgb2JqZWN0IHNob3VsZCBub3QgYmUgZXhwb3NlZCB0byB1c2Vycy4gUGxlYXNlIGtlZXAgdGhpcyBwcml2YXRlLlxuY29uc3QgaVBob25lWFBhdGNoID0ge307XG5cbmlQaG9uZVhQYXRjaC5pc0lQaG9uZVhQb3J0cmFpdFBhdGNoQWN0aXZlID0gKCkgPT4ge1xuICByZXR1cm4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmdldEF0dHJpYnV0ZSgnb25zZmxhZy1pcGhvbmV4LXBvcnRyYWl0JykgIT0gbnVsbCAmJiB3aW5kb3cuaW5uZXJXaWR0aCA8IHdpbmRvdy5pbm5lckhlaWdodDtcbn1cblxuaVBob25lWFBhdGNoLmlzSVBob25lWExhbmRzY2FwZVBhdGNoQWN0aXZlID0gKCkgPT4ge1xuICAvLyBJZiB3aWR0aCA9PT0gaGVpZ2h0LCB0cmVhdCBpdCBhcyBsYW5kc2NhcGVcbiAgcmV0dXJuIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5nZXRBdHRyaWJ1dGUoJ29uc2ZsYWctaXBob25leC1sYW5kc2NhcGUnKSAhPSBudWxsICYmIHdpbmRvdy5pbm5lcldpZHRoID49IHdpbmRvdy5pbm5lckhlaWdodDtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBzYWZlIGFyZWEgbGVuZ3RocyBiYXNlZCBvbiB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgc2FmZSBhcmVhcy5cbiAqL1xuaVBob25lWFBhdGNoLmdldFNhZmVBcmVhTGVuZ3RocyA9ICgpID0+IHtcbiAgbGV0IHNhZmVBcmVhTGVuZ3RocztcbiAgaWYgKGlQaG9uZVhQYXRjaC5pc0lQaG9uZVhQb3J0cmFpdFBhdGNoQWN0aXZlKCkpIHtcbiAgICBzYWZlQXJlYUxlbmd0aHMgPSB7XG4gICAgICB0b3A6IDQ0LFxuICAgICAgcmlnaHQ6IDAsXG4gICAgICBib3R0b206IDM0LFxuICAgICAgbGVmdDogMFxuICAgIH07XG4gIH0gZWxzZSBpZiAoaVBob25lWFBhdGNoLmlzSVBob25lWExhbmRzY2FwZVBhdGNoQWN0aXZlKCkpIHtcbiAgICBzYWZlQXJlYUxlbmd0aHMgPSB7XG4gICAgICB0b3A6IDAsXG4gICAgICByaWdodDogNDQsXG4gICAgICBib3R0b206IDIxLFxuICAgICAgbGVmdDogNDRcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIHNhZmVBcmVhTGVuZ3RocyA9IHtcbiAgICAgIHRvcDogMCxcbiAgICAgIHJpZ2h0OiAwLFxuICAgICAgYm90dG9tOiAwLFxuICAgICAgbGVmdDogMFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gc2FmZUFyZWFMZW5ndGhzO1xufVxuXG4vKipcbiAqIFJldHVybnMgdGhlIHNhZmUgYXJlYSByZWN0IGJhc2VkIG9uIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBzYWZlIGFyZWFzLlxuICovXG5pUGhvbmVYUGF0Y2guZ2V0U2FmZUFyZWFET01SZWN0ID0gKCkgPT4ge1xuICBsZXQgc2FmZUFyZWFSZWN0O1xuICBpZiAoaVBob25lWFBhdGNoLmlzSVBob25lWFBvcnRyYWl0UGF0Y2hBY3RpdmUoKSkge1xuICAgIHNhZmVBcmVhUmVjdCA9IHtcbiAgICAgIHg6IDAsXG4gICAgICB5OiA0NCwgLyogMCArIDQ0ICh0b3Agc2FmZSBhcmVhKSAqL1xuICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgaGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQgLSA3OCAvKiBoZWlnaHQgLSA0NCAodG9wIHNhZmUgYXJlYSkgLSAzNCAoYm90dG9tIHNhZmUgYXJlYSkgKi9cbiAgICB9O1xuICB9IGVsc2UgaWYgKGlQaG9uZVhQYXRjaC5pc0lQaG9uZVhMYW5kc2NhcGVQYXRjaEFjdGl2ZSgpKSB7XG4gICAgc2FmZUFyZWFSZWN0ID0ge1xuICAgICAgeDogNDQsIC8qIDAgKyA0NCAobGVmdCBzYWZlIGFyZWEpICovXG4gICAgICB5OiAwLFxuICAgICAgd2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoIC0gODgsIC8qIHdpZHRoIC0gNDQgKGxlZnQgc2FmZSBhcmVhKSAtIDM0IChyaWdodCBzYWZlIGFyZWEpICovXG4gICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCAtIDIxIC8qIGhlaWdodCAtIDIxIChib3R0b20gc2FmZSBhcmVhKSAqL1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgc2FmZUFyZWFSZWN0ID0ge1xuICAgICAgeDogMCxcbiAgICAgIHk6IDAsXG4gICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxuICAgIH07XG4gIH1cblxuICByZXR1cm4ge1xuICAgIC4uLnNhZmVBcmVhUmVjdCxcbiAgICBsZWZ0OiBzYWZlQXJlYVJlY3QueCxcbiAgICB0b3A6IHNhZmVBcmVhUmVjdC55LFxuICAgIHJpZ2h0OiBzYWZlQXJlYVJlY3QueCArIHNhZmVBcmVhUmVjdC53aWR0aCxcbiAgICBib3R0b206IHNhZmVBcmVhUmVjdC55ICsgc2FmZUFyZWFSZWN0LmhlaWdodFxuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpUGhvbmVYUGF0Y2g7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcidcbmltcG9ydCBpUGhvbmVYUGF0Y2ggZnJvbSAnLi4vLi4vb25zL2lwaG9uZXgtcGF0Y2gnO1xuXG5leHBvcnQgY2xhc3MgQWN0aW9uU2hlZXRBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBzaG93KGRpYWxvZywgZG9uZSkge1xuICAgIGRvbmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgaGlkZShkaWFsb2csIGRvbmUpIHtcbiAgICBkb25lKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBBbmRyb2lkIHN0eWxlIGFuaW1hdG9yIGZvciBBY3Rpb24gU2hlZXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBNREFjdGlvblNoZWV0QW5pbWF0b3IgZXh0ZW5kcyBBY3Rpb25TaGVldEFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7IHRpbWluZyA9ICdlYXNlJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuNCB9ID0ge30pIHtcbiAgICBzdXBlcih7dGltaW5nLCBkZWxheSwgZHVyYXRpb259KTtcblxuICAgIHRoaXMubWFza1RpbWluZyA9ICdsaW5lYXInO1xuICAgIHRoaXMubWFza0R1cmF0aW9uID0gMC4yO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAgIC5xdWV1ZSh7IG9wYWNpdHk6IDAgfSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHsgb3BhY2l0eTogMS4wIH0sIHtcbiAgICAgICAgICBkdXJhdGlvbjogdGhpcy5tYXNrRHVyYXRpb24sXG4gICAgICAgICAgdGltaW5nOiB0aGlzLm1hc2tUaW1pbmdcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX3NoZWV0LCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCA4MCUsIDApYCwgb3BhY2l0eTogMCB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrKVxuICAgICAgICAucXVldWUoeyBvcGFjaXR5OiAxIH0pXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7IG9wYWNpdHk6IDAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLm1hc2tEdXJhdGlvbixcbiAgICAgICAgICB0aW1pbmc6IHRoaXMubWFza1RpbWluZ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fc2hlZXQsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJywgb3BhY2l0eTogMSB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgODAlLCAwKWAsIG9wYWNpdHk6IDAgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG59XG5cbi8qKlxuICogaU9TIHN0eWxlIGFuaW1hdG9yIGZvciBkaWFsb2cuXG4gKi9cbmV4cG9ydCBjbGFzcyBJT1NBY3Rpb25TaGVldEFuaW1hdG9yIGV4dGVuZHMgQWN0aW9uU2hlZXRBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3IoeyB0aW1pbmcgPSAnZWFzZScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjMgfSA9IHt9KSB7XG4gICAgc3VwZXIoe3RpbWluZywgZGVsYXksIGR1cmF0aW9ufSk7XG5cbiAgICB0aGlzLm1hc2tUaW1pbmcgPSAnbGluZWFyJztcbiAgICB0aGlzLm1hc2tEdXJhdGlvbiA9IDAuMjtcbiAgICBpZiAoaVBob25lWFBhdGNoLmlzSVBob25lWFBvcnRyYWl0UGF0Y2hBY3RpdmUoKSkge1xuICAgICAgdGhpcy5saWZ0QW1vdW50ID0gJ2NhbGMoMTAwJSArIDQ4cHgpJztcbiAgICB9IGVsc2UgaWYgKGlQaG9uZVhQYXRjaC5pc0lQaG9uZVhMYW5kc2NhcGVQYXRjaEFjdGl2ZSgpKSB7XG4gICAgICB0aGlzLmxpZnRBbW91bnQgPSAnY2FsYygxMDAlICsgMzNweCknO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmxpZnRBbW91bnQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCAvIDIuMCAtIDEgKyAncHgnOyAvLyBhdm9pZCBGb3JjZWQgU3luY2hyb25vdXMgTGF5b3V0XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2spXG4gICAgICAucXVldWUoeyBvcGFjaXR5OiAwIH0pXG4gICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgLnF1ZXVlKHsgb3BhY2l0eTogMSB9LCB7XG4gICAgICAgIGR1cmF0aW9uOiB0aGlzLm1hc2tEdXJhdGlvbixcbiAgICAgICAgdGltaW5nOiB0aGlzLm1hc2tUaW1pbmdcbiAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9zaGVldCwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHt0aGlzLmxpZnRBbW91bnR9LCAwKWAgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaylcbiAgICAgIC5xdWV1ZSh7IG9wYWNpdHk6IDEgfSlcbiAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAucXVldWUoeyBvcGFjaXR5OiAwIH0sIHtcbiAgICAgICAgZHVyYXRpb246IHRoaXMubWFza0R1cmF0aW9uLFxuICAgICAgICB0aW1pbmc6IHRoaXMubWFza1RpbWluZ1xuICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX3NoZWV0LCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsICR7dGhpcy5saWZ0QW1vdW50fSwgMClgIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS1lbGVtZW50JztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQgRG9vckxvY2sgZnJvbSAnLi4vLi4vb25zL2Rvb3Jsb2NrJztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VEaWFsb2dFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHV0aWwudGhyb3dNZW1iZXIoKTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgdXRpbC50aHJvd01lbWJlcigpO1xuICB9XG5cbiAgX3RvZ2dsZVN0eWxlKHNob3VsZFNob3cpIHtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSBzaG91bGRTaG93ID8gJ2Jsb2NrJyA6ICdub25lJztcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBpZiAodGhpcy5jb25zdHJ1Y3RvciA9PT0gQmFzZURpYWxvZ0VsZW1lbnQpIHtcbiAgICAgIHV0aWwudGhyb3dBYnN0cmFjdCgpO1xuICAgIH1cblxuICAgIHRoaXMuX3Zpc2libGUgPSBmYWxzZTtcbiAgICB0aGlzLl9kb29yTG9jayA9IG5ldyBEb29yTG9jaygpO1xuICAgIHRoaXMuX2NhbmNlbCA9IHRoaXMuX2NhbmNlbC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX3NlbGZDYW1lbE5hbWUgPSB1dGlsLmNhbWVsaXplKHRoaXMudGFnTmFtZS5zbGljZSg0KSk7XG4gICAgdGhpcy5fZGVmYXVsdERCQiA9IGUgPT4gdGhpcy5jYW5jZWxhYmxlID8gdGhpcy5fY2FuY2VsKCkgOiBlLmNhbGxQYXJlbnRIYW5kbGVyKCk7XG4gICAgdGhpcy5fYW5pbWF0b3JGYWN0b3J5ID0gdGhpcy5fdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCk7XG4gIH1cblxuICBnZXQgb25EZXZpY2VCYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcjtcbiAgfVxuXG4gIHNldCBvbkRldmljZUJhY2tCdXR0b24oY2FsbGJhY2spIHtcbiAgICBpZiAodGhpcy5fYmFja0J1dHRvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyLmNyZWF0ZUhhbmRsZXIodGhpcywgY2FsbGJhY2spO1xuICB9XG5cbiAgX2NhbmNlbCgpIHtcbiAgICBpZiAodGhpcy5jYW5jZWxhYmxlICYmICF0aGlzLl9ydW5uaW5nKSB7XG4gICAgICB0aGlzLl9ydW5uaW5nID0gdHJ1ZTtcbiAgICAgIHRoaXMuaGlkZSgpXG4gICAgICAgIC50aGVuKFxuICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3J1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnZGlhbG9nLWNhbmNlbCcpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgKCkgPT4gdGhpcy5fcnVubmluZyA9IGZhbHNlXG4gICAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgc2hvdyguLi5hcmdzKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NldFZpc2libGUodHJ1ZSwgLi4uYXJncyk7XG4gIH1cblxuICBoaWRlKC4uLmFyZ3MpIHtcbiAgICByZXR1cm4gdGhpcy5fc2V0VmlzaWJsZShmYWxzZSwgLi4uYXJncyk7XG4gIH1cblxuICB0b2dnbGUoLi4uYXJncykge1xuICAgIHJldHVybiB0aGlzLl9zZXRWaXNpYmxlKCF0aGlzLnZpc2libGUsIC4uLmFyZ3MpO1xuICB9XG5cbiAgX3NldFZpc2libGUoc2hvdWxkU2hvdywgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgYWN0aW9uID0gc2hvdWxkU2hvdyA/ICdzaG93JyA6ICdoaWRlJztcblxuICAgIG9wdGlvbnMgPSB7IC4uLm9wdGlvbnMgfTtcbiAgICBvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnMgPSB1dGlsLmV4dGVuZChcbiAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fSxcbiAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpXG4gICAgKTtcblxuICAgIGxldCBjYW5jZWxlZCA9IGZhbHNlO1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCBgcHJlJHthY3Rpb259YCwgeyAvLyBwcmVzaG93IHByZWhpZGVcbiAgICAgIFt0aGlzLl9zZWxmQ2FtZWxOYW1lXTogdGhpcyxcbiAgICAgIGNhbmNlbDogKCkgPT4gY2FuY2VsZWQgPSB0cnVlXG4gICAgfSk7XG5cbiAgICBpZiAoY2FuY2VsZWQpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgQ2FuY2VsZWQgaW4gcHJlJHthY3Rpb259IGV2ZW50LmApO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIHRoaXMuX2Rvb3JMb2NrLndhaXRVbmxvY2soKCkgPT4ge1xuICAgICAgICBjb25zdCB1bmxvY2sgPSB0aGlzLl9kb29yTG9jay5sb2NrKCk7XG4gICAgICAgIGNvbnN0IGFuaW1hdG9yID0gdGhpcy5fYW5pbWF0b3JGYWN0b3J5Lm5ld0FuaW1hdG9yKG9wdGlvbnMpO1xuXG4gICAgICAgIHNob3VsZFNob3cgJiYgdGhpcy5fdG9nZ2xlU3R5bGUodHJ1ZSwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuX3Zpc2libGUgPSBzaG91bGRTaG93O1xuICAgICAgICB1dGlsLmlvc1BhZ2VTY3JvbGxGaXgoc2hvdWxkU2hvdyk7XG5cbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgICBhbmltYXRvclthY3Rpb25dKHRoaXMsICgpID0+IHtcbiAgICAgICAgICAgICFzaG91bGRTaG93ICYmIHRoaXMuX3RvZ2dsZVN0eWxlKGZhbHNlLCBvcHRpb25zKTtcblxuICAgICAgICAgICAgdW5sb2NrKCk7XG5cbiAgICAgICAgICAgIHV0aWwucHJvcGFnYXRlQWN0aW9uKHRoaXMsICdfJyArIGFjdGlvbik7XG4gICAgICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3Bvc3QnICsgYWN0aW9uLCB7W3RoaXMuX3NlbGZDYW1lbE5hbWVdOiB0aGlzfSk7IC8vIHBvc3RzaG93IHBvc3RoaWRlXG5cbiAgICAgICAgICAgIGlmIChvcHRpb25zLmNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgICAgICAgICAgb3B0aW9ucy5jYWxsYmFjayh0aGlzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG5cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IHZpc2libGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3Zpc2libGU7XG4gIH1cblxuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIHNldCBjYW5jZWxhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdjYW5jZWxhYmxlJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGNhbmNlbGFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdjYW5jZWxhYmxlJyk7XG4gIH1cblxuICBfdXBkYXRlTWFzaygpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMuX21hc2sgJiYgdGhpcy5nZXRBdHRyaWJ1dGUoJ21hc2stY29sb3InKSkge1xuICAgICAgICB0aGlzLl9tYXNrLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IHRoaXMuZ2V0QXR0cmlidXRlKCdtYXNrLWNvbG9yJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuX2RlZmF1bHREQkIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRoaXMub25EZXZpY2VCYWNrQnV0dG9uID0gdGhpcy5fZGVmYXVsdERCQi5iaW5kKHRoaXMpO1xuICAgIH1cblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fbWFzaykge1xuICAgICAgICB0aGlzLl9tYXNrLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fY2FuY2VsLCBmYWxzZSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodGhpcy5fYmFja0J1dHRvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fbWFzaykge1xuICAgICAgdGhpcy5fbWFzay5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2NhbmNlbCwgZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2FuaW1hdGlvbicsICdtYXNrLWNvbG9yJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgdGhpcy5fc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdhbmltYXRpb24nOlxuICAgICAgICB0aGlzLl9hbmltYXRvckZhY3RvcnkgPSB0aGlzLl91cGRhdGVBbmltYXRvckZhY3RvcnkoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtYXNrLWNvbG9yJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlTWFzaygpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVzaG93JywgJ3Bvc3RzaG93JywgJ3ByZWhpZGUnLCAncG9zdGhpZGUnLCAnZGlhbG9nLWNhbmNlbCddO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IHsgQWN0aW9uU2hlZXRBbmltYXRvciwgSU9TQWN0aW9uU2hlZXRBbmltYXRvciwgTURBY3Rpb25TaGVldEFuaW1hdG9yIH0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBCYXNlRGlhbG9nRWxlbWVudCBmcm9tICcuLi9iYXNlL2Jhc2UtZGlhbG9nJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcuYWN0aW9uLXNoZWV0JzogJ2FjdGlvbi1zaGVldC0tKicsXG4gICcuYWN0aW9uLXNoZWV0LW1hc2snOiAnYWN0aW9uLXNoZWV0LW1hc2stLSonLFxuICAnLmFjdGlvbi1zaGVldC10aXRsZSc6ICdhY3Rpb24tc2hlZXQtdGl0bGUtLSonXG59O1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICAnZGVmYXVsdCc6ICgpID0+IHBsYXRmb3JtLmlzQW5kcm9pZCgpID8gTURBY3Rpb25TaGVldEFuaW1hdG9yIDogSU9TQWN0aW9uU2hlZXRBbmltYXRvcixcbiAgJ25vbmUnOiBBY3Rpb25TaGVldEFuaW1hdG9yXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1hY3Rpb24tc2hlZXRcbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQWN0aW9uL2JvdHRvbSBzaGVldCB0aGF0IGlzIGRpc3BsYXllZCBvbiB0b3Agb2YgY3VycmVudCBzY3JlZW4uXG4gKlxuICogICAgIFRoaXMgZWxlbWVudCBjYW4gZWl0aGVyIGJlIGF0dGFjaGVkIGRpcmVjdGx5IHRvIHRoZSBgPGJvZHk+YCBvciBkeW5hbWljYWxseSBjcmVhdGVkIGZyb20gYSB0ZW1wbGF0ZSB1c2luZyB0aGUgYG9ucy5jcmVhdGVFbGVtZW50KHRlbXBsYXRlLCB7IGFwcGVuZDogdHJ1ZSB9KWAgdXRpbGl0eSBmdW5jdGlvbiBhbmQgdGhlIGA8dGVtcGxhdGU+YCB0YWcuXG4gKlxuICogICAgIFRoZSBhY3Rpb24gc2hlZXQgaXMgdXNlZnVsIGZvciBkaXNwbGF5aW5nIGEgbGlzdCBvZiBvcHRpb25zIGFuZCBhc2tpbmcgdGhlIHVzZXIgdG8gbWFrZSBhIGRlY2lzaW9uLiBBIGBvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbmAgaXMgcHJvdmlkZWQgZm9yIHRoaXMgcHVycG9zZSwgYWx0aG91Z2ggaXQgY2FuIGNvbnRhaW4gYW55IHR5cGUgb2YgY29udGVudC5cbiAqXG4gKiAgICAgSXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGRpc3BsYXllZCBhcyBNYXRlcmlhbCBEZXNpZ24gKGJvdHRvbSBzaGVldCkgd2hlbiBydW5uaW5nIG9uIGFuIEFuZHJvaWQgZGV2aWNlLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg44Ki44Kv44K344On44Oz44K344O844OI44CB44KC44GX44GP44Gv44Oc44OI44Og44K344O844OI44KS54++5Zyo44Gu44K544Kv44Oq44O844Oz5LiK44Gr6KGo56S644GX44G+44GZ44CCXG4gKlxuICogICAgIOOBk+OBruimgee0oOOBr+OAgWA8Ym9keT5g6KaB57Sg44Gr55u05o6l44Ki44K/44OD44OB44GV44KM44KL44GL44CB44KC44GX44GP44GvYG9ucy5jcmVhdGVFbGVtZW50KHRlbXBsYXRlLCB7IGFwcGVuZDogdHJ1ZSB9KWDjgahgPHRlbXBsYXRlPmDjgr/jgrDjgpLkvb/jgaPjgabjg4bjg7Pjg5fjg6zjg7zjg4jjgYvjgonli5XnmoTjgavnlJ/miJDjgZXjgozjgb7jgZnjgIJcbiAqXG4gKiAgICAg44Ki44Kv44K344On44Oz44K344O844OI44Gv44CB6YG45oqe6IKi44Gu44Oq44K544OI44KS6KGo56S644GX44Gm44Om44O844K244O844Gr5bCL44Gt44KL44Gu44Gr5L6/5Yip44Gn44GZ44CCYG9ucy1hY3Rpb24tc2hlZXQtYnV0dG9uYOOBr+OAgeOBk+OBruimgee0oOOBruS4reOBq+e9ruOBj+OBn+OCgeOBq+aPkOS+m+OBleOCjOOBpuOBhOOBvuOBmeOBjOOAgeOBneOCjOS7peWkluOBq+OCguS7luOBruOBqeOBruOCiOOBhuOBquimgee0oOOCkuWQq+OCgOOBk+OBqOOBjOOBp+OBjeOBvuOBmeOAglxuICpcbiAqICAgICBBbmRyb2lk44OH44OQ44Kk44K544Gn5a6f6KGM44GV44KM44KL44Go44GN44Gr44Gv44CB6Ieq5YuV55qE44Gr44Oe44OG44Oq44Ki44Or44OH44K244Kk44OzKOODnOODiOODoOOCt+ODvOODiCnjgajjgZfjgabooajnpLrjgZXjgozjgb7jgZnjgIJcbiAqICAgWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dRGlzcGxheSBhIE1hdGVyaWFsIERlc2lnbiBib3R0b20gc2hlZXQuWy9lbl1cbiAqICAgW2phXeODnuODhuODquOCouODq+ODh+OCtuOCpOODs+OBruODnOODiOODoOOCt+ODvOODiOOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9yZWZlcmVuY2UvYWN0aW9uLXNoZWV0XG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sI21vZGlmaWVycyBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1wb3BvdmVyXG4gKiAgIFtlbl1gPG9ucy1wb3BvdmVyPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1wb3BvdmVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1tb2RhbFxuICogICBbZW5dYDxvbnMtbW9kYWw+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLW1vZGFs44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWFjdGlvbi1zaGVldCBpZD1cInNoZWV0XCI+XG4gKiAgIDxvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbj5MYWJlbDwvb25zLWFjdGlvbi1zaGVldC1idXR0b24+XG4gKiAgIDxvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbj5MYWJlbDwvb25zLWFjdGlvbi1zaGVldC1idXR0b24+XG4gKiA8L29ucy1hY3Rpb24tc2hlZXQ+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NoZWV0Jykuc2hvdygpO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjdGlvblNoZWV0RWxlbWVudCBleHRlbmRzIEJhc2VEaWFsb2dFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IHByZXNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgYWN0aW9uIHNoZWV0IGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiBbamFd44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM44KL55u05YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmFjdGlvblNoZWV0XG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUV4ZWN1dGUgdGhpcyBmdW5jdGlvbiB0byBzdG9wIHRoZSBhY3Rpb24gc2hlZXQgZnJvbSBiZWluZyBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlrp/ooYzjgZnjgovjgajjgIHjg4DjgqTjgqLjg63jgrDjga7ooajnpLrjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgYWN0aW9uIHNoZWV0IGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiBbamFd44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM44Gf55u05b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmFjdGlvblNoZWV0XG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIGFjdGlvbiBzaGVldCBpcyBoaWRkZW4uWy9lbl1cbiAgICogW2phXeODgOOCpOOCouODreOCsOOBjOmaoOOCjOOCi+ebtOWJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5hY3Rpb25TaGVldFxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGV2ZW50LmNhbmNlbFxuICAgKiAgIFtlbl1FeGVjdXRlIHRoaXMgZnVuY3Rpb24gdG8gc3RvcCB0aGUgYWN0aW9uIHNoZWV0IGZyb20gYmVpbmcgaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWun+ihjOOBmeOCi+OBqOOAgeODgOOCpOOCouODreOCsOOBrumdnuihqOekuuOBjOOCreODo+ODs+OCu+ODq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdGhpZGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBhY3Rpb24gc2hlZXQgaXMgaGlkZGVuLlsvZW5dXG4gICAqIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzpmqDjgozjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuYWN0aW9uU2hlZXRcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB0aXRsZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1PcHRpb25hbCB0aXRsZSBvZiB0aGUgYWN0aW9uIHNoZWV0LiBBIG5ldyBlbGVtZW50IHdpbGwgYmUgY3JlYXRlZCBjb250YWluaW5nIHRoaXMgc3RyaW5nLlsvZW5dXG4gICAqICBbamFd44Ki44Kv44K344On44Oz44K344O844OI44Gu44K/44Kk44OI44Or44KS5oyH5a6a44GX44G+44GZ44CC44GT44GT44Gn5oyH5a6a44GX44Gf5paH5a2X5YiX44KS5ZCr44KA5paw44GX44GE6KaB57Sg44GM5L2c5oiQ44GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGFjdGlvbiBzaGVldC5bL2VuXVxuICAgKiAgW2phXeODgOOCpOOCouODreOCsOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGNhbmNlbGFibGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBhY3Rpb24gc2hlZXQgY2FuIGJlIGNsb3NlZCBieSB0YXBwaW5nIHRoZSBiYWNrZ3JvdW5kIG9yIGJ5IHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbiBvbiBBbmRyb2lkIGRldmljZXMuWy9lbl1cbiAgICogIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgovjgajjgIHjgqLjgq/jgrfjg6fjg7Pjgrfjg7zjg4jjga7og4zmma/jgoRBbmRyb2lk44OH44OQ44Kk44K544Gu44OQ44OD44Kv44Oc44K/44Oz44KS5o6o44GZ44GT44Go44Gn44Ki44Kv44K344On44Oz44K344O844OI44GM6ZaJ44GY44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBhY3Rpb24gc2hlZXQgaXMgZGlzYWJsZWQuWy9lbl1cbiAgICogIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHjg4DjgqTjgqLjg63jgrDjga9kaXNhYmxlZOeKtuaFi+OBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhbmltYXRpb24gdXNlZCB3aGVuIHNob3dpbmcgYW5kIGhpZGluZyB0aGUgYWN0aW9uIHNoZWV0LiBDYW4gYmUgZWl0aGVyIGBcIm5vbmVcImAgb3IgYFwiZGVmYXVsdFwiYC5bL2VuXVxuICAgKiAgW2phXeODgOOCpOOCouODreOCsOOCkuihqOekuuOBmeOCi+mam+OBruOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwi44KC44GX44GP44GvXCJkZWZhdWx0XCLjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtYXNrLWNvbG9yXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IHJnYmEoMCwgMCwgMCwgMC4yKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1Db2xvciBvZiB0aGUgYmFja2dyb3VuZCBtYXNrLiBEZWZhdWx0IGlzIGBcInJnYmEoMCwgMCwgMCwgMC4yKVwiYC5bL2VuXVxuICAgKiAgW2phXeiDjOaZr+OBruODnuOCueOCr+OBruiJsuOCkuaMh+WumuOBl+OBvuOBmeOAglwicmdiYSgwLCAwLCAwLCAwLjIpXCLjgYzjg4fjg5Xjgqnjg6vjg4jlgKTjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4gc2NoZW1lO1xuICB9XG5cbiAgZ2V0IF9tYXNrKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmFjdGlvbi1zaGVldC1tYXNrJyk7XG4gIH1cblxuICBnZXQgX3NoZWV0KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmFjdGlvbi1zaGVldCcpO1xuICB9XG5cbiAgZ2V0IF90aXRsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCcuYWN0aW9uLXNoZWV0LXRpdGxlJyk7XG4gIH1cblxuICBfdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCkge1xuICAgIHJldHVybiBuZXcgQW5pbWF0b3JGYWN0b3J5KHtcbiAgICAgIGFuaW1hdG9yczogX2FuaW1hdG9yRGljdCxcbiAgICAgIGJhc2VDbGFzczogQWN0aW9uU2hlZXRBbmltYXRvcixcbiAgICAgIGJhc2VDbGFzc05hbWU6ICdBY3Rpb25TaGVldEFuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKVxuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgdGhpcy5zdHlsZS56SW5kZXggPSAxMDAwMTtcblxuICAgIC8qIEV4cGVjdGVkIHJlc3VsdDpcbiAgICAgKiAgIDxvbnMtYWN0aW9uLXNoZWV0PlxuICAgICAqICAgICA8ZGl2IGNsYXNzPVwiYWN0aW9uLXNoZWV0LW1hc2tcIj48L2Rpdj5cbiAgICAgKiAgICAgPGRpdiBjbGFzcz1cImFjdGlvbi1zaGVldFwiPlxuICAgICAqICAgICAgIDxkaXYgY2xhc3M9XCJhY3Rpb24tc2hlZXQtdGl0bGU+PC9kaXY+XG4gICAgICogICAgICAgLi4uXG4gICAgICogICAgIDwvZGl2PlxuICAgICAqICAgPC9vbnMtYWN0aW9uLXNoZWV0PlxuICAgICAqL1xuXG4gICAgaWYgKCF0aGlzLl9zaGVldCkge1xuICAgICAgY29uc3Qgc2hlZXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIHNoZWV0LmNsYXNzTGlzdC5hZGQoJ2FjdGlvbi1zaGVldCcpO1xuXG4gICAgICB3aGlsZSAodGhpcy5maXJzdENoaWxkKSB7XG4gICAgICAgIHNoZWV0LmFwcGVuZENoaWxkKHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoc2hlZXQpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5fdGl0bGUgJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ3RpdGxlJykpIHtcbiAgICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICB0aXRsZS5pbm5lckhUTUwgPSB0aGlzLmdldEF0dHJpYnV0ZSgndGl0bGUnKTtcbiAgICAgIHRpdGxlLmNsYXNzTGlzdC5hZGQoJ2FjdGlvbi1zaGVldC10aXRsZScpO1xuICAgICAgdGhpcy5fc2hlZXQuaW5zZXJ0QmVmb3JlKHRpdGxlLCB0aGlzLl9zaGVldC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuX21hc2spIHtcbiAgICAgIGNvbnN0IG1hc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgIG1hc2suY2xhc3NMaXN0LmFkZCgnYWN0aW9uLXNoZWV0LW1hc2snKTtcbiAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKG1hc2ssIHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgdGhpcy5fc2hlZXQuc3R5bGUuekluZGV4ID0gMjAwMDE7XG4gICAgdGhpcy5fbWFzay5zdHlsZS56SW5kZXggPSAyMDAwMDtcblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgdGhpcy5fc2NoZW1lKTtcbiAgfVxuXG4gIF91cGRhdGVUaXRsZSgpIHtcbiAgICBpZiAodGhpcy5fdGl0bGUpIHtcbiAgICAgIHRoaXMuX3RpdGxlLmlubmVySFRNTCA9IHRoaXMuZ2V0QXR0cmlidXRlKCd0aXRsZScpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNob3dcbiAgICogQHNpZ25hdHVyZSBzaG93KFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwibm9uZVwiYCBhbmQgYFwic2xpZGVcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJub25lXCIsIFwic2xpZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YCBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGFjdGlvbiBzaGVldCBoYXMgYmVlbiByZXZlYWxlZC5bL2VuXVxuICAgKiAgIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzooajnpLrjgZXjgozntYLjgo/jgaPjgZ/lvozjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TaG93IHRoZSBhY3Rpb24gc2hlZXQuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjgpLplovjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfSBSZXNvbHZlcyB0byB0aGUgZGlzcGxheWVkIGVsZW1lbnQuXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVcbiAgICogQHNpZ25hdHVyZSBoaWRlKFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwibm9uZVwiYCBhbmQgYFwic2xpZGVcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJub25lXCIsIFwic2xpZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YFsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1UaGlzIGZ1bmN0aW9ucyBpcyBjYWxsZWQgYWZ0ZXIgdGhlIGFjdGlvbiBzaGVldCBoYXMgYmVlbiBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44GM6Zqg44KM44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhpZGUgdGhlIGFjdGlvbiBzaGVldC5bL2VuXVxuICAgKiAgIFtqYV3jg4DjgqTjgqLjg63jgrDjgpLplonjgZjjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgaGlkZGVuIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV3pmqDjgozjgZ/opoHntKDjgpLop6PmsbrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZpc2libGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgYWN0aW9uIHNoZWV0IGlzIHZpc2libGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeimgee0oOOBjOimi+OBiOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBhY3Rpb24gc2hlZXQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2FuY2VsYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGFjdGlvbiBzaGVldCBpcyBjYW5jZWxhYmxlIG9yIG5vdC4gQSBjYW5jZWxhYmxlIGFjdGlvbiBzaGVldCBjYW4gYmUgY2xvc2VkIGJ5IHRhcHBpbmcgdGhlIGJhY2tncm91bmQgb3IgYnkgcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uIG9uIEFuZHJvaWQgZGV2aWNlcy5bL2VuXVxuICAgKiAgIFtqYV3jgqLjgq/jgrfjg6fjg7Pjgrfjg7zjg4jjgYzjgq3jg6Pjg7Pjgrvjg6vlj6/og73jgYvjganjgYbjgYvjgpLoqK3lrprjgZfjgb7jgZnjgILjgq3jg6Pjg7Pjgrvjg6vlj6/og73jgarjgqLjgq/jgrfjg6fjg7Pjgrfjg7zjg4jjga/jgIHog4zmma/jgpLjgr/jg4Pjg5fjgZfjgZ/jgopBbmRyb2lk44OH44OQ44Kk44K544Gu44OQ44OD44Kv44Oc44K/44Oz44KS5o6o44GZ44GT44Go44Gn6ZaJ44GY44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsuLi5zdXBlci5vYnNlcnZlZEF0dHJpYnV0ZXMsICd0aXRsZSddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ3RpdGxlJykge1xuICAgICAgdGhpcy5fdXBkYXRlVGl0bGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VwZXIuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge0FjdGlvblNoZWV0QW5pbWF0b3J9IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIEFjdGlvblNoZWV0QW5pbWF0b3IpKSB7XG4gICAgICB1dGlsLnRocm93QW5pbWF0b3IoJ0FjdGlvblNoZWV0Jyk7XG4gICAgfVxuICAgIF9hbmltYXRvckRpY3RbbmFtZV0gPSBBbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYW5pbWF0b3JzKCkge1xuICAgIHJldHVybiBfYW5pbWF0b3JEaWN0O1xuICB9XG5cbiAgc3RhdGljIGdldCBBY3Rpb25TaGVldEFuaW1hdG9yKCkge1xuICAgIHJldHVybiBBY3Rpb25TaGVldEFuaW1hdG9yO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLkFjdGlvblNoZWV0ID0gQWN0aW9uU2hlZXRFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtYWN0aW9uLXNoZWV0JywgQWN0aW9uU2hlZXRFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi8uLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi8uLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlLWVsZW1lbnQnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICB1dGlsLnRocm93TWVtYmVyKCk7XG4gIH1cblxuICBnZXQgX2RlZmF1bHRDbGFzc05hbWUoKSB7XG4gICAgdXRpbC50aHJvd01lbWJlcigpO1xuICB9XG5cbiAgZ2V0IF9yaXBwbGVPcHQoKSB7XG4gICAgcmV0dXJuIFt0aGlzXTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBpZiAodGhpcy5jb25zdHJ1Y3RvciA9PT0gQmFzZUJ1dHRvbkVsZW1lbnQpIHtcbiAgICAgIHV0aWwudGhyb3dBYnN0cmFjdCgpO1xuICAgIH1cblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuICB9XG5cbiAgc2V0IGRpc2FibGVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdkaXNhYmxlZCcsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICBnZXQgX2ljb24oKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtaWNvbicpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQodGhpcy5fZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBpZiAoIXRoaXMuX2ljb24gJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ2ljb24nKSkge1xuICAgICAgdXRpbC5jaGVja01pc3NpbmdJbXBvcnQoJ0ljb24nKTtcbiAgICAgIGNvbnN0IGljb24gPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYDxvbnMtaWNvbiBpY29uPVwiJHt0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpfVwiPjwvb25zLWljb24+YCk7XG4gICAgICBpY29uLmNsYXNzTGlzdC5hZGQodGhpcy5fZGVmYXVsdENsYXNzTmFtZS5yZXBsYWNlKCdidXR0b24nLCAnaWNvbicpKTtcbiAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKGljb24sIHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHRoaXMuX3NjaGVtZSk7XG4gIH1cblxuICBfdXBkYXRlSWNvbigpIHtcbiAgICBpZiAodGhpcy5faWNvbikge1xuICAgICAgdGhpcy5faWNvbi5zZXRBdHRyaWJ1dGUoJ2ljb24nLCB0aGlzLmdldEF0dHJpYnV0ZSgnaWNvbicpKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlUmlwcGxlKCkge1xuICAgIHRoaXMuX3JpcHBsZU9wdCAmJiB1dGlsLnVwZGF0ZVJpcHBsZSguLi50aGlzLl9yaXBwbGVPcHQpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnLCAnaWNvbicsICdyaXBwbGUnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIHRoaXMuX2RlZmF1bHRDbGFzc05hbWUsIHRoaXMuX3NjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgdGhpcy5fc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdpY29uJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlSWNvbigpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3JpcHBsZSc6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKHRoaXMuX2RlZmF1bHRDbGFzc05hbWUpICYmIHRoaXMuX3VwZGF0ZVJpcHBsZSgpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IEJhc2VCdXR0b25FbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWJ1dHRvbic7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWFjdGlvbi1zaGVldC1idXR0b25cbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEBtb2RpZmllciBkZXN0cnVjdGl2ZVxuICogICBbZW5dU2hvd3MgYSBcImRlc3RydWN0aXZlXCIgYnV0dG9uIChvbmx5IGZvciBpT1MpLlsvZW5dXG4gKiAgIFtqYV1cImRlc3RydWN0aXZlXCLjgarjg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZkoaU9T44Gn44Gu44G/5pyJ5Yq5KeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUNvbXBvbmVudCB0aGF0IHJlcHJlc2VudCBlYWNoIGJ1dHRvbiBvZiB0aGUgYWN0aW9uIHNoZWV0LlsvZW5dXG4gKiAgIFtqYV3jgqLjgq/jgrfjg6fjg7Pjgrfjg7zjg4jjgavooajnpLrjgZXjgozjgovlkITjg5zjgr/jg7PjgpLooajnj77jgZnjgovjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgIJbL2phXVxuICogQHNlZWFsc28gb25zLWFjdGlvbi1zaGVldFxuICogICBbZW5dVGhlIGA8b25zLWFjdGlvbi1zaGVldD5gIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtYWN0aW9uLXNoZWV044Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1saXN0LWl0ZW1cbiAqICAgW2VuXVRoZSBgPG9ucy1saXN0LWl0ZW0+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWxpc3QtaXRlbeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtaWNvblxuICogICBbZW5dVGhlIGA8b25zLWljb24+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWljb27jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2FjdGlvbi1zaGVldFxuICogQGd1aWRlIGFwcHNpemUuaHRtbCNyZW1vdmluZy1pY29uLXBhY2tzIFtlbl1SZW1vdmluZyBpY29uIHBhY2tzLlsvZW5dW2phXVsvamFdXG4gKiBAZ3VpZGUgZmFxLmh0bWwjaG93LWNhbi1pLXVzZS1jdXN0b20taWNvbi1wYWNrcyBbZW5dQWRkaW5nIGN1c3RvbSBpY29uIHBhY2tzLlsvZW5dW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXURpc3BsYXkgYSBNYXRlcmlhbCBEZXNpZ24gYWN0aW9uIHNoZWV0IGJ1dHRvbi5bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44Ki44Kv44K344On44Oz44K344O844OI55So44Gu44Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWFjdGlvbi1zaGVldCBpZD1cInNoZWV0XCI+XG4gKiAgIDxvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbj5MYWJlbDwvb25zLWFjdGlvbi1zaGVldC1idXR0b24+XG4gKiAgIDxvbnMtYWN0aW9uLXNoZWV0LWJ1dHRvbj5MYWJlbDwvb25zLWFjdGlvbi1zaGVldC1idXR0b24+XG4gKiA8L29ucy1hY3Rpb24tc2hlZXQ+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NoZWV0Jykuc2hvdygpO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFjdGlvblNoZWV0QnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VCdXR0b25FbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpY29uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUNyZWF0ZXMgYW4gYG9ucy1pY29uYCBjb21wb25lbnQgd2l0aCB0aGlzIHN0cmluZy4gT25seSB2aXNpYmxlIG9uIEFuZHJvaWQuIENoZWNrIFtTZWUgYWxzb10oI3NlZWFsc28pIHNlY3Rpb24gZm9yIG1vcmUgaW5mb3JtYXRpb24uWy9lbl1cbiAgICogIFtqYV1gb25zLWljb25g44Kz44Oz44Od44O844ON44Oz44OI44KS5oKq5oCn44GX44G+44GZ44CCQW5kcm9pZOOBp+OBruOBv+ihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgYWN0aW9uIHNoZWV0IGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV3jgqLjgq/jgrfjg6fjg7Pjgrfjg7zjg4jjg5zjgr/jg7Pjga7opovjgZ/nm67jgpLoqK3lrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgJyc6ICdhY3Rpb24tc2hlZXQtYnV0dG9uLS0qJyxcbiAgICAgICcuYWN0aW9uLXNoZWV0LWljb24nOiAnYWN0aW9uLXNoZWV0LWljb24tLSonXG4gICAgfTtcbiAgfVxuXG4gIGdldCBfZGVmYXVsdENsYXNzTmFtZSgpIHtcbiAgICByZXR1cm4gJ2FjdGlvbi1zaGVldC1idXR0b24nO1xuICB9XG5cbiAgZ2V0IF9yaXBwbGVPcHQoKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5BY3Rpb25TaGVldEJ1dHRvbiA9IEFjdGlvblNoZWV0QnV0dG9uRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWFjdGlvbi1zaGVldC1idXR0b24nLCBBY3Rpb25TaGVldEJ1dHRvbkVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InO1xuXG5leHBvcnQgY2xhc3MgQWxlcnREaWFsb2dBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgc2hvdyhkaWFsb2csIGRvbmUpIHtcbiAgICBkb25lKCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIGhpZGUoZGlhbG9nLCBkb25lKSB7XG4gICAgZG9uZSgpO1xuICB9XG59XG5cbi8qKlxuICogQW5kcm9pZCBzdHlsZSBhbmltYXRvciBmb3IgYWxlcnQgZGlhbG9nLlxuICovXG5leHBvcnQgY2xhc3MgQW5kcm9pZEFsZXJ0RGlhbG9nQW5pbWF0b3IgZXh0ZW5kcyBBbGVydERpYWxvZ0FuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC40LCAxKScsIGR1cmF0aW9uID0gMC4yLCBkZWxheSA9IDB9ID0ge30pIHtcbiAgICBzdXBlcih7ZHVyYXRpb24sIHRpbWluZywgZGVsYXl9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBzaG93KGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMCB9LCB7IG9wYWNpdHk6IDEgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCkgc2NhbGUzZCguOSwgLjksIDEpJywgb3BhY2l0eTogMCB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCkgc2NhbGUzZCgxLCAxLCAxKScsIG9wYWNpdHk6IDEgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIGhpZGUoZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAxIH0sIHsgb3BhY2l0eTogMCB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKSBzY2FsZTNkKDEsIDEsIDEpJywgb3BhY2l0eTogMSB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCkgc2NhbGUzZCguOSwgLjksIDEpJywgb3BhY2l0eTogMCB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBpT1Mgc3R5bGUgYW5pbWF0b3IgZm9yIGFsZXJ0IGRpYWxvZy5cbiAqL1xuZXhwb3J0IGNsYXNzIElPU0FsZXJ0RGlhbG9nQW5pbWF0b3IgZXh0ZW5kcyBBbGVydERpYWxvZ0FuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC40LCAxKScsIGR1cmF0aW9uID0gMC4yLCBkZWxheSA9IDB9ID0ge30pIHtcbiAgICBzdXBlcih7ZHVyYXRpb24sIHRpbWluZywgZGVsYXl9KTtcbiAgfVxuXG4gIC8qXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAwIH0sIHsgb3BhY2l0eTogMSB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKSBzY2FsZTNkKDEuMywgMS4zLCAxKScsIG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC01MCUsIDApIHNjYWxlM2QoMSwgMSwgMSknLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSlcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi8uLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi8uLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQgeyBBbGVydERpYWxvZ0FuaW1hdG9yLCBJT1NBbGVydERpYWxvZ0FuaW1hdG9yLCBBbmRyb2lkQWxlcnREaWFsb2dBbmltYXRvciB9IGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uLy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgQmFzZURpYWxvZ0VsZW1lbnQgZnJvbSAnLi4vYmFzZS9iYXNlLWRpYWxvZyc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLmFsZXJ0LWRpYWxvZyc6ICdhbGVydC1kaWFsb2ctLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1jb250YWluZXInOiAnYWxlcnQtZGlhbG9nLWNvbnRhaW5lci0tKicsXG4gICcuYWxlcnQtZGlhbG9nLXRpdGxlJzogJ2FsZXJ0LWRpYWxvZy10aXRsZS0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWNvbnRlbnQnOiAnYWxlcnQtZGlhbG9nLWNvbnRlbnQtLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1mb290ZXInOiAnYWxlcnQtZGlhbG9nLWZvb3Rlci0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWZvb3Rlci0tcm93Zm9vdGVyJzogJ2FsZXJ0LWRpYWxvZy1mb290ZXItLXJvd2Zvb3Rlci0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWJ1dHRvbi0tcm93Zm9vdGVyJzogJ2FsZXJ0LWRpYWxvZy1idXR0b24tLXJvd2Zvb3Rlci0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWJ1dHRvbi0tcHJpbWFsJzogJ2FsZXJ0LWRpYWxvZy1idXR0b24tLXByaW1hbC0tKicsXG4gICcuYWxlcnQtZGlhbG9nLWJ1dHRvbic6ICdhbGVydC1kaWFsb2ctYnV0dG9uLS0qJyxcbiAgJ29ucy1hbGVydC1kaWFsb2ctYnV0dG9uJzogJ2FsZXJ0LWRpYWxvZy1idXR0b24tLSonLFxuICAnLmFsZXJ0LWRpYWxvZy1tYXNrJzogJ2FsZXJ0LWRpYWxvZy1tYXNrLS0qJyxcbiAgJy50ZXh0LWlucHV0JzogJ3RleHQtaW5wdXQtLSonXG59O1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICAnbm9uZSc6IEFsZXJ0RGlhbG9nQW5pbWF0b3IsXG4gICdkZWZhdWx0JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBBbmRyb2lkQWxlcnREaWFsb2dBbmltYXRvciA6IElPU0FsZXJ0RGlhbG9nQW5pbWF0b3IgfSxcbiAgJ2ZhZGUnOiBmdW5jdGlvbiAoKSB7IHJldHVybiBwbGF0Zm9ybS5pc0FuZHJvaWQoKSA/IEFuZHJvaWRBbGVydERpYWxvZ0FuaW1hdG9yIDogSU9TQWxlcnREaWFsb2dBbmltYXRvciB9XG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1hbGVydC1kaWFsb2dcbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQWxlcnQgZGlhbG9nIHRoYXQgaXMgZGlzcGxheWVkIG9uIHRvcCBvZiB0aGUgY3VycmVudCBzY3JlZW4uIFVzZWZ1bCBmb3IgZGlzcGxheWluZyBxdWVzdGlvbnMsIHdhcm5pbmdzIG9yIGVycm9yIG1lc3NhZ2VzIHRvIHRoZSB1c2VyLiBUaGUgdGl0bGUsIGNvbnRlbnQgYW5kIGJ1dHRvbnMgY2FuIGJlIGVhc2lseSBjdXN0b21pemVkIGFuZCBpdCB3aWxsIGF1dG9tYXRpY2FsbHkgc3dpdGNoIHN0eWxlIGJhc2VkIG9uIHRoZSBwbGF0Zm9ybS5cbiAqXG4gKiAgICAgVG8gdXNlIHRoZSBlbGVtZW50IGl0IGNhbiBlaXRoZXIgYmUgYXR0YWNoZWQgZGlyZWN0bHkgdG8gdGhlIGA8Ym9keT5gIGVsZW1lbnQgb3IgZHluYW1pY2FsbHkgY3JlYXRlZCBmcm9tIGEgdGVtcGxhdGUgdXNpbmcgdGhlIGBvbnMuY3JlYXRlQWxlcnREaWFsb2codGVtcGxhdGUpYCB1dGlsaXR5IGZ1bmN0aW9uIGFuZCB0aGUgYDx0ZW1wbGF0ZT5gIHRhZy5cbiAqICAgWy9lbl1cbiAqICAgW2phXVxuICogICAgIOePvuWcqOOBruOCueOCr+ODquODvOODs+OBruS4iuOBq+ihqOekuuOBmeOCi+OCouODqeODvOODiOODgOOCpOOCouODreOCsOOBp+OBmeOAguODpuODvOOCtuOBq+WvvuOBmeOCi+WVj+OBhOOBi+OBkeOAgeitpuWRiuOAgeOCqOODqeODvOODoeODg+OCu+ODvOOCuOOCkuihqOekuuOBmeOCi+OBruOBq+WIqeeUqOOBp+OBjeOBvuOBmeOAguOCv+OCpOODiOODq+OChOOCs+ODs+ODhuODs+ODhOOChOODnOOCv+ODs+OBr+ewoeWNmOOBq+OCq+OCueOCv+ODnuOCpOOCuuOBp+OBjeOAgeWun+ihjOOBl+OBpuOBhOOCi+ODl+ODqeODg+ODiOODleOCqeODvOODoOOBq+S9teOBm+OBpuOCueOCv+OCpOODq+OBjOiHquWLleeahOOBq+WIh+OCiuabv+OCj+OCiuOBvuOBmeOAglxuICogICBbL2phXVxuICogQGNvZGVwZW4gUXd3eHlwXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvYWxlcnQtZGlhbG9nXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBzdHlsZVsvZW5dXG4gKiAgIFtqYV3jg57jg4bjg6rjgqLjg6vjg4fjgrbjgqTjg7Pjga7jgrnjgr/jgqTjg6tbL2phXVxuICogQG1vZGlmaWVyIHJvd2Zvb3RlclxuICogICBbZW5dSG9yaXpvbnRhbGx5IGFsaWducyB0aGUgZm9vdGVyIGJ1dHRvbnMuWy9lbl1cbiAqICAgW2phXeODleODg+OCv+ODvOOBruikh+aVsOOBruODnOOCv+ODs+OCkuawtOW5s+OBq+mFjee9rlsvamFdXG4gKiBAc2VlYWxzbyBvbnMtZGlhbG9nXG4gKiAgIFtlbl1vbnMtZGlhbG9nIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtZGlhbG9n44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1wb3BvdmVyXG4gKiAgIFtlbl1vbnMtcG9wb3ZlciBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWRpYWxvZ+OCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMubm90aWZpY2F0aW9uXG4gKiAgIFtlbl1Vc2luZyBvbnMubm90aWZpY2F0aW9uIHV0aWxpdHkgZnVuY3Rpb25zLlsvZW5dXG4gKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgpLooajnpLrjgZnjgovjgavjga/jgIFvbnMubm90aWZpY2F0aW9u44Kq44OW44K444Kn44Kv44OI44Gu44Oh44K944OD44OJ44KS5L2/44GG44GT44Go44KC44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWFsZXJ0LWRpYWxvZyBpZD1cImFsZXJ0LWRpYWxvZ1wiPlxuICogICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLXRpdGxlXCI+V2FybmluZyE8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1jb250ZW50XCI+XG4gKiAgICAgQW4gZXJyb3IgaGFzIG9jY3VycmVkIVxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1mb290ZXJcIj5cbiAqICAgICA8YnV0dG9uIGlkPVwiYWxlcnQtZGlhbG9nLWJ1dHRvblwiIGNsYXNzPVwiYWxlcnQtZGlhbG9nLWJ1dHRvblwiPk9LPC9idXR0b24+XG4gKiAgIDwvZGl2PlxuICogPC9vbnMtYWxlcnQtZGlhbG9nPlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2FsZXJ0LWRpYWxvZycpLnNob3coKTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBbGVydERpYWxvZ0VsZW1lbnQgZXh0ZW5kcyBCYXNlRGlhbG9nRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgYWxlcnQgZGlhbG9nIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgYzooajnpLrjgZXjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuYWxlcnREaWFsb2dcbiAgICogICBbZW5dQWxlcnQgZGlhbG9nIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBzaG93aW5nLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWun+ihjOOBmeOCi+OBqOOAgeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBruihqOekuuOCkuatouOCgeOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdHNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGFsZXJ0IGRpYWxvZyBpcyBkaXNwbGF5ZWQuWy9lbl1cbiAgICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM44Gf55u05b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmFsZXJ0RGlhbG9nXG4gICAqICAgW2VuXUFsZXJ0IGRpYWxvZyBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgYWxlcnQgZGlhbG9nIGlzIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjgYzpmqDjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuYWxlcnREaWFsb2dcbiAgICogICBbZW5dQWxlcnQgZGlhbG9nIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg6njg7zjg4jjg4DjgqTjgqLjg63jgrDjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBoaWRpbmcuWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44KS5a6f6KGM44GZ44KL44Go44CB44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GM6ZaJ44GY44KI44GG44Go44GZ44KL44Gu44KS5q2i44KB44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0aGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGFsZXJ0IGRpYWxvZyBpcyBoaWRkZW4uWy9lbl1cbiAgICogW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBjOmaoOOCjOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5hbGVydERpYWxvZ1xuICAgKiAgIFtlbl1BbGVydCBkaWFsb2cgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCouODqeODvOODiOODgOOCpOOCouODreOCsOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBkaWFsb2cuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjga7opovjgZ/nm67jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjYW5jZWxhYmxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgZGlhbG9nIGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlsvZW5dXG4gICAqICBbamFd44GT44Gu5bGe5oCn44KS6Kit5a6a44GZ44KL44Go44CB44OA44Kk44Ki44Ot44Kw44Gu6IOM5pmv44KS44K/44OD44OX44GX44Gf44KKQW5kcm9pZOODh+ODkOOCpOOCueOBruODkOODg+OCr+ODnOOCv+ODs+OCkuaKvOOBmeOBqOODgOOCpOOCouODreOCsOOBjOmWieOBmOOCi+OCiOOBhuOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgZGlhbG9nIGlzIGRpc2FibGVkLlsvZW5dXG4gICAqICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44Ki44Op44O844OI44OA44Kk44Ki44Ot44Kw44GvZGlzYWJsZWTnirbmhYvjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgZGVmYXVsdFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYW5pbWF0aW9uIHVzZWQgd2hlbiBzaG93aW5nIGFuZCBoaWRpbmcgdGhlIGRpYWxvZy4gQ2FuIGJlIGVpdGhlciBgXCJub25lXCJgIG9yIGBcImRlZmF1bHRcImAuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjgpLooajnpLrjgZnjgovpmpvjga7jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjgafjga9cIm5vbmVcIuOBi1wiZGVmYXVsdFwi44GM5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CC5L6L77yae2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtYXNrLWNvbG9yXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IHJnYmEoMCwgMCwgMCwgMC4yKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1Db2xvciBvZiB0aGUgYmFja2dyb3VuZCBtYXNrLiBEZWZhdWx0IGlzIFwicmdiYSgwLCAwLCAwLCAwLjIpXCIuWy9lbl1cbiAgICogIFtqYV3og4zmma/jga7jg57jgrnjgq/jga7oibLjgpLmjIflrprjgZfjgb7jgZnjgIJcInJnYmEoMCwgMCwgMCwgMC4yKVwi44GM44OH44OV44Kp44Or44OI5YCk44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuICB9XG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHNjaGVtZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtFbGVtZW50fVxuICAgKi9cbiAgZ2V0IF9tYXNrKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmFsZXJ0LWRpYWxvZy1tYXNrJyk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICovXG4gIGdldCBfZGlhbG9nKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmFsZXJ0LWRpYWxvZycpO1xuXG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICovXG4gIGdldCBfdGl0bGVFbGVtZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLl9kaWFsb2cuY2hpbGRyZW5bMF0sICcuYWxlcnQtZGlhbG9nLXRpdGxlJyk7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7RWxlbWVudH1cbiAgICovXG4gIGdldCBfY29udGVudEVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMuX2RpYWxvZy5jaGlsZHJlblswXSwgJy5hbGVydC1kaWFsb2ctY29udGVudCcpO1xuICB9XG5cbiAgX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpIHtcbiAgICByZXR1cm4gbmV3IEFuaW1hdG9yRmFjdG9yeSh7XG4gICAgICBhbmltYXRvcnM6IF9hbmltYXRvckRpY3QsXG4gICAgICBiYXNlQ2xhc3M6IEFsZXJ0RGlhbG9nQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnQWxlcnREaWFsb2dBbmltYXRvcicsXG4gICAgICBkZWZhdWx0QW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJylcbiAgICB9KTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuXG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIHRoaXMuc3R5bGUuekluZGV4ID0gMTAwMDE7XG5cbiAgICAvKipcbiAgICAgKiBFeHBlY3RlZCByZXN1bHQgYWZ0ZXIgY29tcGlsZTpcbiAgICAgKlxuICAgICAqIDxvbnMtYWxlcnQtZGlhbG9nIHN0eWxlPVwibm9uZVwiPlxuICAgICAqICAgPGRpdiBjbGFzcz1cImFsZXJ0LWRpYWxvZy1tYXNrXCI+PC9kaXY+XG4gICAgICogICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nXCI+XG4gICAgICogICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctY29udGFpbmVyXCI+Li4uPC9kaXY+XG4gICAgICogICA8L2Rpdj5cbiAgICAgKiA8L29ucy1hbGVydC1kaWFsb2c+XG4gICAgICovXG5cbiAgICBjb25zdCBjb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuXG4gICAgaWYgKCF0aGlzLl9tYXNrICYmICF0aGlzLl9kaWFsb2cpIHtcbiAgICAgIHdoaWxlICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZCh0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICghdGhpcy5fbWFzaykge1xuICAgICAgY29uc3QgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgbWFzay5jbGFzc0xpc3QuYWRkKCdhbGVydC1kaWFsb2ctbWFzaycpO1xuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUobWFzaywgdGhpcy5jaGlsZHJlblswXSk7XG4gICAgfVxuXG4gICAgaWYgKCF0aGlzLl9kaWFsb2cpIHtcbiAgICAgIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgZGlhbG9nLmNsYXNzTGlzdC5hZGQoJ2FsZXJ0LWRpYWxvZycpO1xuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoZGlhbG9nLCBudWxsKTtcbiAgICB9XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMuX2RpYWxvZywgJy5hbGVydC1kaWFsb2ctY29udGFpbmVyJykpIHtcbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2FsZXJ0LWRpYWxvZy1jb250YWluZXInKTtcbiAgICAgIHRoaXMuX2RpYWxvZy5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuICAgIH1cblxuICAgIHRoaXMuX2RpYWxvZy5jaGlsZHJlblswXS5hcHBlbmRDaGlsZChjb250ZW50KTtcblxuICAgIHRoaXMuX2RpYWxvZy5zdHlsZS56SW5kZXggPSAyMDAwMTtcbiAgICB0aGlzLl9tYXNrLnN0eWxlLnpJbmRleCA9IDIwMDAwO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCB0aGlzLl9zY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2FuY2VsYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGRpYWxvZyBpcyBjYW5jZWxhYmxlIG9yIG5vdC4gQSBjYW5jZWxhYmxlIGRpYWxvZyBjYW4gYmUgY2xvc2VkIGJ5IHRhcHBpbmcgdGhlIGJhY2tncm91bmQgb3IgYnkgcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uIG9uIEFuZHJvaWQgZGV2aWNlcy5bL2VuXVxuICAgKiAgIFtqYV3jgZ3jga7jg4DjgqTjgqLjg63jgrDjgYzjgq3jg6Pjg7Pjgrvjg6vlj6/og73jgYvjganjgYbjgYvjgpLooajjgZfjgb7jgZnjgILjgq3jg6Pjg7Pjgrvjg6vlj6/og73jgarjg4DjgqTjgqLjg63jgrDjga/jgIHog4zmma/jgpLjgr/jg4Pjg5fjgZnjgovjgYtBbmRyb2lk44OH44OQ44Kk44K544Gu44OQ44OD44Kv44Oc44K/44Oz44KS5oq844GZ44GT44Go44Gn6ZaJ44GY44KL44GT44Go44GM5Ye65p2l44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJmYWRlXCJgIGFuZCBgXCJub25lXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAguaMh+WumuOBp+OBjeOCi+OBruOBr+OAgVwiZmFkZVwiLCBcIm5vbmVcIuOBruOBhOOBmuOCjOOBi+OBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiAgYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9PC9jb2RlPiBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dRnVuY3Rpb24gdG8gZXhlY3V0ZSBhZnRlciB0aGUgZGlhbG9nIGhhcyBiZWVuIHJldmVhbGVkLlsvZW5dXG4gICAqICAgW2phXeODgOOCpOOCouODreOCsOOBjOihqOekuuOBleOCjOe1guOCj+OBo+OBn+aZguOBq+WRvOOBs+WHuuOBleOCjOOCi+OCs+ODvOODq+ODkOODg+OCr+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBhbGVydCBkaWFsb2cuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dQSBgUHJvbWlzZWAgb2JqZWN0IHRoYXQgcmVzb2x2ZXMgdG8gdGhlIGRpc3BsYXllZCBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXeihqOekuuOBleOCjOOCi+imgee0oOOCkuino+axuuOBmeOCi2BQcm9taXNlYOOCquODluOCuOOCp+OCr+ODiOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVcbiAgICogQHNpZ25hdHVyZSBoaWRlKFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwiZmFkZVwiYCBhbmQgYFwibm9uZVwiYC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcImZhZGVcIiwgXCJub25lXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gIDxjb2RlPntkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ308L2NvZGU+Wy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIDxjb2RlPntkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ308L2NvZGU+IFsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1GdW5jdGlvbiB0byBleGVjdXRlIGFmdGVyIHRoZSBkaWFsb2cgaGFzIGJlZW4gaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruODgOOCpOOCouODreOCsOOBjOmWieOBmOOBn+aZguOBq+WRvOOBs+WHuuOBleOCjOOCi+OCs+ODvOODq+ODkOODg+OCr+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBhbGVydCBkaWFsb2cuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44KS6ZaJ44GY44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGhpZGRlbiBlbGVtZW50Wy9lbl1cbiAgICogICBbamFd6Zqg44KM44Gf6KaB57Sg44KS6Kej5rG644GZ44KLYFByb21pc2Vg44Kq44OW44K444Kn44Kv44OI44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGRpYWxvZyBpcyB2aXNpYmxlIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3opoHntKDjgYzopovjgYjjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uRGV2aWNlQmFja0J1dHRvblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQmFjay1idXR0b24gaGFuZGxlci5bL2VuXVxuICAgKiAgIFtqYV3jg5Djg4Pjgq/jg5zjgr/jg7Pjg4/jg7Pjg4njg6njgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtEaWFsb2dBbmltYXRvcn0gQW5pbWF0b3JcbiAgICovXG4gIHN0YXRpYyByZWdpc3RlckFuaW1hdG9yKG5hbWUsIEFuaW1hdG9yKSB7XG4gICAgaWYgKCEoQW5pbWF0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgQWxlcnREaWFsb2dBbmltYXRvcikpIHtcbiAgICAgIHV0aWwudGhyb3dBbmltYXRvcignQWxlcnREaWFsb2cnKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cblxuICBzdGF0aWMgZ2V0IEFsZXJ0RGlhbG9nQW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIEFsZXJ0RGlhbG9nQW5pbWF0b3I7XG4gIH1cbn1cblxub25zRWxlbWVudHMuQWxlcnREaWFsb2cgPSBBbGVydERpYWxvZ0VsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1hbGVydC1kaWFsb2cnLCBBbGVydERpYWxvZ0VsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgQmFzZUJ1dHRvbkVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtYnV0dG9uJztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtYWxlcnQtZGlhbG9nLWJ1dHRvblxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1NYXRlcmlhbCBEZXNpZ24gYWxlcnQtZGlhbG9nIGJ1dHRvbi5bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtYWxlcnQtZGlhbG9nXG4gKiAgIFtlbl1UaGUgYDxvbnMtYWxlcnQtZGlhbG9nPmAgY29tcG9uZW50IGRpc3BsYXlzIGEgYWxlcnQgZGlhbG9nLlsvZW5dXG4gKiAgIFtqYV1vbnMtYWxlcnQtZGlhbG9n44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiAgPG9ucy1hbGVydC1kaWFsb2c+XG4gKiAgICA8ZGl2IGNsYXNzPVwiYWxlcnQtZGlhbG9nLXRpdGxlXCI+V2FybmluZyE8L2Rpdj5cbiAqICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctY29udGVudFwiPlxuICogICAgICBBbiBlcnJvciBoYXMgb2NjdXJyZWQhXG4gKiAgICA8L2Rpdj5cbiAqICAgIDxkaXYgY2xhc3M9XCJhbGVydC1kaWFsb2ctZm9vdGVyXCI+XG4gKiAgICAgIDxhbGVydC1kaWFsb2ctYnV0dG9uIG9uY2xpY2s9XCJhcHAuY2xvc2UoKVwiPkNhbmNlbDwvYWxlcnQtZGlhbG9nLWJ1dHRvbj5cbiAqICAgICAgPGFsZXJ0LWRpYWxvZy1idXR0b24gY2xhc3M9XCJhbGVydC1kaWFsb2ctYnV0dG9uXCIgb25jbGljaz1cImFwcC5jbG9zZSgpXCI+T0s8L2FsZXJ0LWRpYWxvZy1idXR0b24+XG4gKiAgICA8L2Rpdj5cbiAqICA8L29ucy1hbGVydC1kaWFsb2c+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFsZXJ0RGlhbG9nQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VCdXR0b25FbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV3jg5zjgr/jg7Pjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeODnOOCv+ODs+OCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBr+aMh+WumuOBl+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4geyAnJzogJ2FsZXJ0LWRpYWxvZy1idXR0b24tLSonIH07XG4gIH1cblxuICBnZXQgX2RlZmF1bHRDbGFzc05hbWUoKSB7XG4gICAgcmV0dXJuICdhbGVydC1kaWFsb2ctYnV0dG9uJztcbiAgfVxuXG4gIGdldCBfcmlwcGxlT3B0KCkge1xuICAgIHJldHVybiBbdGhpcywgdW5kZWZpbmVkLCB7ICdtb2RpZmllcic6ICdsaWdodC1ncmF5JyB9XTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5BbGVydERpYWxvZ0J1dHRvbiA9IEFsZXJ0RGlhbG9nQnV0dG9uRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWFsZXJ0LWRpYWxvZy1idXR0b24nLCBBbGVydERpYWxvZ0J1dHRvbkVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBpb3NCYWNrQnV0dG9uSWNvbiBmcm9tICcuLi8uLi9pbWFnZXMvaW9zLWJhY2stYnV0dG9uLWljb24uc3ZnJztcbmltcG9ydCBtZEJhY2tCdXR0b25JY29uIGZyb20gJy4uLy4uL2ltYWdlcy9tZC1iYWNrLWJ1dHRvbi1pY29uLnN2Zyc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnYmFjay1idXR0b24nO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnYmFjay1idXR0b24tLSonLFxuICAnLmJhY2stYnV0dG9uX19pY29uJzogJ2JhY2stYnV0dG9uLS0qX19pY29uJyxcbiAgJy5iYWNrLWJ1dHRvbl9fbGFiZWwnOiAnYmFjay1idXR0b24tLSpfX2xhYmVsJ1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtYmFjay1idXR0b25cbiAqIEBjYXRlZ29yeSBuYXZpZ2F0aW9uXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIEJhY2sgYnV0dG9uIGNvbXBvbmVudCBmb3IgYDxvbnMtdG9vbGJhcj5gLiBQdXQgaXQgaW4gdGhlIGxlZnQgcGFydCBvZiB0aGUgYDxvbnMtdG9vbGJhcj5gLlxuICpcbiAqICAgICBJdCB3aWxsIGZpbmQgdGhlIHBhcmVudCBgPG9ucy1uYXZpZ2F0b3I+YCBlbGVtZW50IGFuZCBwb3AgYSBwYWdlIHdoZW4gY2xpY2tlZC4gVGhpcyBiZWhhdmlvciBjYW4gYmUgb3ZlcnJpZGVuIGJ5IHNwZWNpZnlpbmcgdGhlIGBvbkNsaWNrYCBwcm9wZXJ0eS5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiBhSG1HTFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2JhY2stYnV0dG9uXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBzdHlsZVsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLXRvb2xiYXJcbiAqICAgW2VuXW9ucy10b29sYmFyIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtdG9vbGJhcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbmF2aWdhdG9yXG4gKiAgIFtlbl1vbnMtbmF2aWdhdG9yIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbmF2aWdhdG9y44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRvb2xiYXI+XG4gKiAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgPG9ucy1iYWNrLWJ1dHRvbj5CYWNrPC9vbnMtYmFjay1idXR0b24+XG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG4gKiAgICAgVGl0bGVcbiAqICAgPGRpdj5cbiAqIDwvb25zLXRvb2xiYXI+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFja0J1dHRvbkVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBiYWNrIGJ1dHRvbi5bL2VuXVxuICAgKiAgW2phXeODkOODg+OCr+ODnOOCv+ODs+OBruimi+OBn+ebruOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fb3B0aW9ucyA9IHt9O1xuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIF91cGRhdGVJY29uKGljb24gPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmJhY2stYnV0dG9uX19pY29uJykpIHtcbiAgICBpY29uLmlubmVySFRNTCA9IGF1dG9TdHlsZS5nZXRQbGF0Zm9ybSh0aGlzKSA9PT0gJ2FuZHJvaWQnIHx8IHV0aWwuaGFzTW9kaWZpZXIodGhpcywgJ21hdGVyaWFsJykgPyBtZEJhY2tCdXR0b25JY29uIDogaW9zQmFja0J1dHRvbkljb247XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQodGhpcywgJy5iYWNrLWJ1dHRvbl9fbGFiZWwnKSkge1xuICAgICAgY29uc3QgbGFiZWwgPSB1dGlsLmNyZWF0ZSgnc3Bhbi5iYWNrLWJ1dHRvbl9fbGFiZWwnKTtcblxuICAgICAgd2hpbGUgKHRoaXMuY2hpbGROb2Rlc1swXSkge1xuICAgICAgICBsYWJlbC5hcHBlbmRDaGlsZCh0aGlzLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfVxuICAgICAgdGhpcy5hcHBlbmRDaGlsZChsYWJlbCk7XG4gICAgfVxuXG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLmJhY2stYnV0dG9uX19pY29uJykpIHtcbiAgICAgIGNvbnN0IGljb24gPSB1dGlsLmNyZWF0ZSgnc3Bhbi5iYWNrLWJ1dHRvbl9faWNvbicpO1xuICAgICAgdGhpcy5fdXBkYXRlSWNvbihpY29uKTtcblxuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUoaWNvbiwgdGhpcy5jaGlsZHJlblswXSk7XG4gICAgfVxuXG4gICAgdXRpbC51cGRhdGVSaXBwbGUodGhpcywgdW5kZWZpbmVkLCB7Y2VudGVyOiAnJywgJ3NpemUnOiAnY29udGFpbicsICdiYWNrZ3JvdW5kJzogJ3RyYW5zcGFyZW50J30pO1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvcHRpb25zXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1PcHRpb25zIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIFwic2xpZGVcIiwgXCJsaWZ0XCIsIFwiZmFkZVwiIGFuZCBcIm5vbmVcIi5cbiAgICogICAgIFRoZXNlIGFyZSBwbGF0Zm9ybSBiYXNlZCBhbmltYXRpb25zLiBGb3IgZml4ZWQgYW5pbWF0aW9ucywgYWRkIFwiLWlvc1wiIG9yIFwiLW1kXCJcbiAgICogICAgIHN1ZmZpeCB0byB0aGUgYW5pbWF0aW9uIG5hbWUuIEUuZy4gXCJsaWZ0LWlvc1wiLCBcImxpZnQtbWRcIi4gRGVmYXVsdHMgdmFsdWVzIGFyZSBcInNsaWRlLWlvc1wiIGFuZCBcImZhZGUtbWRcIi5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc1xuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YFsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvcHRpb25zLmNhbGxiYWNrXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGhhcyBlbmRlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jg6Hjgr3jg4Pjg4njgavjgojjgovnlLvpnaLpgbfnp7vjgYzntYLkuobjgZfjgZ/pmpvjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBnZXQgb3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcbiAgfVxuXG4gIHNldCBvcHRpb25zKG9iamVjdCkge1xuICAgIHRoaXMuX29wdGlvbnMgPSBvYmplY3Q7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uQ2xpY2tcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXNlZCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdCBiYWNrIGJ1dHRvbiBiZWhhdmlvci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgX29uQ2xpY2soKSB7XG4gICAgaWYgKHRoaXMub25DbGljaykge1xuICAgICAgdGhpcy5vbkNsaWNrLmFwcGx5KHRoaXMpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNvbnN0IG5hdmlnYXRvciA9IHV0aWwuZmluZFBhcmVudCh0aGlzLCAnb25zLW5hdmlnYXRvcicpO1xuICAgICAgaWYgKG5hdmlnYXRvcikge1xuICAgICAgICBuYXZpZ2F0b3IucG9wUGFnZSh0aGlzLm9wdGlvbnMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZE9uQ2xpY2ssIGZhbHNlKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICB1dGlsLnJlc3RvcmVDbGFzcyh0aGlzLCBkZWZhdWx0Q2xhc3NOYW1lLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnbW9kaWZpZXInOiB7XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpICYmIHRoaXMuX3VwZGF0ZUljb24oKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgc2hvdygpIHtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLkJhY2tCdXR0b24gPSBCYWNrQnV0dG9uRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWJhY2stYnV0dG9uJywgQmFja0J1dHRvbkVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnYm90dG9tLWJhcic7XG5jb25zdCBzY2hlbWUgPSB7Jyc6ICdib3R0b20tYmFyLS0qJ307XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWJvdHRvbS10b29sYmFyXG4gKiBAY2F0ZWdvcnkgcGFnZVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1Ub29sYmFyIGNvbXBvbmVudCB0aGF0IGlzIHBvc2l0aW9uZWQgYXQgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZS4gU2luY2UgYm90dG9tIHRvb2xiYXJzIGFyZSB2ZXJ5IHZlcnNhdGlsZSBlbGVtZW50cywgYG9ucy1ib3R0b20tdG9vbGJhcmAgZG9lcyBub3QgcHJvdmlkZSBhbnkgc3BlY2lmaWMgbGF5b3V0IHN5bnRheCBmb3IgaXRzIGNoaWxkcmVuLiBNb2RpZmllcnMgb3IgY3VzdG9tIENTUyBtdXN0IGJlIHVzZWQuWy9lbl1cbiAqICAgW2phXeODmuODvOOCuOS4i+mDqOOBq+mFjee9ruOBleOCjOOCi+ODhOODvOODq+ODkOODvOeUqOOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgdHJhbnNwYXJlbnRcbiAqICAgW2VuXU1ha2UgdGhlIHRvb2xiYXIgdHJhbnNwYXJlbnQuWy9lbl1cbiAqICAgW2phXeODhOODvOODq+ODkOODvOOBruiDjOaZr+OCkumAj+aYjuOBq+OBl+OBpuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgYWxpZ25lZFxuICogICBbZW5dVmVydGljYWxseSBhbGlnbnMgaXRzIGNoaWxkcmVuIGFuZCBhcHBsaWVzIGZsZXhib3ggZm9yIGJsb2NrIGVsZW1lbnRzLiBganVzdGlmeS1jb250ZW50YCBDU1MgcnVsZSBjYW4gYmUgdXNlZCB0byBjaGFuZ2UgaG9yaXpvbnRhbCBhbGlnbi5bL2VuXVxuICogICBbamFd44OE44O844Or44OQ44O844Gu6IOM5pmv44KS6YCP5piO44Gr44GX44Gm6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy10b29sYmFyIFtlbl1vbnMtdG9vbGJhciBjb21wb25lbnRbL2VuXVtqYV1vbnMtdG9vbGJhcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1ib3R0b20tdG9vbGJhcj5cbiAqICAgQ29udGVudFxuICogPC9vbnMtYm90dG9tLXRvb2xiYXI+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvdHRvbVRvb2xiYXJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHRvb2xiYXIuWy9lbl1cbiAgICogICBbamFd44OE44O844Or44OQ44O844Gu6KaL44Gf55uu44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxufVxuXG5vbnNFbGVtZW50cy5Cb3R0b21Ub29sYmFyID0gQm90dG9tVG9vbGJhckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1ib3R0b20tdG9vbGJhcicsIEJvdHRvbVRvb2xiYXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IEJhc2VCdXR0b25FbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWJ1dHRvbic7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWJ1dHRvblxuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBtb2RpZmllciBvdXRsaW5lXG4gKiAgIFtlbl1CdXR0b24gd2l0aCBvdXRsaW5lIGFuZCB0cmFuc3BhcmVudCBiYWNrZ3JvdW5kWy9lbl1cbiAqICAgW2phXeOCouOCpuODiOODqeOCpOODs+OCkuaMgeOBo+OBn+ODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbGlnaHRcbiAqICAgW2VuXUJ1dHRvbiB0aGF0IGRvZXNuJ3Qgc3RhbmQgb3V0LlsvZW5dXG4gKiAgIFtqYV3nm67nq4vjgZ/jgarjgYTjg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIHF1aWV0XG4gKiAgIFtlbl1CdXR0b24gd2l0aCBubyBvdXRsaW5lIGFuZCBvciBiYWNrZ3JvdW5kLi5bL2VuXVxuICogICBbamFd5p6g57ea44KE6IOM5pmv44GM54Sh44GE5paH5a2X44Gg44GR44Gu44Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBjdGFcbiAqICAgW2VuXUJ1dHRvbiB0aGF0IHJlYWxseSBzdGFuZHMgb3V0LlsvZW5dXG4gKiAgIFtqYV3nm67nq4vjgaTjg5zjgr/jg7PjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIGxhcmdlXG4gKiAgIFtlbl1MYXJnZSBidXR0b24gdGhhdCBjb3ZlcnMgdGhlIHdpZHRoIG9mIHRoZSBzY3JlZW4uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi+Wkp+OBjeOBquODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbGFyZ2UtLXF1aWV0XG4gKiAgIFtlbl1MYXJnZSBxdWlldCBidXR0b24uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi3F1aWV044Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBsYXJnZS0tY3RhXG4gKiAgIFtlbl1MYXJnZSBjYWxsIHRvIGFjdGlvbiBidXR0b24uWy9lbl1cbiAqICAgW2phXeaoquOBhOOBo+OBseOBhOOBq+W6g+OBjOOCi2N0YeODnOOCv+ODs+OCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBidXR0b25bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44Oc44K/44OzWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbC0tZmxhdFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIGZsYXQgYnV0dG9uWy9lbl1cbiAqICAgW2phXeODnuODhuODquOCouODq+ODh+OCtuOCpOODs+OBruODleODqeODg+ODiOODnOOCv+ODs1svamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIEJ1dHRvbiBjb21wb25lbnQuIElmIHlvdSB3YW50IHRvIHBsYWNlIGEgYnV0dG9uIGluIGEgdG9vbGJhciwgdXNlIGA8b25zLXRvb2xiYXItYnV0dG9uPmAgb3IgYDxvbnMtYmFjay1idXR0b24+YCBpbnN0ZWFkLlxuICpcbiAqICAgICBXaWxsIGF1dG9tYXRpY2FsbHkgZGlzcGxheSBhcyBhIE1hdGVyaWFsIERlc2lnbiBidXR0b24gd2l0aCBhIHJpcHBsZSBlZmZlY3Qgb24gQW5kcm9pZC5cbiAqICAgWy9lbl1cbiAqICAgW2phXeODnOOCv+ODs+eUqOOCs+ODs+ODneODvOODjeODs+ODiOOAguODhOODvOODq+ODkOODvOOBq+ODnOOCv+ODs+OCkuioree9ruOBmeOCi+WgtOWQiOOBr+OAgW9ucy10b29sYmFyLWJ1dHRvbuOCguOBl+OBj+OBr29ucy1iYWNrLWJ1dHRvbuOCs+ODs+ODneODvOODjeODs+ODiOOCkuS9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiBoTGF5eFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2J1dHRvblxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sI2Nyb3NzLXBsYXRmb3JtLXN0eWxpbmctYXV0b3N0eWxpbmcgW2VuXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2VuXVtqYV1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWJ1dHRvbiBtb2RpZmllcj1cImxhcmdlLS1jdGFcIj5cbiAqICAgVGFwIE1lXG4gKiA8L29ucy1idXR0b24+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VCdXR0b25FbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgYnV0dG9uLlsvZW5dXG4gICAqICBbamFd44Oc44K/44Oz44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcmlwcGxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIGRlZmluZWQsIHRoZSBidXR0b24gd2lsbCBoYXZlIGEgcmlwcGxlIGVmZmVjdC5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IGlmIGJ1dHRvbiBzaG91bGQgYmUgZGlzYWJsZWQuWy9lbl1cbiAgICogICBbamFd44Oc44K/44Oz44KS54Sh5Yq55YyW44GZ44KL5aC05ZCI44Gv5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGJ1dHRvbiBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHsgJyc6ICdidXR0b24tLSonIH07XG4gIH1cblxuICBnZXQgX2RlZmF1bHRDbGFzc05hbWUoKSB7XG4gICAgcmV0dXJuICdidXR0b24nO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLkJ1dHRvbiA9IEJ1dHRvbkVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1idXR0b24nLCBCdXR0b25FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnY2FyZCc7XG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnY2FyZC0tKicsXG4gICcuY2FyZF9fdGl0bGUnOiAnY2FyZC0tKl9fdGl0bGUnLFxuICAnLmNhcmRfX2NvbnRlbnQnOiAnY2FyZC0tKl9fY29udGVudCdcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWNhcmRcbiAqIEBjYXRlZ29yeSB2aXN1YWxcbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dQSBjYXJkIHdpdGggbWF0ZXJpYWwgZGVzaWduLlsvZW5dXG4gKiAgIFtqYV3jg6rjgrnjg4jjga7kuIrkuIvjga7jg5zjg7zjg4Djg7zjgYznhKHjgYTjg6rjgrnjg4jjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgIENvbXBvbmVudCB0byBjcmVhdGUgYSBjYXJkIHRoYXQgZGlzcGxheXMgc29tZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiAgICBUaGUgY2FyZCBtYXkgYmUgY29tcG9zZWQgYnkgZGl2cyB3aXRoIHNwZWNpYWxseSBwcmVwYXJlZCBjbGFzc2VzIGB0aXRsZWAgYW5kL29yIGBjb250ZW50YC4gWW91IGNhbiBhbHNvIGFkZCB5b3VyIG93biBjb250ZW50IGFzIHlvdSBwbGVhc2UuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvY2FyZFxuICogQGV4YW1wbGVcbiAqIDxvbnMtY2FyZD5cbiAqICAgPHA+U29tZSBjb250ZW50PC9wPlxuICogPC9vbnMtY2FyZD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBjYXJkLlsvZW5dXG4gICAqICAgW2phXeODquOCueODiOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgbGV0IHRpdGxlLCBjb250ZW50O1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBlbCA9IHRoaXMuY2hpbGRyZW5baV07XG5cbiAgICAgIGlmIChlbC5jbGFzc0xpc3QuY29udGFpbnMoJ3RpdGxlJykpIHtcbiAgICAgICAgZWwuY2xhc3NMaXN0LmFkZCgnY2FyZF9fdGl0bGUnKTtcbiAgICAgICAgdGl0bGUgPSBlbDtcbiAgICAgIH1cbiAgICAgIGVsc2UgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygnY29udGVudCcpKSB7XG4gICAgICAgIGVsLmNsYXNzTGlzdC5hZGQoJ2NhcmRfX2NvbnRlbnQnKTtcbiAgICAgICAgY29udGVudCA9IGVsO1xuICAgICAgfVxuICAgIH1cblxuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cblxub25zRWxlbWVudHMuQ2FyZCA9IENhcmRFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtY2FyZCcsIENhcmRFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5jb25zdCBzY2hlbWUgPSB7Jyc6ICdjYXJvdXNlbC1pdGVtLS0qJ307XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWNhcm91c2VsLWl0ZW1cbiAqIEBjYXRlZ29yeSBjYXJvdXNlbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBDYXJvdXNlbCBpdGVtIGNvbXBvbmVudC4gVXNlZCBhcyBhIGNoaWxkIG9mIHRoZSBgPG9ucy1jYXJvdXNlbD5gIGVsZW1lbnQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4geGJiek9RXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvY2Fyb3VzZWxcbiAqIEBzZWVhbHNvIG9ucy1jYXJvdXNlbFxuICogICBbZW5dYDxvbnMtY2Fyb3VzZWw+YCBjb21wb25lbnRzWy9lbl1cbiAqICAgW2phXTxvbnMtY2Fyb3VzZWw+44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWNhcm91c2VsIHN0eWxlPVwid2lkdGg6IDEwMCU7IGhlaWdodDogMjAwcHhcIj5cbiAqICAgPG9ucy1jYXJvdXNlbC1pdGVtPlxuICogICAgLi4uXG4gKiAgIDwvb25zLWNhcm91c2VsLWl0ZW0+XG4gKiAgIDxvbnMtY2Fyb3VzZWwtaXRlbT5cbiAqICAgIC4uLlxuICogICA8L29ucy1jYXJvdXNlbC1pdGVtPlxuICogPC9vbnMtY2Fyb3VzZWw+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcm91c2VsSXRlbUVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuc3R5bGUud2lkdGggPSAnMTAwJSc7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInXVxuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgcmV0dXJuIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgIH1cbiAgfVxufVxuXG5vbnNFbGVtZW50cy5DYXJvdXNlbEl0ZW0gPSBDYXJvdXNlbEl0ZW1FbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtY2Fyb3VzZWwtaXRlbScsIENhcm91c2VsSXRlbUVsZW1lbnQpO1xuIiwiaW1wb3J0IHV0aWwgZnJvbSAnLi4vdXRpbCc7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vcGxhdGZvcm0nO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi9hbmltaXQnO1xuaW1wb3J0IEdlc3R1cmVEZXRlY3RvciBmcm9tICcuLi9nZXN0dXJlLWRldGVjdG9yJztcblxuY29uc3QgZGlyZWN0aW9uTWFwID0ge1xuICB2ZXJ0aWNhbDoge1xuICAgIGF4aXM6ICdZJyxcbiAgICBzaXplOiAnSGVpZ2h0JyxcbiAgICBkaXI6IFsndXAnLCAnZG93biddLFxuICAgIHQzZDogWycwcHgsICcsICdweCwgMHB4J11cbiAgfSxcbiAgaG9yaXpvbnRhbDoge1xuICAgIGF4aXM6ICdYJyxcbiAgICBzaXplOiAnV2lkdGgnLFxuICAgIGRpcjogWydsZWZ0JywgJ3JpZ2h0J10sXG4gICAgdDNkOiBbJycsICdweCwgMHB4LCAwcHgnXVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTd2lwZXIge1xuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICAvLyBQYXJhbWV0ZXJzXG4gICAgY29uc3QgRkFMU0UgPSAoKCkgPT4gZmFsc2UpO1xuICAgIGBnZXRJbml0aWFsSW5kZXggZ2V0QnViYmxlV2lkdGggaXNWZXJ0aWNhbCBpc092ZXJTY3JvbGxhYmxlIGlzQ2VudGVyZWRcbiAgICBpc0F1dG9TY3JvbGxhYmxlIHJlZnJlc2hIb29rIHByZUNoYW5nZUhvb2sgcG9zdENoYW5nZUhvb2sgb3ZlclNjcm9sbEhvb2tgXG4gICAgICAuc3BsaXQoL1xccysvKVxuICAgICAgLmZvckVhY2goa2V5ID0+IHRoaXNba2V5XSA9IHBhcmFtc1trZXldIHx8IEZBTFNFKTtcblxuICAgIHRoaXMuZ2V0RWxlbWVudCA9IHBhcmFtcy5nZXRFbGVtZW50OyAvLyBSZXF1aXJlZFxuICAgIHRoaXMuc2Nyb2xsSG9vayA9IHBhcmFtcy5zY3JvbGxIb29rOyAvLyBPcHRpb25hbFxuICAgIHRoaXMuaXRlbVNpemUgPSBwYXJhbXMuaXRlbVNpemUgfHwgJzEwMCUnO1xuXG4gICAgdGhpcy5nZXRBdXRvU2Nyb2xsUmF0aW8gPSAoLi4uYXJncykgPT4ge1xuICAgICAgbGV0IHJhdGlvID0gcGFyYW1zLmdldEF1dG9TY3JvbGxSYXRpbyAmJiBwYXJhbXMuZ2V0QXV0b1Njcm9sbFJhdGlvKC4uLmFyZ3MpO1xuICAgICAgcmF0aW8gPSB0eXBlb2YgcmF0aW8gPT09ICdudW1iZXInICYmIHJhdGlvID09PSByYXRpbyA/IHJhdGlvIDogLjU7XG4gICAgICBpZiAocmF0aW8gPCAwLjAgfHwgcmF0aW8gPiAxLjApIHtcbiAgICAgICAgdXRpbC50aHJvdygnSW52YWxpZCBhdXRvLXNjcm9sbC1yYXRpbyAnICsgcmF0aW8gKyAnLiBNdXN0IGJlIGJldHdlZW4gMCBhbmQgMScpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHJhdGlvO1xuICAgIH07XG5cbiAgICAvLyBQcmV2ZW50IGNsaWNrcyBvbmx5IG9uIGRlc2t0b3BcbiAgICB0aGlzLnNob3VsZEJsb2NrID0gdXRpbC5nbG9iYWxzLmFjdHVhbE1vYmlsZU9TID09PSAnb3RoZXInO1xuXG4gICAgLy8gQmluZCBoYW5kbGVyc1xuICAgIHRoaXMub25EcmFnU3RhcnQgPSB0aGlzLm9uRHJhZ1N0YXJ0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5vbkRyYWcgPSB0aGlzLm9uRHJhZy5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25EcmFnRW5kID0gdGhpcy5vbkRyYWdFbmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uUmVzaXplID0gdGhpcy5vblJlc2l6ZS5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5fc2hvdWxkRml4U2Nyb2xsID0gdXRpbC5nbG9iYWxzLmFjdHVhbE1vYmlsZU9TID09PSAnaW9zJztcbiAgfVxuXG4gIGluaXQoeyBzd2lwZWFibGUsIGF1dG9SZWZyZXNoIH0gPSB7fSkge1xuICAgIHRoaXMuaW5pdGlhbGl6ZWQgPSB0cnVlO1xuICAgIHRoaXMudGFyZ2V0ID0gdGhpcy5nZXRFbGVtZW50KCkuY2hpbGRyZW5bMF07XG4gICAgdGhpcy5ibG9ja2VyID0gdGhpcy5nZXRFbGVtZW50KCkuY2hpbGRyZW5bMV07XG4gICAgaWYgKCF0aGlzLnRhcmdldCB8fCAhdGhpcy5ibG9ja2VyKSB7XG4gICAgICB1dGlsLnRocm93KCdFeHBlY3RlZCBcInRhcmdldFwiIGFuZCBcImJsb2NrZXJcIiBlbGVtZW50cyB0byBleGlzdCBiZWZvcmUgaW5pdGlhbGl6aW5nIFN3aXBlcicpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5zaG91bGRCbG9jaykge1xuICAgICAgdGhpcy5ibG9ja2VyLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxuXG4gICAgLy8gQWRkIGNsYXNzZXNcbiAgICB0aGlzLmdldEVsZW1lbnQoKS5jbGFzc0xpc3QuYWRkKCdvbnMtc3dpcGVyJyk7XG4gICAgdGhpcy50YXJnZXQuY2xhc3NMaXN0LmFkZCgnb25zLXN3aXBlci10YXJnZXQnKTtcbiAgICB0aGlzLmJsb2NrZXIuY2xhc3NMaXN0LmFkZCgnb25zLXN3aXBlci1ibG9ja2VyJyk7XG5cbiAgICAvLyBTZXR1cCBsaXN0ZW5lcnNcbiAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3IgPSBuZXcgR2VzdHVyZURldGVjdG9yKHRoaXMuZ2V0RWxlbWVudCgpLFxuICAgICAgeyBkcmFnTWluRGlzdGFuY2U6IDEsIGRyYWdMb2NrVG9BeGlzOiB0cnVlLCBwYXNzaXZlOiAhdGhpcy5fc2hvdWxkRml4U2Nyb2xsIH1cbiAgICApO1xuICAgIHRoaXMuX211dGF0aW9uT2JzZXJ2ZXIgPSBuZXcgTXV0YXRpb25PYnNlcnZlcigoKSA9PiB0aGlzLnJlZnJlc2goKSk7XG4gICAgdGhpcy51cGRhdGVTd2lwZWFibGUoc3dpcGVhYmxlKTtcbiAgICB0aGlzLnVwZGF0ZUF1dG9SZWZyZXNoKGF1dG9SZWZyZXNoKTtcblxuICAgIC8vIFNldHVwIGluaXRpYWwgbGF5b3V0XG4gICAgdGhpcy5fc2Nyb2xsID0gdGhpcy5fb2Zmc2V0ID0gdGhpcy5fbGFzdEFjdGl2ZUluZGV4ID0gMDtcbiAgICB0aGlzLl91cGRhdGVMYXlvdXQoKTtcbiAgICB0aGlzLl9zZXR1cEluaXRpYWxJbmRleCgpO1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLmluaXRpYWxpemVkICYmIHRoaXMuX3NldHVwSW5pdGlhbEluZGV4KCkpO1xuXG4gICAgLy8gRml4IHJlbmRlcmluZyBnbGl0Y2ggb24gQW5kcm9pZCA0LjFcbiAgICAvLyBGaXggZm9yIGlmcmFtZXMgd2hlcmUgdGhlIHdpZHRoIGlzIGluY29uc2lzdGVudCBhdCB0aGUgYmVnaW5uaW5nXG4gICAgaWYgKHdpbmRvdyAhPT0gd2luZG93LnBhcmVudCB8fCB0aGlzLm9mZnNldEhlaWdodCA9PT0gMCkge1xuICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLmluaXRpYWxpemVkICYmIHRoaXMub25SZXNpemUoKSk7XG4gICAgfVxuICB9XG5cbiAgZGlzcG9zZSgpIHtcbiAgICB0aGlzLmluaXRpYWxpemVkID0gZmFsc2U7XG4gICAgdGhpcy51cGRhdGVTd2lwZWFibGUoZmFsc2UpO1xuICAgIHRoaXMudXBkYXRlQXV0b1JlZnJlc2goZmFsc2UpO1xuXG4gICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yICYmIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5kaXNwb3NlKCk7XG4gICAgdGhpcy50YXJnZXQgPSB0aGlzLmJsb2NrZXIgPSB0aGlzLl9nZXN0dXJlRGV0ZWN0b3IgPSB0aGlzLl9tdXRhdGlvbk9ic2VydmVyID0gbnVsbDtcblxuICAgIHRoaXMuc2V0dXBSZXNpemUoZmFsc2UpO1xuICB9XG5cbiAgb25SZXNpemUoKSB7XG4gICAgY29uc3QgaSA9IHRoaXMuX3Njcm9sbCAvIHRoaXMuaXRlbU51bVNpemU7XG4gICAgdGhpcy5fcmVzZXQoKTtcbiAgICB0aGlzLnNldEFjdGl2ZUluZGV4KGkpO1xuICAgIHRoaXMucmVmcmVzaCgpO1xuICB9XG5cbiAgZ2V0IGl0ZW1Db3VudCgpIHtcbiAgICByZXR1cm4gdGhpcy50YXJnZXQuY2hpbGRyZW4ubGVuZ3RoO1xuICB9XG5cbiAgZ2V0IGl0ZW1OdW1TaXplKCkge1xuICAgIGlmICh0eXBlb2YgdGhpcy5faXRlbU51bVNpemUgIT09ICdudW1iZXInIHx8IHRoaXMuX2l0ZW1OdW1TaXplICE9PSB0aGlzLl9pdGVtTnVtU2l6ZSkge1xuICAgICAgdGhpcy5faXRlbU51bVNpemUgPSB0aGlzLl9jYWxjdWxhdGVJdGVtU2l6ZSgpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5faXRlbU51bVNpemU7XG4gIH1cblxuICBnZXQgbWF4U2Nyb2xsKCkge1xuICAgIGNvbnN0IG1heCA9IHRoaXMuaXRlbUNvdW50ICogdGhpcy5pdGVtTnVtU2l6ZSAtIHRoaXMudGFyZ2V0U2l6ZTtcbiAgICByZXR1cm4gTWF0aC5jZWlsKG1heCA8IDAgPyAwIDogbWF4KTsgLy8gTmVlZCB0byByZXR1cm4gYW4gaW50ZWdlciB2YWx1ZS5cbiAgfVxuXG4gIF9jYWxjdWxhdGVJdGVtU2l6ZSgpIHtcbiAgICBjb25zdCBtYXRjaGVzID0gdGhpcy5pdGVtU2l6ZS5tYXRjaCgvXihcXGQrKShweHwlKS8pO1xuXG4gICAgaWYgKCFtYXRjaGVzKSB7XG4gICAgICB1dGlsLnRocm93KGBJbnZhbGlkIHN0YXRlOiBzd2lwZXIncyBzaXplIHVuaXQgbXVzdCBiZSAnJScgb3IgJ3B4J2ApO1xuICAgIH1cblxuICAgIGNvbnN0IHZhbHVlID0gcGFyc2VJbnQobWF0Y2hlc1sxXSwgMTApO1xuICAgIHJldHVybiBtYXRjaGVzWzJdID09PSAnJScgPyBNYXRoLnJvdW5kKHZhbHVlIC8gMTAwICogdGhpcy50YXJnZXRTaXplKSA6IHZhbHVlO1xuICB9XG5cbiAgX3NldHVwSW5pdGlhbEluZGV4KCkge1xuICAgIHRoaXMuX3Jlc2V0KCk7XG4gICAgdGhpcy5fbGFzdEFjdGl2ZUluZGV4ID0gTWF0aC5tYXgoTWF0aC5taW4oTnVtYmVyKHRoaXMuZ2V0SW5pdGlhbEluZGV4KCkpLCB0aGlzLml0ZW1Db3VudCksIDApO1xuICAgIHRoaXMuX3Njcm9sbCA9IHRoaXMuX29mZnNldCArIHRoaXMuaXRlbU51bVNpemUgKiB0aGlzLl9sYXN0QWN0aXZlSW5kZXg7XG4gICAgdGhpcy5fc2Nyb2xsVG8odGhpcy5fc2Nyb2xsKTtcbiAgfVxuXG4gIF9zZXRTd2lwaW5nKHRvZ2dsZSkge1xuICAgIHRoaXMudGFyZ2V0LmNsYXNzTGlzdC50b2dnbGUoJ3N3aXBpbmcnLCB0b2dnbGUpOyAvLyBIaWRlcyBldmVyeXRoaW5nIGV4Y2VwdCBzaG93biBwYWdlc1xuICB9XG5cbiAgc2V0QWN0aXZlSW5kZXgoaW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuX3NldFN3aXBpbmcodHJ1ZSk7XG4gICAgaW5kZXggPSBNYXRoLm1heCgwLCBNYXRoLm1pbihpbmRleCwgdGhpcy5pdGVtQ291bnQgLSAxKSk7XG4gICAgY29uc3Qgc2Nyb2xsID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy5tYXhTY3JvbGwsIHRoaXMuX29mZnNldCArIHRoaXMuaXRlbU51bVNpemUgKiBpbmRleCkpO1xuXG4gICAgcmV0dXJuIHRoaXMuX2NoYW5nZVRvKHNjcm9sbCwgb3B0aW9ucyk7XG4gIH1cblxuICBnZXRBY3RpdmVJbmRleChzY3JvbGwgPSB0aGlzLl9zY3JvbGwpIHtcbiAgICBzY3JvbGwgLT0gdGhpcy5fb2Zmc2V0O1xuICAgIGNvbnN0IGNvdW50ID0gdGhpcy5pdGVtQ291bnQsXG4gICAgICBzaXplID0gdGhpcy5pdGVtTnVtU2l6ZTtcblxuICAgIGlmICh0aGlzLml0ZW1OdW1TaXplID09PSAwIHx8ICF1dGlsLmlzSW50ZWdlcihzY3JvbGwpKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbGFzdEFjdGl2ZUluZGV4O1xuICAgIH1cblxuICAgIGlmIChzY3JvbGwgPD0gMCkge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7XG4gICAgICBpZiAoc2l6ZSAqIGkgPD0gc2Nyb2xsICYmIHNpemUgKiAoaSArIDEpID4gc2Nyb2xsKSB7XG4gICAgICAgIHJldHVybiBpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBjb3VudCAtIDE7XG4gIH1cblxuICBzZXR1cFJlc2l6ZShhZGQpIHtcbiAgICB3aW5kb3dbKGFkZCA/ICdhZGQnIDogJ3JlbW92ZScpICsgJ0V2ZW50TGlzdGVuZXInXSgncmVzaXplJywgdGhpcy5vblJlc2l6ZSwgdHJ1ZSk7XG4gIH1cblxuICBzaG93KCkge1xuICAgIHRoaXMuc2V0dXBSZXNpemUodHJ1ZSk7XG4gICAgdGhpcy5vblJlc2l6ZSgpO1xuICAgIHNldFRpbWVvdXQoKCkgPT4gdGhpcy50YXJnZXQgJiYgdGhpcy50YXJnZXQuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyksIDEwMDAvNjApOyAvLyBIaWRlIGVsZW1lbnRzIGFmdGVyIGFuaW1hdGlvbnNcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgdGhpcy5zZXR1cFJlc2l6ZShmYWxzZSk7XG4gICAgdGhpcy50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7IC8vIFNob3cgZWxlbWVudHMgYmVmb3JlIGFuaW1hdGlvbnNcbiAgfVxuXG4gIHVwZGF0ZVN3aXBlYWJsZShzaG91bGRVcGRhdGUpIHtcbiAgICBpZiAodGhpcy5fZ2VzdHVyZURldGVjdG9yKSB7XG4gICAgICBjb25zdCBhY3Rpb24gPSBzaG91bGRVcGRhdGUgPyAnb24nIDogJ29mZic7XG4gICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3JbYWN0aW9uXSgnZHJhZycsIHRoaXMub25EcmFnKTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvclthY3Rpb25dKCdkcmFnc3RhcnQnLCB0aGlzLm9uRHJhZ1N0YXJ0KTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvclthY3Rpb25dKCdkcmFnZW5kJywgdGhpcy5vbkRyYWdFbmQpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUF1dG9SZWZyZXNoKHNob3VsZFdhdGNoKSB7XG4gICAgaWYgKHRoaXMuX211dGF0aW9uT2JzZXJ2ZXIpIHtcbiAgICAgIHNob3VsZFdhdGNoXG4gICAgICAgID8gdGhpcy5fbXV0YXRpb25PYnNlcnZlci5vYnNlcnZlKHRoaXMudGFyZ2V0LCB7IGNoaWxkTGlzdDogdHJ1ZSB9KVxuICAgICAgICA6IHRoaXMuX211dGF0aW9uT2JzZXJ2ZXIuZGlzY29ubmVjdCgpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZUl0ZW1TaXplKG5ld1NpemUpIHtcbiAgICB0aGlzLml0ZW1TaXplID0gbmV3U2l6ZSB8fCAnMTAwJSc7XG4gICAgdGhpcy5yZWZyZXNoKCk7XG4gIH1cblxuICB0b2dnbGVCbG9ja2VyKGJsb2NrKSB7XG4gICAgdGhpcy5ibG9ja2VyLnN0eWxlLnBvaW50ZXJFdmVudHMgPSBibG9jayA/ICdhdXRvJyA6ICdub25lJztcbiAgfVxuXG4gIF9jYW5Db25zdW1lR2VzdHVyZShnZXN0dXJlKSB7XG4gICAgY29uc3QgZCA9IGdlc3R1cmUuZGlyZWN0aW9uO1xuICAgIGNvbnN0IGlzRmlyc3QgPSB0aGlzLl9zY3JvbGwgPT09IDAgJiYgIXRoaXMuaXNPdmVyU2Nyb2xsYWJsZSgpO1xuICAgIGNvbnN0IGlzTGFzdCA9IHRoaXMuX3Njcm9sbCA9PT0gdGhpcy5tYXhTY3JvbGwgJiYgIXRoaXMuaXNPdmVyU2Nyb2xsYWJsZSgpO1xuXG4gICAgcmV0dXJuIHRoaXMuaXNWZXJ0aWNhbCgpXG4gICAgICA/ICgoZCA9PT0gJ2Rvd24nICYmICFpc0ZpcnN0KSB8fCAoZCA9PT0gJ3VwJyAmJiAhaXNMYXN0KSlcbiAgICAgIDogKChkID09PSAncmlnaHQnICYmICFpc0ZpcnN0KSB8fCAoZCA9PT0gJ2xlZnQnICYmICFpc0xhc3QpKTtcbiAgfVxuXG4gIG9uRHJhZ1N0YXJ0KGV2ZW50KSB7XG4gICAgdGhpcy5faWdub3JlRHJhZyA9IGV2ZW50LmNvbnN1bWVkIHx8ICF1dGlsLmlzVmFsaWRHZXN0dXJlKGV2ZW50KTtcblxuICAgIGlmICghdGhpcy5faWdub3JlRHJhZykge1xuICAgICAgY29uc3QgY29uc3VtZSA9IGV2ZW50LmNvbnN1bWU7XG4gICAgICBldmVudC5jb25zdW1lID0gKCkgPT4geyBjb25zdW1lICYmIGNvbnN1bWUoKTsgdGhpcy5faWdub3JlRHJhZyA9IHRydWU7IH07XG5cbiAgICAgIGlmICh0aGlzLl9jYW5Db25zdW1lR2VzdHVyZShldmVudC5nZXN0dXJlKSkge1xuICAgICAgICBjb25zdCBzdGFydFggPSBldmVudC5nZXN0dXJlLmNlbnRlciAmJiBldmVudC5nZXN0dXJlLmNlbnRlci5jbGllbnRYIHx8IDAsXG4gICAgICAgICAgZGlzdEZyb21FZGdlID0gdGhpcy5nZXRCdWJibGVXaWR0aCgpIHx8IDAsXG4gICAgICAgICAgc3RhcnQgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdW1lICYmIGNvbnN1bWUoKTtcbiAgICAgICAgICAgIGV2ZW50LmNvbnN1bWVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHRoaXMuX3N0YXJ0ZWQgPSB0cnVlOyAvLyBBdm9pZCBzdGFydGluZyBkcmFnIGZyb20gb3V0c2lkZVxuICAgICAgICAgICAgdGhpcy5zaG91bGRCbG9jayAmJiB0aGlzLnRvZ2dsZUJsb2NrZXIodHJ1ZSk7XG4gICAgICAgICAgICB0aGlzLl9zZXRTd2lwaW5nKHRydWUpO1xuICAgICAgICAgICAgdXRpbC5pb3NQcmV2ZW50U2Nyb2xsKHRoaXMuX2dlc3R1cmVEZXRlY3Rvcik7XG4gICAgICAgICAgfTtcblxuICAgICAgICAvLyBMZXQgcGFyZW50IGVsZW1lbnRzIGNvbnN1bWUgdGhlIGdlc3R1cmUgb3IgY29uc3VtZSBpdCByaWdodCBhd2F5XG4gICAgICAgIHN0YXJ0WCA8IGRpc3RGcm9tRWRnZSB8fCBzdGFydFggPiAodGhpcy50YXJnZXRTaXplIC0gZGlzdEZyb21FZGdlKVxuICAgICAgICAgID8gc2V0SW1tZWRpYXRlKCgpID0+ICF0aGlzLl9pZ25vcmVEcmFnICYmIHN0YXJ0KCkpXG4gICAgICAgICAgOiBzdGFydCgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG9uRHJhZyhldmVudCkge1xuICAgIGlmICghZXZlbnQuZ2VzdHVyZSB8fCB0aGlzLl9pZ25vcmVEcmFnIHx8ICF0aGlzLl9zdGFydGVkKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5fY29udGludWVkID0gdHJ1ZTsgLy8gRml4IGZvciByYW5kb20gJ2RyYWdlbmQnIHdpdGhvdXQgJ2RyYWcnXG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICB0aGlzLl9zY3JvbGxUbyh0aGlzLl9zY3JvbGwgLSB0aGlzLl9nZXREZWx0YShldmVudCksIHsgdGhyb3R0bGU6IHRydWUgfSk7XG4gIH1cblxuICBvbkRyYWdFbmQoZXZlbnQpIHtcbiAgICB0aGlzLl9zdGFydGVkID0gZmFsc2U7XG4gICAgaWYgKCFldmVudC5nZXN0dXJlIHx8IHRoaXMuX2lnbm9yZURyYWcgfHwgIXRoaXMuX2NvbnRpbnVlZCkge1xuICAgICAgdGhpcy5faWdub3JlRHJhZyA9IHRydWU7IC8vIG9uRHJhZ0VuZCBtaWdodCBmaXJlIGJlZm9yZSBvbkRyYWdTdGFydCdzIHNldEltbWVkaWF0ZVxuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2NvbnRpbnVlZCA9IGZhbHNlO1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgY29uc3Qgc2Nyb2xsID0gdGhpcy5fc2Nyb2xsIC0gdGhpcy5fZ2V0RGVsdGEoZXZlbnQpO1xuICAgIGNvbnN0IG5vcm1hbGl6ZWRTY3JvbGwgPSB0aGlzLl9ub3JtYWxpemVTY3JvbGwoc2Nyb2xsKTtcbiAgICBzY3JvbGwgPT09IG5vcm1hbGl6ZWRTY3JvbGwgPyB0aGlzLl9zdGFydE1vbWVudHVtU2Nyb2xsKHNjcm9sbCwgZXZlbnQpIDogdGhpcy5fa2lsbE92ZXJTY3JvbGwobm9ybWFsaXplZFNjcm9sbCk7XG4gICAgdGhpcy5zaG91bGRCbG9jayAmJiB0aGlzLnRvZ2dsZUJsb2NrZXIoZmFsc2UpO1xuICB9XG5cbiAgX3N0YXJ0TW9tZW50dW1TY3JvbGwoc2Nyb2xsLCBldmVudCkge1xuICAgIGNvbnN0IHZlbG9jaXR5ID0gdGhpcy5fZ2V0VmVsb2NpdHkoZXZlbnQpLFxuICAgICAgbWF0Y2hlc0RpcmVjdGlvbiA9IGV2ZW50Lmdlc3R1cmUuaW50ZXJpbURpcmVjdGlvbiA9PT0gdGhpcy5kTS5kaXJbdGhpcy5fZ2V0RGVsdGEoZXZlbnQpIDwgMCA/IDAgOiAxXTtcblxuICAgIGNvbnN0IG5leHRTY3JvbGwgPSB0aGlzLl9nZXRBdXRvU2Nyb2xsKHNjcm9sbCwgdmVsb2NpdHksIG1hdGNoZXNEaXJlY3Rpb24pO1xuICAgIGxldCBkdXJhdGlvbiA9IE1hdGguYWJzKG5leHRTY3JvbGwgLSBzY3JvbGwpIC8gKHZlbG9jaXR5ICsgMC4wMSkgLyAxMDAwO1xuICAgIGR1cmF0aW9uID0gTWF0aC5taW4oLjI1LCBNYXRoLm1heCguMSwgZHVyYXRpb24pKTtcblxuICAgIHRoaXMuX2NoYW5nZVRvKG5leHRTY3JvbGwsIHsgc3dpcGU6IHRydWUsIGFuaW1hdGlvbk9wdGlvbnM6IHsgZHVyYXRpb24sIHRpbWluZzogJ2N1YmljLWJlemllciguNCwgLjcsIC41LCAxKScgfSB9KTtcbiAgfVxuXG4gIF9raWxsT3ZlclNjcm9sbChzY3JvbGwpIHtcbiAgICB0aGlzLl9zY3JvbGwgPSBzY3JvbGw7XG4gICAgY29uc3QgZGlyZWN0aW9uID0gdGhpcy5kTS5kaXJbTnVtYmVyKHNjcm9sbCA+IDApXTtcbiAgICBjb25zdCBraWxsT3ZlclNjcm9sbCA9ICgpID0+IHRoaXMuX2NoYW5nZVRvKHNjcm9sbCwgeyBhbmltYXRpb25PcHRpb25zOiB7IGR1cmF0aW9uOiAuNCwgdGltaW5nOiAnY3ViaWMtYmV6aWVyKC4xLCAuNCwgLjEsIDEpJyB9IH0pO1xuICAgIHRoaXMub3ZlclNjcm9sbEhvb2soeyBkaXJlY3Rpb24sIGtpbGxPdmVyU2Nyb2xsIH0pIHx8IGtpbGxPdmVyU2Nyb2xsKCk7XG4gIH1cblxuICBfY2hhbmdlVG8oc2Nyb2xsLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBlID0geyBhY3RpdmVJbmRleDogdGhpcy5nZXRBY3RpdmVJbmRleChzY3JvbGwpLCBsYXN0QWN0aXZlSW5kZXg6IHRoaXMuX2xhc3RBY3RpdmVJbmRleCwgc3dpcGU6IG9wdGlvbnMuc3dpcGUgfHwgZmFsc2UgfTtcbiAgICBjb25zdCBjaGFuZ2UgPSBlLmFjdGl2ZUluZGV4ICE9PSBlLmxhc3RBY3RpdmVJbmRleDtcbiAgICBjb25zdCBjYW5jZWxlZCA9IGNoYW5nZSA/IHRoaXMucHJlQ2hhbmdlSG9vayhlKSA6IGZhbHNlO1xuXG4gICAgdGhpcy5fc2Nyb2xsID0gY2FuY2VsZWQgPyB0aGlzLl9vZmZzZXQgKyBlLmxhc3RBY3RpdmVJbmRleCAqIHRoaXMuaXRlbU51bVNpemUgOiBzY3JvbGw7XG4gICAgdGhpcy5fbGFzdEFjdGl2ZUluZGV4ID0gY2FuY2VsZWQgPyBlLmxhc3RBY3RpdmVJbmRleCA6IGUuYWN0aXZlSW5kZXg7XG5cbiAgICByZXR1cm4gdGhpcy5fc2Nyb2xsVG8odGhpcy5fc2Nyb2xsLCBvcHRpb25zKS50aGVuKCgpID0+IHtcbiAgICAgIGlmIChzY3JvbGwgPT09IHRoaXMuX3Njcm9sbCAmJiAhY2FuY2VsZWQpIHtcbiAgICAgICAgdGhpcy5fc2V0U3dpcGluZyhmYWxzZSk7XG4gICAgICAgIGNoYW5nZSAmJiB0aGlzLnBvc3RDaGFuZ2VIb29rKGUpO1xuICAgICAgfSBlbHNlIGlmIChvcHRpb25zLnJlamVjdCkge1xuICAgICAgICB0aGlzLl9zZXRTd2lwaW5nKGZhbHNlKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdDYW5jZWxlZCcpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgX3Njcm9sbFRvKHNjcm9sbCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMudGhyb3R0bGUpIHtcbiAgICAgIGNvbnN0IHJhdGlvID0gMC4zNTtcbiAgICAgIGlmIChzY3JvbGwgPCAwKSB7XG4gICAgICAgIHNjcm9sbCA9IHRoaXMuaXNPdmVyU2Nyb2xsYWJsZSgpID8gTWF0aC5yb3VuZChzY3JvbGwgKiByYXRpbykgOiAwO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc3QgbWF4U2Nyb2xsID0gdGhpcy5tYXhTY3JvbGw7XG4gICAgICAgIGlmIChtYXhTY3JvbGwgPCBzY3JvbGwpIHtcbiAgICAgICAgICBzY3JvbGwgPSB0aGlzLmlzT3ZlclNjcm9sbGFibGUoKSA/IG1heFNjcm9sbCArIE1hdGgucm91bmQoKHNjcm9sbCAtIG1heFNjcm9sbCkgKiByYXRpbykgOiBtYXhTY3JvbGw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBvcHQgPSBvcHRpb25zLmFuaW1hdGlvbiAgPT09ICdub25lJyA/IHt9IDogb3B0aW9ucy5hbmltYXRpb25PcHRpb25zO1xuICAgIHRoaXMuc2Nyb2xsSG9vayAmJiB0aGlzLml0ZW1OdW1TaXplID4gMCAmJiB0aGlzLnNjcm9sbEhvb2soKHNjcm9sbCAvIHRoaXMuaXRlbU51bVNpemUpLnRvRml4ZWQoMiksIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fSk7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PlxuICAgICAgYW5pbWl0KHRoaXMudGFyZ2V0KVxuICAgICAgICAucXVldWUoeyB0cmFuc2Zvcm06IHRoaXMuX2dldFRyYW5zZm9ybShzY3JvbGwpIH0sIG9wdClcbiAgICAgICAgLnBsYXkocmVzb2x2ZSlcbiAgICApO1xuICB9XG5cbiAgX2dldEF1dG9TY3JvbGwoc2Nyb2xsLCB2ZWxvY2l0eSwgbWF0Y2hlc0RpcmVjdGlvbikge1xuICAgIGNvbnN0IG1heCA9IHRoaXMubWF4U2Nyb2xsLFxuICAgICAgb2Zmc2V0ID0gdGhpcy5fb2Zmc2V0LFxuICAgICAgc2l6ZSA9IHRoaXMuaXRlbU51bVNpemU7XG5cbiAgICBpZiAoIXRoaXMuaXNBdXRvU2Nyb2xsYWJsZSgpKSB7XG4gICAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4obWF4LCBzY3JvbGwpKTtcbiAgICB9XG5cbiAgICBsZXQgYXJyID0gW107XG4gICAgZm9yIChsZXQgcyA9IG9mZnNldDsgcyA8IG1heDsgcyArPSBzaXplKSB7XG4gICAgICBhcnIucHVzaChzKTtcbiAgICB9XG4gICAgYXJyLnB1c2gobWF4KTtcblxuICAgIGFyciA9IGFyclxuICAgICAgLnNvcnQoKGxlZnQsIHJpZ2h0KSA9PiBNYXRoLmFicyhsZWZ0IC0gc2Nyb2xsKSAtIE1hdGguYWJzKHJpZ2h0IC0gc2Nyb2xsKSlcbiAgICAgIC5maWx0ZXIoKGl0ZW0sIHBvcykgPT4gIXBvcyB8fCBpdGVtICE9PSBhcnJbcG9zIC0gMV0pO1xuXG4gICAgbGV0IHJlc3VsdCA9IGFyclswXTtcbiAgICBjb25zdCBsYXN0U2Nyb2xsID0gdGhpcy5fbGFzdEFjdGl2ZUluZGV4ICogc2l6ZSArIG9mZnNldDtcbiAgICBjb25zdCBzY3JvbGxSYXRpbyA9IE1hdGguYWJzKHNjcm9sbCAtIGxhc3RTY3JvbGwpIC8gc2l6ZTtcblxuICAgIGlmIChzY3JvbGxSYXRpbyA8PSB0aGlzLmdldEF1dG9TY3JvbGxSYXRpbyhtYXRjaGVzRGlyZWN0aW9uLCB2ZWxvY2l0eSwgc2l6ZSkpIHtcbiAgICAgIHJlc3VsdCA9IGxhc3RTY3JvbGw7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChzY3JvbGxSYXRpbyA8IDEuMCAmJiBhcnJbMF0gPT09IGxhc3RTY3JvbGwgJiYgYXJyLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgcmVzdWx0ID0gYXJyWzFdO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gTWF0aC5tYXgoMCwgTWF0aC5taW4obWF4LCByZXN1bHQpKTtcbiAgfVxuXG4gIF9yZXNldCgpIHtcbiAgICB0aGlzLl90YXJnZXRTaXplID0gdGhpcy5faXRlbU51bVNpemUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBfbm9ybWFsaXplU2Nyb2xsKHNjcm9sbCkge1xuICAgIHJldHVybiBNYXRoLm1heCggTWF0aC5taW4oc2Nyb2xsLCB0aGlzLm1heFNjcm9sbCksIDApXG4gIH1cblxuICByZWZyZXNoKCkge1xuICAgIHRoaXMuX3Jlc2V0KCk7XG4gICAgdGhpcy5fdXBkYXRlTGF5b3V0KCk7XG5cbiAgICBpZiAodXRpbC5pc0ludGVnZXIodGhpcy5fc2Nyb2xsKSkge1xuICAgICAgY29uc3Qgc2Nyb2xsID0gdGhpcy5fbm9ybWFsaXplU2Nyb2xsKHRoaXMuX3Njcm9sbCk7XG4gICAgICBzY3JvbGwgIT09IHRoaXMuX3Njcm9sbCA/IHRoaXMuX2tpbGxPdmVyU2Nyb2xsKHNjcm9sbCkgOiB0aGlzLl9jaGFuZ2VUbyhzY3JvbGwpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9zZXR1cEluaXRpYWxJbmRleCgpO1xuICAgIH1cblxuICAgIHRoaXMucmVmcmVzaEhvb2soKTtcbiAgfVxuXG4gIGdldCB0YXJnZXRTaXplKCkge1xuICAgIGlmICghdGhpcy5fdGFyZ2V0U2l6ZSkge1xuICAgICAgdGhpcy5fdGFyZ2V0U2l6ZSA9IHRoaXMudGFyZ2V0W2BvZmZzZXQke3RoaXMuZE0uc2l6ZX1gXTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuX3RhcmdldFNpemU7XG4gIH1cblxuICBfZ2V0RGVsdGEoZXZlbnQpIHtcbiAgICByZXR1cm4gZXZlbnQuZ2VzdHVyZVtgZGVsdGEke3RoaXMuZE0uYXhpc31gXTtcbiAgfVxuXG4gIF9nZXRWZWxvY2l0eShldmVudCkge1xuICAgIHJldHVybiBldmVudC5nZXN0dXJlW2B2ZWxvY2l0eSR7dGhpcy5kTS5heGlzfWBdO1xuICB9XG5cbiAgX2dldFRyYW5zZm9ybShzY3JvbGwpIHtcbiAgICByZXR1cm4gYHRyYW5zbGF0ZTNkKCR7dGhpcy5kTS50M2RbMF19JHstc2Nyb2xsfSR7dGhpcy5kTS50M2RbMV19KWA7XG4gIH1cblxuICBfdXBkYXRlTGF5b3V0KCkge1xuICAgIHRoaXMuZE0gPSBkaXJlY3Rpb25NYXBbdGhpcy5pc1ZlcnRpY2FsKCkgPyAndmVydGljYWwnIDogJ2hvcml6b250YWwnXTtcbiAgICB0aGlzLnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKCdvbnMtc3dpcGVyLXRhcmdldC0tdmVydGljYWwnLCB0aGlzLmlzVmVydGljYWwoKSk7XG5cbiAgICBmb3IgKGxldCBjID0gdGhpcy50YXJnZXQuY2hpbGRyZW5bMF07IGM7IGMgPSBjLm5leHRFbGVtZW50U2libGluZykge1xuICAgICAgYy5zdHlsZVt0aGlzLmRNLnNpemUudG9Mb3dlckNhc2UoKV0gPSB0aGlzLml0ZW1TaXplO1xuICAgIH1cblxuICAgIGlmICh0aGlzLmlzQ2VudGVyZWQoKSkge1xuICAgICAgdGhpcy5fb2Zmc2V0ID0gKHRoaXMudGFyZ2V0U2l6ZSAtIHRoaXMuaXRlbU51bVNpemUpIC8gLTIgfHwgMDtcbiAgICB9XG4gIH1cbn1cblxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBTd2lwZXIgZnJvbSAnLi4vb25zL2ludGVybmFsL3N3aXBlcic7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWNhcm91c2VsXG4gKiBAY2F0ZWdvcnkgY2Fyb3VzZWxcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ2Fyb3VzZWwgY29tcG9uZW50LiBBIGNhcm91c2VsIGNhbiBiZSB1c2VkIHRvIGRpc3BsYXkgc2V2ZXJhbCBpdGVtcyBpbiB0aGUgc2FtZSBzcGFjZS5cbiAqXG4gKiAgICAgVGhlIGNvbXBvbmVudCBzdXBwb3J0cyBkaXNwbGF5aW5nIGNvbnRlbnQgYm90aCBob3Jpem9udGFsbHkgYW5kIHZlcnRpY2FsbHkuIFRoZSB1c2VyIGNhbiBzY3JvbGwgdGhyb3VnaCB0aGUgaXRlbXMgYnkgZHJhZ2dpbmcgYW5kIGl0IGNhbiBhbHNvIGJlIGNvbnRyb2xsZXIgcHJvZ3JhbW1hdGljYWxseS5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiB4YmJ6T1FcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9jYXJvdXNlbFxuICogQHNlZWFsc28gb25zLWNhcm91c2VsLWl0ZW1cbiAqICAgW2VuXWA8b25zLWNhcm91c2VsLWl0ZW0+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWNhcm91c2VsLWl0ZW3jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtY2Fyb3VzZWwgc3R5bGU9XCJ3aWR0aDogMTAwJTsgaGVpZ2h0OiAyMDBweFwiPlxuICogICA8b25zLWNhcm91c2VsLWl0ZW0+XG4gKiAgICAuLi5cbiAqICAgPC9vbnMtY2Fyb3VzZWwtaXRlbT5cbiAqICAgPG9ucy1jYXJvdXNlbC1pdGVtPlxuICogICAgLi4uXG4gKiAgIDwvb25zLWNhcm91c2VsLWl0ZW0+XG4gKiA8L29ucy1jYXJvdXNlbD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2Fyb3VzZWxFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdGNoYW5nZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgY3VycmVudCBjYXJvdXNlbCBpdGVtIGhhcyBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOihqOekuuOBl+OBpuOBhOOCi+OCq+ODq+ODvOOCu+ODq+OBruimgee0oOOBjOWkieOCj+OBo+OBn+aZguOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmNhcm91c2VsXG4gICAqICAgW2VuXUNhcm91c2VsIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgYznmbrngavjgZfjgZ9DYXJvdXNlbOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBldmVudC5hY3RpdmVJbmRleFxuICAgKiAgIFtlbl1DdXJyZW50IGFjdGl2ZSBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgovopoHntKDjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgIJbL2phXVxuICAgKiBAcGFyYW0ge051bWJlcn0gZXZlbnQubGFzdEFjdGl2ZUluZGV4XG4gICAqICAgW2VuXVByZXZpb3VzIGFjdGl2ZSBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3ku6XliY3jgqLjgq/jg4bjgqPjg5bjgaDjgaPjgZ/opoHntKDjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHJlZnJlc2hcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHdoZW4gdGhlIGNhcm91c2VsIGhhcyBiZWVuIHJlZnJlc2hlZC5bL2VuXVxuICAgKiAgIFtqYV3jgqvjg6vjg7zjgrvjg6vjgYzmm7TmlrDjgZXjgozjgZ/mmYLjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5jYXJvdXNlbFxuICAgKiAgIFtlbl1DYXJvdXNlbCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44GM55m654Gr44GX44GfQ2Fyb3VzZWzjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IG92ZXJzY3JvbGxcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHdoZW4gdGhlIGNhcm91c2VsIGhhcyBiZWVuIG92ZXJzY3JvbGxlZC5bL2VuXVxuICAgKiAgIFtqYV3jgqvjg6vjg7zjgrvjg6vjgYzjgqrjg7zjg5Djg7zjgrnjgq/jg63jg7zjg6vjgZfjgZ/mmYLjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5jYXJvdXNlbFxuICAgKiAgIFtlbl1GaXJlZCB3aGVuIHRoZSBjYXJvdXNlbCBoYXMgYmVlbiByZWZyZXNoZWQuWy9lbl1cbiAgICogICBbamFd44Kr44Or44O844K744Or44GM5pu05paw44GV44KM44Gf5pmC44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50LmFjdGl2ZUluZGV4XG4gICAqICAgW2VuXUN1cnJlbnQgYWN0aXZlIGluZGV4LlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOCouOCr+ODhuOCo+ODluOBq+OBquOBo+OBpuOBhOOCi+imgee0oOOBruOCpOODs+ODh+ODg+OCr+OCueOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudC5kaXJlY3Rpb25cbiAgICogICBbZW5dQ2FuIGJlIG9uZSBvZiBlaXRoZXIgXCJ1cFwiLCBcImRvd25cIiwgXCJsZWZ0XCIgb3IgXCJyaWdodFwiLlsvZW5dXG4gICAqICAgW2phXeOCquODvOODkOODvOOCueOCr+ODreODvOODq+OBleOCjOOBn+aWueWQkeOBjOW+l+OCieOCjOOBvuOBmeOAglwidXBcIiwgXCJkb3duXCIsIFwibGVmdFwiLCBcInJpZ2h0XCLjga7jgYTjgZrjgozjgYvjga7mlrnlkJHjgYzmuKHjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC53YWl0VG9SZXR1cm5cbiAgICogICBbZW5dVGFrZXMgYSA8Y29kZT5Qcm9taXNlPC9jb2RlPiBvYmplY3QgYXMgYW4gYXJndW1lbnQuIFRoZSBjYXJvdXNlbCB3aWxsIG5vdCBzY3JvbGwgYmFjayB1bnRpbCB0aGUgcHJvbWlzZSBoYXMgYmVlbiByZXNvbHZlZCBvciByZWplY3RlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjga9Qcm9taXNl44Kq44OW44K444Kn44Kv44OI44KS5byV5pWw44Go44GX44Gm5Y+X44GR5Y+W44KK44G+44GZ44CC5rih44GX44GfUHJvbWlzZeOCquODluOCuOOCp+OCr+ODiOOBjHJlc29sdmXjgZXjgozjgovjgYtyZWplY3TjgZXjgozjgovjgb7jgafjgIHjgqvjg6vjg7zjgrvjg6vjga/jgrnjgq/jg63jg7zjg6vjg5Djg4Pjgq/jgZfjgb7jgZvjgpPjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXJlY3Rpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBkaXJlY3Rpb24gb2YgdGhlIGNhcm91c2VsLiBDYW4gYmUgZWl0aGVyIFwiaG9yaXpvbnRhbFwiIG9yIFwidmVydGljYWxcIi4gRGVmYXVsdCBpcyBcImhvcml6b250YWxcIi5bL2VuXVxuICAgKiAgIFtqYV3jgqvjg6vjg7zjgrvjg6vjga7mlrnlkJHjgpLmjIflrprjgZfjgb7jgZnjgIJcImhvcml6b250YWxcIuOBi1widmVydGljYWxcIuOCkuaMh+WumuOBp+OBjeOBvuOBmeOAglwiaG9yaXpvbnRhbFwi44GM44OH44OV44Kp44Or44OI5YCk44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZnVsbHNjcmVlblxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCB3aWxsIGNvdmVyIHRoZSB3aG9sZSBzY3JlZW4uWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL44Go44CBYWJzb2x1dGXjg53jgrjjgrfjg6fjg7PjgpLkvb/jgaPjgabjgqvjg6vjg7zjgrvjg6vjgYzoh6rli5XnmoTjgavnlLvpnaLjgYTjgaPjgbHjgYTjgavluoPjgYzjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBvdmVyc2Nyb2xsYWJsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCB3aWxsIGJlIHNjcm9sbGFibGUgb3ZlciB0aGUgZWRnZS4gSXQgd2lsbCBib3VuY2UgYmFjayB3aGVuIHJlbGVhc2VkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOOBguOCi+aZguOAgeOCv+ODg+ODgeOChOODieODqeODg+OCsOOBp+err+OBvuOBp+OCueOCr+ODreODvOODq+OBl+OBn+aZguOBq+OAgeODkOOCpuODs+ODieOBmeOCi+OCiOOBhuOBquWKueaenOOBjOW9k+OBn+OCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGNlbnRlcmVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIGNhcm91c2VsIHRoZW4gdGhlIHNlbGVjdGVkIGl0ZW0gd2lsbCBiZSBpbiB0aGUgY2VudGVyIG9mIHRoZSBjYXJvdXNlbCBpbnN0ZWFkIG9mIHRoZSBiZWdpbm5pbmcuIFVzZWZ1bCBvbmx5IHdoZW4gdGhlIGl0ZW1zIGFyZSBzbWFsbGVyIHRoYW4gdGhlIGNhcm91c2VsLiBbL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHpgbjjgpPjgafjgYTjgotvbnMtY2Fyb3VzZWwtaXRlbeOBr+OCq+ODq+ODvOOCu+ODq+OBruecn+OCk+S4reOBuOihjOOBjeOBvuOBmeOAgumgheebruOBjOOCq+ODq+ODvOOCu+ODq+OCiOOCiuOCguWwj+OBleOBhOWgtOWQiOOBq+OBruOBv+OAgeOBk+OCjOOBr+S+v+WIqeOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGl0ZW0td2lkdGhcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgIFtlbl1vbnMtY2Fyb3VzZWwtaXRlbSdzIHdpZHRoLiBPbmx5IHdvcmtzIHdoZW4gdGhlIGRpcmVjdGlvbiBpcyBzZXQgdG8gXCJob3Jpem9udGFsXCIuWy9lbl1cbiAgICogICAgW2phXW9ucy1jYXJvdXNlbC1pdGVt44Gu5bmF44KS5oyH5a6a44GX44G+44GZ44CC44GT44Gu5bGe5oCn44Gv44CBZGlyZWN0aW9u5bGe5oCn44GrXCJob3Jpem9udGFsXCLjgpLmjIflrprjgZfjgZ/mmYLjga7jgb/mnInlirnjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpdGVtLWhlaWdodFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5db25zLWNhcm91c2VsLWl0ZW0ncyBoZWlnaHQuIE9ubHkgd29ya3Mgd2hlbiB0aGUgZGlyZWN0aW9uIGlzIHNldCB0byBcInZlcnRpY2FsXCIuWy9lbl1cbiAgICogICBbamFdb25zLWNhcm91c2VsLWl0ZW3jga7pq5jjgZXjgpLmjIflrprjgZfjgb7jgZnjgILjgZPjga7lsZ7mgKfjga/jgIFkaXJlY3Rpb27lsZ7mgKfjgatcInZlcnRpY2FsXCLjgpLmjIflrprjgZfjgZ/mmYLjga7jgb/mnInlirnjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhdXRvLXNjcm9sbFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgc2Nyb2xsZWQgdG8gdGhlIGNsb3Nlc3QgaXRlbSBib3JkZXIgd2hlbiByZWxlYXNlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHkuIDnlarov5HjgYRjYXJvdXNlbC1pdGVt44Gu5aKD55WM44G+44Gn6Ieq5YuV55qE44Gr44K544Kv44Ot44O844Or44GZ44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYXV0by1zY3JvbGwtcmF0aW9cbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgIFtlbl1BIG51bWJlciBiZXR3ZWVuIDAuMCBhbmQgMS4wIHRoYXQgc3BlY2lmaWVzIGhvdyBtdWNoIHRoZSB1c2VyIG11c3QgZHJhZyB0aGUgY2Fyb3VzZWwgaW4gb3JkZXIgZm9yIGl0IHRvIGF1dG8gc2Nyb2xsIHRvIHRoZSBuZXh0IGl0ZW0uWy9lbl1cbiAgICogICAgW2phXTAuMOOBi+OCiTEuMOOBvuOBp+OBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAguOCq+ODq+ODvOOCu+ODq+OBruimgee0oOOCkuOBqeOCjOOBkOOCieOBhOOBruWJsuWQiOOBvuOBp+ODieODqeODg+OCsOOBmeOCi+OBqOasoeOBruimgee0oOOBq+iHquWLleeahOOBq+OCueOCr+ODreODvOODq+OBmeOCi+OBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlYWJsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCBjYW4gYmUgc2Nyb2xsZWQgYnkgZHJhZyBvciBzd2lwZS5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIHjgqvjg6vjg7zjgrvjg6vjgpLjgrnjg6/jgqTjg5fjgoTjg4njg6njg4PjgrDjgafnp7vli5XjgafjgY3jgovjgojjgYbjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRoZSBjYXJvdXNlbCBpcyBkaXNhYmxlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovmmYLjgIFkcmFn44KEdG91Y2jjgoRzd2lwZeOCkuWPl+OBkeS7mOOBkeOBquOBj+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGluaXRpYWwtaW5kZXhcbiAgICogQGluaXRvbmx5XG4gICAqIEBkZWZhdWx0IDBcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGluZGV4IG9mIHRoZSBvbnMtY2Fyb3VzZWwtaXRlbSB0byBzaG93IGluaXRpYWxseS4gRGVmYXVsdCBpcyAwLlsvZW5dXG4gICAqICAgW2phXeacgOWIneOBq+ihqOekuuOBmeOCi29ucy1jYXJvdXNlbC1pdGVt44KSMOWni+OBvuOCiuOBruOCpOODs+ODh+ODg+OCr+OCueOBp+aMh+WumuOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOWApOOBryAwIOOBp+OBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGF1dG8tcmVmcmVzaFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hlbiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIGNhcm91c2VsIHdpbGwgYXV0b21hdGljYWxseSByZWZyZXNoIHdoZW4gdGhlIG51bWJlciBvZiBjaGlsZCBub2RlcyBjaGFuZ2UuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB5a2Q6KaB57Sg44Gu5pWw44GM5aSJ44KP44KL44Go44Kr44Or44O844K744Or44Gv6Ieq5YuV55qE44Gr5pu05paw44GV44KM44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdG8gYFwibm9uZVwiYCB0aGUgdHJhbnNpdGlvbnMgd2lsbCBub3QgYmUgYW5pbWF0ZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgdGltaW5nIGFuZCBkZWxheSB3aXRoIGFuIG9iamVjdCBsaXRlcmFsLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgILkvovvvJp7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fY29tcGlsZSgpKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGNvbnN0IHRhcmdldCA9IHRoaXMuY2hpbGRyZW5bMF0gJiYgdGhpcy5jaGlsZHJlblswXS50YWdOYW1lICE9PSAnT05TLUNBUk9VU0VMLUlURU0nICYmIHRoaXMuY2hpbGRyZW5bMF0gfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgaWYgKCF0YXJnZXQucGFyZW50Tm9kZSkge1xuICAgICAgd2hpbGUgKHRoaXMuZmlyc3RDaGlsZCkge1xuICAgICAgICB0YXJnZXQuYXBwZW5kQ2hpbGQodGhpcy5maXJzdENoaWxkKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodGFyZ2V0KTtcbiAgICB9XG5cbiAgICAhdGhpcy5jaGlsZHJlblsxXSAmJiB0aGlzLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpKTtcblxuICAgIHRoaXMuYXBwZW5kQ2hpbGQgPSB0aGlzLmFwcGVuZENoaWxkLmJpbmQodGFyZ2V0KTtcbiAgICB0aGlzLmluc2VydEJlZm9yZSA9IHRoaXMuaW5zZXJ0QmVmb3JlLmJpbmQodGFyZ2V0KTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICghdGhpcy5fc3dpcGVyKSB7XG4gICAgICB0aGlzLl9zd2lwZXIgPSBuZXcgU3dpcGVyKHtcbiAgICAgICAgZ2V0RWxlbWVudDogKCkgPT4gdGhpcyxcbiAgICAgICAgZ2V0SW5pdGlhbEluZGV4OiAoKSA9PiB0aGlzLmdldEF0dHJpYnV0ZSgnaW5pdGlhbC1pbmRleCcpLFxuICAgICAgICBnZXRBdXRvU2Nyb2xsUmF0aW86ICgpID0+IHRoaXMuYXV0b1Njcm9sbFJhdGlvLFxuICAgICAgICBpc1ZlcnRpY2FsOiAoKSA9PiB0aGlzLnZlcnRpY2FsLFxuICAgICAgICBpc092ZXJTY3JvbGxhYmxlOiAoKSA9PiB0aGlzLm92ZXJzY3JvbGxhYmxlLFxuICAgICAgICBpc0NlbnRlcmVkOiAoKSA9PiB0aGlzLmNlbnRlcmVkLFxuICAgICAgICBpc0F1dG9TY3JvbGxhYmxlOiAoKSA9PiB0aGlzLmF1dG9TY3JvbGwsXG4gICAgICAgIGl0ZW1TaXplOiB0aGlzLml0ZW1TaXplLFxuICAgICAgICBvdmVyU2Nyb2xsSG9vazogdGhpcy5fb25PdmVyU2Nyb2xsLmJpbmQodGhpcyksXG4gICAgICAgIHByZUNoYW5nZUhvb2s6IHRoaXMuX29uQ2hhbmdlLmJpbmQodGhpcywgJ3ByZWNoYW5nZScpLFxuICAgICAgICBwb3N0Q2hhbmdlSG9vazogdGhpcy5fb25DaGFuZ2UuYmluZCh0aGlzLCAncG9zdGNoYW5nZScpLFxuICAgICAgICByZWZyZXNoSG9vazogdGhpcy5fb25SZWZyZXNoLmJpbmQodGhpcyksXG4gICAgICAgIHNjcm9sbEhvb2s6ICguLi5hcmdzKSA9PiB0aGlzLl9vblN3aXBlICYmIHRoaXMuX29uU3dpcGUoLi4uYXJncylcbiAgICAgIH0pO1xuXG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fc3dpcGVyLmluaXQoe1xuICAgICAgICBzd2lwZWFibGU6IHRoaXMuaGFzQXR0cmlidXRlKCdzd2lwZWFibGUnKSxcbiAgICAgICAgYXV0b1JlZnJlc2g6IHRoaXMuaGFzQXR0cmlidXRlKCdhdXRvLXJlZnJlc2gnKVxuICAgICAgfSkpO1xuICAgIH1cbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICh0aGlzLl9zd2lwZXIgJiYgdGhpcy5fc3dpcGVyLmluaXRpYWxpemVkKSB7XG4gICAgICB0aGlzLl9zd2lwZXIuZGlzcG9zZSgpO1xuICAgICAgdGhpcy5fc3dpcGVyID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydzd2lwZWFibGUnLCAnYXV0by1yZWZyZXNoJywgJ2RpcmVjdGlvbicsICdpdGVtLWhlaWdodCcsICdpdGVtLXdpZHRoJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmICghdGhpcy5fc3dpcGVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdzd2lwZWFibGUnOlxuICAgICAgICB0aGlzLl9zd2lwZXIudXBkYXRlU3dpcGVhYmxlKHRoaXMuaGFzQXR0cmlidXRlKCdzd2lwZWFibGUnKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnYXV0by1yZWZyZXNoJzpcbiAgICAgICAgdGhpcy5fc3dpcGVyLnVwZGF0ZUF1dG9SZWZyZXNoKHRoaXMuaGFzQXR0cmlidXRlKCdhdXRvLXJlZnJlc2gnKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaXRlbS1oZWlnaHQnOlxuICAgICAgICB0aGlzLnZlcnRpY2FsICYmIHRoaXMuX3N3aXBlci51cGRhdGVJdGVtU2l6ZSh0aGlzLml0ZW1TaXplKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdpdGVtLXdpZHRoJzpcbiAgICAgICAgdGhpcy52ZXJ0aWNhbCB8fCB0aGlzLl9zd2lwZXIudXBkYXRlSXRlbVNpemUodGhpcy5pdGVtU2l6ZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZGlyZWN0aW9uJzpcbiAgICAgICAgdGhpcy5fc3dpcGVyLnJlZnJlc2goKTtcbiAgICB9XG4gIH1cblxuICBfc2hvdygpIHtcbiAgICB0aGlzLl9zd2lwZXIuc2hvdygpO1xuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgdGhpcy5fc3dpcGVyLmhpZGUoKTtcbiAgfVxuXG4gIF9vbk92ZXJTY3JvbGwoeyBkaXJlY3Rpb24sIGtpbGxPdmVyU2Nyb2xsIH0pIHtcbiAgICBsZXQgd2FpdEZvckFjdGlvbiA9IGZhbHNlO1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnb3ZlcnNjcm9sbCcsIHtcbiAgICAgIGNhcm91c2VsOiB0aGlzLFxuICAgICAgYWN0aXZlSW5kZXg6IHRoaXMuZ2V0QWN0aXZlSW5kZXgoKSxcbiAgICAgIGRpcmVjdGlvbixcbiAgICAgIHdhaXRUb1JldHVybjogcHJvbWlzZSA9PiB7XG4gICAgICAgIHdhaXRGb3JBY3Rpb24gPSB0cnVlO1xuICAgICAgICBwcm9taXNlLnRoZW4oa2lsbE92ZXJTY3JvbGwpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHdhaXRGb3JBY3Rpb247XG4gIH1cblxuICBfb25DaGFuZ2UoZXZlbnROYW1lLCB7IGFjdGl2ZUluZGV4LCBsYXN0QWN0aXZlSW5kZXggfSkge1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCBldmVudE5hbWUsIHsgY2Fyb3VzZWw6IHRoaXMsIGFjdGl2ZUluZGV4LCBsYXN0QWN0aXZlSW5kZXggfSk7XG4gIH1cblxuICBfb25SZWZyZXNoKCkge1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncmVmcmVzaCcsIHsgY2Fyb3VzZWw6IHRoaXMgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzZXRBY3RpdmVJbmRleFxuICAgKiBAc2lnbmF0dXJlIHNldEFjdGl2ZUluZGV4KGluZGV4LCBbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICAgKiAgIFtlbl1UaGUgaW5kZXggdGhhdCB0aGUgY2Fyb3VzZWwgc2hvdWxkIGJlIHNldCB0by5bL2VuXVxuICAgKiAgIFtqYV1jYXJvdXNlbOimgee0oOOBruOCpOODs+ODh+ODg+OCr+OCueOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dQSBmdW5jdGlvbiB0aGF0IHdpbGwgYmUgY2FsbGVkIGFmdGVyIHRoZSBhbmltYXRpb24gaXMgZmluaXNoZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRvIGBcIm5vbmVcImAgdGhlIHRyYW5zaXRpb25zIHdpbGwgbm90IGJlIGFuaW1hdGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1BbiBvYmplY3QgdGhhdCBjYW4gYmUgdXNlZCB0byBzcGVjaWZ5IGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nIGZ1bmN0aW9uIG9mIHRoZSBhbmltYXRpb24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGluZGV4IG9mIHRoZSBgPG9ucy1jYXJvdXNlbC1pdGVtPmAgdG8gc2hvdy5bL2VuXVxuICAgKiAgIFtqYV3ooajnpLrjgZnjgotvbnMtY2Fyb3VzZWwtaXRlbeOCkmluZGV444Gn5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGNhcm91c2VsIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNldEFjdGl2ZUluZGV4KGluZGV4LCBvcHRpb25zID0ge30pIHtcbiAgICBvcHRpb25zID0ge1xuICAgICAgYW5pbWF0aW9uOiB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJyksXG4gICAgICBhbmltYXRpb25PcHRpb25zOiB0aGlzLmhhc0F0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKVxuICAgICAgICA/IHV0aWwuYW5pbWF0aW9uT3B0aW9uc1BhcnNlKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24tb3B0aW9ucycpKVxuICAgICAgICA6IHsgZHVyYXRpb246IC4zLCB0aW1pbmc6ICdjdWJpYy1iZXppZXIoLjQsIC43LCAuNSwgMSknIH0sXG4gICAgICAuLi5vcHRpb25zXG4gICAgfTtcblxuICAgIHJldHVybiB0aGlzLl9zd2lwZXIuc2V0QWN0aXZlSW5kZXgoaW5kZXgsIG9wdGlvbnMpXG4gICAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIG9wdGlvbnMuY2FsbGJhY2sgaW5zdGFuY2VvZiBGdW5jdGlvbiAmJiBvcHRpb25zLmNhbGxiYWNrKHRoaXMpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMpO1xuICAgICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBnZXRBY3RpdmVJbmRleFxuICAgKiBAc2lnbmF0dXJlIGdldEFjdGl2ZUluZGV4KClcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKiAgIFtlbl1UaGUgY3VycmVudCBjYXJvdXNlbCBpdGVtIGluZGV4LlsvZW5dXG4gICAqICAgW2phXeePvuWcqOihqOekuuOBl+OBpuOBhOOCi+OCq+ODq+ODvOOCu+ODq+imgee0oOOBruOCpOODs+ODh+ODg+OCr+OCueOBjOi/lOOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHRoZSBpbmRleCBvZiB0aGUgY3VycmVudGx5IHZpc2libGUgYDxvbnMtY2Fyb3VzZWwtaXRlbT5gLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOihqOekuuOBleOCjOOBpuOBhOOCi29ucy1jYXJvdXNlbC1pdGVt6KaB57Sg44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldEFjdGl2ZUluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLl9zd2lwZXIuZ2V0QWN0aXZlSW5kZXgoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIG5leHRcbiAgICogQHNpZ25hdHVyZSBuZXh0KFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1BIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGhhcyBmaW5pc2hlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdG8gYFwibm9uZVwiYCB0aGUgdHJhbnNpdGlvbnMgd2lsbCBub3QgYmUgYW5pbWF0ZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXUFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nIGZ1bmN0aW9uIG9mIHRoZSBhbmltYXRpb24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGNhcm91c2VsIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyBuZXh0IGA8b25zLWNhcm91c2VsLWl0ZW0+YC5bL2VuXVxuICAgKiAgIFtqYV3mrKHjga5vbnMtY2Fyb3VzZWwtaXRlbeOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBuZXh0KG9wdGlvbnMpIHtcbiAgICByZXR1cm4gdGhpcy5zZXRBY3RpdmVJbmRleCh0aGlzLmdldEFjdGl2ZUluZGV4KCkgKyAxLCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHByZXZcbiAgICogQHNpZ25hdHVyZSBwcmV2KFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1BIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGhhcyBmaW5pc2hlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdG8gYFwibm9uZVwiYCB0aGUgdHJhbnNpdGlvbnMgd2lsbCBub3QgYmUgYW5pbWF0ZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXUFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nIGZ1bmN0aW9uIG9mIHRoZSBhbmltYXRpb24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGNhcm91c2VsIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyBwcmV2aW91cyBgPG9ucy1jYXJvdXNlbC1pdGVtPmAuWy9lbl1cbiAgICogICBbamFd5YmN44Gub25zLWNhcm91c2VsLWl0ZW3jgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcHJldihvcHRpb25zKSB7XG4gICAgcmV0dXJuIHRoaXMuc2V0QWN0aXZlSW5kZXgodGhpcy5nZXRBY3RpdmVJbmRleCgpIC0gMSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBmaXJzdFxuICAgKiBAc2lnbmF0dXJlIGZpcnN0KClcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1BIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhZnRlciB0aGUgYW5pbWF0aW9uIGhhcyBmaW5pc2hlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1JZiB0aGlzIGlzIHNldCB0byBgXCJub25lXCJgLCB0aGUgdHJhbnNpdGlvbnMgd2lsbCBub3QgYmUgYW5pbWF0ZWQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXUFuIG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIHRvIHNwZWNpZnkgdGhlIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nIGZ1bmN0aW9uIG9mIHRoZSBhbmltYXRpb24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGNhcm91c2VsIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyBmaXJzdCBgPG9ucy1jYXJvdXNlbC1pdGVtPmAuWy9lbl1cbiAgICogICBbamFd5pyA5Yid44Gub25zLWNhcm91c2VsLWl0ZW3jgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZmlyc3Qob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLnNldEFjdGl2ZUluZGV4KDAsIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbGFzdFxuICAgKiBAc2lnbmF0dXJlIGxhc3QoKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXUEgZnVuY3Rpb24gdGhhdCB3aWxsIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBhbmltYXRpb24gaGFzIGZpbmlzaGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0byBgXCJub25lXCJgIHRoZSB0cmFuc2l0aW9ucyB3aWxsIG5vdCBiZSBhbmltYXRlZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dQW4gb2JqZWN0IHRoYXQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSB0aGUgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcgZnVuY3Rpb24gb2YgdGhlIGFuaW1hdGlvbi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgY2Fyb3VzZWwgZWxlbWVudFsvZW5dXG4gICAqICAgW2phXVJlc29sdmVzIHRvIHRoZSBjYXJvdXNlbCBlbGVtZW50Wy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgbGFzdCBvbnMtY2Fyb3VzZWwgaXRlbS5bL2VuXVxuICAgKiAgIFtqYV3mnIDlvozjga5vbnMtY2Fyb3VzZWwtaXRlbeOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBsYXN0KG9wdGlvbnMpIHtcbiAgICB0aGlzLnNldEFjdGl2ZUluZGV4KE1hdGgubWF4KHRoaXMuaXRlbUNvdW50IC0gMSwgMCksIG9wdGlvbnMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVmcmVzaFxuICAgKiBAc2lnbmF0dXJlIHJlZnJlc2goKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXBkYXRlIHRoZSBsYXlvdXQgb2YgdGhlIGNhcm91c2VsLiBVc2VkIHdoZW4gYWRkaW5nIGA8b25zLWNhcm91c2VsLWl0ZW1zPmAgZHluYW1pY2FsbHkgb3IgdG8gYXV0b21hdGljYWxseSBhZGp1c3QgdGhlIHNpemUuWy9lbl1cbiAgICogICBbamFd44Os44Kk44Ki44Km44OI44KE5YaF6YOo44Gu54q25oWL44KS5pyA5paw44Gu44KC44Gu44Gr5pu05paw44GX44G+44GZ44CCb25zLWNhcm91c2VsLWl0ZW3jgpLli5XnmoTjgavlopfjgoTjgZfjgZ/jgorjgIFvbnMtY2Fyb3VzZWzjga7lpKfjgY3jgZXjgpLli5XnmoTjgavlpInjgYjjgovpmpvjgavliKnnlKjjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcmVmcmVzaCgpIHtcbiAgICB0aGlzLl9zd2lwZXIucmVmcmVzaCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBpdGVtQ291bnRcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgbnVtYmVyIG9mIGNhcm91c2VsIGl0ZW1zLlsvZW5dXG4gICAqICAgW2phXeOCq+ODq+ODvOOCu+ODq+imgee0oOOBruaVsOOBp+OBmeOAglsvamFdXG4gICAqL1xuICBnZXQgaXRlbUNvdW50KCkge1xuICAgIHJldHVybiB0aGlzLl9zd2lwZXIuaXRlbUNvdW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBzd2lwZWFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl10cnVlIGlmIHRoZSBjYXJvdXNlbCBpcyBzd2lwZWFibGUuWy9lbl1cbiAgICogICBbamFdc3dpcGVhYmxl44Gn44GC44KM44GwdHJ1ZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgc3dpcGVhYmxlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnc3dpcGVhYmxlJyk7XG4gIH1cblxuICBzZXQgc3dpcGVhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdzd2lwZWFibGUnLCB2YWx1ZSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uU3dpcGVcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSG9vayBjYWxsZWQgd2hlbmV2ZXIgdGhlIHVzZXIgc2xpZGVzIHRoZSBjYXJvdXNlbC4gSXQgZ2V0cyBhIGRlY2ltYWwgaW5kZXggYW5kIGFuIGFuaW1hdGlvbk9wdGlvbnMgb2JqZWN0IGFzIGFyZ3VtZW50cy5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IG9uU3dpcGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29uU3dpcGU7XG4gIH1cblxuICBzZXQgb25Td2lwZSh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB1dGlsLnRocm93KGBcIm9uU3dpcGVcIiBtdXN0IGJlIGEgZnVuY3Rpb25gKVxuICAgIH1cbiAgICB0aGlzLl9vblN3aXBlID0gdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGF1dG9TY3JvbGxcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl10cnVlIGlmIGF1dG8gc2Nyb2xsIGlzIGVuYWJsZWQuWy9lbl1cbiAgICogICBbamFd44Kq44O844OI44K544Kv44Ot44O844Or44GM5pyJ5Yq544Gn44GC44KM44GwdHJ1ZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgYXV0b1Njcm9sbCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2F1dG8tc2Nyb2xsJyk7XG4gIH1cblxuICBzZXQgYXV0b1Njcm9sbCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnYXV0by1zY3JvbGwnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgdmVydGljYWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCdkaXJlY3Rpb24nKSA9PT0gJ3ZlcnRpY2FsJztcbiAgfVxuXG4gIGdldCBpdGVtU2l6ZSgpIHtcbiAgICBjb25zdCBpdGVtU2l6ZUF0dHIgPSAodGhpcy5nZXRBdHRyaWJ1dGUoYGl0ZW0tJHt0aGlzLnZlcnRpY2FsID8gJ2hlaWdodCcgOiAnd2lkdGgnfWApIHx8ICcnKS50cmltKCk7XG4gICAgcmV0dXJuIGl0ZW1TaXplQXR0ci5tYXRjaCgvXlxcZCsocHh8JSkkLykgPyBpdGVtU2l6ZUF0dHIgOiAnMTAwJSc7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGF1dG9TY3JvbGxSYXRpb1xuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGN1cnJlbnQgYXV0byBzY3JvbGwgcmF0aW8uIFsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruOCquODvOODiOOCueOCr+ODreODvOODq+OBrnJhdGlv5YCk44CCWy9qYV1cbiAgICovXG4gIGdldCBhdXRvU2Nyb2xsUmF0aW8oKSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQodGhpcy5nZXRBdHRyaWJ1dGUoJ2F1dG8tc2Nyb2xsLXJhdGlvJykpO1xuICB9XG5cbiAgc2V0IGF1dG9TY3JvbGxSYXRpbyhyYXRpbykge1xuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdhdXRvLXNjcm9sbC1yYXRpbycsIHJhdGlvKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBjYXJvdXNlbCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICBzZXQgZGlzYWJsZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvdmVyc2Nyb2xsYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGNhcm91c2VsIGlzIG92ZXJzY3JvbGxhYmxlIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV1vdmVyc2Nyb2xs44Gn44GN44KM44GwdHJ1ZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgb3ZlcnNjcm9sbGFibGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdvdmVyc2Nyb2xsYWJsZScpO1xuICB9XG5cbiAgc2V0IG92ZXJzY3JvbGxhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdvdmVyc2Nyb2xsYWJsZScsIHZhbHVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2VudGVyZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBjYXJvdXNlbCBpcyBjZW50ZXJlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFdY2VudGVyZWTnirbmhYvjgavjgarjgaPjgabjgYTjgozjgbB0cnVl44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldCBjZW50ZXJlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2NlbnRlcmVkJyk7XG4gIH1cblxuICBzZXQgY2VudGVyZWQodmFsdWUpIHtcbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2NlbnRlcmVkJywgdmFsdWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsncG9zdGNoYW5nZScsICdyZWZyZXNoJywgJ292ZXJzY3JvbGwnXTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5DYXJvdXNlbCA9IENhcm91c2VsRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWNhcm91c2VsJywgQ2Fyb3VzZWxFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHN0eWxlciBmcm9tICcuLi9vbnMvc3R5bGVyJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1lbGVtZW50JztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtY29sXG4gKiBAY2F0ZWdvcnkgZ3JpZFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1SZXByZXNlbnRzIGEgY29sdW1uIGluIHRoZSBncmlkIHN5c3RlbS4gVXNlIHdpdGggYDxvbnMtcm93PmAgdG8gbGF5b3V0IGNvbXBvbmVudHMuWy9lbl1cbiAqICAgW2phXeOCsOODquODg+ODieOCt+OCueODhuODoOOBq+OBpuWIl+OCkuWumue+qeOBl+OBvuOBmeOAgm9ucy1yb3fjgajjgajjgoLjgavkvb/nlKjjgZfjgIHjgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jg6zjgqTjgqLjgqbjg4jjgavliKnnlKjjgZfjgb7jgZnjgIJbL2phXVxuICogQG5vdGVcbiAqICAgW2VuXUZvciBBbmRyb2lkIDQuMyBhbmQgZWFybGllciwgYW5kIGlPUzYgYW5kIGVhcmxpZXIsIHdoZW4gdXNpbmcgbWl4ZWQgYWxpZ25tZW50IHdpdGggb25zLXJvdyBhbmQgb25zLWNvbHVtbiwgdGhleSBtYXkgbm90IGJlIGRpc3BsYXllZCBjb3JyZWN0bHkuIFlvdSBjYW4gdXNlIG9ubHkgb25lIGFsaWdubWVudC5bL2VuXVxuICogICBbamFdQW5kcm9pZCA0LjPku6XliY3jgIHjgoLjgZfjgY/jga9pT1MgNuS7peWJjeOBrk9T44Gu5aC05ZCI44CBb25zLXJvd+OBqG9ucy1jb2x1bW7jgpLntYTjgb/lkIjjgo/jgZvjgZ/loLTlkIjjgavmj4/nlLvjgYzltKnjgozjgovloLTlkIjjgYzjgYLjgorjgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gR2d1akMge3dpZGV9XG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sIFtlbl1MYXlvdXRpbmcgZ3VpZGVbL2VuXVtqYV3jg6zjgqTjgqLjgqbjg4jmqZ/og71bL2phXVxuICogQHNlZWFsc28gb25zLXJvd1xuICogICBbZW5dVGhlIGA8b25zLXJvdz5gIGNvbXBvbmVudCBpcyB0aGUgcGFyZW50IG9mIGA8b25zLWNvbD5gLlsvZW5dXG4gKiAgIFtqYV1vbnMtcm9344Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXJvdz5cbiAqICAgPG9ucy1jb2wgd2lkdGg9XCI1MHB4XCI+PG9ucy1pY29uIGljb249XCJmYS10d2l0dGVyXCI+PC9vbnMtaWNvbj48L29ucy1jb2w+XG4gKiAgIDxvbnMtY29sPlRleHQ8L29ucy1jb2w+XG4gKiA8L29ucy1yb3c+XG4gKi9cblxuLyoqXG4gKiBAYXR0cmlidXRlIHZlcnRpY2FsLWFsaWduXG4gKiBAdHlwZSB7U3RyaW5nfVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1WZXJ0aWNhbCBhbGlnbm1lbnQgb2YgdGhlIGNvbHVtbi4gVmFsaWQgdmFsdWVzIGFyZSBcInRvcFwiLCBcImNlbnRlclwiLCBhbmQgXCJib3R0b21cIi5bL2VuXVxuICogICBbamFd57im44Gu6YWN572u44KS5oyH5a6a44GZ44KL44CCXCJ0b3BcIiwgXCJjZW50ZXJcIiwgXCJib3R0b21cIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gKi9cblxuLyoqXG4gKiBAYXR0cmlidXRlIHdpZHRoXG4gKiBAdHlwZSB7U3RyaW5nfVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1UaGUgd2lkdGggb2YgdGhlIGNvbHVtbi4gVmFsaWQgdmFsdWVzIGFyZSBjc3Mgd2lkdGggdmFsdWVzIChcIjEwJVwiLCBcIjUwcHhcIikuWy9lbl1cbiAqICAgW2phXeOCq+ODqeODoOOBruaoquW5heOCkuaMh+WumuOBmeOCi+OAguODkeODvOOCu+ODs+ODiOOCguOBl+OBj+OBr+ODlOOCr+OCu+ODq+OBp+aMh+WumuOBl+OBvuOBme+8iDEwJeOChDUwcHjvvInjgIJbL2phXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb2xFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBpZiAodGhpcy5nZXRBdHRyaWJ1dGUoJ3dpZHRoJykpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZVdpZHRoKCk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnd2lkdGgnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKG5hbWUgPT09ICd3aWR0aCcpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZVdpZHRoKCk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZVdpZHRoKCkge1xuICAgIGxldCB3aWR0aCA9IHRoaXMuZ2V0QXR0cmlidXRlKCd3aWR0aCcpO1xuICAgIGlmICghd2lkdGgpIHtcbiAgICAgIHN0eWxlci5jbGVhcih0aGlzLCAnZmxleCBtYXhXaWR0aCcpO1xuICAgIH0gZWxzZSB7XG4gICAgICB3aWR0aCA9IHdpZHRoLnRyaW0oKS5tYXRjaCgvXlxcZCskLykgPyB3aWR0aCArICclJyA6IHdpZHRoO1xuXG4gICAgICBzdHlsZXIodGhpcywge1xuICAgICAgICBmbGV4OiAnMCAwICcgKyB3aWR0aCxcbiAgICAgICAgbWF4V2lkdGg6IHdpZHRoXG4gICAgICB9KTtcbiAgICB9XG4gIH1cbn1cblxub25zRWxlbWVudHMuQ29sID0gQ29sRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWNvbCcsIENvbEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InXG5cbmV4cG9ydCBjbGFzcyBEaWFsb2dBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBzaG93KGRpYWxvZywgZG9uZSkge1xuICAgIGRvbmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgaGlkZShkaWFsb2csIGRvbmUpIHtcbiAgICBkb25lKCk7XG4gIH1cbn1cblxuLyoqXG4gKiBBbmRyb2lkIHN0eWxlIGFuaW1hdG9yIGZvciBkaWFsb2cuXG4gKi9cbmV4cG9ydCBjbGFzcyBBbmRyb2lkRGlhbG9nQW5pbWF0b3IgZXh0ZW5kcyBEaWFsb2dBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdlYXNlLWluLW91dCcsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjN9ID0ge30pIHtcbiAgICBzdXBlcih7dGltaW5nLCBkZWxheSwgZHVyYXRpb259KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBzaG93KGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMCB9LCB7IG9wYWNpdHk6IDEgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTYwJSwgMCknLCBvcGFjaXR5OiAwIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKScsIG9wYWNpdHk6IDEgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIGhpZGUoZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAxIH0sIHsgb3BhY2l0eTogMCB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKScsIG9wYWNpdHk6IDEgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC01MCUsIC02MCUsIDApJywgb3BhY2l0eTogMCB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBpT1Mgc3R5bGUgYW5pbWF0b3IgZm9yIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGNsYXNzIElPU0RpYWxvZ0FuaW1hdG9yIGV4dGVuZHMgRGlhbG9nQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnZWFzZS1pbi1vdXQnLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoe3RpbWluZywgZGVsYXksIGR1cmF0aW9ufSk7XG5cbiAgICB0aGlzLmJvZHlIZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDsgLy8gYXZvaWQgRm9yY2VkIFN5bmNocm9ub3VzIExheW91dFxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3coZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAwIH0sIHsgb3BhY2l0eTogMSB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgtNTAlLCAke3RoaXMuYm9keUhlaWdodCAvIDIuMCAtIDF9cHgsIDApYCB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCknIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZGlhbG9nXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKGRpYWxvZywgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fbWFzaywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSksXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX2RpYWxvZywgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTUwJSwgLTUwJSwgMCknIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgtNTAlLCAke3RoaXMuYm9keUhlaWdodCAvIDIuMCAtIDF9cHgsIDApYCB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cblxuLyoqXG4gKiBTbGlkZSBhbmltYXRvciBmb3IgZGlhbG9nLlxuICovXG5leHBvcnQgY2xhc3MgU2xpZGVEaWFsb2dBbmltYXRvciBleHRlbmRzIERpYWxvZ0FuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC40LCAxKScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjJ9ID0ge30pIHtcbiAgICBzdXBlcih7dGltaW5nLCBkZWxheSwgZHVyYXRpb259KTtcblxuICAgIHRoaXMuYm9keUhlaWdodCA9IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0OyAvLyBhdm9pZCBGb3JjZWQgU3luY2hyb25vdXMgTGF5b3V0XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGRpYWxvZ1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyhkaWFsb2csIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChkaWFsb2cuX21hc2ssIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdCh7IG9wYWNpdHk6IDAgfSwgeyBvcGFjaXR5OiAxIH0pLFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9kaWFsb2csIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICAvLyBGSVhNRTogVGhpcyBzaG91bGQgYXZvaWQgRm9yY2VkIFN5bmNocm9ub3VzIExheW91dC4gT3RoZXJ3aXNlLCBmYWRlIGFuaW1hdGlvbiBvZiBtYXNrIHdpbGwgYmUgYnJva2VuLlxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoLTUwJSwgJHstICh0aGlzLmJvZHlIZWlnaHQgLyAyLjApICsgMSAtIGRpYWxvZy5fZGlhbG9nLmNsaWVudEhlaWdodH1weCwgMClgIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKScgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBkaWFsb2dcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIGhpZGUoZGlhbG9nLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZGlhbG9nLl9tYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAxIH0sIHsgb3BhY2l0eTogMCB9KSxcblxuICAgICAgYW5pbWl0KGRpYWxvZy5fZGlhbG9nLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgtNTAlLCAtNTAlLCAwKScgfSxcbiAgICAgICAgICAvLyBGSVhNRTogVGhpcyBzaG91bGQgYXZvaWQgRm9yY2VkIFN5bmNocm9ub3VzIExheW91dC4gT3RoZXJ3aXNlLCBmYWRlIGFuaW1hdGlvbiBvZiBtYXNrIHdpbGwgYmUgYnJva2VuLlxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoLTUwJSwgJHstICh0aGlzLmJvZHlIZWlnaHQgLyAyLjApICsgMSAtIGRpYWxvZy5fZGlhbG9nLmNsaWVudEhlaWdodH1weCwgMClgIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uLy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uLy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCB7IERpYWxvZ0FuaW1hdG9yLCBJT1NEaWFsb2dBbmltYXRvciwgQW5kcm9pZERpYWxvZ0FuaW1hdG9yLCBTbGlkZURpYWxvZ0FuaW1hdG9yIH0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBCYXNlRGlhbG9nRWxlbWVudCBmcm9tICcuLi9iYXNlL2Jhc2UtZGlhbG9nJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcuZGlhbG9nJzogJ2RpYWxvZy0tKicsXG4gICcuZGlhbG9nLWNvbnRhaW5lcic6ICdkaWFsb2ctY29udGFpbmVyLS0qJyxcbiAgJy5kaWFsb2ctbWFzayc6ICdkaWFsb2ctbWFzay0tKidcbn07XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gIHBsYXRmb3JtLmlzQW5kcm9pZCgpID8gQW5kcm9pZERpYWxvZ0FuaW1hdG9yIDogSU9TRGlhbG9nQW5pbWF0b3IgfSxcbiAgJ3NsaWRlJzogU2xpZGVEaWFsb2dBbmltYXRvcixcbiAgJ25vbmUnOiBEaWFsb2dBbmltYXRvclxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtZGlhbG9nXG4gKiBAY2F0ZWdvcnkgZGlhbG9nXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIERpYWxvZyB0aGF0IGlzIGRpc3BsYXllZCBvbiB0b3Agb2YgY3VycmVudCBzY3JlZW4uIEFzIG9wcG9zZWQgdG8gdGhlIGA8b25zLWFsZXJ0LWRpYWxvZz5gIGVsZW1lbnQsIHRoaXMgY29tcG9uZW50IGNhbiBjb250YWluIGFueSBraW5kIG9mIGNvbnRlbnQuXG4gKlxuICogICAgIFRvIHVzZSB0aGUgZWxlbWVudCBpdCBjYW4gZWl0aGVyIGJlIGF0dGFjaGVkIGRpcmVjdGx5IHRvIHRoZSBgPGJvZHk+YCBlbGVtZW50IG9yIGR5bmFtaWNhbGx5IGNyZWF0ZWQgZnJvbSBhIHRlbXBsYXRlIHVzaW5nIHRoZSBgb25zLmNyZWF0ZURpYWxvZyh0ZW1wbGF0ZSlgIHV0aWxpdHkgZnVuY3Rpb24gYW5kIHRoZSBgPHRlbXBsYXRlPmAgdGFnLlxuICpcbiAqICAgICBUaGUgZGlhbG9nIGlzIHVzZWZ1bCBmb3IgZGlzcGxheWluZyBtZW51cywgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvciB0byBhc2sgdGhlIHVzZXIgdG8gbWFrZSBhIGRlY2lzaW9uLlxuICpcbiAqICAgICBJdCB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgZGlzcGxheWVkIGFzIE1hdGVyaWFsIERlc2lnbiB3aGVuIHJ1bm5pbmcgb24gYW4gQW5kcm9pZCBkZXZpY2UuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1EaXNwbGF5IGEgTWF0ZXJpYWwgRGVzaWduIGRpYWxvZy5bL2VuXVxuICogICBbamFd44Oe44OG44Oq44Ki44Or44OH44K244Kk44Oz44Gu44OA44Kk44Ki44Ot44Kw44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIHp4eGFHYVxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2RpYWxvZ1xuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtYWxlcnQtZGlhbG9nXG4gKiAgIFtlbl1gPG9ucy1hbGVydC1kaWFsb2c+YCBjb21wb25lbnRbL2VuXVxuICogICBbamFdb25zLWFsZXJ0LWRpYWxvZ+OCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcG9wb3ZlclxuICogICBbZW5dYDxvbnMtcG9wb3Zlcj5gIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtcG9wb3ZlcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbW9kYWxcbiAqICAgW2VuXWA8b25zLW1vZGFsPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1tb2RhbOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1kaWFsb2cgaWQ9XCJkaWFsb2dcIj5cbiAqICAgPHA+VGhpcyBpcyBhIGRpYWxvZyE8L3A+XG4gKiA8L29ucy1kaWFsb2c+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RpYWxvZycpLnNob3coKTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEaWFsb2dFbGVtZW50IGV4dGVuZHMgQmFzZURpYWxvZ0VsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcHJlc2hvd1xuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYmVmb3JlIHRoZSBkaWFsb2cgaXMgZGlzcGxheWVkLlsvZW5dXG4gICAqIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzooajnpLrjgZXjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuZGlhbG9nXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUV4ZWN1dGUgdGhpcyBmdW5jdGlvbiB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBiZWluZyBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlrp/ooYzjgZnjgovjgajjgIHjg4DjgqTjgqLjg63jgrDjga7ooajnpLrjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgZGlhbG9nIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiBbamFd44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM44Gf55u05b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LmRpYWxvZ1xuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcHJlaGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYmVmb3JlIHRoZSBkaWFsb2cgaXMgaGlkZGVuLlsvZW5dXG4gICAqIFtqYV3jg4DjgqTjgqLjg63jgrDjgYzpmqDjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuZGlhbG9nXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUV4ZWN1dGUgdGhpcyBmdW5jdGlvbiB0byBzdG9wIHRoZSBkaWFsb2cgZnJvbSBiZWluZyBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44KS5a6f6KGM44GZ44KL44Go44CB44OA44Kk44Ki44Ot44Kw44Gu6Z2e6KGo56S644GM44Kt44Oj44Oz44K744Or44GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0aGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIGRpYWxvZyBpcyBoaWRkZW4uWy9lbl1cbiAgICogW2phXeODgOOCpOOCouODreOCsOOBjOmaoOOCjOOBn+W+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5kaWFsb2dcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgZGlhbG9nLlsvZW5dXG4gICAqICBbamFd44OA44Kk44Ki44Ot44Kw44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgY2FuY2VsYWJsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIGRpYWxvZyBjYW4gYmUgY2xvc2VkIGJ5IHRhcHBpbmcgdGhlIGJhY2tncm91bmQgb3IgYnkgcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uIG9uIEFuZHJvaWQgZGV2aWNlcy5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgZGlhbG9nIGlzIGRpc2FibGVkLlsvZW5dXG4gICAqICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44OA44Kk44Ki44Ot44Kw44GvZGlzYWJsZWTnirbmhYvjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgZGVmYXVsdFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYW5pbWF0aW9uIHVzZWQgd2hlbiBzaG93aW5nIGFuZCBoaWRpbmcgdGhlIGRpYWxvZy4gQ2FuIGJlIGVpdGhlciBgXCJub25lXCJgIG9yIGBcImRlZmF1bHRcImAuWy9lbl1cbiAgICogIFtqYV3jg4DjgqTjgqLjg63jgrDjgpLooajnpLrjgZnjgovpmpvjga7jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcIm5vbmVcIuOCguOBl+OBj+OBr1wiZGVmYXVsdFwi44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbWFzay1jb2xvclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCByZ2JhKDAsIDAsIDAsIDAuMilcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dQ29sb3Igb2YgdGhlIGJhY2tncm91bmQgbWFzay4gRGVmYXVsdCBpcyBgXCJyZ2JhKDAsIDAsIDAsIDAuMilcImAuWy9lbl1cbiAgICogIFtqYV3og4zmma/jga7jg57jgrnjgq/jga7oibLjgpLmjIflrprjgZfjgb7jgZnjgIJcInJnYmEoMCwgMCwgMCwgMC4yKVwi44GM44OH44OV44Kp44Or44OI5YCk44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuICB9XG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHNjaGVtZTtcbiAgfVxuXG4gIGdldCBfbWFzaygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5kaWFsb2ctbWFzaycpO1xuICB9XG5cbiAgZ2V0IF9kaWFsb2coKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICcuZGlhbG9nJyk7XG4gIH1cblxuICBfdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCkge1xuICAgIHJldHVybiBuZXcgQW5pbWF0b3JGYWN0b3J5KHtcbiAgICAgIGFuaW1hdG9yczogX2FuaW1hdG9yRGljdCxcbiAgICAgIGJhc2VDbGFzczogRGlhbG9nQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnRGlhbG9nQW5pbWF0b3InLFxuICAgICAgZGVmYXVsdEFuaW1hdGlvbjogdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpXG4gICAgfSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB0aGlzLnN0eWxlLnpJbmRleCA9IDEwMDAxO1xuXG4gICAgLyogRXhwZWN0ZWQgcmVzdWx0OlxuICAgICAqICAgPG9ucy1kaWFsb2c+XG4gICAgICogICAgIDxkaXYgY2xhc3M9XCJkaWFsb2ctbWFza1wiPjwvZGl2PlxuICAgICAqICAgICA8ZGl2IGNsYXNzPVwiZGlhbG9nXCI+XG4gICAgICogICAgICAgPGRpdiBjbGFzcz1cImRpYWxvZy1jb250YWluZXJcIj4uLi48L2Rpdj5cbiAgICAgKiAgICAgPC9kaXY+XG4gICAgICogICA8L29ucy1kaWFsb2c+XG4gICAgICovXG5cbiAgICBpZiAoIXRoaXMuX2RpYWxvZykge1xuICAgICAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBkaWFsb2cuY2xhc3NMaXN0LmFkZCgnZGlhbG9nJyk7XG5cbiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29udGFpbmVyLmNsYXNzTGlzdC5hZGQoJ2RpYWxvZy1jb250YWluZXInKTtcbiAgICAgIHdoaWxlICh0aGlzLmZpcnN0Q2hpbGQpIHtcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMuZmlyc3RDaGlsZCk7XG4gICAgICB9XG4gICAgICBkaWFsb2cuYXBwZW5kQ2hpbGQoY29udGFpbmVyKTtcblxuICAgICAgdGhpcy5hcHBlbmRDaGlsZChkaWFsb2cpO1xuICAgIH1cblxuICAgIGlmICghdGhpcy5fbWFzaykge1xuICAgICAgY29uc3QgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgbWFzay5jbGFzc0xpc3QuYWRkKCdkaWFsb2ctbWFzaycpO1xuICAgICAgdGhpcy5pbnNlcnRCZWZvcmUobWFzaywgdGhpcy5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICB0aGlzLl9kaWFsb2cuc3R5bGUuekluZGV4ID0gMjAwMDE7XG4gICAgdGhpcy5fbWFzay5zdHlsZS56SW5kZXggPSAyMDAwMDtcblxuICAgIHRoaXMuc2V0QXR0cmlidXRlKCdzdGF0dXMtYmFyLWZpbGwnLCAnJyk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHRoaXMuX3NjaGVtZSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uRGV2aWNlQmFja0J1dHRvblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQmFjay1idXR0b24gaGFuZGxlci5bL2VuXVxuICAgKiAgIFtqYV3jg5Djg4Pjgq/jg5zjgr/jg7Pjg4/jg7Pjg4njg6njgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCBzaG93XG4gICAqIEBzaWduYXR1cmUgc2hvdyhbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcInNsaWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcInNsaWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAgWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIHRoZSBkaWFsb2cgaGFzIGJlZW4gcmV2ZWFsZWQuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44GM6KGo56S644GV44KM57WC44KP44Gj44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU2hvdyB0aGUgZGlhbG9nLlsvZW5dXG4gICAqICBbamFd44OA44Kk44Ki44Ot44Kw44KS6ZaL44GN44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX0gUmVzb2x2ZXMgdG8gdGhlIGRpc3BsYXllZCBlbGVtZW50LlxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcInNsaWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcInNsaWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbnMgaXMgY2FsbGVkIGFmdGVyIHRoZSBkaWFsb2cgaGFzIGJlZW4gaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODgOOCpOOCouODreOCsOOBjOmaoOOCjOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBkaWFsb2cuWy9lbl1cbiAgICogICBbamFd44OA44Kk44Ki44Ot44Kw44KS6ZaJ44GY44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGhpZGRlbiBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGRpYWxvZyBpcyB2aXNpYmxlIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3opoHntKDjgYzopovjgYjjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZGlhbG9nIGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGNhbmNlbGFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBkaWFsb2cgaXMgY2FuY2VsYWJsZSBvciBub3QuIEEgY2FuY2VsYWJsZSBkaWFsb2cgY2FuIGJlIGNsb3NlZCBieSB0YXBwaW5nIHRoZSBiYWNrZ3JvdW5kIG9yIGJ5IHByZXNzaW5nIHRoZSBiYWNrIGJ1dHRvbiBvbiBBbmRyb2lkIGRldmljZXMuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7RGlhbG9nQW5pbWF0b3J9IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIERpYWxvZ0FuaW1hdG9yKSkge1xuICAgICAgdXRpbC50aHJvd0FuaW1hdG9yKCdEaWFsb2cnKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cblxuICBzdGF0aWMgZ2V0IERpYWxvZ0FuaW1hdG9yKCkge1xuICAgIHJldHVybiBEaWFsb2dBbmltYXRvcjtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5EaWFsb2cgPSBEaWFsb2dFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtZGlhbG9nJywgRGlhbG9nRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgc3R5bGVyIGZyb20gJy4uL29ucy9zdHlsZXInO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnZmFiJztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ2ZhYi0tKicsXG4gICcuZmFiX19pY29uJzogJ2ZhYi0tKl9faWNvbidcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWZhYlxuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgVGhlIEZsb2F0aW5nIGFjdGlvbiBidXR0b24gaXMgYSBjaXJjdWxhciBidXR0b24gZGVmaW5lZCBpbiB0aGUgW01hdGVyaWFsIERlc2lnbiBzcGVjaWZpY2F0aW9uXShodHRwczovL3d3dy5nb29nbGUuY29tL2Rlc2lnbi9zcGVjL2NvbXBvbmVudHMvYnV0dG9ucy1mbG9hdGluZy1hY3Rpb24tYnV0dG9uLmh0bWwpLiBUaGV5IGFyZSBvZnRlbiB1c2VkIHRvIHByb21vdGUgdGhlIHByaW1hcnkgYWN0aW9uIG9mIHRoZSBhcHAuXG4gKlxuICogICAgIEl0IGNhbiBiZSBkaXNwbGF5ZWQgZWl0aGVyIGFzIGFuIGlubGluZSBlbGVtZW50IG9yIGluIG9uZSBvZiB0aGUgY29ybmVycy4gTm9ybWFsbHkgaXQgd2lsbCBiZSBwb3NpdGlvbmVkIGluIHRoZSBsb3dlciByaWdodCBjb3JuZXIgb2YgdGhlIHNjcmVlbi5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvZmFiXG4gKiBAbW9kaWZpZXIgbWluaVxuICogICBbZW5dTWFrZXMgdGhlIGBvbnMtZmFiYCBzbWFsbGVyLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNjcm9zcy1wbGF0Zm9ybS1zdHlsaW5nLWF1dG9zdHlsaW5nIFtlbl1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1bamFdSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BlZWQtZGlhbFxuICogICBbZW5dVGhlIGA8b25zLXNwZWVkLWRpYWw+YCBjb21wb25lbnQgaXMgYSBGbG9hdGluZyBhY3Rpb24gYnV0dG9uIHRoYXQgZGlzcGxheXMgYSBtZW51IHdoZW4gdGFwcGVkLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBidXR0b24uWy9lbl1cbiAgICogIFtqYV3jg5zjgr/jg7Pjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSByaXBwbGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgZGVmaW5lZCwgdGhlIGJ1dHRvbiB3aWxsIGhhdmUgYSByaXBwbGUgZWZmZWN0IHdoZW4gdGFwcGVkLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcG9zaXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIHBvc2l0aW9uIG9mIHRoZSBidXR0b24uIFNob3VsZCBiZSBhIHN0cmluZyBsaWtlIGBcImJvdHRvbSByaWdodFwiYCBvciBgXCJ0b3AgbGVmdFwiYC4gSWYgdGhpcyBhdHRyaWJ1dGUgaXMgbm90IGRlZmluZWQgaXQgd2lsbCBiZSBkaXNwbGF5ZWQgYXMgYW4gaW5saW5lIGVsZW1lbnQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeODnOOCv+ODs+OCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBr+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICAvLyBUaGUgZm9sbG93aW5nIHN0YXRlbWVudHMgY2FuIGJlIGV4ZWN1dGVkIGJlZm9yZSBjb250ZW50UmVhZHlcbiAgICAvLyBzaW5jZSB0aGVzZSBkbyBub3QgYWNjZXNzIHRoZSBjaGlsZHJlblxuICAgIHRoaXMuX2hpZGUoKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcuZmFiX19pY29uJykpIHtcbiAgICAgIGNvbnN0IGNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICBjb250ZW50LmNsYXNzTGlzdC5hZGQoJ2ZhYl9faWNvbicpO1xuXG4gICAgICB1dGlsLmFycmF5RnJvbSh0aGlzLmNoaWxkTm9kZXMpLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgIGlmICghZWxlbWVudC50YWdOYW1lIHx8IGVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAnb25zLXJpcHBsZScpIHtcbiAgICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKGVsZW1lbnQpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoY29udGVudCk7XG4gICAgfVxuXG4gICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG5cbiAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuX3Nob3coKSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdyaXBwbGUnLCAncG9zaXRpb24nLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaXBwbGUnOlxuICAgICAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdwb3NpdGlvbic6XG4gICAgICAgIHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIGlmICghdGhpcy5fbWFudWFsbHlIaWRkZW4pIHsgLy8gaWYgdXNlciBoYXMgbm90IGNhbGxlZCBvbnMtZmFiLmhpZGUoKVxuICAgICAgdGhpcy5fdG9nZ2xlKHRydWUpO1xuICAgIH1cbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl90b2dnbGUoZmFsc2UpKTtcbiAgfVxuXG4gIF91cGRhdGVSaXBwbGUoKSB7XG4gICAgdXRpbC51cGRhdGVSaXBwbGUodGhpcyk7XG4gIH1cblxuICBfdXBkYXRlUG9zaXRpb24oKSB7XG4gICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXG4gICAgICAnZmFiLS10b3BfX2xlZnQnLFxuICAgICAgJ2ZhYi0tYm90dG9tX19yaWdodCcsXG4gICAgICAnZmFiLS1ib3R0b21fX2xlZnQnLFxuICAgICAgJ2ZhYi0tdG9wX19yaWdodCcsXG4gICAgICAnZmFiLS10b3BfX2NlbnRlcicsXG4gICAgICAnZmFiLS1ib3R0b21fX2NlbnRlcicpO1xuICAgIHN3aXRjaCAocG9zaXRpb24pIHtcbiAgICAgIGNhc2UgJ3RvcCByaWdodCc6XG4gICAgICBjYXNlICdyaWdodCB0b3AnOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tdG9wX19yaWdodCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RvcCBsZWZ0JzpcbiAgICAgIGNhc2UgJ2xlZnQgdG9wJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLXRvcF9fbGVmdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JvdHRvbSByaWdodCc6XG4gICAgICBjYXNlICdyaWdodCBib3R0b20nOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tYm90dG9tX19yaWdodCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JvdHRvbSBsZWZ0JzpcbiAgICAgIGNhc2UgJ2xlZnQgYm90dG9tJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLWJvdHRvbV9fbGVmdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NlbnRlciB0b3AnOlxuICAgICAgY2FzZSAndG9wIGNlbnRlcic6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS10b3BfX2NlbnRlcicpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NlbnRlciBib3R0b20nOlxuICAgICAgY2FzZSAnYm90dG9tIGNlbnRlcic6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS1ib3R0b21fX2NlbnRlcicpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNob3dcbiAgICogQHNpZ25hdHVyZSBzaG93KClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU2hvdyB0aGUgZmxvYXRpbmcgYWN0aW9uIGJ1dHRvbi5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuICBzaG93KCkge1xuICAgIHRoaXMudG9nZ2xlKHRydWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaGlkZVxuICAgKiBAc2lnbmF0dXJlIGhpZGUoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1IaWRlIHRoZSBmbG9hdGluZyBhY3Rpb24gYnV0dG9uLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG4gIGhpZGUoKSB7XG4gICAgdGhpcy50b2dnbGUoZmFsc2UpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgdG9nZ2xlXG4gICAqIEBzaWduYXR1cmUgdG9nZ2xlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRvZ2dsZSB0aGUgdmlzaWJpbGl0eSBvZiB0aGUgYnV0dG9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICB0b2dnbGUoYWN0aW9uID0gIXRoaXMudmlzaWJsZSkge1xuICAgIHRoaXMuX21hbnVhbGx5SGlkZGVuID0gIWFjdGlvbjtcbiAgICB0aGlzLl90b2dnbGUoYWN0aW9uKTtcbiAgfVxuXG4gIF90b2dnbGUoYWN0aW9uID0gIXRoaXMudmlzaWJsZSkge1xuICAgIGNvbnN0IGlzQm90dG9tID0gKHRoaXMuZ2V0QXR0cmlidXRlKCdwb3NpdGlvbicpIHx8ICcnKS5pbmRleE9mKCdib3R0b20nKSA+PSAwO1xuICAgIGNvbnN0IHRyYW5zbGF0ZSA9IGlzQm90dG9tID8gYHRyYW5zbGF0ZTNkKDBweCwgLSR7dXRpbC5nbG9iYWxzLmZhYk9mZnNldCB8fCAwfXB4LCAwcHgpYCA6ICcnO1xuXG4gICAgc3R5bGVyKHRoaXMsIHsgdHJhbnNmb3JtOiBgJHt0cmFuc2xhdGV9IHNjYWxlKCR7TnVtYmVyKGFjdGlvbil9KWAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLnN0eWxlLnRyYW5zZm9ybS5pbmRleE9mKCdzY2FsZSgwKScpID09PSAtMSAmJiB0aGlzLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5GYWIgPSBGYWJFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtZmFiJywgRmFiRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1lbGVtZW50JztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1nZXN0dXJlLWRldGVjdG9yXG4gKiBAY2F0ZWdvcnkgZ2VzdHVyZVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBDb21wb25lbnQgdG8gZGV0ZWN0IGZpbmdlciBnZXN0dXJlcyB3aXRoaW4gdGhlIHdyYXBwZWQgZWxlbWVudC4gRm9sbG93aW5nIGdlc3R1cmVzIGFyZSBzdXBwb3J0ZWQ6XG4gKiAgICAgLSBEcmFnIGdlc3R1cmVzOiBgZHJhZ2AsIGBkcmFnbGVmdGAsIGBkcmFncmlnaHRgLCBgZHJhZ3VwYCwgYGRyYWdkb3duYFxuICogICAgIC0gSG9sZCBnZXN0dXJlczogYGhvbGRgLCBgcmVsZWFzZWBcbiAqICAgICAtIFN3aXBlIGdlc3R1cmVzOiBgc3dpcGVgLCBgc3dpcGVsZWZ0YCwgYHN3aXBlcmlnaHRgLCBgc3dpcGV1cGAsIGBzd2lwZWRvd25gXG4gKiAgICAgLSBUYXAgZ2VzdHVyZXM6IGB0YXBgLCBgZG91YmxldGFwYFxuICogICAgIC0gUGluY2ggZ2VzdHVyZXM6IGBwaW5jaGAsIGBwaW5jaGluYCwgYHBpbmNob3V0YFxuICogICAgIC0gT3RoZXIgZ2VzdHVyZXM6IGB0b3VjaGAsIGB0cmFuc2Zvcm1gLCBgcm90YXRlYFxuICogICBbL2VuXVxuICogICBbamFd6KaB57Sg5YaF44Gu44K444Kn44K544OB44Oj44O85pON5L2c44KS5qSc55+l44GX44G+44GZ44CC6Kmz44GX44GP44Gv44Ks44Kk44OJ44KS5Y+C54Wn44GX44Gm44GP44Gg44GV44GE44CCWy9qYV1cbiAqIEBndWlkZSBmZWF0dXJlcy5odG1sI2dlc3R1cmUtZGV0ZWN0aW9uXG4gKiAgIFtlbl1EZXRlY3RpbmcgZmluZ2VyIGdlc3R1cmVzWy9lbl1cbiAqICAgW2phXeOCuOOCp+OCueODgeODo+ODvOaTjeS9nOOBruaknOefpVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1nZXN0dXJlLWRldGVjdG9yPlxuICogICA8ZGl2IGlkPVwiZGV0ZWN0LWFyZWFcIiBzdHlsZT1cIndpZHRoOiAxMDBweDsgaGVpZ2h0OiAxMDBweDtcIj5cbiAqICAgICBTd2lwZSBIZXJlXG4gKiAgIDwvZGl2PlxuICogPC9vbnMtZ2VzdHVyZS1kZXRlY3Rvcj5cbiAqXG4gKiA8c2NyaXB0PlxuICogICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzd2lwZWxlZnQnLCBmdW5jdGlvbihldmVudCkge1xuICogICAgIGlmIChldmVudC50YXJnZXQubWF0Y2hlcygnI2RldGVjdC1hcmVhJykpIHtcbiAqICAgICAgIGNvbnNvbGUubG9nKCdTd2lwZSBsZWZ0IGlzIGRldGVjdGVkLicpO1xuICogICAgIH1cbiAqICAgfSk7XG4gKiA8L3NjcmlwdD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2VzdHVyZURldGVjdG9yRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBHZXN0dXJlRGV0ZWN0b3IodGhpcywgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLkdlc3R1cmVEZXRlY3RvciA9IEdlc3R1cmVEZXRlY3RvckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1nZXN0dXJlLWRldGVjdG9yJywgR2VzdHVyZURldGVjdG9yRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxubGV0IGF1dG9QcmVmaXggPSAnZmEnOyAvLyBGSVhNRTogVG8gYmUgcmVtb3ZlZCBpbiB2M1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1pY29uXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIERpc3BsYXlzIGFuIGljb24uIFRoZSBmb2xsb3dpbmcgaWNvbiBzdWl0ZXMgYXJlIGF2YWlsYWJsZTpcbiAqXG4gKiAgICAgKiBbRm9udCBBd2Vzb21lXShodHRwczovL2ZvcnRhd2Vzb21lLmdpdGh1Yi5pby9Gb250LUF3ZXNvbWUvKVxuICogICAgICogW0lvbmljb25zXShodHRwOi8vaW9uaWNvbnMuY29tLylcbiAqICAgICAqIFtNYXRlcmlhbCBEZXNpZ24gSWNvbmljIEZvbnRdKGh0dHA6Ly96YXZvbG9rbG9tLmdpdGh1Yi5pby9tYXRlcmlhbC1kZXNpZ24taWNvbmljLWZvbnQvKVxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIHhBaHZnXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvaWNvblxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNjcm9zcy1wbGF0Zm9ybS1zdHlsaW5nLWF1dG9zdHlsaW5nIFtlbl1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1bamFdWy9qYV1cbiAqIEBndWlkZSBhcHBzaXplLmh0bWwjcmVtb3ZpbmctaWNvbi1wYWNrcyBbZW5dUmVtb3ZpbmcgaWNvbiBwYWNrcy5bL2VuXVtqYV1bL2phXVxuICogQGd1aWRlIGZhcS5odG1sI2hvdy1jYW4taS11c2UtY3VzdG9tLWljb24tcGFja3MgW2VuXUFkZGluZyBjdXN0b20gaWNvbiBwYWNrcy5bL2VuXVtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtaWNvblxuICogICBpY29uPVwibWQtY2FyXCJcbiAqICAgc2l6ZT1cIjIwcHhcIlxuICogICBzdHlsZT1cImNvbG9yOiByZWRcIj5cbiAqIDwvb25zLWljb24+XG4gKlxuICogPG9ucy1idXR0b24+XG4gKiAgIDxvbnMtaWNvbiBpY29uPVwibWQtY2FyXCI+PC9vbnMtaWNvbj5cbiAqICAgQ2FyXG4gKiA8L29ucy1idXR0b24+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEljb25FbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGljb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhlIGljb24gbmFtZS4gYFwibWQtXCJgIHByZWZpeCBmb3IgTWF0ZXJpYWwgSWNvbnMsIGBcImZhLVwiYCBmb3IgRm9udCBBd2Vzb21lIGFuZCBgXCJpb24tXCJgIHByZWZpeCBmb3IgSW9uaWNvbnMuXG4gICAqXG4gICAqICAgICBTZWUgYWxsIGF2YWlsYWJsZSBpY29ucyBvbiB0aGUgZWxlbWVudCBkZXNjcmlwdGlvbiAoYXQgdGhlIHRvcCkuXG4gICAqXG4gICAqICAgICBJY29ucyBjYW4gYWxzbyBiZSBzdHlsZWQgYmFzZWQgb24gbW9kaWZpZXIgcHJlc2VuY2UuIEFkZCBjb21tYS1zZXBhcmF0ZWQgaWNvbnMgd2l0aCBgXCJtb2RpZmllck5hbWU6XCJgIHByZWZpeC5cbiAgICpcbiAgICogICAgIFRoZSBjb2RlIGA8b25zLWljb24gaWNvbj1cImlvbi1lZGl0LCBtYXRlcmlhbDptZC1lZGl0XCI+PC9vbnMtaWNvbj5gIHdpbGwgZGlzcGxheSBgXCJtZC1lZGl0XCJgIGZvciBNYXRlcmlhbCBEZXNpZ24gYW5kIGBcImlvbi1lZGl0XCJgIGFzIHRoZSBkZWZhdWx0IGljb24uXG4gICAqXG4gICAqICAgICBgZmEtYCBwcmVmaXggaXMgYWRkZWQgYXV0b21hdGljYWxseSBpZiBub25lIGlzIHByb3ZpZGVkLiBDaGVjayBbU2VlIGFsc29dKCNzZWVhbHNvKSBzZWN0aW9uIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHNpemVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhlIHNpemVzIG9mIHRoZSBpY29uLiBWYWxpZCB2YWx1ZXMgYXJlIGxnLCAyeCwgM3gsIDR4LCA1eCwgb3IgaW4gdGhlIHNpemUgaW4gcGl4ZWxzLlxuICAgKiAgICAgSWNvbnMgY2FuIGFsc28gYmUgc3R5bGVkIGJhc2VkIG9uIG1vZGlmaWVyIHByZXNlbmNlLiBBZGQgY29tbWEtc2VwYXJhdGVkIGljb25zIHdpdGggYFwibW9kaWZpZXJOYW1lOlwiYCBwcmVmaXguXG4gICAqXG4gICAqICAgICBUaGUgY29kZTpcbiAgICpcbiAgICogICAgIGBgYFxuICAgKiAgICAgPG9ucy1pY29uXG4gICAqICAgICAgIGljb249XCJpb24tZWRpdFwiXG4gICAqICAgICAgIHNpemU9XCIzMnB4LCBtYXRlcmlhbDoyNHB4XCI+XG4gICAqICAgICA8L29ucy1pY29uPlxuICAgKiAgICAgYGBgXG4gICAqXG4gICAqICAgICB3aWxsIHJlbmRlciBhcyBhIGAyNHB4YCBpY29uIGlmIHRoZSBgXCJtYXRlcmlhbFwiYCBtb2RpZmllciBpcyBwcmVzZW50IGFuZCBgMzJweGAgb3RoZXJ3aXNlLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHJvdGF0ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dTnVtYmVyIG9mIGRlZ3JlZXMgdG8gcm90YXRlIHRoZSBpY29uLiBWYWxpZCB2YWx1ZXMgYXJlIDkwLCAxODAgYW5kIDI3MC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjgqTjgrPjg7PjgpLlm57ou6LjgZfjgabooajnpLrjgZfjgb7jgZnjgII5MCwgMTgwLCAyNzDjgYvjgonmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBmaXhlZC13aWR0aFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dV2hlbiB1c2VkIGluIGEgbGlzdCwgeW91IHdhbnQgdGhlIGljb25zIHRvIGhhdmUgdGhlIHNhbWUgd2lkdGggc28gdGhhdCB0aGV5IGFsaWduIHZlcnRpY2FsbHkgYnkgZGVmaW5pbmcgdGhpcyBhdHRyaWJ1dGUuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzcGluXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHdoZXRoZXIgdGhlIGljb24gc2hvdWxkIGJlIHNwaW5uaW5nLlsvZW5dXG4gICAqICAgW2phXeOCouOCpOOCs+ODs+OCkuWbnui7ouOBmeOCi+OBi+OBqeOBhuOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnaWNvbicsICdzaXplJywgJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHRoaXMuX2NsZWFuQ2xhc3NBdHRyaWJ1dGUobmFtZSA9PT0gJ2ljb24nID8gbGFzdCA6IHRoaXMuZ2V0QXR0cmlidXRlKCdpY29uJyksIG5hbWUgPT09ICdtb2RpZmllcicgPyBsYXN0IDogdW5kZWZpbmVkKTtcbiAgICB0aGlzLl91cGRhdGUoKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuICAgIHRoaXMuX3VwZGF0ZSgpO1xuICB9XG5cbiAgX3VwZGF0ZSgpIHtcbiAgICBjb25zdCB7Y2xhc3NMaXN0LCBzdHlsZX0gPSB0aGlzLl9idWlsZENsYXNzQW5kU3R5bGUodGhpcy5fcGFyc2VBdHRyKCdpY29uJyksIHRoaXMuX3BhcnNlQXR0cignc2l6ZScpKTtcbiAgICB1dGlsLmV4dGVuZCh0aGlzLnN0eWxlLCBzdHlsZSk7XG5cbiAgICBjbGFzc0xpc3QuZm9yRWFjaChjbGFzc05hbWUgPT4gdGhpcy5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSkpO1xuICB9XG5cbiAgX3BhcnNlQXR0cihhdHRyTmFtZSwgbW9kaWZpZXIgPSB0aGlzLmdldEF0dHJpYnV0ZSgnbW9kaWZpZXInKSB8fCAnJykge1xuICAgIGNvbnN0IGF0dHIgPSB0aGlzLmdldEF0dHJpYnV0ZShhdHRyTmFtZSkgfHwgYXR0ck5hbWUgfHwgJydcbiAgICBjb25zdCBwYXJ0cyA9IGF0dHIuc3BsaXQoL1xccyosXFxzKi8pO1xuICAgIGNvbnN0IGRlZiA9IHBhcnRzWzBdO1xuICAgIGxldCBtZCA9IHBhcnRzWzFdO1xuICAgIG1kID0gKG1kIHx8ICcnKS5zcGxpdCgvXFxzKjpcXHMqLyk7XG5cbiAgICByZXR1cm4gKG1vZGlmaWVyICYmIChSZWdFeHAoYChefFxcXFxzKykke21kWzBdfSgkfFxcXFxzKylgLCAnaScpLnRlc3QobW9kaWZpZXIpKSA/IG1kWzFdIDogZGVmKSB8fCAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgdW5uZWVkZWQgY2xhc3MgdmFsdWUuXG4gICAqL1xuICBfY2xlYW5DbGFzc0F0dHJpYnV0ZShsYXN0SWNvbiwgbGFzdE1vZGlmaWVyKSB7XG4gICAgY29uc3QgeyBjbGFzc05hbWUsIHByZWZpeCB9ID0gdGhpcy5fcHJlZml4SWNvbih0aGlzLl9wYXJzZUF0dHIobGFzdEljb24sIGxhc3RNb2RpZmllcikpO1xuICAgIGNvbnN0IGN1c3RvbVByZWZpeFJFID0gY2xhc3NOYW1lICE9PSBwcmVmaXggPyBgfCR7cHJlZml4fSR8JHtwcmVmaXh9LWAgOiBgfCR7Y2xhc3NOYW1lfSRgIHx8ICcnO1xuICAgIGNvbnN0IHJlID0gbmV3IFJlZ0V4cChgXihmYSR8ZmEtfGlvbi18em1kaSR8em1kaS18b25zLWljb24tLSR7Y3VzdG9tUHJlZml4UkV9KWApO1xuXG4gICAgdXRpbC5hcnJheUZyb20odGhpcy5jbGFzc0xpc3QpXG4gICAgICAuZmlsdGVyKGNsYXNzTmFtZSA9PiByZS50ZXN0KGNsYXNzTmFtZSkpXG4gICAgICAuZm9yRWFjaChjbGFzc05hbWUgPT4gdGhpcy5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSkpO1xuICB9XG5cbiAgX3ByZWZpeEljb24oaWNvbk5hbWUpIHtcbiAgICBjb25zdCBjbGFzc05hbWUgPSBhdXRvUHJlZml4ICsgKGF1dG9QcmVmaXggPyAnLScgOiAnJykgKyBpY29uTmFtZTtcbiAgICByZXR1cm4geyBjbGFzc05hbWUsIHByZWZpeDogY2xhc3NOYW1lLnNwbGl0KCctJylbMF0gfTtcbiAgfVxuXG4gIF9idWlsZENsYXNzQW5kU3R5bGUoaWNvbk5hbWUsIHNpemUpIHtcbiAgICBjb25zdCBjbGFzc0xpc3QgPSBbJ29ucy1pY29uJ107XG4gICAgY29uc3Qgc3R5bGUgPSB7fTtcblxuICAgIC8vIEljb25cbiAgICBpZiAoaWNvbk5hbWUuaW5kZXhPZignaW9uLScpID09PSAwKSB7XG4gICAgICBjbGFzc0xpc3QucHVzaChpY29uTmFtZSk7XG4gICAgICBjbGFzc0xpc3QucHVzaCgnb25zLWljb24tLWlvbicpO1xuICAgIH0gZWxzZSBpZiAoaWNvbk5hbWUuaW5kZXhPZignZmEtJykgPT09IDApIHtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKGljb25OYW1lKTtcbiAgICAgIC8vIGRlZmF1bHQgaWNvbiBzdHlsZSB0byBGb250IEF3ZXNvbWUgU29saWQgaWYgaWNvbiBzdHlsZSBpcyBub3Qgc3BlY2lmaWVkIGFscmVhZHlcbiAgICAgIGlmICghKHRoaXMuY2xhc3NMaXN0LmNvbnRhaW5zKCdmYXInKSB8fCB0aGlzLmNsYXNzTGlzdC5jb250YWlucygnZmFiJykgfHwgdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2ZhbCcpKSkge1xuICAgICAgICBjbGFzc0xpc3QucHVzaCgnZmEnKTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGljb25OYW1lLmluZGV4T2YoJ21kLScpID09PSAwKSAge1xuICAgICAgY2xhc3NMaXN0LnB1c2goJ3ptZGknKTtcbiAgICAgIGNsYXNzTGlzdC5wdXNoKCd6bWRpLScgKyBpY29uTmFtZS5zcGxpdCgvLSguKyk/LylbMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCB7IGNsYXNzTmFtZSwgcHJlZml4IH0gPSB0aGlzLl9wcmVmaXhJY29uKGljb25OYW1lKTtcbiAgICAgIHByZWZpeCAmJiBjbGFzc0xpc3QucHVzaChwcmVmaXgpO1xuICAgICAgY2xhc3NOYW1lICYmIGNsYXNzTGlzdC5wdXNoKGNsYXNzTmFtZSk7XG4gICAgfVxuXG4gICAgLy8gU2l6ZVxuICAgIGlmIChzaXplLm1hdGNoKC9eWzEtNV14fGxnJC8pKSB7XG4gICAgICBjbGFzc0xpc3QucHVzaCgnb25zLWljb24tLScgKyBzaXplKTtcbiAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ2ZvbnQtc2l6ZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZS5mb250U2l6ZSA9IHNpemU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGNsYXNzTGlzdDogY2xhc3NMaXN0LFxuICAgICAgc3R5bGU6IHN0eWxlXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBzZXRBdXRvUHJlZml4KHByZWZpeCkge1xuICAgIGF1dG9QcmVmaXggPSBwcmVmaXggPyAodHlwZW9mIHByZWZpeCA9PT0gJ3N0cmluZycgJiYgcHJlZml4IHx8ICdmYScpIDogJyc7XG4gIH1cbn1cblxub25zRWxlbWVudHMuSWNvbiA9IEljb25FbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtaWNvbicsIEljb25FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uL3V0aWwnO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uL3BsYXRmb3JtJztcblxuZXhwb3J0IGNsYXNzIExhenlSZXBlYXREZWxlZ2F0ZSB7XG5cbiAgY29uc3RydWN0b3IodXNlckRlbGVnYXRlLCB0ZW1wbGF0ZUVsZW1lbnQgPSBudWxsKSB7XG4gICAgaWYgKHR5cGVvZiB1c2VyRGVsZWdhdGUgIT09ICdvYmplY3QnIHx8IHVzZXJEZWxlZ2F0ZSA9PT0gbnVsbCkge1xuICAgICAgdXRpbC50aHJvdygnXCJkZWxlZ2F0ZVwiIHBhcmFtZXRlciBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICB0aGlzLl91c2VyRGVsZWdhdGUgPSB1c2VyRGVsZWdhdGU7XG5cbiAgICBpZiAoISh0ZW1wbGF0ZUVsZW1lbnQgaW5zdGFuY2VvZiBFbGVtZW50KSAmJiB0ZW1wbGF0ZUVsZW1lbnQgIT09IG51bGwpIHtcbiAgICAgIHV0aWwudGhyb3coJ1widGVtcGxhdGVFbGVtZW50XCIgcGFyYW1ldGVyIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgRWxlbWVudCBvciBudWxsJyk7XG4gICAgfVxuICAgIHRoaXMuX3RlbXBsYXRlRWxlbWVudCA9IHRlbXBsYXRlRWxlbWVudDtcbiAgfVxuXG4gIGdldCBpdGVtSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl91c2VyRGVsZWdhdGUuaXRlbUhlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHtCb29sZWFufVxuICAgKi9cbiAgaGFzUmVuZGVyRnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3VzZXJEZWxlZ2F0ZS5fcmVuZGVyIGluc3RhbmNlb2YgRnVuY3Rpb247XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7dm9pZH1cbiAgICovXG4gIF9yZW5kZXIoKSB7XG4gICAgdGhpcy5fdXNlckRlbGVnYXRlLl9yZW5kZXIuYXBwbHkodGhpcy5fdXNlckRlbGVnYXRlLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lIEEgZnVuY3Rpb24gdGhhdCB0YWtlIGl0ZW0gb2JqZWN0IGFzIHBhcmFtZXRlci5cbiAgICovXG4gIGxvYWRJdGVtRWxlbWVudChpbmRleCwgZG9uZSkge1xuICAgIGlmICh0aGlzLl91c2VyRGVsZWdhdGUubG9hZEl0ZW1FbGVtZW50IGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHRoaXMuX3VzZXJEZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQoaW5kZXgsIGRvbmUpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5fdXNlckRlbGVnYXRlLmNyZWF0ZUl0ZW1Db250ZW50KGluZGV4LCB0aGlzLl90ZW1wbGF0ZUVsZW1lbnQpO1xuICAgICAgaWYgKCEoZWxlbWVudCBpbnN0YW5jZW9mIEVsZW1lbnQpKSB7XG4gICAgICAgIHV0aWwudGhyb3coJ1wiY3JlYXRlSXRlbUNvbnRlbnRcIiBtdXN0IHJldHVybiBhbiBpbnN0YW5jZSBvZiBFbGVtZW50Jyk7XG4gICAgICB9XG5cbiAgICAgIGRvbmUoe2VsZW1lbnR9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKi9cbiAgY291bnRJdGVtcygpIHtcbiAgICBjb25zdCBjb3VudCA9IHRoaXMuX3VzZXJEZWxlZ2F0ZS5jb3VudEl0ZW1zKCk7XG4gICAgaWYgKHR5cGVvZiBjb3VudCAhPT0gJ251bWJlcicpIHtcbiAgICAgIHV0aWwudGhyb3coJ1wiY291bnRJdGVtc1wiIG11c3QgcmV0dXJuIGEgbnVtYmVyJyk7XG4gICAgfVxuICAgIHJldHVybiBjb3VudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtPYmplY3R9IGl0ZW1cbiAgICogQHBhcmFtIHtFbGVtZW50fSBpdGVtLmVsZW1lbnRcbiAgICovXG4gIHVwZGF0ZUl0ZW0oaW5kZXgsIGl0ZW0pIHtcbiAgICBpZiAodGhpcy5fdXNlckRlbGVnYXRlLnVwZGF0ZUl0ZW1Db250ZW50IGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHRoaXMuX3VzZXJEZWxlZ2F0ZS51cGRhdGVJdGVtQ29udGVudChpbmRleCwgaXRlbSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge051bWJlcn1cbiAgICovXG4gIGNhbGN1bGF0ZUl0ZW1IZWlnaHQoaW5kZXgpIHtcbiAgICBpZiAodGhpcy5fdXNlckRlbGVnYXRlLmNhbGN1bGF0ZUl0ZW1IZWlnaHQgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgY29uc3QgaGVpZ2h0ID0gdGhpcy5fdXNlckRlbGVnYXRlLmNhbGN1bGF0ZUl0ZW1IZWlnaHQoaW5kZXgpO1xuXG4gICAgICBpZiAodHlwZW9mIGhlaWdodCAhPT0gJ251bWJlcicpIHtcbiAgICAgICAgdXRpbC50aHJvdygnXCJjYWxjdWxhdGVJdGVtSGVpZ2h0XCIgbXVzdCByZXR1cm4gYSBudW1iZXInKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGhlaWdodDtcbiAgICB9XG5cbiAgICByZXR1cm4gMDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtPYmplY3R9IGl0ZW1cbiAgICovXG4gIGRlc3Ryb3lJdGVtKGluZGV4LCBpdGVtKSB7XG4gICAgaWYgKHRoaXMuX3VzZXJEZWxlZ2F0ZS5kZXN0cm95SXRlbSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB0aGlzLl91c2VyRGVsZWdhdGUuZGVzdHJveUl0ZW0oaW5kZXgsIGl0ZW0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcmV0dXJuIHt2b2lkfVxuICAgKi9cbiAgZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fdXNlckRlbGVnYXRlLmRlc3Ryb3kgaW5zdGFuY2VvZiBGdW5jdGlvbikge1xuICAgICAgdGhpcy5fdXNlckRlbGVnYXRlLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLl91c2VyRGVsZWdhdGUgPSB0aGlzLl90ZW1wbGF0ZUVsZW1lbnQgPSBudWxsO1xuICB9XG59XG5cbi8qKlxuICogVGhpcyBjbGFzcyBwcm92aWRlIGNvcmUgZnVuY3Rpb25zIGZvciBvbnMtbGF6eS1yZXBlYXQuXG4gKi9cbmV4cG9ydCBjbGFzcyBMYXp5UmVwZWF0UHJvdmlkZXIge1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHdyYXBwZXJFbGVtZW50XG4gICAqIEBwYXJhbSB7TGF6eVJlcGVhdERlbGVnYXRlfSBkZWxlZ2F0ZVxuICAgKi9cbiAgY29uc3RydWN0b3Iod3JhcHBlckVsZW1lbnQsIGRlbGVnYXRlKSB7XG4gICAgaWYgKCEoZGVsZWdhdGUgaW5zdGFuY2VvZiBMYXp5UmVwZWF0RGVsZWdhdGUpKSB7XG4gICAgICB1dGlsLnRocm93KCdcImRlbGVnYXRlXCIgcGFyYW1ldGVyIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgTGF6eVJlcGVhdERlbGVnYXRlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5fd3JhcHBlckVsZW1lbnQgPSB3cmFwcGVyRWxlbWVudDtcbiAgICB0aGlzLl9kZWxlZ2F0ZSA9IGRlbGVnYXRlO1xuICAgIHRoaXMuX2luc2VydEluZGV4ID0gKHRoaXMuX3dyYXBwZXJFbGVtZW50LmNoaWxkcmVuWzBdICYmIHRoaXMuX3dyYXBwZXJFbGVtZW50LmNoaWxkcmVuWzBdLnRhZ05hbWUgPT09ICdPTlMtTEFaWS1SRVBFQVQnKSA/IDEgOiAwO1xuXG4gICAgaWYgKHdyYXBwZXJFbGVtZW50LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ29ucy1saXN0Jykge1xuICAgICAgd3JhcHBlckVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnbGF6eS1saXN0Jyk7XG4gICAgfVxuXG4gICAgdGhpcy5fcGFnZUNvbnRlbnQgPSB0aGlzLl9maW5kUGFnZUNvbnRlbnRFbGVtZW50KHdyYXBwZXJFbGVtZW50KTtcblxuICAgIGlmICghdGhpcy5fcGFnZUNvbnRlbnQpIHtcbiAgICAgIHV0aWwudGhyb3coJ0xhenlSZXBlYXQgbXVzdCBiZSBkZXNjZW5kYW50IG9mIGEgUGFnZSBlbGVtZW50Jyk7XG4gICAgfVxuXG4gICAgdGhpcy5sYXN0U2Nyb2xsVG9wID0gdGhpcy5fcGFnZUNvbnRlbnQuc2Nyb2xsVG9wO1xuICAgIHRoaXMucGFkZGluZyA9IDA7XG4gICAgdGhpcy5fdG9wUG9zaXRpb25zID0gWzBdO1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMgPSB7fTtcblxuICAgIGlmICghdGhpcy5fZGVsZWdhdGUuaXRlbUhlaWdodCAmJiAhdGhpcy5fZGVsZWdhdGUuY2FsY3VsYXRlSXRlbUhlaWdodCgwKSkge1xuICAgICAgdGhpcy5fdW5rbm93bkl0ZW1IZWlnaHQgPSB0cnVlO1xuICAgIH1cblxuICAgIHRoaXMuX2FkZEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fb25DaGFuZ2UoKTtcbiAgfVxuXG4gIGdldCBwYWRkaW5nKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLl93cmFwcGVyRWxlbWVudC5zdHlsZS5wYWRkaW5nVG9wLCAxMCk7XG4gIH1cblxuICBzZXQgcGFkZGluZyhuZXdWYWx1ZSkge1xuICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LnN0eWxlLnBhZGRpbmdUb3AgPSBuZXdWYWx1ZSArICdweCc7XG4gIH1cblxuICBfZmluZFBhZ2VDb250ZW50RWxlbWVudCh3cmFwcGVyRWxlbWVudCkge1xuICAgIGNvbnN0IHBhZ2VDb250ZW50ID0gdXRpbC5maW5kUGFyZW50KHdyYXBwZXJFbGVtZW50LCAnLnBhZ2VfX2NvbnRlbnQnKTtcblxuICAgIGlmIChwYWdlQ29udGVudCkge1xuICAgICAgcmV0dXJuIHBhZ2VDb250ZW50O1xuICAgIH1cblxuICAgIGNvbnN0IHBhZ2UgPSB1dGlsLmZpbmRQYXJlbnQod3JhcHBlckVsZW1lbnQsICdvbnMtcGFnZScpO1xuICAgIGlmIChwYWdlKSB7XG4gICAgICBjb25zdCBjb250ZW50ID0gdXRpbC5maW5kQ2hpbGQocGFnZSwgJy5jb250ZW50Jyk7XG4gICAgICBpZiAoY29udGVudCkge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIF9jaGVja0l0ZW1IZWlnaHQoY2FsbGJhY2spIHtcbiAgICB0aGlzLl9kZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQoMCwgaXRlbSA9PiB7XG4gICAgICBpZiAoIXRoaXMuX3Vua25vd25JdGVtSGVpZ2h0KSB7XG4gICAgICAgIHV0aWwudGhyb3coJ0ludmFsaWQgc3RhdGUnKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuYXBwZW5kQ2hpbGQoaXRlbS5lbGVtZW50KTtcblxuICAgICAgY29uc3QgZG9uZSA9ICgpID0+IHtcbiAgICAgICAgdGhpcy5fZGVsZWdhdGUuZGVzdHJveUl0ZW0oMCwgaXRlbSk7XG4gICAgICAgIGl0ZW0uZWxlbWVudCAmJiBpdGVtLmVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIGRlbGV0ZSB0aGlzLl91bmtub3duSXRlbUhlaWdodDtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH07XG5cbiAgICAgIHRoaXMuX2l0ZW1IZWlnaHQgPSBpdGVtLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuXG4gICAgICBpZiAodGhpcy5faXRlbUhlaWdodCA+IDApIHtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIHJldHJ5IHRvIG1lYXN1cmUgb2Zmc2V0IGhlaWdodFxuICAgICAgLy8gZGlydHkgZml4IGZvciBhbmd1bGFyMiBkaXJlY3RpdmVcbiAgICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICAgIGl0ZW0uZWxlbWVudC5zdHlsZS52aXNpYmlsaXR5ID0gJ2hpZGRlbic7XG5cbiAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgIHRoaXMuX2l0ZW1IZWlnaHQgPSBpdGVtLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuICAgICAgICBpZiAodGhpcy5faXRlbUhlaWdodCA9PSAwKSB7XG4gICAgICAgICAgdXRpbC50aHJvdygnSW52YWxpZCBzdGF0ZTogXCJpdGVtSGVpZ2h0XCIgbXVzdCBiZSBncmVhdGVyIHRoYW4gemVybycpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LnN0eWxlLnZpc2liaWxpdHkgPSAnJztcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXQgc3RhdGljSXRlbUhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZGVsZWdhdGUuaXRlbUhlaWdodCB8fCB0aGlzLl9pdGVtSGVpZ2h0O1xuICB9XG4gIF9jb3VudEl0ZW1zKCkge1xuICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZS5jb3VudEl0ZW1zKCk7XG4gIH1cblxuICBfZ2V0SXRlbUhlaWdodChpKSB7XG4gICAgLy8gSXRlbSBpcyByZW5kZXJlZFxuICAgIGlmICh0aGlzLl9yZW5kZXJlZEl0ZW1zLmhhc093blByb3BlcnR5KGkpKSB7XG4gICAgICBpZiAoIXRoaXMuX3JlbmRlcmVkSXRlbXNbaV0uaGFzT3duUHJvcGVydHkoJ2hlaWdodCcpKSB7XG4gICAgICAgIHRoaXMuX3JlbmRlcmVkSXRlbXNbaV0uaGVpZ2h0ID0gdGhpcy5fcmVuZGVyZWRJdGVtc1tpXS5lbGVtZW50Lm9mZnNldEhlaWdodDtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0aGlzLl9yZW5kZXJlZEl0ZW1zW2ldLmhlaWdodDtcbiAgICB9XG5cbiAgICAvLyBJdGVtIGlzIG5vdCByZW5kZXJlZCwgc2Nyb2xsIHVwXG4gICAgaWYgKHRoaXMuX3RvcFBvc2l0aW9uc1tpICsgMV0gJiYgdGhpcy5fdG9wUG9zaXRpb25zW2ldKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdG9wUG9zaXRpb25zW2kgKyAxXSAtIHRoaXMuX3RvcFBvc2l0aW9uc1tpXTtcbiAgICB9XG4gICAgLy8gSXRlbSBpcyBub3QgcmVuZGVyZWQsIHNjcm9sbCBkb3duXG4gICAgcmV0dXJuIHRoaXMuc3RhdGljSXRlbUhlaWdodCB8fCB0aGlzLl9kZWxlZ2F0ZS5jYWxjdWxhdGVJdGVtSGVpZ2h0KGkpO1xuICB9XG5cbiAgX2NhbGN1bGF0ZVJlbmRlcmVkSGVpZ2h0KCkge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLl9yZW5kZXJlZEl0ZW1zKS5yZWR1Y2UoKGEsIGIpID0+IGEgKyB0aGlzLl9nZXRJdGVtSGVpZ2h0KCsoYikpLCAwKVxuICB9XG5cbiAgX29uQ2hhbmdlKCkge1xuICAgIHRoaXMuX3JlbmRlcigpO1xuICB9XG5cbiAgX2xhc3RJdGVtUmVuZGVyZWQoKSB7XG4gICAgcmV0dXJuIE1hdGgubWF4KC4uLk9iamVjdC5rZXlzKHRoaXMuX3JlbmRlcmVkSXRlbXMpKTtcbiAgfVxuXG4gIF9maXJzdEl0ZW1SZW5kZXJlZCgpIHtcbiAgICByZXR1cm4gTWF0aC5taW4oLi4uT2JqZWN0LmtleXModGhpcy5fcmVuZGVyZWRJdGVtcykpO1xuICB9XG5cbiAgcmVmcmVzaCgpIHtcbiAgICBjb25zdCBmb3JjZVJlbmRlciA9IHsgZm9yY2VTY3JvbGxEb3duOiB0cnVlIH07XG4gICAgY29uc3QgZmlyc3RJdGVtSW5kZXggPSB0aGlzLl9maXJzdEl0ZW1SZW5kZXJlZCgpO1xuXG4gICAgaWYgKHV0aWwuaXNJbnRlZ2VyKGZpcnN0SXRlbUluZGV4KSkge1xuICAgICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gdGhpcy5fdG9wUG9zaXRpb25zW2ZpcnN0SXRlbUluZGV4XSArIHRoaXMuX2NhbGN1bGF0ZVJlbmRlcmVkSGVpZ2h0KCkgKyAncHgnO1xuICAgICAgdGhpcy5wYWRkaW5nID0gdGhpcy5fdG9wUG9zaXRpb25zW2ZpcnN0SXRlbUluZGV4XTtcbiAgICAgIGZvcmNlUmVuZGVyLmZvcmNlRmlyc3RJbmRleCA9IGZpcnN0SXRlbUluZGV4O1xuICAgIH1cblxuICAgIHRoaXMuX3JlbW92ZUFsbEVsZW1lbnRzKCk7XG4gICAgdGhpcy5fcmVuZGVyKGZvcmNlUmVuZGVyKTtcbiAgICB0aGlzLl93cmFwcGVyRWxlbWVudC5zdHlsZS5oZWlnaHQgPSAnaW5oZXJpdCc7XG4gIH1cblxuICBfcmVuZGVyKHtmb3JjZVNjcm9sbERvd24gPSBmYWxzZSwgZm9yY2VGaXJzdEluZGV4LCBmb3JjZUxhc3RJbmRleH0gPSB7fSkge1xuICAgIGlmICh0aGlzLl91bmtub3duSXRlbUhlaWdodCkge1xuICAgICAgcmV0dXJuIHRoaXMuX2NoZWNrSXRlbUhlaWdodCh0aGlzLl9yZW5kZXIuYmluZCh0aGlzLCBhcmd1bWVudHNbMF0pKTtcbiAgICB9XG5cbiAgICBjb25zdCBpc1Njcm9sbFVwID0gIWZvcmNlU2Nyb2xsRG93biAmJiB0aGlzLmxhc3RTY3JvbGxUb3AgPiB0aGlzLl9wYWdlQ29udGVudC5zY3JvbGxUb3A7XG4gICAgdGhpcy5sYXN0U2Nyb2xsVG9wID0gdGhpcy5fcGFnZUNvbnRlbnQuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IGtlZXAgPSB7fTtcblxuICAgIGNvbnN0IG9mZnNldCA9IHRoaXMuX3dyYXBwZXJFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcDtcbiAgICBjb25zdCBsaW1pdCA9IDQgKiB3aW5kb3cuaW5uZXJIZWlnaHQgLSBvZmZzZXQ7XG4gICAgY29uc3QgY291bnQgPSB0aGlzLl9jb3VudEl0ZW1zKCk7XG5cbiAgICBjb25zdCBpdGVtcyA9IFtdO1xuICAgIGNvbnN0IHN0YXJ0ID0gZm9yY2VGaXJzdEluZGV4IHx8IE1hdGgubWF4KDAsIHRoaXMuX2NhbGN1bGF0ZVN0YXJ0SW5kZXgob2Zmc2V0KSAtIDMwKTsgLy8gUmVjYWxjdWxhdGUgZm9yIDAgb3IgdW5kZWZpbmVkXG4gICAgbGV0IGkgPSBzdGFydDtcblxuICAgIGZvciAobGV0IHRvcCA9IHRoaXMuX3RvcFBvc2l0aW9uc1tpXTsgaSA8IGNvdW50ICYmIHRvcCA8IGxpbWl0OyBpKyspIHtcbiAgICAgIGlmIChpID49IHRoaXMuX3RvcFBvc2l0aW9ucy5sZW5ndGgpIHsgLy8gcGVyZiBvcHRpbWl6YXRpb25cbiAgICAgICAgdGhpcy5fdG9wUG9zaXRpb25zLmxlbmd0aCArPSAxMDA7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3RvcFBvc2l0aW9uc1tpXSA9IHRvcDtcbiAgICAgIHRvcCArPSB0aGlzLl9nZXRJdGVtSGVpZ2h0KGkpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9kZWxlZ2F0ZS5oYXNSZW5kZXJGdW5jdGlvbiAmJiB0aGlzLl9kZWxlZ2F0ZS5oYXNSZW5kZXJGdW5jdGlvbigpKSB7XG4gICAgICByZXR1cm4gdGhpcy5fZGVsZWdhdGUuX3JlbmRlcihzdGFydCwgaSwgKCkgPT4ge1xuICAgICAgICB0aGlzLnBhZGRpbmcgPSB0aGlzLl90b3BQb3NpdGlvbnNbc3RhcnRdO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWYgKGlzU2Nyb2xsVXApIHtcbiAgICAgIGZvciAobGV0IGogPSBpIC0gMTsgaiA+PSBzdGFydDsgai0tKSB7XG4gICAgICAgIGtlZXBbal0gPSB0cnVlO1xuICAgICAgICB0aGlzLl9yZW5kZXJFbGVtZW50KGosIGlzU2Nyb2xsVXApO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCBsYXN0SW5kZXggPSBmb3JjZUxhc3RJbmRleCB8fCBNYXRoLm1heChpIC0gMSwgLi4uT2JqZWN0LmtleXModGhpcy5fcmVuZGVyZWRJdGVtcykpOyAvLyBSZWNhbGN1bGF0ZSBmb3IgMCBvciB1bmRlZmluZWRcbiAgICAgIGZvciAobGV0IGogPSBzdGFydDsgaiA8PSBsYXN0SW5kZXg7IGorKykge1xuICAgICAgICBrZWVwW2pdID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fcmVuZGVyRWxlbWVudChqLCBpc1Njcm9sbFVwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBPYmplY3Qua2V5cyh0aGlzLl9yZW5kZXJlZEl0ZW1zKS5mb3JFYWNoKGtleSA9PiBrZWVwW2tleV0gfHwgdGhpcy5fcmVtb3ZlRWxlbWVudChrZXksIGlzU2Nyb2xsVXApKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtCb29sZWFufSBpc1Njcm9sbFVwXG4gICAqL1xuICBfcmVuZGVyRWxlbWVudChpbmRleCwgaXNTY3JvbGxVcCkge1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLl9yZW5kZXJlZEl0ZW1zW2luZGV4XTtcbiAgICBpZiAoaXRlbSkge1xuICAgICAgdGhpcy5fZGVsZWdhdGUudXBkYXRlSXRlbShpbmRleCwgaXRlbSk7IC8vIHVwZGF0ZSBpZiBpdCBleGlzdHNcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB0aGlzLl9kZWxlZ2F0ZS5sb2FkSXRlbUVsZW1lbnQoaW5kZXgsIGl0ZW0gPT4ge1xuICAgICAgaWYgKGlzU2Nyb2xsVXApIHtcbiAgICAgICAgdGhpcy5fd3JhcHBlckVsZW1lbnQuaW5zZXJ0QmVmb3JlKGl0ZW0uZWxlbWVudCwgdGhpcy5fd3JhcHBlckVsZW1lbnQuY2hpbGRyZW5bdGhpcy5faW5zZXJ0SW5kZXhdKVxuICAgICAgICB0aGlzLnBhZGRpbmcgPSB0aGlzLl90b3BQb3NpdGlvbnNbaW5kZXhdO1xuICAgICAgICBpdGVtLmhlaWdodCA9IHRoaXMuX3RvcFBvc2l0aW9uc1tpbmRleCArIDFdIC0gdGhpcy5fdG9wUG9zaXRpb25zW2luZGV4XTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3dyYXBwZXJFbGVtZW50LmFwcGVuZENoaWxkKGl0ZW0uZWxlbWVudCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX3JlbmRlcmVkSXRlbXNbaW5kZXhdID0gaXRlbTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogQHBhcmFtIHtCb29sZWFufSBpc1Njcm9sbFVwXG4gICAqL1xuICBfcmVtb3ZlRWxlbWVudChpbmRleCwgaXNTY3JvbGxVcCA9IHRydWUpIHtcbiAgICBpbmRleCA9ICsoaW5kZXgpO1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLl9yZW5kZXJlZEl0ZW1zW2luZGV4XTtcbiAgICB0aGlzLl9kZWxlZ2F0ZS5kZXN0cm95SXRlbShpbmRleCwgaXRlbSk7XG5cbiAgICBpZiAoaXNTY3JvbGxVcCkge1xuICAgICAgdGhpcy5fdG9wUG9zaXRpb25zW2luZGV4ICsgMV0gPSB1bmRlZmluZWQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGFkZGluZyA9IHRoaXMucGFkZGluZyArIHRoaXMuX2dldEl0ZW1IZWlnaHQoaW5kZXgpO1xuICAgIH1cblxuICAgIGlmIChpdGVtLmVsZW1lbnQucGFyZW50RWxlbWVudCkge1xuICAgICAgaXRlbS5lbGVtZW50LnBhcmVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoaXRlbS5lbGVtZW50KTtcbiAgICB9XG5cbiAgICBkZWxldGUgdGhpcy5fcmVuZGVyZWRJdGVtc1tpbmRleF07XG4gIH1cblxuICBfcmVtb3ZlQWxsRWxlbWVudHMoKSB7XG4gICAgT2JqZWN0LmtleXModGhpcy5fcmVuZGVyZWRJdGVtcykuZm9yRWFjaChrZXkgPT4gdGhpcy5fcmVtb3ZlRWxlbWVudChrZXkpKTtcbiAgfVxuXG4gIF9yZWNhbGN1bGF0ZVRvcFBvc2l0aW9ucyhzdGFydCwgZW5kKSB7XG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0OyBpIDw9IGVuZDsgaSsrKSB7XG4gICAgICB0aGlzLl90b3BQb3NpdGlvbnNbaSArIDFdID0gdGhpcy5fdG9wUG9zaXRpb25zW2ldICsgdGhpcy5fZ2V0SXRlbUhlaWdodChpKTtcbiAgICB9XG4gIH1cblxuICBfY2FsY3VsYXRlU3RhcnRJbmRleChjdXJyZW50KSB7XG4gICAgY29uc3QgZmlyc3RJdGVtSW5kZXggPSB0aGlzLl9maXJzdEl0ZW1SZW5kZXJlZCgpO1xuICAgIGNvbnN0IGxhc3RJdGVtSW5kZXggPSB0aGlzLl9sYXN0SXRlbVJlbmRlcmVkKCk7XG5cbiAgICAvLyBGaXggZm9yIFNhZmFyaSBzY3JvbGwgYW5kIEFuZ3VsYXIgMlxuICAgIHRoaXMuX3JlY2FsY3VsYXRlVG9wUG9zaXRpb25zKGZpcnN0SXRlbUluZGV4LCBsYXN0SXRlbUluZGV4KTtcblxuICAgIGxldCBzdGFydCA9IDA7XG4gICAgbGV0IGVuZCA9IHRoaXMuX2NvdW50SXRlbXMoKSAtIDE7XG5cbiAgICAvLyBCaW5hcnkgc2VhcmNoIGZvciBpbmRleCBhdCB0b3Agb2Ygc2NyZWVuIHNvIHdlIGNhbiBzcGVlZCB1cCByZW5kZXJpbmcuXG4gICAgZm9yICg7Oykge1xuICAgICAgY29uc3QgbWlkZGxlID0gTWF0aC5mbG9vcigoc3RhcnQgKyBlbmQpIC8gMik7XG4gICAgICBjb25zdCB2YWx1ZSA9IGN1cnJlbnQgKyB0aGlzLl90b3BQb3NpdGlvbnNbbWlkZGxlXTtcblxuICAgICAgaWYgKGVuZCA8IHN0YXJ0KSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgICAgfSBlbHNlIGlmICh2YWx1ZSA8PSAwICYmIHZhbHVlICsgdGhpcy5fZ2V0SXRlbUhlaWdodChtaWRkbGUpID4gMCkge1xuICAgICAgICByZXR1cm4gbWlkZGxlO1xuICAgICAgfSBlbHNlIGlmIChpc05hTih2YWx1ZSkgfHwgdmFsdWUgPj0gMCkge1xuICAgICAgICBlbmQgPSBtaWRkbGUgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc3RhcnQgPSBtaWRkbGUgKyAxO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9kZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUpIHtcbiAgICBsZXQgdGltZW91dDtcbiAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICBjb25zdCBjYWxsTm93ID0gaW1tZWRpYXRlICYmICF0aW1lb3V0O1xuICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICAgICAgaWYgKGNhbGxOb3cpIHtcbiAgICAgICAgZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHRpbWVvdXQgPSBudWxsO1xuICAgICAgICAgIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgfSwgd2FpdCk7XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIF9kb3VibGVGaXJlT25Ub3VjaGVuZCgpIHtcbiAgICB0aGlzLl9yZW5kZXIoKTtcbiAgICB0aGlzLl9kZWJvdW5jZSh0aGlzLl9yZW5kZXIuYmluZCh0aGlzKSwgMTAwKTtcbiAgfVxuXG4gIF9hZGRFdmVudExpc3RlbmVycygpIHtcbiAgICB1dGlsLmJpbmRMaXN0ZW5lcnModGhpcywgWydfb25DaGFuZ2UnLCAnX2RvdWJsZUZpcmVPblRvdWNoZW5kJ10pO1xuXG4gICAgaWYgKHBsYXRmb3JtLmlzSU9TKCkpIHtcbiAgICAgIHRoaXMuX2JvdW5kT25DaGFuZ2UgPSB0aGlzLl9kZWJvdW5jZSh0aGlzLl9ib3VuZE9uQ2hhbmdlLCAzMCk7XG4gICAgfVxuXG4gICAgdGhpcy5fcGFnZUNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG5cbiAgICBpZiAocGxhdGZvcm0uaXNJT1MoKSkge1xuICAgICAgdXRpbC5hZGRFdmVudExpc3RlbmVyKHRoaXMuX3BhZ2VDb250ZW50LCAndG91Y2htb3ZlJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgeyBjYXB0dXJlOiB0cnVlLCBwYXNzaXZlOiB0cnVlIH0pO1xuICAgICAgdGhpcy5fcGFnZUNvbnRlbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLl9ib3VuZERvdWJsZUZpcmVPblRvdWNoZW5kLCB0cnVlKTtcbiAgICB9XG5cbiAgICB3aW5kb3cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG4gIH1cblxuICBfcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcGFnZUNvbnRlbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG5cbiAgICBpZiAocGxhdGZvcm0uaXNJT1MoKSkge1xuICAgICAgdXRpbC5yZW1vdmVFdmVudExpc3RlbmVyKHRoaXMuX3BhZ2VDb250ZW50LCAndG91Y2htb3ZlJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgeyBjYXB0dXJlOiB0cnVlLCBwYXNzaXZlOiB0cnVlIH0pO1xuICAgICAgdGhpcy5fcGFnZUNvbnRlbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLl9ib3VuZERvdWJsZUZpcmVPblRvdWNoZW5kLCB0cnVlKTtcbiAgICB9XG5cbiAgICB3aW5kb3cuZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgdHJ1ZSk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHRoaXMuX3JlbW92ZUFsbEVsZW1lbnRzKCk7XG4gICAgdGhpcy5fZGVsZWdhdGUuZGVzdHJveSgpO1xuICAgIHRoaXMuX3BhcmVudEVsZW1lbnQgPSB0aGlzLl9kZWxlZ2F0ZSA9IHRoaXMuX3JlbmRlcmVkSXRlbXMgPSBudWxsO1xuICAgIHRoaXMuX3JlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cbn1cblxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgeyBMYXp5UmVwZWF0RGVsZWdhdGUsIExhenlSZXBlYXRQcm92aWRlciB9IGZyb20gJy4uL29ucy9pbnRlcm5hbC9sYXp5LXJlcGVhdCc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWxhenktcmVwZWF0XG4gKiBAY2F0ZWdvcnkgbGlzdFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBVc2luZyB0aGlzIGNvbXBvbmVudCBhIGxpc3Qgd2l0aCBtaWxsaW9ucyBvZiBpdGVtcyBjYW4gYmUgcmVuZGVyZWQgd2l0aG91dCBhIGRyb3AgaW4gcGVyZm9ybWFuY2UuXG4gKiAgICAgSXQgZG9lcyB0aGF0IGJ5IFwibGF6aWx5XCIgbG9hZGluZyBlbGVtZW50cyBpbnRvIHRoZSBET00gd2hlbiB0aGV5IGNvbWUgaW50byB2aWV3IGFuZFxuICogICAgIHJlbW92aW5nIGl0ZW1zIGZyb20gdGhlIERPTSB3aGVuIHRoZXkgYXJlIG5vdCB2aXNpYmxlLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg44GT44Gu44Kz44Oz44Od44O844ON44Oz44OI5YaF44Gn5o+P55S744GV44KM44KL44Ki44Kk44OG44Og44GuRE9N6KaB57Sg44Gu6Kqt44G/6L6844G/44Gv44CB55S76Z2i44Gr6KaL44GI44Gd44GG44Gr44Gq44Gj44Gf5pmC44G+44Gn6Ieq5YuV55qE44Gr6YGF5bu244GV44KM44CBXG4gKiAgICAg55S76Z2i44GL44KJ6KaL44GI44Gq44GP44Gq44Gj44Gf5aC05ZCI44Gr44Gv44Gd44Gu6KaB57Sg44Gv5YuV55qE44Gr44Ki44Oz44Ot44O844OJ44GV44KM44G+44GZ44CCXG4gKiAgICAg44GT44Gu44Kz44Oz44Od44O844ON44Oz44OI44KS5L2/44GG44GT44Go44Gn44CB44OR44OV44Kp44O844Oe44Oz44K544KS5Yqj5YyW44GV44Gb44KL44GT44Go54Sh44GX44Gr5beo5aSn44Gq5pWw44Gu6KaB57Sg44KS5o+P55S744Gn44GN44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBRd3JHQm1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9sYXp5LXJlcGVhdFxuICogQHNlZWFsc28gb25zLWxpc3RcbiAqICAgW2VuXVRoZSBgPG9ucy1saXN0PmAgZWxlbWVudCBpcyB1c2VkIHRvIHJlbmRlciBhIGxpc3QuWy9lbl1cbiAqICAgW2phXWA8b25zLWxpc3Q+YOimgee0oOOBr+ODquOCueODiOOCkuaPj+eUu+OBmeOCi+OBruOBq+S9v+OCj+OCjOOBvuOBmeOAglsvamFdXG4gKiBAZXhhbXBsZVxuICogPHNjcmlwdD5cbiAqICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbigpIHtcbiAqICAgICB2YXIgbGF6eVJlcGVhdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNsaXN0Jyk7XG4gKiAgICAgbGF6eVJlcGVhdC5kZWxlZ2F0ZSA9IHtcbiAqICAgICAgY3JlYXRlSXRlbUNvbnRlbnQ6IGZ1bmN0aW9uKGksIHRlbXBsYXRlKSB7XG4gKiAgICAgICAgdmFyIGRvbSA9IHRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAqICAgICAgICBkb20uaW5uZXJUZXh0ID0gaTtcbiAqXG4gKiAgICAgICAgcmV0dXJuIGRvbTtcbiAqICAgICAgfSxcbiAqICAgICAgY291bnRJdGVtczogZnVuY3Rpb24oKSB7XG4gKiAgICAgICAgcmV0dXJuIDEwMDAwMDAwO1xuICogICAgICB9LFxuICogICAgICBkZXN0cm95SXRlbTogZnVuY3Rpb24oaW5kZXgsIGl0ZW0pIHtcbiAqICAgICAgICBjb25zb2xlLmxvZygnRGVzdHJveWVkIGl0ZW0gd2l0aCBpbmRleDogJyArIGluZGV4KTtcbiAqICAgICAgfVxuICogICAgIH07XG4gKiAgIH0pO1xuICogPC9zY3JpcHQ+XG4gKlxuICogPG9ucy1saXN0IGlkPVwibGlzdFwiPlxuICogICA8b25zLWxhenktcmVwZWF0PlxuICogICAgIDxvbnMtbGlzdC1pdGVtPjwvb25zLWxpc3QtaXRlbT5cbiAqICAgPC9vbnMtbGF6eS1yZXBlYXQ+XG4gKiA8L29ucy1saXN0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMYXp5UmVwZWF0RWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAvLyBub3QgdmVyeSBnb29kIGlkZWEgYW5kIGFsc28gbm90IGRvY3VtZW50ZWRcbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2RlbGVnYXRlJykpIHtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSB3aW5kb3dbdGhpcy5nZXRBdHRyaWJ1dGUoJ2RlbGVnYXRlJyldO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGVsZWdhdGVcbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSBhIGRlbGVnYXRlIG9iamVjdCB0byBsb2FkIGFuZCB1bmxvYWQgaXRlbSBlbGVtZW50cy5bL2VuXVxuICAgKiAgW2phXeimgee0oOOBruODreODvOODieOAgeOCouODs+ODreODvOODieOBquOBqeOBruWHpueQhuOCkuWnlOitsuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGVsZWdhdGUuY3JlYXRlSXRlbUNvbnRlbnRcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBUaGlzIGZ1bmN0aW9uIHNob3VsZCByZXR1cm4gYSBgSFRNTEVsZW1lbnRgLlxuICAgKlxuICAgKiAgICAgVG8gaGVscCByZW5kZXJpbmcgdGhlIGVsZW1lbnQsIHRoZSBjdXJyZW50IGluZGV4IGFuZCBhIHRlbXBsYXRlIGlzIHN1cHBsaWVkIGFzIGFyZ3VtZW50cy4gVGhlIHRlbXBsYXRlIGlzIHRoZSBpbml0aWFsIGNvbnRlbnQgb2YgdGhlIGA8b25zLWxhenktcmVwZWF0PmAgZWxlbWVudC5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOOBk+OBrumWouaVsOOBr2BIVE1MRWxlbWVudGDjgpLov5TjgZfjgabjgY/jgaDjgZXjgYTjgIJcbiAgICogICAgIOimgee0oOOCkueUn+aIkOOBl+OChOOBmeOBj+OBmeOCi+OBn+OCgeOBq+OAgeePvuWcqOOBruOCouOCpOODhuODoOOBruOCpOODs+ODh+ODg+OCr+OCueOBqOODhuODs+ODl+ODrOODvOODiOOBjOW8leaVsOOBq+a4oeOBleOCjOOBvuOBmeOAglxuICAgKiAgICAg44GT44Gu44OG44Oz44OX44Os44O844OI44Gv44CBYDxvbnMtbGF6eS1yZXBlYXQ+YOimgee0oOOBruOCs+ODs+ODhuODs+ODhOOBjOa4oeOBleOCjOOBvuOBmeOAglxuICAgKiAgIFsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGVsZWdhdGUuY291bnRJdGVtc1xuICAgKiBAdHlwZSB7RnVuY3Rpb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG91bGQgcmV0dXJuIHRoZSBudW1iZXIgb2YgaXRlbXMgaW4gdGhlIGxpc3QuWy9lbl1cbiAgICogICBbamFd44Oq44K544OI5YaF44Gu44Ki44Kk44OG44Og5pWw44KS6L+U44GX44Gm44GP44Gg44GV44GE44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkZWxlZ2F0ZS5jYWxjdWxhdGVJdGVtSGVpZ2h0XG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgU2hvdWxkIHJldHVybiB0aGUgaGVpZ2h0IG9mIGFuIGl0ZW0uIFRoZSBpbmRleCBpcyBwcm92aWRlZCBhcyBhbiBhcmd1bWVudC5cbiAgICpcbiAgICogICAgIFRoaXMgaXMgaW1wb3J0YW50IHdoZW4gcmVuZGVyaW5nIGxpc3RzIHdoZXJlIHRoZSBpdGVtcyBoYXZlIGRpZmZlcmVudCBoZWlnaHQuXG4gICAqXG4gICAqICAgICBUaGUgZnVuY3Rpb24gaXMgb3B0aW9uYWwgYW5kIGlmIGl0IGlzbid0IHByZXNlbnQgdGhlIGhlaWdodCBvZiB0aGUgZmlyc3QgaXRlbSB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgY2FsY3VsYXRlZCBhbmQgdXNlZCBmb3IgYWxsIG90aGVyIGl0ZW1zLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVxuICAgKiAgICAg44Ki44Kk44OG44Og44Gu6auY44GVKOODlOOCr+OCu+ODqynjgpLov5TjgZfjgabjgY/jgaDjgZXjgYTjgILjgqLjgqTjg4bjg6Djga7jgqTjg7Pjg4fjg4Pjgq/jgrnlgKTjga/lvJXmlbDjgafmuKHjgZXjgozjgb7jgZnjgIJcbiAgICogICAgIOOBk+OBrumWouaVsOOBr+OAgeOBneOCjOOBnuOCjOOBruOCouOCpOODoOOBjOmBleOBo+OBn+mrmOOBleOCkuaMgeOBpOODquOCueODiOOCkuODrOODs+ODgOODquODs+OCsOOBmeOCi+mam+OBq+mHjeimgeOBp+OBmeOAglxuICAgKiAgICAg44GT44Gu6Zai5pWw44Gv44Kq44OX44K344On44OK44Or44Gn44GZ44CC44KC44GX44GT44Gu6Zai5pWw44GM54Sh44GE5aC05ZCI44Gr44Gv44CBXG4gICAqICAgICDmnIDliJ3jga7jgqLjgqTjg4bjg6Djga7pq5jjgZXjgYzku5bjga7jgZnjgbnjgabjga7jgqLjgqTjg4bjg6Djga7pq5jjgZXjgajjgZfjgabliKnnlKjjgZXjgozjgb7jgZnjgIJcbiAgICogICBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRlbGVnYXRlLmRlc3Ryb3lJdGVtXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhpcyBmdW5jdGlvbiBpcyB1c2VkIGNhbGxlZCB3aGVuIGFuIGl0ZW0gaXMgcmVtb3ZlZCBmcm9tIHRoZSBET00uIFRoZSBpbmRleCBhbmQgRE9NIGVsZW1lbnQgaXMgcHJvdmlkZWQgYXMgYXJndW1lbnRzLlxuICAgKlxuICAgKiAgICAgVGhlIGZ1bmN0aW9uIGlzIG9wdGlvbmFsIGJ1dCBtYXkgYmUgaW1wb3J0YW50IGluIG9yZGVyIHRvIGF2b2lkIG1lbW9yeSBsZWFrcy5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOOBk+OBrumWouaVsOOBr+OAgeOBguOCi+OCouOCpOODhuODoOOBjERPTeODhOODquODvOOBi+OCiemZpOOBi+OCjOOBn+aZguOBq+WRvOOBs+WHuuOBleOCjOOBvuOBmeOAglxuICAgKiAgICAg44Ki44Kk44OG44Og44Gu44Kk44Oz44OH44OD44Kv44K55YCk44GoRE9N6KaB57Sg44GM5byV5pWw44Go44GX44Gm5rih44GV44KM44G+44GZ44CCXG4gICAqICAgICDjgZPjga7plqLmlbDjga/jgqrjg5fjgrfjg6fjg4rjg6vjgafjgZnjgYzjgIHlkITjgqLjgqTjg4bjg6Djga7lvozlh6bnkIbjgYzlv4XopoHjgarloLTlkIjjgavjga/jg6Hjg6Ljg6rjg7zjg6rjg7zjgq/jgpLpgb/jgZHjgovjgZ/jgoHjgavph43opoHjgafjgZnjgIJcbiAgICogICBbL2phXVxuICAgKi9cblxuICBzZXQgZGVsZWdhdGUodXNlckRlbGVnYXRlKSB7XG4gICAgdGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyICYmIHRoaXMuX2xhenlSZXBlYXRQcm92aWRlci5kZXN0cm95KCk7XG5cbiAgICBpZiAoIXRoaXMuX3RlbXBsYXRlRWxlbWVudCAmJiB0aGlzLmNoaWxkcmVuWzBdKSB7XG4gICAgICB0aGlzLl90ZW1wbGF0ZUVsZW1lbnQgPSB0aGlzLnJlbW92ZUNoaWxkKHRoaXMuY2hpbGRyZW5bMF0pO1xuICAgIH1cblxuICAgIGNvbnN0IGRlbGVnYXRlID0gbmV3IExhenlSZXBlYXREZWxlZ2F0ZSh1c2VyRGVsZWdhdGUsIHRoaXMuX3RlbXBsYXRlRWxlbWVudCB8fCBudWxsKTtcbiAgICB0aGlzLl9sYXp5UmVwZWF0UHJvdmlkZXIgPSBuZXcgTGF6eVJlcGVhdFByb3ZpZGVyKHRoaXMucGFyZW50RWxlbWVudCwgZGVsZWdhdGUpO1xuICB9XG5cbiAgZ2V0IGRlbGVnYXRlKCkge1xuICAgIHV0aWwudGhyb3coJ05vIGRlbGVnYXRlIGdldHRlcicpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVmcmVzaFxuICAgKiBAc2lnbmF0dXJlIHJlZnJlc2goKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVmcmVzaCB0aGUgbGlzdC4gVXNlIHRoaXMgbWV0aG9kIHdoZW4gdGhlIGRhdGEgaGFzIGNoYW5nZWQuWy9lbl1cbiAgICogICBbamFd44Oq44K544OI44KS5pu05paw44GX44G+44GZ44CC44KC44GX44OH44O844K/44GM5aSJ44KP44Gj44Gf5aC05ZCI44Gr44Gv44GT44Gu44Oh44K944OD44OJ44KS5L2/44Gj44Gm44GP44Gg44GV44GE44CCWy9qYV1cbiAgICovXG4gIHJlZnJlc2goKSB7XG4gICAgdGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyICYmIHRoaXMuX2xhenlSZXBlYXRQcm92aWRlci5yZWZyZXNoKCk7XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge31cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAodGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyKSB7XG4gICAgICB0aGlzLl9sYXp5UmVwZWF0UHJvdmlkZXIuZGVzdHJveSgpO1xuICAgICAgdGhpcy5fbGF6eVJlcGVhdFByb3ZpZGVyID0gbnVsbDtcbiAgICB9XG4gIH1cblxufVxuXG5pbnRlcm5hbC5MYXp5UmVwZWF0RGVsZWdhdGUgPSBMYXp5UmVwZWF0RGVsZWdhdGU7XG5pbnRlcm5hbC5MYXp5UmVwZWF0UHJvdmlkZXIgPSBMYXp5UmVwZWF0UHJvdmlkZXI7XG5cbm9uc0VsZW1lbnRzLkxhenlSZXBlYXQgPSBMYXp5UmVwZWF0RWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWxhenktcmVwZWF0JywgTGF6eVJlcGVhdEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbGlzdC1oZWFkZXInO1xuY29uc3Qgc2NoZW1lID0geycnOiAnbGlzdC1oZWFkZXItLSonfTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtbGlzdC1oZWFkZXJcbiAqIEBjYXRlZ29yeSBsaXN0XG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUhlYWRlciBlbGVtZW50IGZvciBsaXN0IGl0ZW1zLiBNdXN0IGJlIHB1dCBpbnNpZGUgdGhlIGA8b25zLWxpc3Q+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXeODquOCueODiOimgee0oOOBq+S9v+eUqOOBmeOCi+ODmOODg+ODgOODvOeUqOOCs+ODs+ODneODvOODjeODs+ODiOOAgm9ucy1saXN044Go5YWx44Gr5L2/55So44GX44G+44GZ44CCWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1saXN0XG4gKiAgIFtlbl1UaGUgYDxvbnMtbGlzdD5gIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdC1pdGVtXG4gKiAgIFtlbl1UaGUgYDxvbnMtbGlzdC1pdGVtPmAgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1saXN0LWl0ZW3jgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGNvZGVwZW4geXhjQ3RcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9saXN0XG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXURpc3BsYXkgYSBNYXRlcmlhbCBEZXNpZ24gbGlzdCBoZWFkZXIuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1saXN0PlxuICogICA8b25zLWxpc3QtaGVhZGVyPkhlYWRlciBUZXh0PC9vbnMtbGlzdC1oZWFkZXI+XG4gKiAgIDxvbnMtbGlzdC1pdGVtPkl0ZW08L29ucy1saXN0LWl0ZW0+XG4gKiAgIDxvbnMtbGlzdC1pdGVtPkl0ZW08L29ucy1saXN0LWl0ZW0+XG4gKiA8L29ucy1saXN0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0SGVhZGVyRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGxpc3QgaGVhZGVyLlsvZW5dXG4gICAqICAgW2phXeODmOODg+ODgOODvOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9jb21waWxlKCk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbm9uc0VsZW1lbnRzLkxpc3RIZWFkZXIgPSBMaXN0SGVhZGVyRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWxpc3QtaGVhZGVyJywgTGlzdEhlYWRlckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbGlzdC10aXRsZSc7XG5jb25zdCBzY2hlbWUgPSB7Jyc6ICdsaXN0LXRpdGxlLS0qJ307XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWxpc3QtdGl0bGVcbiAqIEBjYXRlZ29yeSBsaXN0XG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJlcHJlc2VudHMgYSBsaXN0IHRpdGxlLlsvZW5dXG4gKiAgIFtqYV3jg6rjgrnjg4jjga7jgr/jgqTjg4jjg6vjgpLooajnj77jgZfjgb7jgZnjgIJbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtbGlzdC10aXRsZT5MaXN0IFRpdGxlPC9vbnMtbGlzdC10aXRsZT5cbiAqIDxvbnMtbGlzdD5cbiAqICAgPG9ucy1saXN0LWl0ZW0+SXRlbTwvb25zLWxpc3QtaXRlbT5cbiAqIDwvb25zLWxpc3Q+XG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXURpc3BsYXkgYSBNYXRlcmlhbCBEZXNpZ24gbGlzdCB0aXRsZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0VGl0bGVFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9jb21waWxlKCk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG59XG5cbm9uc0VsZW1lbnRzLkxpc3RUaXRsZSA9IExpc3RUaXRsZUVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1saXN0LXRpdGxlJywgTGlzdFRpdGxlRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxOCBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InXG5cbmV4cG9ydCBjbGFzcyBMaXN0SXRlbUFuaW1hdG9yIGV4dGVuZHMgQmFzZUFuaW1hdG9yIHtcbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIHNob3dFeHBhbnNpb24obGlzdEl0ZW0sIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIGhpZGVFeHBhbnNpb24obGlzdEl0ZW0sIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2xpZGVMaXN0SXRlbUFuaW1hdG9yIGV4dGVuZHMgTGlzdEl0ZW1BbmltYXRvciB7XG5cbiAgc2hvd0V4cGFuc2lvbihsaXN0SXRlbSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLl9hbmltYXRlRXhwYW5zaW9uKGxpc3RJdGVtLCB0cnVlLCBjYWxsYmFjayk7XG4gIH1cblxuICBoaWRlRXhwYW5zaW9uKGxpc3RJdGVtLCBjYWxsYmFjaykge1xuICAgIHRoaXMuX2FuaW1hdGVFeHBhbnNpb24obGlzdEl0ZW0sIGZhbHNlLCBjYWxsYmFjayk7XG4gIH1cblxuICBfYW5pbWF0ZUV4cGFuc2lvbihsaXN0SXRlbSwgc2hvdWxkT3BlbiwgY2FsbGJhY2spIHtcbiAgICAvLyBUbyBhbmltYXRlIHRoZSBvcGVuaW5nIG9mIHRoZSBleHBhbnNpb24gcGFuZWwgY29ycmVjdGx5LCB3ZSBuZWVkIHRvIGtub3cgaXRzXG4gICAgLy8gaGVpZ2h0LiBUbyBjYWxjdWxhdGUgdGhpcywgd2Ugc2V0IGl0cyBoZWlnaHQgdG8gYXV0bywgYW5kIHRoZW4gZ2V0IHRoZSBjb21wdXRlZFxuICAgIC8vIGhlaWdodCBhbmQgcGFkZGluZy4gT25jZSB0aGlzIGlzIGRvbmUsIHdlIHNldCB0aGUgaGVpZ2h0IGJhY2sgdG8gaXRzIG9yaWdpbmFsIHZhbHVlLlxuICAgIGNvbnN0IG9sZEhlaWdodCA9IGxpc3RJdGVtLmV4cGFuZGFibGVDb250ZW50LnN0eWxlLmhlaWdodDtcbiAgICBjb25zdCBvbGREaXNwbGF5ID0gbGlzdEl0ZW0uZXhwYW5kYWJsZUNvbnRlbnQuc3R5bGUuZGlzcGxheTtcbiAgICBsaXN0SXRlbS5leHBhbmRhYmxlQ29udGVudC5zdHlsZS5oZWlnaHQgPSAnYXV0byc7XG4gICAgbGlzdEl0ZW0uZXhwYW5kYWJsZUNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgY29uc3QgY29tcHV0ZWRTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGxpc3RJdGVtLmV4cGFuZGFibGVDb250ZW50KTtcblxuICAgIGNvbnN0IGV4cGFuc2lvbk9wZW5UcmFuc2l0aW9uID0gW1xuICAgICAgeyBoZWlnaHQ6IDAsIHBhZGRpbmdUb3A6IDAsIHBhZGRpbmdCb3R0b206IDAgfSxcbiAgICAgIHtcbiAgICAgICAgaGVpZ2h0OiBjb21wdXRlZFN0eWxlLmhlaWdodCxcbiAgICAgICAgcGFkZGluZ1RvcDogY29tcHV0ZWRTdHlsZS5wYWRkaW5nVG9wLFxuICAgICAgICBwYWRkaW5nQm90dG9tOiBjb21wdXRlZFN0eWxlLnBhZGRpbmdCb3R0b20sXG4gICAgICB9XG4gICAgXTtcbiAgICBjb25zdCBpY29uT3BlblRyYW5zaXRpb24gPSBbe3RyYW5zZm9ybTogJ3JvdGF0ZSg0NWRlZyknfSwge3RyYW5zZm9ybTogJ3JvdGF0ZSgyMjVkZWcpJ31dO1xuXG4gICAgLy8gTm93IHRoYXQgd2UgaGF2ZSB0aGUgdmFsdWVzIHdlIG5lZWQsIHJlc2V0IHRoZSBoZWlnaHQgYmFjayB0byBpdHMgb3JpZ2luYWwgc3RhdGVcbiAgICBsaXN0SXRlbS5leHBhbmRhYmxlQ29udGVudC5zdHlsZS5oZWlnaHQgPSBvbGRIZWlnaHQ7XG5cbiAgICBhbmltaXQobGlzdEl0ZW0uZXhwYW5kYWJsZUNvbnRlbnQsIHsgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sIHByb3BlcnR5OiAnaGVpZ2h0IHBhZGRpbmctdG9wIHBhZGRpbmctYm90dG9tJyB9KVxuICAgICAgLmRlZmF1bHQoLi4uKHNob3VsZE9wZW4gPyBleHBhbnNpb25PcGVuVHJhbnNpdGlvbiA6IGV4cGFuc2lvbk9wZW5UcmFuc2l0aW9uLnJldmVyc2UoKSkpXG4gICAgICAucGxheSgoKSA9PiB7XG4gICAgICAgIGxpc3RJdGVtLmV4cGFuZGFibGVDb250ZW50LnN0eWxlLmRpc3BsYXkgPSBvbGREaXNwbGF5O1xuICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgfSk7XG5cbiAgICBpZiAobGlzdEl0ZW0uZXhwYW5kQ2hldnJvbikge1xuICAgICAgYW5pbWl0KGxpc3RJdGVtLmV4cGFuZENoZXZyb24sIHsgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sIHByb3BlcnR5OiAndHJhbnNmb3JtJyB9KVxuICAgICAgICAuZGVmYXVsdCguLi4oc2hvdWxkT3BlbiA/IGljb25PcGVuVHJhbnNpdGlvbiA6IGljb25PcGVuVHJhbnNpdGlvbi5yZXZlcnNlKCkpKVxuICAgICAgICAucGxheSgpO1xuICAgIH1cbiAgfVxuXG59IiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uLy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IHN0eWxlciBmcm9tICcuLi8uLi9vbnMvc3R5bGVyJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IHsgTGlzdEl0ZW1BbmltYXRvciwgU2xpZGVMaXN0SXRlbUFuaW1hdG9yIH0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbGlzdC1pdGVtJztcbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5saXN0LWl0ZW0nOiAnbGlzdC1pdGVtLS0qJyxcbiAgJy5saXN0LWl0ZW1fX2xlZnQnOiAnbGlzdC1pdGVtLS0qX19sZWZ0JyxcbiAgJy5saXN0LWl0ZW1fX2NlbnRlcic6ICdsaXN0LWl0ZW0tLSpfX2NlbnRlcicsXG4gICcubGlzdC1pdGVtX19yaWdodCc6ICdsaXN0LWl0ZW0tLSpfX3JpZ2h0JyxcbiAgJy5saXN0LWl0ZW1fX2xhYmVsJzogJ2xpc3QtaXRlbS0tKl9fbGFiZWwnLFxuICAnLmxpc3QtaXRlbV9fdGl0bGUnOiAnbGlzdC1pdGVtLS0qX190aXRsZScsXG4gICcubGlzdC1pdGVtX19zdWJ0aXRsZSc6ICdsaXN0LWl0ZW0tLSpfX3N1YnRpdGxlJyxcbiAgJy5saXN0LWl0ZW1fX3RodW1ibmFpbCc6ICdsaXN0LWl0ZW0tLSpfX3RodW1ibmFpbCcsXG4gICcubGlzdC1pdGVtX19pY29uJzogJ2xpc3QtaXRlbS0tKl9faWNvbidcbn07XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogU2xpZGVMaXN0SXRlbUFuaW1hdG9yLFxuICAnbm9uZSc6IExpc3RJdGVtQW5pbWF0b3Jcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWxpc3QtaXRlbVxuICogQGNhdGVnb3J5IGxpc3RcbiAqIEBtb2RpZmllciB0YXBwYWJsZVxuICogICBbZW5dTWFrZSB0aGUgbGlzdCBpdGVtIGNoYW5nZSBhcHBlYXJhbmNlIHdoZW4gaXQncyB0YXBwZWQuIE9uIGlPUyBpdCBpcyBiZXR0ZXIgdG8gdXNlIHRoZSBcInRhcHBhYmxlXCIgYW5kIFwidGFwLWJhY2tncm91bmQtY29sb3JcIiBhdHRyaWJ1dGUgZm9yIGJldHRlciBiZWhhdmlvciB3aGVuIHNjcm9sbGluZy5bL2VuXVxuICogICBbamFd44K/44OD44OX44KE44Kv44Oq44OD44Kv44GX44Gf5pmC44Gr5Yq55p6c44GM6KGo56S644GV44KM44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBjaGV2cm9uXG4gKiAgIFtlbl1EaXNwbGF5IGEgY2hldnJvbiBhdCB0aGUgcmlnaHQgZW5kIG9mIHRoZSBsaXN0IGl0ZW0gYW5kIG1ha2UgaXQgY2hhbmdlIGFwcGVhcmFuY2Ugd2hlbiB0YXBwZWQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgbG9uZ2RpdmlkZXJcbiAqICAgW2VuXURpc3BsYXlzIGEgbG9uZyBob3Jpem9udGFsIGRpdmlkZXIgYmV0d2VlbiBpdGVtcy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciBub2RpdmlkZXJcbiAqICAgW2VuXVJlbW92ZXMgdGhlIGRpdmlkZXIgYmV0d2VlbiBsaXN0IGl0ZW1zLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1EaXNwbGF5IGEgTWF0ZXJpYWwgRGVzaWduIGxpc3QgaXRlbS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ29tcG9uZW50IHRoYXQgcmVwcmVzZW50cyBlYWNoIGl0ZW0gaW4gYSBsaXN0LiBUaGUgbGlzdCBpdGVtIGlzIGNvbXBvc2VkIG9mIGZvdXIgcGFydHMgdGhhdCBhcmUgcmVwcmVzZW50ZWQgd2l0aCB0aGUgYGxlZnRgLCBgY2VudGVyYCwgYHJpZ2h0YCBhbmQgYGV4cGFuZGFibGUtY29udGVudGAgY2xhc3Nlcy4gVGhlc2UgY2xhc3NlcyBjYW4gYmUgdXNlZCB0byBlbnN1cmUgdGhhdCB0aGUgY29udGVudCBvZiB0aGUgbGlzdCBpdGVtcyBpcyBwcm9wZXJseSBhbGlnbmVkLlxuICpcbiAqICAgICBgYGBcbiAqICAgICA8b25zLWxpc3QtaXRlbT5cbiAqICAgICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+TGVmdDwvZGl2PlxuICogICAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPkNlbnRlcjwvZGl2PlxuICogICAgICAgPGRpdiBjbGFzcz1cInJpZ2h0XCI+UmlnaHQ8L2Rpdj5cbiAqICAgICAgIDxkaXYgY2xhc3M9XCJleHBhbmRhYmxlLWNvbnRlbnRcIj5FeHBhbmRhYmxlIGNvbnRlbnQ8L2Rpdj5cbiAqICAgICA8L29ucy1saXN0LWl0ZW0+XG4gKiAgICAgYGBgXG4gKlxuICogICAgIFRoZXJlIGFyZSBhbHNvIGEgbnVtYmVyIG9mIGNsYXNzZXMgKHByZWZpeGVkIHdpdGggYGxpc3QtaXRlbV9fKmApIHRoYXQgaGVscCB3aGVuIHB1dHRpbmcgdGhpbmdzIGxpa2UgaWNvbnMgYW5kIHRodW1ibmFpbHMgaW50byB0aGUgbGlzdCBpdGVtcy5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdFxuICogICBbZW5db25zLWxpc3QgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1saXN044Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1saXN0LWhlYWRlclxuICogICBbZW5db25zLWxpc3QtaGVhZGVyIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdC1oZWFkZXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGNvZGVwZW4geXhjQ3RcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9saXN0XG4gKiBAZXhhbXBsZVxuICogPG9ucy1saXN0LWl0ZW0+XG4gKiAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgPG9ucy1pY29uIGljb249XCJtZC1mYWNlXCIgY2xhc3M9XCJsaXN0LWl0ZW1fX2ljb25cIj48L29ucy1pY29uPlxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPlxuICogICAgIDxkaXYgY2xhc3M9XCJsaXN0LWl0ZW1fX3RpdGxlXCI+VGl0bGU8L2Rpdj5cbiAqICAgICA8ZGl2IGNsYXNzPVwibGlzdC1pdGVtX19zdWJ0aXRsZVwiPlN1YnRpdGxlPC9kaXY+XG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAqICAgICA8b25zLXN3aXRjaD48L29ucy1zd2l0Y2g+XG4gKiAgIDwvZGl2PlxuICogPC9vbnMtbGlzdC1pdGVtPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0SXRlbUVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSBsaXN0IGl0ZW0uWy9lbl1cbiAgICogICBbamFd5ZCE6KaB57Sg44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbG9jay1vbi1kcmFnXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1QcmV2ZW50IHZlcnRpY2FsIHNjcm9sbGluZyB3aGVuIHRoZSB1c2VyIGRyYWdzIGhvcml6b250YWxseS5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzjgYLjgovjgajjgIHjg6bjg7zjgrbjg7zjgYzjgZPjga7opoHntKDjgpLmqKrmlrnlkJHjgavjg4njg6njg4PjgrDjgZfjgabjgYTjgovmmYLjgavjgIHnuKbmlrnlkJHjga7jgrnjgq/jg63jg7zjg6vjgYzotbfjgY3jgarjgYTjgojjgYbjgavjgarjgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB0YXBwYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU1ha2VzIHRoZSBlbGVtZW50IHJlYWN0IHRvIHRhcHMuIGBwcmV2ZW50LXRhcGAgYXR0cmlidXRlIGNhbiBiZSBhZGRlZCB0byBjaGlsZCBlbGVtZW50cyBsaWtlIGJ1dHRvbnMgb3IgaW5wdXRzIHRvIHByZXZlbnQgdGhpcyBlZmZlY3QuIGBvbnMtKmAgZWxlbWVudHMgYXJlIGlnbm9yZWQgYnkgZGVmYXVsdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB0YXAtYmFja2dyb3VuZC1jb2xvclxuICAgKiBAdHlwZSB7Q29sb3J9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl0gQ2hhbmdlcyB0aGUgYmFja2dyb3VuZCBjb2xvciB3aGVuIHRhcHBlZC4gRm9yIHRoaXMgdG8gd29yaywgdGhlIGF0dHJpYnV0ZSBcInRhcHBhYmxlXCIgbmVlZHMgdG8gYmUgc2V0LiBUaGUgZGVmYXVsdCBjb2xvciBpcyBcIiNkOWQ5ZDlcIi4gSXQgd2lsbCBkaXNwbGF5IGFzIGEgcmlwcGxlIGVmZmVjdCBvbiBBbmRyb2lkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGV4cGFuZGFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1NYWtlcyB0aGUgZWxlbWVudCBhYmxlIHRvIGJlIGV4cGFuZGVkIHRvIHJldmVhbCBleHRyYSBjb250ZW50LiBGb3IgdGhpcyB0byB3b3JrLCB0aGUgZXhwYW5kYWJsZSBjb250ZW50IG11c3QgYmUgZGVmaW5lZCBpbiBgZGl2LmV4cGFuZGFibGUtY29udGVudGAuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IGRlZmF1bHRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFuaW1hdGlvbiB1c2VkIHdoZW4gc2hvd2luZyBhbmQgaGlkaW5nIHRoZSBleHBhbmRhYmxlIGNvbnRlbnQuIENhbiBiZSBlaXRoZXIgYFwiZGVmYXVsdFwiYCBvciBgXCJub25lXCJgLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX2FuaW1hdG9yRmFjdG9yeSA9IHRoaXMuX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpO1xuICAgIHRoaXMudG9nZ2xlRXhwYW5zaW9uID0gdGhpcy50b2dnbGVFeHBhbnNpb24uYmluZCh0aGlzKTtcblxuICAgIC8vIEVsZW1lbnRzIGlnbm9yZWQgd2hlbiB0YXBwaW5nXG4gICAgY29uc3QgcmUgPSAvXm9ucy0oPyFjb2wkfHJvdyR8aWYkKS9pO1xuICAgIHRoaXMuX3Nob3VsZElnbm9yZVRhcCA9IGUgPT4gZS5oYXNBdHRyaWJ1dGUoJ3ByZXZlbnQtdGFwJykgfHwgcmUudGVzdChlLnRhZ05hbWUpO1xuXG4gICAgLy8gc2hvdyBhbmQgaGlkZSBmdW5jdGlvbnMgZm9yIFZ1ZSBoaWRhYmxlIG1peGluXG4gICAgdGhpcy5zaG93ID0gdGhpcy5zaG93RXhwYW5zaW9uO1xuICAgIHRoaXMuaGlkZSA9IHRoaXMuaGlkZUV4cGFuc2lvbjtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb21waWxlKCk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQ29tcGlsZXMgdGhlIGxpc3QgaXRlbS5cbiAgICpcbiAgICogVmFyaW91cyBlbGVtZW50cyBhcmUgYWxsb3dlZCBpbiB0aGUgYm9keSBvZiBhIGxpc3QgaXRlbTpcbiAgICpcbiAgICogIC0gZGl2LmxlZnQsIGRpdi5yaWdodCwgYW5kIGRpdi5jZW50ZXIgYXJlIGFsbG93ZWQgYXMgZGlyZWN0IGNoaWxkcmVuXG4gICAqICAtIGlmIGRpdi5jZW50ZXIgaXMgbm90IGRlZmluZWQsIGFueXRoaW5nIHRoYXQgaXNuJ3QgZGl2LmxlZnQsIGRpdi5yaWdodCBvciBkaXYuZXhwYW5kYWJsZS1jb250ZW50IHdpbGwgYmUgcHV0IGluIGEgZGl2LmNlbnRlclxuICAgKiAgLSBpZiBkaXYuY2VudGVyIGlzIGRlZmluZWQsIGFueXRoaW5nIHRoYXQgaXNuJ3QgZGl2LmxlZnQsIGRpdi5yaWdodCBvciBkaXYuZXhwYW5kYWJsZS1jb250ZW50IHdpbGwgYmUgaWdub3JlZFxuICAgKiAgLSBpZiBsaXN0IGl0ZW0gaGFzIGV4cGFuZGFibGUgYXR0cmlidXRlOlxuICAgKiAgICAgIC0gZGl2LmV4cGFuZGFibGUtY29udGVudCBpcyBhbGxvd2VkIGFzIGEgZGlyZWN0IGNoaWxkXG4gICAqICAgICAgLSBkaXYudG9wIGlzIGFsbG93ZWQgYXMgZGlyZWN0IGNoaWxkXG4gICAqICAgICAgLSBpZiBkaXYudG9wIGlzIGRlZmluZWQsIGFueXRoaW5nIHRoYXQgaXNuJ3QgZGl2LmV4cGFuZGFibGUtY29udGVudCBzaG91bGQgYmUgaW5zaWRlIGRpdi50b3AgLSBhbnl0aGluZyBlbHNlIHdpbGwgYmUgaWdub3JlZFxuICAgKiAgICAgIC0gaWYgZGl2LnJpZ2h0IGlzIG5vdCBkZWZpbmVkLCBhIGRpdi5yaWdodCB3aWxsIGJlIGNyZWF0ZWQgd2l0aCBhIGRyb3AtZG93biBjaGV2cm9uXG4gICAqXG4gICAqIFNlZSB0aGUgdGVzdHMgZm9yIGV4YW1wbGVzLlxuICAgKi9cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgbGV0IHRvcCwgZXhwYW5kYWJsZUNvbnRlbnQ7XG4gICAgbGV0IHRvcENvbnRlbnQgPSBbXTtcbiAgICBBcnJheS5mcm9tKHRoaXMuY2hpbGROb2RlcykuZm9yRWFjaChub2RlID0+IHtcbiAgICAgIGlmIChub2RlLm5vZGVUeXBlICE9PSBOb2RlLkVMRU1FTlRfTk9ERSkge1xuICAgICAgICB0b3BDb250ZW50LnB1c2gobm9kZSk7XG4gICAgICB9IGVsc2UgaWYgKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCd0b3AnKSkge1xuICAgICAgICB0b3AgPSBub2RlO1xuICAgICAgfSBlbHNlIGlmIChub2RlLmNsYXNzTGlzdC5jb250YWlucygnZXhwYW5kYWJsZS1jb250ZW50JykpIHtcbiAgICAgICAgZXhwYW5kYWJsZUNvbnRlbnQgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdG9wQ29udGVudC5wdXNoKG5vZGUpO1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZS5ub2RlTmFtZSAhPT0gJ09OUy1SSVBQTEUnKSB7XG4gICAgICAgIG5vZGUucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdG9wQ29udGVudCA9IHRvcCA/IEFycmF5LmZyb20odG9wLmNoaWxkTm9kZXMpIDogdG9wQ29udGVudDtcblxuICAgIGxldCBsZWZ0LCByaWdodCwgY2VudGVyO1xuICAgIGNvbnN0IGNlbnRlckNvbnRlbnQgPSBbXTtcbiAgICB0b3BDb250ZW50LmZvckVhY2gobm9kZSA9PiB7XG4gICAgICBpZiAobm9kZS5ub2RlVHlwZSAhPT0gTm9kZS5FTEVNRU5UX05PREUpIHtcbiAgICAgICAgY2VudGVyQ29udGVudC5wdXNoKG5vZGUpO1xuICAgICAgfSBlbHNlIGlmIChub2RlLmNsYXNzTGlzdC5jb250YWlucygnbGVmdCcpKSB7XG4gICAgICAgIGxlZnQgPSBub2RlO1xuICAgICAgfSBlbHNlIGlmIChub2RlLmNsYXNzTGlzdC5jb250YWlucygncmlnaHQnKSkge1xuICAgICAgICByaWdodCA9IG5vZGU7XG4gICAgICB9IGVsc2UgaWYgKG5vZGUuY2xhc3NMaXN0LmNvbnRhaW5zKCdjZW50ZXInKSkge1xuICAgICAgICBjZW50ZXIgPSBub2RlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY2VudGVyQ29udGVudC5wdXNoKG5vZGUpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdleHBhbmRhYmxlJykpIHtcbiAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtLS1leHBhbmRhYmxlJyk7XG5cbiAgICAgIGlmICghdG9wKSB7XG4gICAgICAgIHRvcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB0b3AuY2xhc3NMaXN0LmFkZCgndG9wJyk7XG4gICAgICB9XG4gICAgICB0b3AuY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtX190b3AnKTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodG9wKTtcbiAgICAgIHRoaXMuX3RvcCA9IHRvcDtcblxuICAgICAgaWYgKGV4cGFuZGFibGVDb250ZW50KSB7XG4gICAgICAgIGV4cGFuZGFibGVDb250ZW50LmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fZXhwYW5kYWJsZS1jb250ZW50Jyk7XG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoZXhwYW5kYWJsZUNvbnRlbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXJpZ2h0KSB7XG4gICAgICAgIHJpZ2h0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIHJpZ2h0LmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fcmlnaHQnLCAncmlnaHQnKTtcblxuICAgICAgICAvLyBXZSBjYW5ub3QgdXNlIGEgcHNldWRvLWVsZW1lbnQgZm9yIHRoaXMgY2hldnJvbiwgYXMgd2UgY2Fubm90IGFuaW1hdGUgaXQgdXNpbmdcbiAgICAgICAgLy8gSlMuIFNvLCB3ZSBtYWtlIGEgY2hldnJvbiBzcGFuIGluc3RlYWQuXG4gICAgICAgIGNvbnN0IGNoZXZyb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGNoZXZyb24uY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtX19leHBhbmQtY2hldnJvbicpO1xuICAgICAgICByaWdodC5hcHBlbmRDaGlsZChjaGV2cm9uKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdG9wID0gdGhpcztcbiAgICB9XG5cbiAgICBpZiAoIWNlbnRlcikge1xuICAgICAgY2VudGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICBjZW50ZXIuY2xhc3NMaXN0LmFkZCgnY2VudGVyJyk7XG4gICAgICBjZW50ZXJDb250ZW50LmZvckVhY2gobm9kZSA9PiBjZW50ZXIuYXBwZW5kQ2hpbGQobm9kZSkpO1xuICAgIH1cbiAgICBjZW50ZXIuY2xhc3NMaXN0LmFkZCgnbGlzdC1pdGVtX19jZW50ZXInKTtcbiAgICB0b3AuYXBwZW5kQ2hpbGQoY2VudGVyKTtcblxuICAgIGlmIChsZWZ0KSB7XG4gICAgICBsZWZ0LmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fbGVmdCcpO1xuICAgICAgdG9wLmFwcGVuZENoaWxkKGxlZnQpO1xuICAgIH1cbiAgICBpZiAocmlnaHQpIHtcbiAgICAgIHJpZ2h0LmNsYXNzTGlzdC5hZGQoJ2xpc3QtaXRlbV9fcmlnaHQnKTtcbiAgICAgIHRvcC5hcHBlbmRDaGlsZChyaWdodCk7XG4gICAgfVxuXG4gICAgdXRpbC51cGRhdGVSaXBwbGUodGhpcyk7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd0V4cGFuc2lvblxuICAgKiBAc2lnbmF0dXJlIHNob3dFeHBhbnNpb24oKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyB0aGUgZXhwYW5kYWJsZSBjb250ZW50IGlmIHRoZSBlbGVtZW50IGlzIGV4cGFuZGFibGUuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNob3dFeHBhbnNpb24oKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdleHBhbmRhYmxlJykgJiYgIXRoaXMuX2V4cGFuZGluZykge1xuICAgICAgdGhpcy5leHBhbmRlZCA9IHRydWU7XG4gICAgICB0aGlzLl9leHBhbmRpbmcgPSB0cnVlO1xuXG4gICAgICBjb25zdCBhbmltYXRvciA9IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcigpO1xuICAgICAgYW5pbWF0b3Iuc2hvd0V4cGFuc2lvbih0aGlzLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZXhwYW5kZWQnKTtcbiAgICAgICAgdGhpcy5fZXhwYW5kaW5nID0gZmFsc2U7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlRXhwYW5zaW9uXG4gICAqIEBzaWduYXR1cmUgaGlkZUV4cGFuc2lvbigpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBleHBhbmRhYmxlIGNvbnRlbnQgaWYgdGhlIGVsZW1lbnQgZXhwYW5kYWJsZS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgaGlkZUV4cGFuc2lvbigpIHtcbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2V4cGFuZGFibGUnKSAmJiAhdGhpcy5fZXhwYW5kaW5nKSB7XG4gICAgICB0aGlzLmV4cGFuZGVkID0gZmFsc2U7XG4gICAgICB0aGlzLl9leHBhbmRpbmcgPSB0cnVlO1xuXG4gICAgICBjb25zdCBhbmltYXRvciA9IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcigpO1xuICAgICAgYW5pbWF0b3IuaGlkZUV4cGFuc2lvbih0aGlzLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LnJlbW92ZSgnZXhwYW5kZWQnKTtcbiAgICAgICAgdGhpcy5fZXhwYW5kaW5nID0gZmFsc2U7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICB0b2dnbGVFeHBhbnNpb24oKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QuY29udGFpbnMoJ2V4cGFuZGVkJykgPyB0aGlzLmhpZGVFeHBhbnNpb24oKSA6IHRoaXMuc2hvd0V4cGFuc2lvbigpO1xuICAgIHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgRXZlbnQoJ2V4cGFuc2lvbicpKTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBfYW5pbWF0b3JEaWN0LFxuICAgICAgYmFzZUNsYXNzOiBMaXN0SXRlbUFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ0xpc3RJdGVtQW5pbWF0b3InLFxuICAgICAgZGVmYXVsdEFuaW1hdGlvbjogdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpIHx8ICdkZWZhdWx0J1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnLCAncmlwcGxlJywgJ2FuaW1hdGlvbiddO1xuICB9XG5cbiAgZ2V0IGV4cGFuZGFibGVDb250ZW50KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5saXN0LWl0ZW1fX2V4cGFuZGFibGUtY29udGVudCcpO1xuICB9XG5cbiAgZ2V0IGV4cGFuZENoZXZyb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcignLmxpc3QtaXRlbV9fZXhwYW5kLWNoZXZyb24nKTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaXBwbGUnOlxuICAgICAgICB1dGlsLnVwZGF0ZVJpcHBsZSh0aGlzKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdhbmltYXRpb24nOlxuICAgICAgICB0aGlzLl9hbmltYXRvckZhY3RvcnkgPSB0aGlzLl91cGRhdGVBbmltYXRvckZhY3RvcnkoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX3NldHVwTGlzdGVuZXJzKHRydWUpO1xuICAgICAgdGhpcy5fb3JpZ2luYWxCYWNrZ3JvdW5kQ29sb3IgPSB0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvcjtcbiAgICAgIHRoaXMudGFwcGVkID0gZmFsc2U7XG4gICAgfSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9zZXR1cExpc3RlbmVycyhmYWxzZSk7XG4gIH1cblxuICBfc2V0dXBMaXN0ZW5lcnMoYWRkKSB7XG4gICAgY29uc3QgYWN0aW9uID0gKGFkZCA/ICdhZGQnIDogJ3JlbW92ZScpICsgJ0V2ZW50TGlzdGVuZXInO1xuICAgIHV0aWxbYWN0aW9uXSh0aGlzLCAndG91Y2hzdGFydCcsIHRoaXMuX29uVG91Y2gsIHsgcGFzc2l2ZTogdHJ1ZSB9KTtcbiAgICB1dGlsW2FjdGlvbl0odGhpcywgJ3RvdWNobW92ZScsIHRoaXMuX29uUmVsZWFzZSwgeyBwYXNzaXZlOiB0cnVlIH0pO1xuICAgIHRoaXNbYWN0aW9uXSgndG91Y2hjYW5jZWwnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIHRoaXNbYWN0aW9uXSgndG91Y2hlbmQnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIHRoaXNbYWN0aW9uXSgndG91Y2hsZWF2ZScsIHRoaXMuX29uUmVsZWFzZSk7XG4gICAgdGhpc1thY3Rpb25dKCdkcmFnJywgdGhpcy5fb25EcmFnKTtcbiAgICB0aGlzW2FjdGlvbl0oJ21vdXNlZG93bicsIHRoaXMuX29uVG91Y2gpO1xuICAgIHRoaXNbYWN0aW9uXSgnbW91c2V1cCcsIHRoaXMuX29uUmVsZWFzZSk7XG4gICAgdGhpc1thY3Rpb25dKCdtb3VzZW91dCcsIHRoaXMuX29uUmVsZWFzZSk7XG5cbiAgICBpZiAodGhpcy5fdG9wKSB7XG4gICAgICB0aGlzLl90b3BbYWN0aW9uXSgnY2xpY2snLCB0aGlzLnRvZ2dsZUV4cGFuc2lvbik7XG4gICAgfVxuICB9XG5cbiAgX29uRHJhZyhldmVudCkge1xuICAgIGNvbnN0IGdlc3R1cmUgPSBldmVudC5nZXN0dXJlO1xuICAgIC8vIFByZXZlbnQgdmVydGljYWwgc2Nyb2xsaW5nIGlmIHRoZSB1c2VycyBwYW5zIGxlZnQgb3IgcmlnaHQuXG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdsb2NrLW9uLWRyYWcnKSAmJiBbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKGdlc3R1cmUuZGlyZWN0aW9uKSA+IC0xKSB7XG4gICAgICBnZXN0dXJlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICB9XG5cbiAgX29uVG91Y2goZSkge1xuICAgIGlmICh0aGlzLnRhcHBlZCB8fFxuICAgICAgKHRoaXMgIT09IGUudGFyZ2V0ICYmICh0aGlzLl9zaG91bGRJZ25vcmVUYXAoZS50YXJnZXQpIHx8IHV0aWwuZmluZFBhcmVudChlLnRhcmdldCwgdGhpcy5fc2hvdWxkSWdub3JlVGFwLCBwID0+IHAgPT09IHRoaXMpKSlcbiAgICApIHtcbiAgICAgIHJldHVybjsgLy8gSWdub3JlIHRhcFxuICAgIH1cblxuICAgIHRoaXMudGFwcGVkID0gdHJ1ZTtcbiAgICBjb25zdCB0b3VjaFN0eWxlID0geyB0cmFuc2l0aW9uOiAnYmFja2dyb3VuZC1jb2xvciAwLjBzIGxpbmVhciAwLjAycywgYm94LXNoYWRvdyAwLjBzIGxpbmVhciAwLjAycycgfTtcblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgndGFwcGFibGUnKSkge1xuICAgICAgaWYgKHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yKSB7XG4gICAgICAgIHRoaXMuX29yaWdpbmFsQmFja2dyb3VuZENvbG9yID0gdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3I7XG4gICAgICB9XG5cbiAgICAgIHRvdWNoU3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3RhcC1iYWNrZ3JvdW5kLWNvbG9yJykgfHwgJyNkOWQ5ZDknO1xuICAgICAgdG91Y2hTdHlsZS5ib3hTaGFkb3cgPSBgMHB4IC0xcHggMHB4IDBweCAke3RvdWNoU3R5bGUuYmFja2dyb3VuZENvbG9yfWA7XG4gICAgfVxuXG4gICAgc3R5bGVyKHRoaXMsIHRvdWNoU3R5bGUpO1xuICB9XG5cbiAgX29uUmVsZWFzZSgpIHtcbiAgICB0aGlzLnRhcHBlZCA9IGZhbHNlO1xuICAgIHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gdGhpcy5fb3JpZ2luYWxCYWNrZ3JvdW5kQ29sb3IgfHwgJyc7XG4gICAgc3R5bGVyLmNsZWFyKHRoaXMsICd0cmFuc2l0aW9uIGJveFNoYWRvdycpO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLkxpc3RJdGVtID0gTGlzdEl0ZW1FbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtbGlzdC1pdGVtJywgTGlzdEl0ZW1FbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ2xpc3QnO1xuY29uc3Qgc2NoZW1lID0geycnOiAnbGlzdC0tKid9O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1saXN0XG4gKiBAY2F0ZWdvcnkgbGlzdFxuICogQG1vZGlmaWVyIGluc2V0XG4gKiAgIFtlbl1JbnNldCBsaXN0IHRoYXQgZG9lc24ndCBjb3ZlciB0aGUgd2hvbGUgd2lkdGggb2YgdGhlIHBhcmVudC5bL2VuXVxuICogICBbamFd6Kaq6KaB57Sg44Gu55S76Z2i44GE44Gj44Gx44GE44Gr5bqD44GM44KJ44Gq44GE44Oq44K544OI44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBub2JvcmRlclxuICogICBbZW5dQSBsaXN0IHdpdGggbm8gYm9yZGVycyBhdCB0aGUgdG9wIGFuZCBib3R0b20uWy9lbl1cbiAqICAgW2phXeODquOCueODiOOBruS4iuS4i+OBruODnOODvOODgOODvOOBjOeEoeOBhOODquOCueODiOOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXUNvbXBvbmVudCB0byBkZWZpbmUgYSBsaXN0LCBhbmQgdGhlIGNvbnRhaW5lciBmb3Igb25zLWxpc3QtaXRlbShzKS5bL2VuXVxuICogICBbamFd44Oq44K544OI44KS6KGo54++44GZ44KL44Gf44KB44Gu44Kz44Oz44Od44O844ON44Oz44OI44CCb25zLWxpc3QtaXRlbeOBruOCs+ODs+ODhuODiuOBqOOBl+OBpuS9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAc2VlYWxzbyBvbnMtbGlzdC1pdGVtXG4gKiAgIFtlbl1vbnMtbGlzdC1pdGVtIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdC1pdGVt44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1saXN0LWhlYWRlclxuICogICBbZW5db25zLWxpc3QtaGVhZGVyIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtbGlzdC1oZWFkZXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWxhenktcmVwZWF0XG4gKiAgIFtlbl1vbnMtbGF6eS1yZXBlYXQgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1sYXp5LXJlcGVhdOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAY29kZXBlbiB5eGNDdFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL2xpc3RcbiAqIEBleGFtcGxlXG4gKiA8b25zLWxpc3Q+XG4gKiAgIDxvbnMtbGlzdC1oZWFkZXI+SGVhZGVyIFRleHQ8L29ucy1saXN0LWhlYWRlcj5cbiAqICAgPG9ucy1saXN0LWl0ZW0+SXRlbTwvb25zLWxpc3QtaXRlbT5cbiAqICAgPG9ucy1saXN0LWl0ZW0+SXRlbTwvb25zLWxpc3QtaXRlbT5cbiAqIDwvb25zLWxpc3Q+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgbGlzdC5bL2VuXVxuICAgKiAgIFtqYV3jg6rjgrnjg4jjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fY29tcGlsZSgpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICB1dGlsLnJlc3RvcmVDbGFzcyh0aGlzLCBkZWZhdWx0Q2xhc3NOYW1lLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuXG5vbnNFbGVtZW50cy5MaXN0ID0gTGlzdEVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1saXN0JywgTGlzdEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uLy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3QgSU5QVVRfQVRUUklCVVRFUyA9IFtcbiAgJ2F1dG9jYXBpdGFsaXplJyxcbiAgJ2F1dG9jb21wbGV0ZScsXG4gICdhdXRvY29ycmVjdCcsXG4gICdhdXRvZm9jdXMnLFxuICAnZGlzYWJsZWQnLFxuICAnaW5wdXRtb2RlJyxcbiAgJ21heCcsXG4gICdtYXhsZW5ndGgnLFxuICAnbWluJyxcbiAgJ21pbmxlbmd0aCcsXG4gICduYW1lJyxcbiAgJ3BhdHRlcm4nLFxuICAncGxhY2Vob2xkZXInLFxuICAncmVhZG9ubHknLFxuICAncmVxdWlyZWQnLFxuICAnc2l6ZScsXG4gICdzcGVsbGNoZWNrJyxcbiAgJ3N0ZXAnLFxuICAndmFsaWRhdG9yJyxcbiAgJ3ZhbHVlJ1xuXTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzZUlucHV0RWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICBfdXBkYXRlKCkge30gLy8gT3B0aW9uYWxseSBpbXBsZW1lbnRlZFxuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHV0aWwudGhyb3dNZW1iZXIoKTtcbiAgfVxuXG4gIGdldCBfdGVtcGxhdGUoKSB7XG4gICAgdXRpbC50aHJvd01lbWJlcigpO1xuICB9XG5cbiAgZ2V0IHR5cGUoKSB7XG4gICAgdXRpbC50aHJvd01lbWJlcigpO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yID09PSBCYXNlSW5wdXRFbGVtZW50KSB7XG4gICAgICB1dGlsLnRocm93QWJzdHJhY3QoKTtcbiAgICB9XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fY29tcGlsZSgpKTtcbiAgICB0aGlzLl9ib3VuZERlbGVnYXRlRXZlbnQgPSB0aGlzLl9kZWxlZ2F0ZUV2ZW50LmJpbmQodGhpcyk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLl9kZWZhdWx0Q2xhc3NOYW1lICYmIHRoaXMuY2xhc3NMaXN0LmFkZCh0aGlzLl9kZWZhdWx0Q2xhc3NOYW1lKTtcblxuICAgIGlmICh0aGlzLmNoaWxkcmVuLmxlbmd0aCAhPT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuYXBwZW5kQ2hpbGQodXRpbC5jcmVhdGVGcmFnbWVudCh0aGlzLl90ZW1wbGF0ZSkpO1xuXG4gICAgdGhpcy5fc2V0SW5wdXRJZCgpO1xuXG4gICAgdGhpcy5fdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCk7XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHRoaXMuX3NjaGVtZSk7XG4gIH1cblxuICBfdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCkge1xuICAgIElOUFVUX0FUVFJJQlVURVMuZm9yRWFjaChhdHRyID0+IHtcbiAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZShhdHRyKSkge1xuICAgICAgICB0aGlzLl9pbnB1dC5zZXRBdHRyaWJ1dGUoYXR0ciwgdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cikpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5faW5wdXQucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgdGhpcy5fdXBkYXRlKCk7XG4gIH1cblxuICBfZGVsZWdhdGVFdmVudChldmVudCkge1xuICAgIGNvbnN0IGUgPSBuZXcgQ3VzdG9tRXZlbnQoZXZlbnQudHlwZSwge1xuICAgICAgYnViYmxlczogZmFsc2UsXG4gICAgICBjYW5jZWxhYmxlOiB0cnVlXG4gICAgfSk7XG5cbiAgICByZXR1cm4gdGhpcy5kaXNwYXRjaEV2ZW50KGUpO1xuICB9XG5cbiAgX3NldElucHV0SWQoKSB7XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdpbnB1dC1pZCcpKSB7XG4gICAgICB0aGlzLl9pbnB1dC5pZCA9IHRoaXMuZ2V0QXR0cmlidXRlKCdpbnB1dC1pZCcpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBfZGVmYXVsdENsYXNzTmFtZSgpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cblxuICBnZXQgX2lucHV0KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ2lucHV0Jyk7XG4gIH1cblxuICBnZXQgdmFsdWUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2lucHV0ID09PSBudWxsXG4gICAgICA/IHRoaXMuZ2V0QXR0cmlidXRlKCd2YWx1ZScpXG4gICAgICA6IHRoaXMuX2lucHV0LnZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAodmFsIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgICAgICB2YWwgPSB2YWwudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApO1xuICAgICAgfVxuICAgICAgdGhpcy5faW5wdXQudmFsdWUgPSB2YWw7XG4gICAgICB0aGlzLl91cGRhdGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2lucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgdGhpcy5fYm91bmREZWxlZ2F0ZUV2ZW50KTtcbiAgICAgIHRoaXMuX2lucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCB0aGlzLl9ib3VuZERlbGVnYXRlRXZlbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2lucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgdGhpcy5fYm91bmREZWxlZ2F0ZUV2ZW50KTtcbiAgICAgIHRoaXMuX2lucHV0LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JsdXInLCB0aGlzLl9ib3VuZERlbGVnYXRlRXZlbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnaW5wdXQtaWQnLCAnY2xhc3MnLCAuLi5JTlBVVF9BVFRSSUJVVEVTXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgdGhpcy5fc2NoZW1lKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaW5wdXQtaWQnOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fc2V0SW5wdXRJZCgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIHRoaXMuX2RlZmF1bHRDbGFzc05hbWUsIHRoaXMuX3NjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmIChJTlBVVF9BVFRSSUJVVEVTLmluZGV4T2YobmFtZSkgPj0gMCkge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZUJvdW5kQXR0cmlidXRlcygpKTtcbiAgICB9XG4gIH1cblxuICBibHVyKCkge1xuICAgIHRoaXMuX2lucHV0LmJsdXIoKTtcbiAgfVxuXG4gIGZvY3VzKCkge1xuICAgIHRoaXMuX2lucHV0LmZvY3VzKCk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCBCYXNlSW5wdXRFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWlucHV0JztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcudGV4dC1pbnB1dCc6ICd0ZXh0LWlucHV0LS0qJyxcbiAgJy50ZXh0LWlucHV0X19sYWJlbCc6ICd0ZXh0LWlucHV0LS0qX19sYWJlbCdcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLWlucHV0XG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgW2VuXURpc3BsYXlzIGEgTWF0ZXJpYWwgRGVzaWduIGlucHV0LlsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgdW5kZXJiYXJcbiAqICBbZW5dRGlzcGxheXMgYSBob3Jpem9udGFsIGxpbmUgdW5kZXJuZWF0aCBhIHRleHQgaW5wdXQuWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciB0cmFuc3BhcmVudFxuICogIFtlbl1EaXNwbGF5cyBhIHRyYW5zcGFyZW50IGlucHV0LiBXb3JrcyBmb3IgTWF0ZXJpYWwgRGVzaWduLlsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICBbZW5dXG4gKiAgICBBbiBpbnB1dCBlbGVtZW50LiBUaGUgYHR5cGVgIGF0dHJpYnV0ZSBjYW4gYmUgdXNlZCB0byBjaGFuZ2UgdGhlIGlucHV0IHR5cGUuIEFsbCB0ZXh0IGlucHV0IHR5cGVzIGFyZSBzdXBwb3J0ZWQuXG4gKlxuICogICAgVGhlIGNvbXBvbmVudCB3aWxsIGF1dG9tYXRpY2FsbHkgcmVuZGVyIGFzIGEgTWF0ZXJpYWwgRGVzaWduIGlucHV0IG9uIEFuZHJvaWQgZGV2aWNlcy5cbiAqXG4gKiAgICBNb3N0IGF0dHJpYnV0ZXMgdGhhdCBjYW4gYmUgdXNlZCBmb3IgYSBub3JtYWwgYDxpbnB1dD5gIGVsZW1lbnQgY2FuIGFsc28gYmUgdXNlZCBvbiB0aGUgYDxvbnMtaW5wdXQ+YCBlbGVtZW50LlxuICogIFsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvaW5wdXRcbiAqIEBzZWVhbHNvIG9ucy1jaGVja2JveFxuICogICBbZW5dVGhlIGA8b25zLWNoZWNrYm94PmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBjaGVja2JveC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1yYWRpb1xuICogICBbZW5dVGhlIGA8b25zLXJhZGlvPmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSByYWRpbyBidXR0b24uWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcmFuZ2VcbiAqICAgW2VuXVRoZSBgPG9ucy1yYW5nZT5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgcmFuZ2Ugc2xpZGVyLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLXN3aXRjaFxuICogICBbZW5dVGhlIGA8b25zLXN3aXRjaD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgZHJhZ2dhYmxlIHRvZ2dsZSBzd2l0Y2guWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc2VsZWN0XG4gKiAgIFtlbl1UaGUgYDxvbnMtc2VsZWN0PmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBzZWxlY3QgYm94LlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1pbnB1dCBwbGFjZWhvbGRlcj1cIlVzZXJuYW1lXCIgZmxvYXQ+PC9vbnMtaW5wdXQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElucHV0RWxlbWVudCBleHRlbmRzIEJhc2VJbnB1dEVsZW1lbnQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9ib3VuZE9uSW5wdXQgPSB0aGlzLl91cGRhdGUuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9ib3VuZE9uRm9jdXNpbiA9IHRoaXMuX3VwZGF0ZS5iaW5kKHRoaXMpO1xuICB9XG5cbiAgLyogSW5oZXJpdGVkIHByb3BzICovXG5cbiAgX3VwZGF0ZSgpIHtcbiAgICB0aGlzLl91cGRhdGVMYWJlbCgpO1xuICAgIHRoaXMuX3VwZGF0ZUxhYmVsQ2xhc3MoKTtcbiAgfVxuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHJldHVybiBzY2hlbWU7XG4gIH1cblxuICBnZXQgX3RlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8aW5wdXQgdHlwZT1cIiR7dGhpcy50eXBlfVwiIGNsYXNzPVwidGV4dC1pbnB1dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJ0ZXh0LWlucHV0X19sYWJlbFwiPjwvc3Bhbj5cbiAgICBgO1xuICB9XG5cbiAgZ2V0IHR5cGUoKSB7XG4gICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCd0eXBlJyk7XG4gICAgcmV0dXJuIChbJ2NoZWNrYm94JywgJ3JhZGlvJ10uaW5kZXhPZih0eXBlKSA8IDApICYmIHR5cGUgfHwgJ3RleHQnO1xuICB9XG5cbiAgLyogT3duIHByb3BzICovXG5cbiAgX3VwZGF0ZUxhYmVsKCkge1xuICAgIGNvbnN0IGxhYmVsID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3BsYWNlaG9sZGVyJykgfHwgJyc7XG5cbiAgICBpZiAodHlwZW9mIHRoaXMuX2hlbHBlci50ZXh0Q29udGVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHRoaXMuX2hlbHBlci50ZXh0Q29udGVudCA9IGxhYmVsO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9oZWxwZXIuaW5uZXJUZXh0ID0gbGFiZWw7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUxhYmVsQ2xhc3MoKSB7XG4gICAgaWYgKHRoaXMudmFsdWUgPT09ICcnKSB7XG4gICAgICB0aGlzLl9oZWxwZXIuY2xhc3NMaXN0LnJlbW92ZSgndGV4dC1pbnB1dC0tbWF0ZXJpYWxfX2xhYmVsLS1hY3RpdmUnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faGVscGVyLmNsYXNzTGlzdC5hZGQoJ3RleHQtaW5wdXQtLW1hdGVyaWFsX19sYWJlbC0tYWN0aXZlJyk7XG4gICAgfVxuICB9XG5cbiAgZ2V0IF9oZWxwZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3Rvcignc3BhbicpO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsIHRoaXMuX2JvdW5kT25JbnB1dCk7XG4gICAgICB0aGlzLl9pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdmb2N1c2luJywgdGhpcy5fYm91bmRPbkZvY3VzaW4pO1xuICAgIH0pO1xuXG4gICAgY29uc3QgdHlwZSA9IHRoaXMuZ2V0QXR0cmlidXRlKCd0eXBlJyk7XG4gICAgaWYgKFsnY2hlY2tib3gnLCAncmFkaW8nXS5pbmRleE9mKHR5cGUpID49IDApIHtcbiAgICAgIHV0aWwud2FybihgV2FybjogPG9ucy1pbnB1dCB0eXBlPVwiJHt0eXBlfVwiPiBpcyBkZXByZWNhdGVkIHNpbmNlIHYyLjQuMC4gVXNlIDxvbnMtJHt0eXBlfT4gaW5zdGVhZC5gKVxuICAgIH1cbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmRpc2Nvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignaW5wdXQnLCB0aGlzLl9ib3VuZE9uSW5wdXQpO1xuICAgICAgdGhpcy5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignZm9jdXNpbicsIHRoaXMuX2JvdW5kT25Gb2N1c2luKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbLi4uc3VwZXIub2JzZXJ2ZWRBdHRyaWJ1dGVzLCAndHlwZSddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ3R5cGUnOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5faW5wdXQuc2V0QXR0cmlidXRlKCd0eXBlJywgdGhpcy50eXBlKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgc3VwZXIuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHBsYWNlaG9sZGVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1QbGFjZWhvbGRlciB0ZXh0LiBJbiBNYXRlcmlhbCBEZXNpZ24sIHRoaXMgcGxhY2Vob2xkZXIgd2lsbCBiZSBhIGZsb2F0aW5nIGxhYmVsLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGZsb2F0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHByZXNlbnQsIHRoZSBwbGFjZWhvbGRlciB3aWxsIGJlIGFuaW1hdGVkIGluIE1hdGVyaWFsIERlc2lnbi5bL2VuXVxuICAgKiAgW2phXeOBk+OBruWxnuaAp+OBjOioreWumuOBleOCjOOBn+aZguOAgeODqeODmeODq+OBr+OCouODi+ODoeODvOOCt+ODp+ODs+OBmeOCi+OCiOOBhuOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHR5cGVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dXG4gICAqICAgIFNwZWNpZnkgdGhlIGlucHV0IHR5cGUuIFRoaXMgaXMgdGhlIHNhbWUgYXMgdGhlIFwidHlwZVwiIGF0dHJpYnV0ZSBmb3Igbm9ybWFsIGlucHV0cy4gSXQgZXhwZWN0cyBzdHJpY3QgdGV4dCB0eXBlcyBzdWNoIGFzIGB0ZXh0YCwgYHBhc3N3b3JkYCwgZXRjLiBGb3IgY2hlY2tib3gsIHJhZGlvIGJ1dHRvbiwgc2VsZWN0IG9yIHJhbmdlLCBwbGVhc2UgaGF2ZSBhIGxvb2sgYXQgdGhlIGNvcnJlc3BvbmRpbmcgZWxlbWVudHMuXG4gICAqXG4gICAqICAgIFBsZWFzZSB0YWtlIGEgbG9vayBhdCBbTUROXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVE1ML0VsZW1lbnQvaW5wdXQjYXR0ci10eXBlKSBmb3IgYW4gZXhoYXVzdGl2ZSBsaXN0IG9mIHBvc3NpYmxlIHZhbHVlcy4gRGVwZW5kaW5nIG9uIHRoZSBwbGF0Zm9ybSBhbmQgYnJvd3NlciB2ZXJzaW9uIHNvbWUgb2YgdGhlc2UgbWlnaHQgbm90IHdvcmsuXG4gICAqICBbL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGlucHV0LWlkXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIFwiaWRcIiBhdHRyaWJ1dGUgb2YgdGhlIGlubmVyIGA8aW5wdXQ+YCBlbGVtZW50LiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHVzaW5nIGA8bGFiZWwgZm9yPVwiLi4uXCI+YCBlbGVtZW50cy5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBpbnB1dC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgaW5wdXQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGZvY3VzXG4gICAqIEBzaWduYXR1cmUgZm9jdXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRm9jdXNlcyB0aGUgaW5wdXQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgYmx1clxuICAgKiBAc2lnbmF0dXJlIGJsdXIoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVtb3ZlcyBmb2N1cyBmcm9tIHRoZSBpbnB1dC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbn1cblxub25zRWxlbWVudHMuSW5wdXQgPSBJbnB1dEVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1pbnB1dCcsIElucHV0RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IEJhc2VJbnB1dEVsZW1lbnQgZnJvbSAnLi9iYXNlLWlucHV0JztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXNlQ2hlY2tib3hFbGVtZW50IGV4dGVuZHMgQmFzZUlucHV0RWxlbWVudCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yID09PSBCYXNlQ2hlY2tib3hFbGVtZW50KSB7XG4gICAgICB1dGlsLnRocm93QWJzdHJhY3QoKTtcbiAgICB9XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soJ2NoZWNrZWQnLCBudWxsLCB0aGlzLmdldEF0dHJpYnV0ZSgnY2hlY2tlZCcpKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qIEluaGVyaXRlZCBwcm9wcyAqL1xuXG4gIGdldCBfdGVtcGxhdGUoKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgIDxpbnB1dCB0eXBlPVwiJHt0aGlzLnR5cGV9XCIgY2xhc3M9XCIke3RoaXMuX2RlZmF1bHRDbGFzc05hbWV9X19pbnB1dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCIke3RoaXMuX2RlZmF1bHRDbGFzc05hbWV9X19jaGVja21hcmtcIj48L3NwYW4+XG4gICAgYDtcbiAgfVxuXG4gIC8qIE93biBwcm9wcyAqL1xuXG4gIGdldCBfaGVscGVyKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ3NwYW4nKTtcbiAgfVxuXG4gIGdldCBjaGVja2VkKCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dC5jaGVja2VkO1xuICB9XG5cbiAgc2V0IGNoZWNrZWQodmFsKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2lucHV0LmNoZWNrZWQgPSB2YWw7XG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWy4uLnN1cGVyLm9ic2VydmVkQXR0cmlidXRlcywgJ2NoZWNrZWQnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjaGVja2VkJzpcbiAgICAgICAgdGhpcy5jaGVja2VkID0gY3VycmVudCAhPT0gbnVsbDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCk7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgQmFzZUNoZWNrYm94RWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1jaGVja2JveCc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5jaGVja2JveCc6ICdjaGVja2JveC0tKicsXG4gICcuY2hlY2tib3hfX2lucHV0JzogJ2NoZWNrYm94LS0qX19pbnB1dCcsXG4gICcuY2hlY2tib3hfX2NoZWNrbWFyayc6ICdjaGVja2JveC0tKl9fY2hlY2ttYXJrJ1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtY2hlY2tib3hcbiAqIEBjYXRlZ29yeSBmb3JtXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICBbZW5dRGlzcGxheXMgYSBNYXRlcmlhbCBEZXNpZ24gY2hlY2tib3guWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciBub2JvcmRlclxuICogIFtlbl1pT1MgYm9yZGVybGVzcyBjaGVja2JveC5bL2VuXVxuICogIFtqYV1bL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXVxuICogICAgQSBjaGVja2JveCBlbGVtZW50LiBUaGUgY29tcG9uZW50IHdpbGwgYXV0b21hdGljYWxseSByZW5kZXIgYXMgYSBNYXRlcmlhbCBEZXNpZ24gY2hlY2tib3ggb24gQW5kcm9pZCBkZXZpY2VzLlxuICpcbiAqICAgIE1vc3QgYXR0cmlidXRlcyB0aGF0IGNhbiBiZSB1c2VkIGZvciBhIG5vcm1hbCBgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiPmAgZWxlbWVudCBjYW4gYWxzbyBiZSB1c2VkIG9uIHRoZSBgPG9ucy1jaGVja2JveD5gIGVsZW1lbnQuXG4gKiAgWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9jaGVja2JveFxuICogQHNlZWFsc28gb25zLXN3aXRjaFxuICogICBbZW5dVGhlIGA8b25zLXN3aXRjaD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgZHJhZ2dhYmxlIHRvZ2dsZSBzd2l0Y2guWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcmFkaW9cbiAqICAgW2VuXVRoZSBgPG9ucy1yYWRpbz5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgcmFkaW8gYnV0dG9uLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLWlucHV0XG4gKiAgIFtlbl1UaGUgYDxvbnMtaW5wdXQ+YCBlbGVtZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIHRleHQgaW5wdXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc2VhcmNoLWlucHV0XG4gKiAgIFtlbl1UaGUgYDxvbnMtc2VhcmNoLWlucHV0PmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBzZWFyY2ggaW5wdXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcmFuZ2VcbiAqICAgW2VuXVRoZSBgPG9ucy1yYW5nZT5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgcmFuZ2Ugc2xpZGVyLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLXNlbGVjdFxuICogICBbZW5dVGhlIGA8b25zLXNlbGVjdD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgc2VsZWN0IGJveC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBndWlkZSB0aGVtaW5nLmh0bWwjbW9kaWZpZXJzIFtlbl1Nb3JlIGRldGFpbHMgYWJvdXQgdGhlIGBtb2RpZmllcmAgYXR0cmlidXRlWy9lbl1bamFdbW9kaWZpZXLlsZ7mgKfjga7kvb/jgYTmlrlbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtY2hlY2tib3ggY2hlY2tlZD48L29ucy1jaGVja2JveD5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hlY2tib3hFbGVtZW50IGV4dGVuZHMgQmFzZUNoZWNrYm94RWxlbWVudCB7XG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHNjaGVtZTtcbiAgfVxuXG4gIGdldCBfZGVmYXVsdENsYXNzTmFtZSgpIHtcbiAgICByZXR1cm4gJ2NoZWNrYm94JztcbiAgfVxuXG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiAnY2hlY2tib3gnO1xuICB9XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaW5wdXQtaWRcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgXCJpZFwiIGF0dHJpYnV0ZSBvZiB0aGUgaW5uZXIgYDxpbnB1dD5gIGVsZW1lbnQuIFRoaXMgaXMgdXNlZnVsIHdoZW4gdXNpbmcgYDxsYWJlbCBmb3I9XCIuLi5cIj5gIGVsZW1lbnRzLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIGNoZWNrYm94LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2hlY2tlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGNoZWNrYm94IGlzIGNoZWNrZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBjaGVja2JveCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZm9jdXNcbiAgICogQHNpZ25hdHVyZSBmb2N1cygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Gb2N1c2VzIHRoZSBjaGVja2JveC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCBibHVyXG4gICAqIEBzaWduYXR1cmUgYmx1cigpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZW1vdmVzIGZvY3VzIGZyb20gdGhlIGNoZWNrYm94LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xufVxuXG5vbnNFbGVtZW50cy5DaGVja2JveCA9IENoZWNrYm94RWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLWNoZWNrYm94JywgQ2hlY2tib3hFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCBCYXNlQ2hlY2tib3hFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWNoZWNrYm94JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnJhZGlvLWJ1dHRvbic6ICdyYWRpby1idXR0b24tLSonLFxuICAnLnJhZGlvLWJ1dHRvbl9faW5wdXQnOiAncmFkaW8tYnV0dG9uLS0qX19pbnB1dCcsXG4gICcucmFkaW8tYnV0dG9uX19jaGVja21hcmsnOiAncmFkaW8tYnV0dG9uLS0qX19jaGVja21hcmsnXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1yYWRpb1xuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogIFtlbl1EaXNwbGF5cyBhIE1hdGVyaWFsIERlc2lnbiByYWRpbyBidXR0b24uWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1cbiAqICAgIEEgcmFkaW8gYnV0dG9uIGVsZW1lbnQuIFRoZSBjb21wb25lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IHJlbmRlciBhcyBhIE1hdGVyaWFsIERlc2lnbiByYWRpbyBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlxuICpcbiAqICAgIE1vc3QgYXR0cmlidXRlcyB0aGF0IGNhbiBiZSB1c2VkIGZvciBhIG5vcm1hbCBgPGlucHV0IHR5cGU9XCJyYWRpb1wiPmAgZWxlbWVudCBjYW4gYWxzbyBiZSB1c2VkIG9uIHRoZSBgPG9ucy1yYWRpbz5gIGVsZW1lbnQuXG4gKiAgWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9yYWRpb1xuICogQHNlZWFsc28gb25zLXNlbGVjdFxuICogICBbZW5dVGhlIGA8b25zLXNlbGVjdD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgc2VsZWN0IGJveC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1jaGVja2JveFxuICogICBbZW5dVGhlIGA8b25zLWNoZWNrYm94PmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBjaGVja2JveC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zd2l0Y2hcbiAqICAgW2VuXVRoZSBgPG9ucy1zd2l0Y2g+YCBlbGVtZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIGRyYWdnYWJsZSB0b2dnbGUgc3dpdGNoLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQHNlZWFsc28gb25zLWlucHV0XG4gKiAgIFtlbl1UaGUgYDxvbnMtaW5wdXQ+YCBlbGVtZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIHRleHQgaW5wdXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc2VhcmNoLWlucHV0XG4gKiAgIFtlbl1UaGUgYDxvbnMtc2VhcmNoLWlucHV0PmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBzZWFyY2ggaW5wdXQuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcmFuZ2VcbiAqICAgW2VuXVRoZSBgPG9ucy1yYW5nZT5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgcmFuZ2Ugc2xpZGVyLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1yYWRpbyBjaGVja2VkPjwvb25zLXJhZGlvPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYWRpb0VsZW1lbnQgZXh0ZW5kcyBCYXNlQ2hlY2tib3hFbGVtZW50IHtcblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4gc2NoZW1lO1xuICB9XG5cbiAgZ2V0IF9kZWZhdWx0Q2xhc3NOYW1lKCkge1xuICAgIHJldHVybiAncmFkaW8tYnV0dG9uJztcbiAgfVxuXG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiAncmFkaW8nO1xuICB9XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaW5wdXQtaWRcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgXCJpZFwiIGF0dHJpYnV0ZSBvZiB0aGUgaW5uZXIgYDxpbnB1dD5gIGVsZW1lbnQuIFRoaXMgaXMgdXNlZnVsIHdoZW4gdXNpbmcgYDxsYWJlbCBmb3I9XCIuLi5cIj5gIGVsZW1lbnRzLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2YWx1ZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGN1cnJlbnQgdmFsdWUgb2YgdGhlIHJhZGlvIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGNoZWNrZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSByYWRpbyBidXR0b24gaXMgY2hlY2tlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIHJhZGlvIGJ1dHRvbiBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZm9jdXNcbiAgICogQHNpZ25hdHVyZSBmb2N1cygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Gb2N1c2VzIHRoZSByYWRpbyBidXR0b24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgYmx1clxuICAgKiBAc2lnbmF0dXJlIGJsdXIoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVtb3ZlcyBmb2N1cyBmcm9tIHRoZSByYWRpbyBidXR0b24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG59XG5cbm9uc0VsZW1lbnRzLlJhZGlvID0gUmFkaW9FbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtcmFkaW8nLCBSYWRpb0VsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IEJhc2VJbnB1dEVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtaW5wdXQnO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcuc2VhcmNoLWlucHV0JzogJ3NlYXJjaC1pbnB1dC0tKidcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXNlYXJjaC1pbnB1dFxuICogQGNhdGVnb3J5IGZvcm1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogIFtlbl1EaXNwbGF5cyBhIE1hdGVyaWFsIERlc2lnbiBzZWFyY2ggaW5wdXQuWy9lbl1cbiAqICBbamFdWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1cbiAqICAgIEEgc2VhcmNoIGlucHV0IGVsZW1lbnQuIFRoZSBjb21wb25lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IHJlbmRlciBhcyBhIE1hdGVyaWFsIERlc2lnbiBzZWFyY2ggaW5wdXQgb24gQW5kcm9pZCBkZXZpY2VzLlxuICpcbiAqICAgIE1vc3QgYXR0cmlidXRlcyB0aGF0IGNhbiBiZSB1c2VkIGZvciBhIG5vcm1hbCBgPGlucHV0PmAgZWxlbWVudCBjYW4gYWxzbyBiZSB1c2VkIG9uIHRoZSBgPG9ucy1zZWFyY2gtaW5wdXQ+YCBlbGVtZW50LlxuICogIFsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc2VhcmNoLWlucHV0XG4gKiBAc2VlYWxzbyBvbnMtaW5wdXRcbiAqICAgW2VuXVRoZSBgPG9ucy1pbnB1dD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgdGV4dCBpbnB1dC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1yYW5nZVxuICogICBbZW5dVGhlIGA8b25zLXJhbmdlPmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSByYW5nZSBzbGlkZXIuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3dpdGNoXG4gKiAgIFtlbl1UaGUgYDxvbnMtc3dpdGNoPmAgZWxlbWVudCBpcyB1c2VkIHRvIGRpc3BsYXkgYSBkcmFnZ2FibGUgdG9nZ2xlIHN3aXRjaC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zZWxlY3RcbiAqICAgW2VuXVRoZSBgPG9ucy1zZWxlY3Q+YCBlbGVtZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIHNlbGVjdCBib3guWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtY2hlY2tib3hcbiAqICAgW2VuXVRoZSBgPG9ucy1jaGVja2JveD5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgY2hlY2tib3guWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcmFkaW9cbiAqICAgW2VuXVRoZSBgPG9ucy1yYWRpbz5gIGVsZW1lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgcmFkaW8gYnV0dG9uLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zZWFyY2gtaW5wdXQgcGxhY2Vob2xkZXI9XCJTZWFyY2hcIj48L29ucy1zZWFyY2gtaW5wdXQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlYXJjaElucHV0RWxlbWVudCBleHRlbmRzIEJhc2VJbnB1dEVsZW1lbnQge1xuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHJldHVybiBzY2hlbWU7XG4gIH1cblxuICBnZXQgX3RlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8aW5wdXQgdHlwZT1cIiR7dGhpcy50eXBlfVwiIGNsYXNzPVwic2VhcmNoLWlucHV0XCI+XG4gICAgYDtcbiAgfVxuXG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiAnc2VhcmNoJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGlucHV0LWlkXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIFwiaWRcIiBhdHRyaWJ1dGUgb2YgdGhlIGlubmVyIGA8aW5wdXQ+YCBlbGVtZW50LiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHVzaW5nIGA8bGFiZWwgZm9yPVwiLi4uXCI+YCBlbGVtZW50cy5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBpbnB1dC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgaW5wdXQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGZvY3VzXG4gICAqIEBzaWduYXR1cmUgZm9jdXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRm9jdXNlcyB0aGUgaW5wdXQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgYmx1clxuICAgKiBAc2lnbmF0dXJlIGJsdXIoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVtb3ZlcyBmb2N1cyBmcm9tIHRoZSBpbnB1dC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbn1cblxub25zRWxlbWVudHMuU2VhcmNoSW5wdXQgPSBTZWFyY2hJbnB1dEVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zZWFyY2gtaW5wdXQnLCBTZWFyY2hJbnB1dEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IEJhc2VBbmltYXRvciBmcm9tICcuLi8uLi9vbnMvYmFzZS1hbmltYXRvcic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsQW5pbWF0b3IgZXh0ZW5kcyBCYXNlQW5pbWF0b3Ige1xuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy50aW1pbmdcbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZHVyYXRpb25cbiAgICogQHBhcmFtIHtOdW1iZXJ9IG9wdGlvbnMuZGVsYXlcbiAgICovXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnbGluZWFyJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuMn0gPSB7fSkge1xuICAgIHN1cGVyKHsgdGltaW5nLCBkZWxheSwgZHVyYXRpb24gfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gbW9kYWxcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3cobW9kYWwsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBtb2RhbFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShtb2RhbCwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG59XG4iLCJcbi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgTW9kYWxBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcblxuLyoqXG4gKiBpT1Mgc3R5bGUgYW5pbWF0b3IgZm9yIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmFkZU1vZGFsQW5pbWF0b3IgZXh0ZW5kcyBNb2RhbEFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2xpbmVhcicsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjN9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG1vZGFsXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBzaG93KG1vZGFsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQobW9kYWwsIHRoaXMuZGVmKVxuICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAwIH0sIHsgb3BhY2l0eTogMSB9KVxuICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KVxuICAgICAgLnBsYXkoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBtb2RhbFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZShtb2RhbCwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0KG1vZGFsLCB0aGlzLmRlZilcbiAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSlcbiAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSlcbiAgICAgIC5wbGF5KCk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgTW9kYWxBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcblxuLyoqXG4gKiBpT1Mgc3R5bGUgYW5pbWF0b3IgZm9yIG1vZGFsLlxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpZnRNb2RhbEFuaW1hdG9yIGV4dGVuZHMgTW9kYWxBbmltYXRvclxue1xuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciggLjEsIC43LCAuMSwgMSknLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC40fSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBtb2RhbFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyhtb2RhbCwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjayA9IGNhbGxiYWNrID8gY2FsbGJhY2sgOiBmdW5jdGlvbigpIHt9O1xuXG4gICAgYW5pbWl0KG1vZGFsLCB0aGlzLmRlZilcbiAgICAgIC5kZWZhdWx0KFxuICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDEwMCUsIDApJyB9LFxuICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyB9XG4gICAgICApXG4gICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pXG4gICAgICAucGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG1vZGFsXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKG1vZGFsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQobW9kYWwsIHRoaXMuZGVmKVxuICAgICAgLmRlZmF1bHQoXG4gICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknIH0sXG4gICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMTAwJSwgMCknIH1cbiAgICAgIClcbiAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgZG9uZSgpO1xuICAgICAgfSlcbiAgICAgIC5wbGF5KCk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi8uLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCBNb2RhbEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IEZhZGVNb2RhbEFuaW1hdG9yIGZyb20gJy4vZmFkZS1hbmltYXRvcic7XG5pbXBvcnQgTGlmdE1vZGFsQW5pbWF0b3IgZnJvbSAnLi9saWZ0LWFuaW1hdG9yJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi8uLi9vbnMvcGxhdGZvcm0nO1xuaW1wb3J0IEJhc2VEaWFsb2dFbGVtZW50IGZyb20gJy4uL2Jhc2UvYmFzZS1kaWFsb2cnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdtb2RhbC0tKicsXG4gICdtb2RhbF9fY29udGVudCc6ICdtb2RhbC0tKl9fY29udGVudCdcbn07XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnbW9kYWwnO1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICAnZGVmYXVsdCc6IE1vZGFsQW5pbWF0b3IsXG4gICdmYWRlJzogRmFkZU1vZGFsQW5pbWF0b3IsXG4gICdsaWZ0JzogTGlmdE1vZGFsQW5pbWF0b3IsXG4gICdub25lJzogTW9kYWxBbmltYXRvclxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtbW9kYWxcbiAqIEBjYXRlZ29yeSBkaWFsb2dcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgTW9kYWwgY29tcG9uZW50IHRoYXQgbWFza3MgY3VycmVudCBzY3JlZW4uIFVuZGVybHlpbmcgY29tcG9uZW50cyBhcmUgbm90IHN1YmplY3QgdG8gYW55IGV2ZW50cyB3aGlsZSB0aGUgbW9kYWwgY29tcG9uZW50IGlzIHNob3duLlxuICpcbiAqICAgICBUaGlzIGNvbXBvbmVudCBjYW4gYmUgdXNlZCB0byBibG9jayB1c2VyIGlucHV0IHdoaWxlIHNvbWUgb3BlcmF0aW9uIGlzIHJ1bm5pbmcgb3IgdG8gc2hvdyBzb21lIGluZm9ybWF0aW9uIHRvIHRoZSB1c2VyLlxuICogICBbL2VuXVxuICogICBbamFdXG4gKiAgICAg55S76Z2i5YWo5L2T44KS44Oe44K544Kv44GZ44KL44Oi44O844OA44Or55So44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CC5LiL5YG044Gr44GC44KL44Kz44Oz44Od44O844ON44Oz44OI44Gv44CBXG4gKiAgICAg44Oi44O844OA44Or44GM6KGo56S644GV44KM44Gm44GE44KL6ZaT44Gv44Kk44OZ44Oz44OI6YCa55+l44GM6KGM44KP44KM44G+44Gb44KT44CCXG4gKiAgIFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtZGlhbG9nXG4gKiAgIFtlbl1UaGUgYDxvbnMtZGlhbG9nPmAgY29tcG9uZW50IGNhbiBiZSB1c2VkIHRvIGNyZWF0ZSBhIG1vZGFsIGRpYWxvZy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIGRldklnXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9yZWZlcmVuY2UvbW9kYWxcbiAqIEBleGFtcGxlXG4gKiA8b25zLW1vZGFsIGlkPVwibW9kYWxcIj5cbiAqICAgTW9kYWwgY29udGVudFxuICogPC9vbnMtbW9kYWw+XG4gKiA8c2NyaXB0PlxuICogICB2YXIgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbW9kYWwnKTtcbiAqICAgbW9kYWwuc2hvdygpO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1vZGFsRWxlbWVudCBleHRlbmRzIEJhc2VEaWFsb2dFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IHByZXNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgbW9kYWwgaXMgZGlzcGxheWVkLlsvZW5dXG4gICAqIFtqYV3jg6Ljg7zjg4Djg6vjgYzooajnpLrjgZXjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQubW9kYWxcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dRXhlY3V0ZSB0aGlzIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIG1vZGFsIGZyb20gYmVpbmcgc2hvd24uWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44KS5a6f6KGM44GZ44KL44Go44CB44OA44Kk44Ki44Ot44Kw44Gu6KGo56S644GM44Kt44Oj44Oz44K744Or44GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0c2hvd1xuICAgKiBAZGVzY3JpcHRpb25cbiAgICogW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIG1vZGFsIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiBbamFd44Oi44O844OA44Or44GM6KGo56S644GV44KM44Gf55u05b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm1vZGFsXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIG1vZGFsIGlzIGhpZGRlbi5bL2VuXVxuICAgKiBbamFd44Oi44O844OA44Or44GM6Zqg44KM44KL55u05YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm1vZGFsXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUV4ZWN1dGUgdGhpcyBmdW5jdGlvbiB0byBzdG9wIHRoZSBtb2RhbCBmcm9tIGJlaW5nIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlrp/ooYzjgZnjgovjgajjgIHjg4DjgqTjgqLjg63jgrDjga7pnZ7ooajnpLrjgYzjgq3jg6Pjg7Pjgrvjg6vjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgbW9kYWwgaXMgaGlkZGVuLlsvZW5dXG4gICAqIFtqYV3jg6Ljg7zjg4Djg6vjgYzpmqDjgozjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQubW9kYWxcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgZGVmYXVsdFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYW5pbWF0aW9uIHVzZWQgd2hlbiBzaG93aW5nIGFuZCBoaWRpbmcgdGhlIG1vZGFsLiBDYW4gYmUgZWl0aGVyIGBcIm5vbmVcImAsIGBcImZhZGVcImAgb3IgYFwibGlmdFwiYC5bL2VuXVxuICAgKiAgW2phXeODouODvOODgOODq+OCkuihqOekuuOBmeOCi+mam+OBruOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwi44KC44GX44GP44GvXCJmYWRlXCIsXCJsaWZ0XCLjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIDxjb2RlPntkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9PC9jb2RlPlsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9kZWZhdWx0REJCID0gKCkgPT4gdW5kZWZpbmVkO1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuICB9XG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHNjaGVtZTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBfYW5pbWF0b3JEaWN0LFxuICAgICAgYmFzZUNsYXNzOiBNb2RhbEFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ01vZGFsQW5pbWF0b3InLFxuICAgICAgZGVmYXVsdEFuaW1hdGlvbjogdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uRGV2aWNlQmFja0J1dHRvblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQmFjay1idXR0b24gaGFuZGxlci5bL2VuXVxuICAgKiAgIFtqYV3jg5Djg4Pjgq/jg5zjgr/jg7Pjg4/jg7Pjg4njg6njgIJbL2phXVxuICAgKi9cblxuICBfY29tcGlsZSgpIHtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgdGhpcy5zdHlsZS56SW5kZXggPSAxMDAwMTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcubW9kYWxfX2NvbnRlbnQnKSkge1xuICAgICAgY29uc3QgY29udGVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgY29udGVudC5jbGFzc0xpc3QuYWRkKCdtb2RhbF9fY29udGVudCcpO1xuXG4gICAgICB3aGlsZSAodGhpcy5jaGlsZE5vZGVzWzBdKSB7XG4gICAgICAgIGNvbnN0IG5vZGUgPSB0aGlzLmNoaWxkTm9kZXNbMF07XG4gICAgICAgIHRoaXMucmVtb3ZlQ2hpbGQobm9kZSk7XG4gICAgICAgIGNvbnRlbnQuaW5zZXJ0QmVmb3JlKG5vZGUsIG51bGwpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICAgIH1cblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgdGhpcy5fc2NoZW1lKTtcbiAgfVxuXG4gIF90b2dnbGVTdHlsZShzaG91bGRTaG93KSB7XG4gICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gc2hvdWxkU2hvdyA/ICd0YWJsZScgOiAnbm9uZSc7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2soKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIHZpc2libGUgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeimgee0oOOBjOimi+OBiOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNob3dcbiAgICogQHNpZ25hdHVyZSBzaG93KFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwibm9uZVwiYCBhbmQgYFwiZmFkZVwiYC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcIm5vbmVcIiwgXCJmYWRlXCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIHRoZSBtb2RhbCBoYXMgYmVlbiByZXZlYWxlZC5bL2VuXVxuICAgKiAgIFtqYV3jg6Ljg7zjg4Djg6vjgYzooajnpLrjgZXjgozntYLjgo/jgaPjgZ/lvozjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyBtb2RhbC5bL2VuXVxuICAgKiAgIFtqYV3jg6Ljg7zjg4Djg6vjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgZGlzcGxheWVkIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCB0b2dnbGVcbiAgICogQHNpZ25hdHVyZSB0b2dnbGUoW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJub25lXCJgIGFuZCBgXCJmYWRlXCJgLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAglwibm9uZVwiLCBcImZhZGVcIuOBruOBhOOBmuOCjOOBi+OCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgYWZ0ZXIgdGhlIG1vZGFsIGhhcyBiZWVuIHJldmVhbGVkLlsvZW5dXG4gICAqICAgW2phXeODouODvOODgOODq+OBjOihqOekuuOBleOCjOe1guOCj+OBo+OBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ub2dnbGUgbW9kYWwgdmlzaWJpbGl0eS5bL2VuXVxuICAgKiAgIFtqYV3jg6Ljg7zjg4Djg6vjga7ooajnpLrjgpLliIfjgormm7/jgYjjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcIm5vbmVcImAgYW5kIGBcImZhZGVcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJub25lXCIsIFwiZmFkZVwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1UaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCBhZnRlciB0aGUgbW9kYWwgaGFzIGJlZW4gcmV2ZWFsZWQuWy9lbl1cbiAgICogICBbamFd44Oi44O844OA44Or44GM6KGo56S644GV44KM57WC44KP44Gj44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhpZGUgbW9kYWwuWy9lbl1cbiAgICogICBbamFd44Oi44O844OA44Or44KS6Z2e6KGo56S644Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIGhpZGRlbiBlbGVtZW50Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsuLi5zdXBlci5vYnNlcnZlZEF0dHJpYnV0ZXMsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ2NsYXNzJykge1xuICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3VwZXIuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBBbmltYXRvclxuICAgKi9cbiAgc3RhdGljIHJlZ2lzdGVyQW5pbWF0b3IobmFtZSwgQW5pbWF0b3IpIHtcbiAgICBpZiAoIShBbmltYXRvci5wcm90b3R5cGUgaW5zdGFuY2VvZiBNb2RhbEFuaW1hdG9yKSkge1xuICAgICAgdXRpbC50aHJvd0FuaW1hdG9yKCdNb2RhbCcpO1xuICAgIH1cbiAgICBfYW5pbWF0b3JEaWN0W25hbWVdID0gQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGFuaW1hdG9ycygpIHtcbiAgICByZXR1cm4gX2FuaW1hdG9yRGljdDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgTW9kYWxBbmltYXRvcigpIHtcbiAgICByZXR1cm4gTW9kYWxBbmltYXRvcjtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5Nb2RhbCA9IE1vZGFsRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLW1vZGFsJywgTW9kYWxFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuXG5jb25zdCB3aWR0aFRvUHggPSAod2lkdGgpID0+IHtcbiAgY29uc3QgW3ZhbHVlLCBweF0gPSBbcGFyc2VJbnQod2lkdGgsIDEwKSwgL3B4Ly50ZXN0KHdpZHRoKV07XG4gIHJldHVybiBweCA/IHZhbHVlIDogTWF0aC5yb3VuZChkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoICogdmFsdWUgLyAxMDApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3dpcGVSZXZlYWwge1xuXG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgICdlbGVtZW50IGlnbm9yZVN3aXBlIGlzSW5pdGlhbFN0YXRlIG9uRHJhZ0NhbGxiYWNrIHN3aXBlTWF4IHN3aXBlTWluIHN3aXBlTWlkJ1xuICAgICAgLnNwbGl0KC9cXHMrLykuZm9yRWFjaChrZXkgPT4gdGhpc1trZXldID0gcGFyYW1zW2tleV0pO1xuXG4gICAgdGhpcy5lbGVtZW50SGFuZGxlciA9IHBhcmFtcy5lbGVtZW50SGFuZGxlciB8fCBwYXJhbXMuZWxlbWVudDtcbiAgICB0aGlzLmdldFRocmVzaG9sZCA9IHBhcmFtcy5nZXRUaHJlc2hvbGQgfHwgKCgpID0+IC41KTtcbiAgICB0aGlzLmdldFNpZGUgPSBwYXJhbXMuZ2V0U2lkZSB8fCAoKCkgPT4gJ2xlZnQnKTtcblxuICAgIHRoaXMuaGFuZGxlR2VzdHVyZSA9IHRoaXMuaGFuZGxlR2VzdHVyZS5iaW5kKHRoaXMpO1xuXG4gICAgdGhpcy5fc2hvdWxkRml4U2Nyb2xsID0gdXRpbC5nbG9iYWxzLmFjdHVhbE1vYmlsZU9TID09PSAnaW9zJztcbiAgfVxuXG4gIHVwZGF0ZShzd2lwZWFibGUgPSB0aGlzLmVsZW1lbnQuaGFzQXR0cmlidXRlKCdzd2lwZWFibGUnKSkge1xuICAgIGlmICghdGhpcy5nZXN0dXJlRGV0ZWN0b3IpIHtcbiAgICAgIHRoaXMuZ2VzdHVyZURldGVjdG9yID0gbmV3IEdlc3R1cmVEZXRlY3Rvcih0aGlzLmVsZW1lbnRIYW5kbGVyLCB7IGRyYWdNaW5EaXN0YW5jZTogMSwgcGFzc2l2ZTogIXRoaXMuX3Nob3VsZEZpeFNjcm9sbCB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBhY3Rpb24gPSBzd2lwZWFibGUgPyAnb24nIDogJ29mZic7XG4gICAgdGhpcy5nZXN0dXJlRGV0ZWN0b3JbYWN0aW9uXSgnZHJhZyBkcmFnc3RhcnQgZHJhZ2VuZCcsIHRoaXMuaGFuZGxlR2VzdHVyZSk7XG4gIH1cblxuICBoYW5kbGVHZXN0dXJlKGUpIHtcbiAgICBpZiAoZS5nZXN0dXJlKSB7XG4gICAgICBpZiAoZS50eXBlID09PSAnZHJhZ3N0YXJ0Jykge1xuICAgICAgICB0aGlzLm9uRHJhZ1N0YXJ0KGUpO1xuICAgICAgfSBlbHNlIGlmICghdGhpcy5faWdub3JlRHJhZykge1xuICAgICAgICBlLnR5cGUgPT09ICdkcmFnZW5kJyA/IHRoaXMub25EcmFnRW5kKGUpIDogdGhpcy5vbkRyYWcoZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgb25EcmFnU3RhcnQoZXZlbnQpIHtcbiAgICBjb25zdCBnZXREaXN0YW5jZSA9ICgpID0+IHRoaXMuZ2V0U2lkZSgpID09PSAnbGVmdCcgPyBldmVudC5nZXN0dXJlLmNlbnRlci5jbGllbnRYIDogd2luZG93LmlubmVyV2lkdGggLSBldmVudC5nZXN0dXJlLmNlbnRlci5jbGllbnRYO1xuICAgIHRoaXMuX2lnbm9yZURyYWcgPSBldmVudC5jb25zdW1lZCB8fCAhdXRpbC5pc1ZhbGlkR2VzdHVyZShldmVudCkgfHwgdGhpcy5pZ25vcmVTd2lwZShldmVudCwgZ2V0RGlzdGFuY2UoKSk7XG5cbiAgICBpZiAoIXRoaXMuX2lnbm9yZURyYWcpIHtcbiAgICAgIGV2ZW50LmNvbnN1bWUgJiYgZXZlbnQuY29uc3VtZSgpO1xuICAgICAgZXZlbnQuY29uc3VtZWQgPSB0cnVlO1xuXG4gICAgICB0aGlzLl93aWR0aCA9IHdpZHRoVG9QeCh0aGlzLmVsZW1lbnQuc3R5bGUud2lkdGggfHwgJzEwMCUnKTtcbiAgICAgIHRoaXMuX3N0YXJ0RGlzdGFuY2UgPSB0aGlzLl9kaXN0YW5jZSA9ICghKHRoaXMuaXNJbml0aWFsU3RhdGUgaW5zdGFuY2VvZiBGdW5jdGlvbikgfHwgdGhpcy5pc0luaXRpYWxTdGF0ZSgpKSA/IDAgOiB0aGlzLl93aWR0aDtcblxuICAgICAgdXRpbC5pb3NQcmV2ZW50U2Nyb2xsKHRoaXMuZ2VzdHVyZURldGVjdG9yKTtcbiAgICB9XG4gIH1cblxuICBvbkRyYWcoZXZlbnQpIHtcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGNvbnN0IGRlbHRhID0gdGhpcy5nZXRTaWRlKCkgPT09ICdsZWZ0JyA/IGV2ZW50Lmdlc3R1cmUuZGVsdGFYIDogLWV2ZW50Lmdlc3R1cmUuZGVsdGFYO1xuICAgIGNvbnN0IGRpc3RhbmNlID0gTWF0aC5tYXgoMCwgTWF0aC5taW4odGhpcy5fd2lkdGgsIHRoaXMuX3N0YXJ0RGlzdGFuY2UgKyBkZWx0YSkpO1xuICAgIGlmIChkaXN0YW5jZSAhPT0gdGhpcy5fZGlzdGFuY2UpIHtcbiAgICAgIHRoaXMuX2Rpc3RhbmNlID0gZGlzdGFuY2U7XG4gICAgICB0aGlzLnN3aXBlTWlkKHRoaXMuX2Rpc3RhbmNlLCB0aGlzLl93aWR0aCk7XG4gICAgfVxuICB9XG5cbiAgb25EcmFnRW5kKGV2ZW50KSB7XG4gICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG5cbiAgICBjb25zdCBkaXJlY3Rpb24gPSBldmVudC5nZXN0dXJlLmludGVyaW1EaXJlY3Rpb247XG4gICAgY29uc3QgaXNTd2lwZU1heCA9IHRoaXMuZ2V0U2lkZSgpICE9PSBkaXJlY3Rpb24gJiYgdGhpcy5fZGlzdGFuY2UgPiB0aGlzLl93aWR0aCAqIHRoaXMuZ2V0VGhyZXNob2xkKCk7XG4gICAgaXNTd2lwZU1heCA/IHRoaXMuc3dpcGVNYXgoKSA6IHRoaXMuc3dpcGVNaW4oKTtcbiAgfVxuXG4gIGRpc3Bvc2UoKSB7XG4gICAgdGhpcy5nZXN0dXJlRGV0ZWN0b3IgJiYgdGhpcy5nZXN0dXJlRGV0ZWN0b3IuZGlzcG9zZSgpO1xuICAgIHRoaXMuZ2VzdHVyZURldGVjdG9yID0gdGhpcy5lbGVtZW50ID0gdGhpcy5lbGVtZW50SGFuZGxlciA9IG51bGw7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBCYXNlQW5pbWF0b3IgZnJvbSAnLi4vLi4vb25zL2Jhc2UtYW5pbWF0b3InXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5hdmlnYXRvckFuaW1hdG9yIGV4dGVuZHMgQmFzZUFuaW1hdG9yIHtcblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAgICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMudGltaW5nXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLmR1cmF0aW9uXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBvcHRpb25zLmRlbGF5XG4gICAqL1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHV0aWwuZXh0ZW5kKHtcbiAgICAgIHRpbWluZzogJ2xpbmVhcicsXG4gICAgICBkdXJhdGlvbjogJzAuNCcsXG4gICAgICBkZWxheTogJzAnXG4gICAgfSwgb3B0aW9ucyB8fCB7fSk7XG5cbiAgICBzdXBlcihvcHRpb25zKTtcbiAgfVxuXG4gIHB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxuXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgYmxvY2socGFnZSkge1xuICAgIGNvbnN0IGJsb2NrZXIgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYFxuICAgICAgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IHdpZHRoOiAxMDAlOyBoZWlnaHQ6IDEwMCU7IHotaW5kZXg6IDEwMDAwMFwiPjwvZGl2PlxuICAgIGApO1xuICAgIHBhZ2UucGFyZW50Tm9kZS5hcHBlbmRDaGlsZChibG9ja2VyKTtcbiAgICByZXR1cm4gKCkgPT4gYmxvY2tlci5yZW1vdmUoKTtcbiAgfVxufVxuXG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuXG4vKipcbiAqIEFic3RyYWN0IHN3aXBlIGFuaW1hdG9yIGZvciBpT1MgbmF2aWdhdG9yIHRyYW5zaXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElPU1N3aXBlTmF2aWdhdG9yQW5pbWF0b3IgZXh0ZW5kcyBOYXZpZ2F0b3JBbmltYXRvciB7XG5cbiAgc3RhdGljIGdldCBzd2lwZWFibGUoKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcih7IGR1cmF0aW9uUmVzdG9yZSA9IDAuMSwgZHVyYXRpb25Td2lwZSA9IDAuMTUsIHRpbWluZ1N3aXBlID0gJ2xpbmVhcicsIC4uLnJlc3QgfSA9IHt9KSB7XG4gICAgc3VwZXIoey4uLnJlc3R9KTtcblxuICAgIGlmICh0aGlzLmNvbnN0cnVjdG9yID09PSBJT1NTd2lwZU5hdmlnYXRvckFuaW1hdG9yKSB7XG4gICAgICB1dGlsLnRocm93QWJzdHJhY3QoKTtcbiAgICB9XG5cbiAgICB0aGlzLmR1cmF0aW9uUmVzdG9yZSA9IGR1cmF0aW9uUmVzdG9yZTtcbiAgICB0aGlzLmR1cmF0aW9uU3dpcGUgPSBkdXJhdGlvblN3aXBlO1xuICAgIHRoaXMudGltaW5nU3dpcGUgPSB0aW1pbmdTd2lwZTtcblxuICAgIHRoaXMub3B0U3dpcGUgPSB7IHRpbWluZzogdGltaW5nU3dpcGUsIGR1cmF0aW9uOiBkdXJhdGlvblN3aXBlIH07XG4gICAgdGhpcy5vcHRSZXN0b3JlID0geyB0aW1pbmc6IHRpbWluZ1N3aXBlLCBkdXJhdGlvbjogZHVyYXRpb25SZXN0b3JlIH07XG5cbiAgICB0aGlzLnN3aXBlU2hhZG93ID0gdXRpbC5jcmVhdGVFbGVtZW50KFxuICAgICAgYDxkaXYgc3R5bGU9XCJwb3NpdGlvbjogYWJzb2x1dGU7IGhlaWdodDogMTAwJTsgd2lkdGg6IDEycHg7IHJpZ2h0OiAxMDAlOyB0b3A6IDA7IGJvdHRvbTogMDsgei1pbmRleDogLTE7YCArXG4gICAgICAgIGBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHRyYW5zcGFyZW50IDAsIHJnYmEoMCwwLDAsLjA0KSA0MCUsIHJnYmEoMCwwLDAsLjEyKSA4MCUsIHJnYmEoMCwwLDAsLjE2KSAxMDAlKTtcIj48L2Rpdj5gXG4gICAgKTtcblxuICAgIHRoaXMuaXNEcmFnU3RhcnQgPSB0cnVlO1xuICB9XG5cbiAgX2RlY29tcG9zZSgpIHtcbiAgICB1dGlsLnRocm93TWVtYmVyKCk7XG4gIH1cblxuICBfc2hvdWxkQW5pbWF0ZVRvb2xiYXIoKSB7XG4gICAgdXRpbC50aHJvd01lbWJlcigpO1xuICB9XG5cbiAgX2NhbGN1bGF0ZURlbHRhKCkge1xuICAgIHV0aWwudGhyb3dNZW1iZXIoKTtcbiAgfVxuXG4gIF9kcmFnU3RhcnRTZXR1cChlbnRlclBhZ2UsIGxlYXZlUGFnZSkge1xuICAgIHRoaXMuaXNEcmFnU3RhcnQgPSBmYWxzZTtcblxuICAgIC8vIEF2b2lkIGNvbnRlbnQgY2xpY2tzXG4gICAgdGhpcy51bmJsb2NrID0gc3VwZXIuYmxvY2sobGVhdmVQYWdlKTtcblxuICAgIC8vIE1hc2tcbiAgICBlbnRlclBhZ2UucGFyZW50RWxlbWVudC5pbnNlcnRCZWZvcmUodGhpcy5iYWNrZ3JvdW5kTWFzaywgZW50ZXJQYWdlKTtcblxuICAgIC8vIERlY29tcG9zaXRpb25cbiAgICB0aGlzLnRhcmdldCA9IHtcbiAgICAgIGVudGVyOiB1dGlsLmZpbmRUb29sYmFyUGFnZShlbnRlclBhZ2UpIHx8IGVudGVyUGFnZSxcbiAgICAgIGxlYXZlOiB1dGlsLmZpbmRUb29sYmFyUGFnZShsZWF2ZVBhZ2UpIHx8IGxlYXZlUGFnZSxcbiAgICB9O1xuICAgIHRoaXMuZGVjb21wID0ge1xuICAgICAgZW50ZXI6IHRoaXMuX2RlY29tcG9zZSh0aGlzLnRhcmdldC5lbnRlciksXG4gICAgICBsZWF2ZTogdGhpcy5fZGVjb21wb3NlKHRoaXMudGFyZ2V0LmxlYXZlKVxuICAgIH07XG5cbiAgICAvLyBBbmltYXRpb24gdmFsdWVzXG4gICAgdGhpcy5kZWx0YSA9IHRoaXMuX2NhbGN1bGF0ZURlbHRhKGxlYXZlUGFnZSwgdGhpcy5kZWNvbXAubGVhdmUpO1xuICAgIHRoaXMuc2hvdWxkQW5pbWF0ZVRvb2xiYXIgPSB0aGlzLl9zaG91bGRBbmltYXRlVG9vbGJhcih0aGlzLnRhcmdldC5lbnRlciwgdGhpcy50YXJnZXQubGVhdmUpO1xuXG4gICAgLy8gU2hhZG93ICYmIHN0eWxlc1xuICAgIGlmICh0aGlzLnNob3VsZEFuaW1hdGVUb29sYmFyKSB7XG4gICAgICB0aGlzLnN3aXBlU2hhZG93LnN0eWxlLnRvcCA9IHRoaXMuZGVjb21wLmxlYXZlLnRvb2xiYXIub2Zmc2V0SGVpZ2h0ICsgJ3B4JztcbiAgICAgIHRoaXMudGFyZ2V0LmxlYXZlLmFwcGVuZENoaWxkKHRoaXMuc3dpcGVTaGFkb3cpO1xuICAgICAgdGhpcy5fc2F2ZVN0eWxlKHRoaXMudGFyZ2V0LmVudGVyLCB0aGlzLnRhcmdldC5sZWF2ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGxlYXZlUGFnZS5hcHBlbmRDaGlsZCh0aGlzLnN3aXBlU2hhZG93KTtcbiAgICAgIHRoaXMuX3NhdmVTdHlsZShlbnRlclBhZ2UsIGxlYXZlUGFnZSk7XG4gICAgfVxuICAgIGxlYXZlUGFnZS5jbGFzc0xpc3QuYWRkKCdvdmVyZmxvdy12aXNpYmxlJyk7XG4gICAgdGhpcy5vdmVyZmxvd0VsZW1lbnQgPSBsZWF2ZVBhZ2U7XG4gICAgdGhpcy5kZWNvbXAubGVhdmUuY29udGVudC5jbGFzc0xpc3QuYWRkKCdjb250ZW50LXN3aXBpbmcnKTtcblxuICB9XG5cbiAgdHJhbnNsYXRlKGRpc3RhbmNlLCBtYXhXaWR0aCwgZW50ZXJQYWdlLCBsZWF2ZVBhZ2UpIHtcbiAgICB0aGlzLmlzU3dpcGluZyA9IHRydWU7XG5cbiAgICBpZiAoZW50ZXJQYWdlLnN0eWxlLmRpc3BsYXkgPT09ICdub25lJykge1xuICAgICAgZW50ZXJQYWdlLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICB9XG5cbiAgICBpZiAodGhpcy5pc0RyYWdTdGFydCkge1xuICAgICAgdGhpcy5tYXhXaWR0aCA9IG1heFdpZHRoO1xuICAgICAgdGhpcy5fZHJhZ1N0YXJ0U2V0dXAoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UpO1xuICAgIH1cblxuICAgIGNvbnN0IHN3aXBlUmF0aW8gPSAoZGlzdGFuY2UgLSBtYXhXaWR0aCkgLyBtYXhXaWR0aDtcblxuICAgIGlmICh0aGlzLnNob3VsZEFuaW1hdGVUb29sYmFyKSB7XG5cbiAgICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgICAgLyogRW50ZXIgcGFnZSAqL1xuXG4gICAgICAgIGFuaW1pdChbdGhpcy5kZWNvbXAuZW50ZXIuY29udGVudCwgdGhpcy5kZWNvbXAuZW50ZXIuYm90dG9tVG9vbGJhciwgdGhpcy5kZWNvbXAuZW50ZXIuYmFja2dyb3VuZF0pXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7c3dpcGVSYXRpbyAqIDI1fSUsIDAsIDApYCxcbiAgICAgICAgICAgIG9wYWNpdHk6IDEgKyBzd2lwZVJhdGlvICogMTAgLyAxMDAgLy8gMC45IC0+IDFcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAuZW50ZXIudG9vbGJhckNlbnRlcilcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt0aGlzLmRlbHRhLnRpdGxlICogc3dpcGVSYXRpb31weCwgMCwgMClgLFxuICAgICAgICAgICAgb3BhY2l0eTogMSArIHN3aXBlUmF0aW8gLy8gMCAtPiAxXG4gICAgICAgICAgfSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmVudGVyLmJhY2tCdXR0b25MYWJlbClcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMSArIHN3aXBlUmF0aW8gKiAxMCAvIDEwMCwgLy8gMC45IC0+IDFcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5kZWx0YS5sYWJlbCAqIHN3aXBlUmF0aW99cHgsIDAsIDApYFxuICAgICAgICAgIH0pLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLmRlY29tcC5lbnRlci5vdGhlcilcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMSArIHN3aXBlUmF0aW8gLy8gMCAtPiAxXG4gICAgICAgICAgfSksXG5cbiAgICAgICAgLyogTGVhdmUgcGFnZSAqL1xuXG4gICAgICAgIGFuaW1pdChbdGhpcy5kZWNvbXAubGVhdmUuY29udGVudCwgdGhpcy5kZWNvbXAubGVhdmUuYm90dG9tVG9vbGJhciwgdGhpcy5kZWNvbXAubGVhdmUuYmFja2dyb3VuZCwgdGhpcy5zd2lwZVNoYWRvd10pXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7ZGlzdGFuY2V9cHgsIDAsIDApYFxuICAgICAgICAgIH0pLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLmRlY29tcC5sZWF2ZS50b29sYmFyKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAtMSAqIHN3aXBlUmF0aW8gLy8gMSAtPiAwXG4gICAgICAgICAgfSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmxlYXZlLnRvb2xiYXJDZW50ZXIpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7KDEgKyBzd2lwZVJhdGlvKSAqIDEyNX0lLCAwLCAwKWBcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAubGVhdmUuYmFja0J1dHRvbkxhYmVsKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAtMSAqIHN3aXBlUmF0aW8sIC8vIDEgLT4gMFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt0aGlzLmRlbHRhLnRpdGxlICogKDEgKyBzd2lwZVJhdGlvKX1weCwgMCwgMClgXG4gICAgICAgICAgfSksXG5cblxuICAgICAgICAvKiBPdGhlciAqL1xuXG4gICAgICAgIGFuaW1pdCh0aGlzLnN3aXBlU2hhZG93KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAtMSAqIHN3aXBlUmF0aW8gLy8gMSAtPiAwXG4gICAgICAgICAgfSlcbiAgICAgICk7XG5cblxuICAgIH0gZWxzZSB7XG4gICAgICBhbmltaXQucnVuQWxsKFxuICAgICAgICBhbmltaXQobGVhdmVQYWdlKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke2Rpc3RhbmNlfXB4LCAwLCAwKWBcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQoZW50ZXJQYWdlKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke3N3aXBlUmF0aW8gKiAyNX0lLCAwLCAwKWAsXG4gICAgICAgICAgICBvcGFjaXR5OiAxICsgc3dpcGVSYXRpbyAqIDEwIC8gMTAwIC8vIDAuOSAtPiAxXG4gICAgICAgICAgfSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuc3dpcGVTaGFkb3cpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IC0xICogc3dpcGVSYXRpbyAvLyAxIC0+IDBcbiAgICAgICAgICB9KVxuICAgICAgKTtcbiAgICB9XG4gIH1cblxuICByZXN0b3JlKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIGlmICh0aGlzLmlzRHJhZ1N0YXJ0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuc2hvdWxkQW5pbWF0ZVRvb2xiYXIpIHtcblxuICAgICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgICAvKiBFbnRlciBwYWdlICovXG5cbiAgICAgICAgYW5pbWl0KFt0aGlzLmRlY29tcC5lbnRlci5jb250ZW50LCB0aGlzLmRlY29tcC5lbnRlci5ib3R0b21Ub29sYmFyLCB0aGlzLmRlY29tcC5lbnRlci5iYWNrZ3JvdW5kXSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTI1JSwgMCwgMCknLFxuICAgICAgICAgICAgb3BhY2l0eTogMC45XG4gICAgICAgICAgfSwgdGhpcy5vcHRSZXN0b3JlKSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAuZW50ZXIudG9vbGJhckNlbnRlcilcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoLSR7dGhpcy5kZWx0YS50aXRsZX1weCwgMCwgMClgLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYG9wYWNpdHkgJHt0aGlzLmR1cmF0aW9uUmVzdG9yZX1zIGxpbmVhciwgdHJhbnNmb3JtICR7dGhpcy5kdXJhdGlvblJlc3RvcmV9cyAke3RoaXMudGltaW5nU3dpcGV9YCxcbiAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAuZW50ZXIuYmFja0J1dHRvbkxhYmVsKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgtJHt0aGlzLmRlbHRhLmxhYmVsfXB4LCAwLCAwKWBcbiAgICAgICAgICB9LCB0aGlzLm9wdFJlc3RvcmUpLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLmRlY29tcC5lbnRlci5vdGhlcilcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICAgIH0sIHRoaXMub3B0UmVzdG9yZSksXG5cbiAgICAgICAgLyogTGVhdmUgcGFnZSAqL1xuXG4gICAgICAgIGFuaW1pdChbdGhpcy5kZWNvbXAubGVhdmUuY29udGVudCwgdGhpcy5kZWNvbXAubGVhdmUuYm90dG9tVG9vbGJhciwgdGhpcy5kZWNvbXAubGVhdmUuYmFja2dyb3VuZCwgdGhpcy5zd2lwZVNoYWRvd10pXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsIDAsIDApYFxuICAgICAgICAgIH0sIHRoaXMub3B0UmVzdG9yZSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmxlYXZlLnRvb2xiYXIpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9LCB0aGlzLm9wdFJlc3RvcmUpLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLmRlY29tcC5sZWF2ZS50b29sYmFyQ2VudGVyKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCAwLCAwKWBcbiAgICAgICAgICB9LCB0aGlzLm9wdFJlc3RvcmUpLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLmRlY29tcC5sZWF2ZS5iYWNrQnV0dG9uTGFiZWwpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDEsXG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCAwLCAwKWAsXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBgb3BhY2l0eSAke3RoaXMuZHVyYXRpb25SZXN0b3JlfXMgbGluZWFyLCB0cmFuc2Zvcm0gJHt0aGlzLmR1cmF0aW9uUmVzdG9yZX1zICR7dGhpcy50aW1pbmdTd2lwZX1gXG4gICAgICAgICAgfSksXG5cblxuICAgICAgICAvKiBPdGhlciAqL1xuXG4gICAgICAgIGFuaW1pdCh0aGlzLnN3aXBlU2hhZG93KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAwXG4gICAgICAgICAgfSwgdGhpcy5vcHRSZXN0b3JlKVxuICAgICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc2V0KHRoaXMudGFyZ2V0LmVudGVyLCB0aGlzLnRhcmdldC5sZWF2ZSk7XG4gICAgICAgICAgICBlbnRlclBhZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgfSlcbiAgICAgICk7XG5cblxuICAgIH0gZWxzZSB7XG4gICAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICAgIGFuaW1pdChlbnRlclBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoLTI1JSwgMCwgMCknLFxuICAgICAgICAgIG9wYWNpdHk6IDAuOVxuICAgICAgICB9LCB0aGlzLm9wdFJlc3RvcmUpLFxuXG4gICAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknXG4gICAgICAgIH0sIHRoaXMub3B0UmVzdG9yZSlcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHRoaXMuX3Jlc2V0KGVudGVyUGFnZSwgbGVhdmVQYWdlKTtcbiAgICAgICAgICBlbnRlclBhZ2Uuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XG5cbiAgcG9wU3dpcGUoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRoaXMuaXNEcmFnU3RhcnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5zaG91bGRBbmltYXRlVG9vbGJhcikge1xuXG4gICAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICAgIC8qIEVudGVyIHBhZ2UgKi9cblxuICAgICAgICBhbmltaXQoW3RoaXMuZGVjb21wLmVudGVyLmNvbnRlbnQsIHRoaXMuZGVjb21wLmVudGVyLmJvdHRvbVRvb2xiYXIsIHRoaXMuZGVjb21wLmVudGVyLmJhY2tncm91bmRdKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsXG4gICAgICAgICAgICBvcGFjaXR5OiAxXG4gICAgICAgICAgfSwgdGhpcy5vcHRTd2lwZSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmVudGVyLnRvb2xiYXJDZW50ZXIpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsIDAsIDApYCxcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGBvcGFjaXR5ICR7dGhpcy5kdXJhdGlvblN3aXBlfXMgbGluZWFyLCB0cmFuc2Zvcm0gJHt0aGlzLmR1cmF0aW9uU3dpcGV9cyAke3RoaXMudGltaW5nU3dpcGV9YCxcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAuZW50ZXIuYmFja0J1dHRvbkxhYmVsKVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwLCAwLCAwKWBcbiAgICAgICAgICB9LCB0aGlzLm9wdFN3aXBlKSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAuZW50ZXIub3RoZXIpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDFcbiAgICAgICAgICB9LCB0aGlzLm9wdFN3aXBlKSxcblxuICAgICAgICAvKiBMZWF2ZSBwYWdlICovXG5cbiAgICAgICAgYW5pbWl0KFt0aGlzLmRlY29tcC5sZWF2ZS5jb250ZW50LCB0aGlzLmRlY29tcC5sZWF2ZS5ib3R0b21Ub29sYmFyLCB0aGlzLmRlY29tcC5sZWF2ZS5iYWNrZ3JvdW5kXSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMTAwJSwgMCwgMClgXG4gICAgICAgICAgfSwgdGhpcy5vcHRTd2lwZSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmxlYXZlLnRvb2xiYXIpXG4gICAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDBcbiAgICAgICAgICB9LCB0aGlzLm9wdFN3aXBlKSxcblxuICAgICAgICBhbmltaXQodGhpcy5kZWNvbXAubGVhdmUudG9vbGJhckNlbnRlcilcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMTI1JSwgMCwgMClgXG4gICAgICAgICAgfSwgdGhpcy5vcHRTd2lwZSksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuZGVjb21wLmxlYXZlLmJhY2tCdXR0b25MYWJlbClcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgb3BhY2l0eTogMCxcbiAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5kZWx0YS50aXRsZX1weCwgMCwgMClgLFxuICAgICAgICAgICAgdHJhbnNpdGlvbjogYG9wYWNpdHkgJHt0aGlzLmR1cmF0aW9uU3dpcGV9cyBsaW5lYXIsIHRyYW5zZm9ybSAke3RoaXMuZHVyYXRpb25Td2lwZX1zICR7dGhpcy50aW1pbmdTd2lwZX1gXG4gICAgICAgICAgfSksXG5cblxuICAgICAgICAvKiBPdGhlciAqL1xuXG4gICAgICAgIGFuaW1pdCh0aGlzLnN3aXBlU2hhZG93KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt0aGlzLm1heFdpZHRofXB4LCAwLCAwKWBcbiAgICAgICAgICB9LCB0aGlzLm9wdFN3aXBlKVxuICAgICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc2V0KHRoaXMudGFyZ2V0LmVudGVyLCB0aGlzLnRhcmdldC5sZWF2ZSk7XG4gICAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgICAgZG9uZSgpO1xuICAgICAgICAgIH0pXG4gICAgICApO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgICAgYW5pbWl0KGVudGVyUGFnZSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScsXG4gICAgICAgICAgb3BhY2l0eTogMS4wXG4gICAgICAgIH0sIHRoaXMub3B0U3dpcGUpLFxuXG4gICAgICAgIGFuaW1pdChsZWF2ZVBhZ2UpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMTAwJSwgMCwgMCknXG4gICAgICAgIH0sIHRoaXMub3B0U3dpcGUpXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB0aGlzLl9yZXNldChlbnRlclBhZ2UsIGxlYXZlUGFnZSk7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIF9zYXZlU3R5bGUoLi4uYXJncykge1xuICAgIHRoaXMuX3NhdmVkU3R5bGUgPSBuZXcgV2Vha01hcCgpO1xuICAgIGNvbnN0IHNhdmUgPSBlbCA9PiB0aGlzLl9zYXZlZFN0eWxlLnNldChlbCwgZWwuZ2V0QXR0cmlidXRlKCdzdHlsZScpKTtcbiAgICBhcmdzLmZvckVhY2goc2F2ZSk7XG5cbiAgICBPYmplY3Qua2V5cyh0aGlzLmRlY29tcCkuZm9yRWFjaChwID0+IHtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMuZGVjb21wW3BdKS5mb3JFYWNoKGsgPT4ge1xuICAgICAgICAodGhpcy5kZWNvbXBbcF1ba10gaW5zdGFuY2VvZiBBcnJheSA/IHRoaXMuZGVjb21wW3BdW2tdIDogW3RoaXMuZGVjb21wW3BdW2tdXSkuZm9yRWFjaChzYXZlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgX3Jlc3RvcmVTdHlsZSguLi5hcmdzKSB7XG4gICAgY29uc3QgcmVzdG9yZSA9IGVsID0+IHtcbiAgICAgIHRoaXMuX3NhdmVkU3R5bGUuZ2V0KGVsKSA9PT0gbnVsbCA/IGVsLnJlbW92ZUF0dHJpYnV0ZSgnc3R5bGUnKSA6IGVsLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCB0aGlzLl9zYXZlZFN0eWxlLmdldChlbCkpXG4gICAgICB0aGlzLl9zYXZlZFN0eWxlLmRlbGV0ZShlbClcbiAgICB9O1xuICAgIGFyZ3MuZm9yRWFjaChyZXN0b3JlKTtcblxuICAgIE9iamVjdC5rZXlzKHRoaXMuZGVjb21wKS5mb3JFYWNoKHAgPT4ge1xuICAgICAgT2JqZWN0LmtleXModGhpcy5kZWNvbXBbcF0pLmZvckVhY2goayA9PiB7XG4gICAgICAgICh0aGlzLmRlY29tcFtwXVtrXSBpbnN0YW5jZW9mIEFycmF5ID8gdGhpcy5kZWNvbXBbcF1ba10gOiBbdGhpcy5kZWNvbXBbcF1ba11dKS5mb3JFYWNoKHJlc3RvcmUpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfcmVzZXQoLi4uYXJncykge1xuICAgIHRoaXMuaXNTd2lwaW5nID0gZmFsc2U7XG4gICAgdGhpcy5fc2F2ZWRTdHlsZSAmJiB0aGlzLl9yZXN0b3JlU3R5bGUoLi4uYXJncyk7XG4gICAgdGhpcy51bmJsb2NrICYmIHRoaXMudW5ibG9jaygpO1xuICAgIHRoaXMuc3dpcGVTaGFkb3cucmVtb3ZlKCk7XG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICB0aGlzLm92ZXJmbG93RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdvdmVyZmxvdy12aXNpYmxlJyk7XG4gICAgdGhpcy5kZWNvbXAubGVhdmUuY29udGVudC5jbGFzc0xpc3QucmVtb3ZlKCdjb250ZW50LXN3aXBpbmcnKTtcbiAgICB0aGlzLmRlY29tcCA9IHRoaXMudGFyZ2V0ID0gdGhpcy5vdmVyZmxvd0VsZW1lbnQgPSB0aGlzLl9zYXZlZFN0eWxlID0gbnVsbDtcbiAgICB0aGlzLmlzRHJhZ1N0YXJ0ID0gdHJ1ZTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IElPU1N3aXBlTmF2aWdhdG9yQW5pbWF0b3IgZnJvbSAnLi9pb3Mtc3dpcGUtYW5pbWF0b3InO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCB0cmFuc2xhdGUzZCA9ICh4ID0gMCwgeSA9IDAsIHogPSAwKSA9PiBgdHJhbnNsYXRlM2QoJHt4fSwgJHt5fSwgJHt6fSlgO1xuXG4vKipcbiAqIFNsaWRlIGFuaW1hdG9yIGZvciBuYXZpZ2F0b3IgdHJhbnNpdGlvbiBsaWtlIGlPUydzIHNjcmVlbiBzbGlkZSB0cmFuc2l0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJT1NTbGlkZU5hdmlnYXRvckFuaW1hdG9yIGV4dGVuZHMgSU9TU3dpcGVOYXZpZ2F0b3JBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3IoeyB0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKDAuMywgLjQsIDAsIC45KScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjQsIC4uLnJlc3QgfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiwgLi4ucmVzdCB9KTtcblxuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoXG4gICAgICBgPGRpdiBzdHlsZT1cInBvc2l0aW9uOiBhYnNvbHV0ZTsgd2lkdGg6IDEwMCU7IGhlaWdodDogMTAwJTtgICtcbiAgICAgICAgYGJhY2tncm91bmQtY29sb3I6IGJsYWNrOyB6LWluZGV4OiAyXCI+PC9kaXY+YFxuICAgICk7XG4gIH1cblxuICBfZGVjb21wb3NlKHBhZ2UpIHtcbiAgICBjb25zdCB0b29sYmFyID0gcGFnZS5fZ2V0VG9vbGJhckVsZW1lbnQoKTtcbiAgICBjb25zdCBsZWZ0ID0gdG9vbGJhci5fZ2V0VG9vbGJhckxlZnRJdGVtc0VsZW1lbnQoKTtcbiAgICBjb25zdCByaWdodCA9IHRvb2xiYXIuX2dldFRvb2xiYXJSaWdodEl0ZW1zRWxlbWVudCgpO1xuXG4gICAgY29uc3QgZXhjbHVkZUJhY2tCdXR0b24gPSBmdW5jdGlvbihlbGVtZW50cykge1xuICAgICAgY29uc3QgcmVzdWx0ID0gW107XG5cbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZWxlbWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGVsZW1lbnRzW2ldLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09ICdvbnMtYmFjay1idXR0b24nKSB7XG4gICAgICAgICAgcmVzdWx0LnB1c2goZWxlbWVudHNbaV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfTtcblxuICAgIGNvbnN0IG90aGVyID0gW11cbiAgICAgIC5jb25jYXQobGVmdC5jaGlsZHJlbi5sZW5ndGggPT09IDAgPyBsZWZ0IDogZXhjbHVkZUJhY2tCdXR0b24obGVmdC5jaGlsZHJlbikpXG4gICAgICAuY29uY2F0KHJpZ2h0LmNoaWxkcmVuLmxlbmd0aCA9PT0gMCA/IHJpZ2h0IDogZXhjbHVkZUJhY2tCdXR0b24ocmlnaHQuY2hpbGRyZW4pKTtcblxuICAgIHJldHVybiB7XG4gICAgICB0b29sYmFyQ2VudGVyOiB0b29sYmFyLl9nZXRUb29sYmFyQ2VudGVySXRlbXNFbGVtZW50KCksXG4gICAgICBiYWNrQnV0dG9uSWNvbjogdG9vbGJhci5fZ2V0VG9vbGJhckJhY2tCdXR0b25JY29uRWxlbWVudCgpLFxuICAgICAgYmFja0J1dHRvbkxhYmVsOiB0b29sYmFyLl9nZXRUb29sYmFyQmFja0J1dHRvbkxhYmVsRWxlbWVudCgpLFxuICAgICAgb3RoZXI6IG90aGVyLFxuICAgICAgY29udGVudDogcGFnZS5fZ2V0Q29udGVudEVsZW1lbnQoKSxcbiAgICAgIGJhY2tncm91bmQ6IHBhZ2UuX2dldEJhY2tncm91bmRFbGVtZW50KCksXG4gICAgICB0b29sYmFyOiB0b29sYmFyLFxuICAgICAgYm90dG9tVG9vbGJhcjogcGFnZS5fZ2V0Qm90dG9tVG9vbGJhckVsZW1lbnQoKVxuICAgIH07XG4gIH1cblxuICBfc2hvdWxkQW5pbWF0ZVRvb2xiYXIoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UpIHtcbiAgICBjb25zdCB0b29sYmFycyA9IGVudGVyUGFnZS5fY2FuQW5pbWF0ZVRvb2xiYXIoKSAmJiBsZWF2ZVBhZ2UuX2NhbkFuaW1hdGVUb29sYmFyKCk7XG5cbiAgICBjb25zdCBlbnRlclRvb2xiYXIgPSBlbnRlclBhZ2UuX2dldFRvb2xiYXJFbGVtZW50KCk7XG4gICAgY29uc3QgbGVhdmVUb29sYmFyID0gbGVhdmVQYWdlLl9nZXRUb29sYmFyRWxlbWVudCgpO1xuXG4gICAgY29uc3QgaXNTdGF0aWMgPSBlbnRlclRvb2xiYXIuaGFzQXR0cmlidXRlKCdzdGF0aWMnKSB8fCBsZWF2ZVRvb2xiYXIuaGFzQXR0cmlidXRlKCdzdGF0aWMnKTtcbiAgICBjb25zdCBpc01hdGVyaWFsID0gdXRpbC5oYXNNb2RpZmllcihlbnRlclRvb2xiYXIsICdtYXRlcmlhbCcpIHx8IHV0aWwuaGFzTW9kaWZpZXIobGVhdmVUb29sYmFyLCAnbWF0ZXJpYWwnKTtcbiAgICBjb25zdCBpc1RyYW5zcGFyZW50ID0gdXRpbC5oYXNNb2RpZmllcihlbnRlclRvb2xiYXIsICd0cmFuc3BhcmVudCcpIHx8IHV0aWwuaGFzTW9kaWZpZXIobGVhdmVUb29sYmFyLCAndHJhbnNwYXJlbnQnKTtcblxuICAgIHJldHVybiB0b29sYmFycyAmJiAhaXNTdGF0aWMgJiYgIWlzTWF0ZXJpYWwgJiYgIWlzVHJhbnNwYXJlbnQ7XG4gIH1cblxuICBfY2FsY3VsYXRlRGVsdGEoZWxlbWVudCwgZGVjb21wb3NpdGlvbikge1xuICAgIGxldCB0aXRsZSwgbGFiZWw7XG5cbiAgICBjb25zdCBwYWdlUmVjdCA9IGVsZW1lbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgaWYgKGRlY29tcG9zaXRpb24uYmFja0J1dHRvbkxhYmVsLmNsYXNzTGlzdC5jb250YWlucygnYmFjay1idXR0b25fX2xhYmVsJykpIHtcbiAgICAgIGNvbnN0IGxhYmVsUmVjdCA9IGRlY29tcG9zaXRpb24uYmFja0J1dHRvbkxhYmVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgdGl0bGUgPSBNYXRoLnJvdW5kKHBhZ2VSZWN0LndpZHRoIC8gMiAtIGxhYmVsUmVjdC53aWR0aCAvIDIgLSBsYWJlbFJlY3QubGVmdCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRpdGxlID0gTWF0aC5yb3VuZCgocGFnZVJlY3Qud2lkdGggLyAyKSAqIDAuNik7XG4gICAgfVxuXG4gICAgaWYgKGRlY29tcG9zaXRpb24uYmFja0J1dHRvbkljb24uY2xhc3NMaXN0LmNvbnRhaW5zKCdiYWNrLWJ1dHRvbl9faWNvbicpKSB7XG4gICAgICBsYWJlbCA9IGRlY29tcG9zaXRpb24uYmFja0J1dHRvbkljb24uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkucmlnaHQgLSAyO1xuICAgIH1cblxuICAgIHJldHVybiB7dGl0bGUsIGxhYmVsfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcHVzaChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgIGxlYXZlUGFnZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmJhY2tncm91bmRNYXNrLCBsZWF2ZVBhZ2UpO1xuXG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBjb250ZW50UmVhZHkoZW50ZXJQYWdlLCAoKSA9PiB7XG4gICAgICBjb25zdCBlbnRlclBhZ2VUYXJnZXQgPSB1dGlsLmZpbmRUb29sYmFyUGFnZShlbnRlclBhZ2UpIHx8IGVudGVyUGFnZTtcbiAgICAgIGNvbnN0IGxlYXZlUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGxlYXZlUGFnZSkgfHwgbGVhdmVQYWdlO1xuICAgICAgY29uc3QgZW50ZXJQYWdlRGVjb21wb3NpdGlvbiA9IHRoaXMuX2RlY29tcG9zZShlbnRlclBhZ2VUYXJnZXQpO1xuICAgICAgY29uc3QgbGVhdmVQYWdlRGVjb21wb3NpdGlvbiA9IHRoaXMuX2RlY29tcG9zZShsZWF2ZVBhZ2VUYXJnZXQpO1xuXG4gICAgICBjb25zdCBkZWx0YSA9IHRoaXMuX2NhbGN1bGF0ZURlbHRhKGxlYXZlUGFnZSwgZW50ZXJQYWdlRGVjb21wb3NpdGlvbik7XG5cbiAgICAgIGNvbnN0IHNob3VsZEFuaW1hdGVUb29sYmFyID0gdGhpcy5fc2hvdWxkQW5pbWF0ZVRvb2xiYXIoZW50ZXJQYWdlVGFyZ2V0LCBsZWF2ZVBhZ2VUYXJnZXQpO1xuXG4gICAgICBpZiAoc2hvdWxkQW5pbWF0ZVRvb2xiYXIpIHtcblxuICAgICAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICAgICAgYW5pbWl0KFtlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmNvbnRlbnQsIGVudGVyUGFnZURlY29tcG9zaXRpb24uYm90dG9tVG9vbGJhciwgZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5iYWNrZ3JvdW5kXSwgdGhpcy5kZWYpXG4gICAgICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCcxMDAlJykgfSxcbiAgICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCkgfVxuICAgICAgICAgICAgKSxcblxuICAgICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXIsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAwIH0sIHsgb3BhY2l0eTogMSB9KSxcblxuICAgICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXJDZW50ZXIsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgnMTI1JScpLCBvcGFjaXR5OiAxIH0sXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgICAgICksXG5cbiAgICAgICAgICBhbmltaXQoZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5iYWNrQnV0dG9uTGFiZWwsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChgJHtkZWx0YS50aXRsZX1weGApLCBvcGFjaXR5OiAwIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCksXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBgb3BhY2l0eSAke3RoaXMuZHVyYXRpb259cyBsaW5lYXIsIHRyYW5zZm9ybSAke3RoaXMuZHVyYXRpb259cyAke3RoaXMudGltaW5nfWBcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKSxcblxuICAgICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLm90aGVyLCB0aGlzLmRlZilcbiAgICAgICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgICAgICB7IG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICAgICAgeyBjc3M6IHsgb3BhY2l0eTogMSB9LCB0aW1pbmc6ICdsaW5lYXInIH1cbiAgICAgICAgICAgICksXG5cbiAgICAgICAgICBhbmltaXQoW2xlYXZlUGFnZURlY29tcG9zaXRpb24uY29udGVudCwgbGVhdmVQYWdlRGVjb21wb3NpdGlvbi5ib3R0b21Ub29sYmFyLCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLmJhY2tncm91bmRdLCB0aGlzLmRlZilcbiAgICAgICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoKSwgb3BhY2l0eTogMSB9LFxuICAgICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJy0yNSUnKSwgb3BhY2l0eTogMC45IH1cbiAgICAgICAgICAgIClcbiAgICAgICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9KSxcblxuICAgICAgICAgIGFuaW1pdChsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXJDZW50ZXIsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpLCBvcGFjaXR5OiAxIH0sXG4gICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKGAtJHtkZWx0YS50aXRsZX1weGApLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogYG9wYWNpdHkgJHt0aGlzLmR1cmF0aW9ufXMgbGluZWFyLCB0cmFuc2Zvcm0gJHt0aGlzLmR1cmF0aW9ufXMgJHt0aGlzLnRpbWluZ31gXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICksXG5cbiAgICAgICAgICBhbmltaXQobGVhdmVQYWdlRGVjb21wb3NpdGlvbi5iYWNrQnV0dG9uTGFiZWwsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpLCBvcGFjaXR5OiAxIH0sXG4gICAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZChgLSR7ZGVsdGEubGFiZWx9cHhgKSwgb3BhY2l0eTogMCB9XG4gICAgICAgICAgICApLFxuXG4gICAgICAgICAgYW5pbWl0KGxlYXZlUGFnZURlY29tcG9zaXRpb24ub3RoZXIsIHRoaXMuZGVmKVxuICAgICAgICAgICAgLmRlZmF1bHQoIHsgb3BhY2l0eTogMSB9LCB7IGNzczogeyBvcGFjaXR5OiAwIH0sIHRpbWluZzogJ2xpbmVhcicgfSlcblxuICAgICAgICApO1xuXG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgICAgICBhbmltaXQoZW50ZXJQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgICAgIC5kZWZhdWx0KCB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJzEwMCUnKSwgfSwgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCkgfSksXG5cbiAgICAgICAgICBhbmltaXQobGVhdmVQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgICAgIC5kZWZhdWx0KCB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoKSwgb3BhY2l0eTogMSB9LCB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJy0yNSUnKSwgb3BhY2l0eTogLjkgfSlcbiAgICAgICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuXG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwb3AoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgaWYgKHRoaXMuaXNTd2lwaW5nKSB7XG4gICAgICByZXR1cm4gdGhpcy5wb3BTd2lwZShlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spO1xuICAgIH1cblxuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgZW50ZXJQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGVudGVyUGFnZSk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGNvbnN0IGVudGVyUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGVudGVyUGFnZSkgfHwgZW50ZXJQYWdlO1xuICAgIGNvbnN0IGxlYXZlUGFnZVRhcmdldCA9IHV0aWwuZmluZFRvb2xiYXJQYWdlKGxlYXZlUGFnZSkgfHwgbGVhdmVQYWdlO1xuICAgIGNvbnN0IGVudGVyUGFnZURlY29tcG9zaXRpb24gPSB0aGlzLl9kZWNvbXBvc2UoZW50ZXJQYWdlVGFyZ2V0KTtcbiAgICBjb25zdCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uID0gdGhpcy5fZGVjb21wb3NlKGxlYXZlUGFnZVRhcmdldCk7XG5cbiAgICBjb25zdCBkZWx0YSA9IHRoaXMuX2NhbGN1bGF0ZURlbHRhKGxlYXZlUGFnZSwgbGVhdmVQYWdlRGVjb21wb3NpdGlvbik7XG5cbiAgICBjb25zdCBzaG91bGRBbmltYXRlVG9vbGJhciA9IHRoaXMuX3Nob3VsZEFuaW1hdGVUb29sYmFyKGVudGVyUGFnZVRhcmdldCwgbGVhdmVQYWdlVGFyZ2V0KTtcblxuICAgIGlmIChzaG91bGRBbmltYXRlVG9vbGJhcikge1xuICAgICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgICBhbmltaXQoW2VudGVyUGFnZURlY29tcG9zaXRpb24uY29udGVudCwgZW50ZXJQYWdlRGVjb21wb3NpdGlvbi5ib3R0b21Ub29sYmFyLCBlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmJhY2tncm91bmRdLCB0aGlzLmRlZilcbiAgICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgnLTI1JScpLCBvcGFjaXR5OiAuOSB9LFxuICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCksIG9wYWNpdHk6IDEgfVxuICAgICAgICAgICksXG5cbiAgICAgICAgYW5pbWl0KGVudGVyUGFnZURlY29tcG9zaXRpb24udG9vbGJhckNlbnRlciwgdGhpcy5kZWYpXG4gICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoYC0ke2RlbHRhLnRpdGxlfXB4YCksIG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpLFxuICAgICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgICB0cmFuc2l0aW9uOiBgb3BhY2l0eSAke3RoaXMuZHVyYXRpb259cyBsaW5lYXIsIHRyYW5zZm9ybSAke3RoaXMuZHVyYXRpb259cyAke3RoaXMudGltaW5nfWBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLmJhY2tCdXR0b25MYWJlbCwgdGhpcy5kZWYpXG4gICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoYC0ke2RlbHRhLmxhYmVsfXB4YCkgfSxcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChlbnRlclBhZ2VEZWNvbXBvc2l0aW9uLm90aGVyLCB0aGlzLmRlZilcbiAgICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICAgIHsgb3BhY2l0eTogMCB9LFxuICAgICAgICAgICAgeyBjc3M6IHsgb3BhY2l0eTogMSB9LCB0aW1pbmc6ICdsaW5lYXInIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChbbGVhdmVQYWdlRGVjb21wb3NpdGlvbi5jb250ZW50LCBsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLmJvdHRvbVRvb2xiYXIsIGxlYXZlUGFnZURlY29tcG9zaXRpb24uYmFja2dyb3VuZF0sIHRoaXMuZGVmKVxuICAgICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCkgfSxcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgnMTAwJScpIH1cbiAgICAgICAgICApXG4gICAgICAgICAgLndhaXQoMClcbiAgICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgICB9KSxcblxuICAgICAgICBhbmltaXQobGVhdmVQYWdlRGVjb21wb3NpdGlvbi50b29sYmFyLCB0aGlzLmRlZilcbiAgICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICAgIHsgb3BhY2l0eTogMSB9LFxuICAgICAgICAgICAgeyBvcGFjaXR5OiAwIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLnRvb2xiYXJDZW50ZXIsIHRoaXMuZGVmKVxuICAgICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCkgfSxcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgnMTI1JScpIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChsZWF2ZVBhZ2VEZWNvbXBvc2l0aW9uLmJhY2tCdXR0b25MYWJlbCwgdGhpcy5kZWYpXG4gICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoKSwgb3BhY2l0eTogMSB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKGAke2RlbHRhLnRpdGxlfXB4YCksXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgIHRyYW5zaXRpb246IGBvcGFjaXR5ICR7dGhpcy5kdXJhdGlvbn1zIGxpbmVhciwgdHJhbnNmb3JtICR7dGhpcy5kdXJhdGlvbn1zICR7dGhpcy50aW1pbmd9YFxuICAgICAgICAgICAgfVxuICAgICAgICAgIClcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgICAgYW5pbWl0KGVudGVyUGFnZSwgdGhpcy5kZWYpXG4gICAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgICB7IHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoJy0yNSUnKSwgb3BhY2l0eTogLjkgfSxcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgpLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgICApLFxuXG4gICAgICAgIGFuaW1pdChsZWF2ZVBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgICAgeyB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKCkgfSxcbiAgICAgICAgICAgIHsgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgnMTAwJScpIH1cbiAgICAgICAgICApXG4gICAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICBkb25lKCk7XG4gICAgICAgICAgfSlcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuXG4vKipcbiAqIExpZnQgc2NyZWVuIHRyYW5zaXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElPU0xpZnROYXZpZ2F0b3JBbmltYXRvciBleHRlbmRzIE5hdmlnYXRvckFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC4xLCAxKScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjR9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuXG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzayA9IHV0aWwuY3JlYXRlRWxlbWVudChcbiAgICAgICc8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOycgK1xuICAgICAgICAnYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KGJsYWNrLCB3aGl0ZSk7XCI+PC9kaXY+J1xuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgbGVhdmVQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGxlYXZlUGFnZSk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDEwMCUsIDApJyB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknIH1cbiAgICAgICAgKSxcblxuICAgICAgYW5pbWl0KGxlYXZlUGFnZSwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLCBvcGFjaXR5OiAxIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAtMTAlLCAwKScsIG9wYWNpdHk6IC45IH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBsZWF2ZVBhZ2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICB0aGlzLmJhY2tncm91bmRNYXNrLnJlbW92ZSgpO1xuICAgIGVudGVyUGFnZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmJhY2tncm91bmRNYXNrLCBlbnRlclBhZ2UpO1xuXG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZW50ZXJQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAtNDNweCwgMCknLCBvcGFjaXR5OiAuOSB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM0QoMCwgMCwgMCknLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCAwLCAwKScgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDEwMCUsIDApJyB9XG4gICAgICAgIClcbiAgICApO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgTmF2aWdhdG9yQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuXG5jb25zdCB0cmFuc2Zvcm0gPSAndHJhbnNsYXRlM2QoMCwgMCwgMCknO1xuXG4vKipcbiAqIEZhZGUtaW4gc2NyZWVuIHRyYW5zaXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIElPU0ZhZGVOYXZpZ2F0b3JBbmltYXRvciBleHRlbmRzIE5hdmlnYXRvckFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2xpbmVhcicsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjR9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcHVzaChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChlbnRlclBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybSwgb3BhY2l0eTogMCB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcbiAgICApO1xuXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybSwgb3BhY2l0eTogMSB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtLCBvcGFjaXR5OiAwIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBOYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5cbi8qKlxuICogU2xpZGUgYW5pbWF0b3IgZm9yIG5hdmlnYXRvciB0cmFuc2l0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRFNsaWRlTmF2aWdhdG9yQW5pbWF0b3IgZXh0ZW5kcyBOYXZpZ2F0b3JBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuNCwgMSknLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4zfSA9IHt9KSB7XG4gICAgc3VwZXIoe3RpbWluZywgZGVsYXksIGR1cmF0aW9ufSk7XG5cbiAgICB0aGlzLmJsYWNrTWFza09wYWNpdHkgPSAwLjQ7XG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzayA9IHV0aWwuY3JlYXRlRWxlbWVudChcbiAgICAgICc8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOyB6LWluZGV4OiAyOycgK1xuICAgICAgICAnYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7IG9wYWNpdHk6IDA7XCI+PC9kaXY+J1xuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgbGVhdmVQYWdlLnBhcmVudEVsZW1lbnQuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGxlYXZlUGFnZS5uZXh0U2libGluZyk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsIG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICB7IG9wYWNpdHk6IHRoaXMuYmxhY2tNYXNrT3BhY2l0eSB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGVudGVyUGFnZSwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMTAwJSwgMCwgMCknIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScgfVxuICAgICAgICApLFxuXG4gICAgICBhbmltaXQobGVhdmVQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC00NSUsIDAsIDApJyB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBlbnRlclBhZ2VcbiAgICogQHBhcmFtIHtPYmplY3R9IGxlYXZlUGFnZVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcG9wKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgZW50ZXJQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGVudGVyUGFnZS5uZXh0U2libGluZyk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsIG9wYWNpdHk6IHRoaXMuYmxhY2tNYXNrT3BhY2l0eSB9LFxuICAgICAgICAgIHsgb3BhY2l0eTogMCB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KGVudGVyUGFnZSwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoLTQ1JSwgMCwgMCknLCBvcGFjaXR5OiAuOSB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknLCBvcGFjaXR5OiAxIH1cbiAgICAgICAgKSxcblxuICAgICAgYW5pbWl0KGxlYXZlUGFnZSwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgxMDAlLCAwLCAwKScgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICB1bmJsb2NrKCk7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IE5hdmlnYXRvckFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcblxuLyoqXG4gKiBMaWZ0IHNjcmVlbiB0cmFuc2l0aW9uLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNRExpZnROYXZpZ2F0b3JBbmltYXRvciBleHRlbmRzIE5hdmlnYXRvckFuaW1hdG9yIHtcblxuICBjb25zdHJ1Y3Rvcih7dGltaW5nID0gJ2N1YmljLWJlemllciguMSwgLjcsIC4xLCAxKScsIGRlbGF5ID0gMC4wNSwgZHVyYXRpb24gPSAwLjR9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuXG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzayA9IHV0aWwuY3JlYXRlRWxlbWVudChcbiAgICAgICc8ZGl2IHN0eWxlPVwicG9zaXRpb246IGFic29sdXRlOyB3aWR0aDogMTAwJTsgaGVpZ2h0OiAxMDAlOycgK1xuICAgICAgICAnYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XCI+PC9kaXY+J1xuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwdXNoKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgbGVhdmVQYWdlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRoaXMuYmFja2dyb3VuZE1hc2ssIGxlYXZlUGFnZSk7XG5cbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGNvbnN0IG1hc2tDbGVhciA9IGFuaW1pdCh0aGlzLmJhY2tncm91bmRNYXNrKVxuICAgICAgLndhaXQodGhpcy5kZWxheSArIHRoaXMuZHVyYXRpb24pXG4gICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZE1hc2sucmVtb3ZlKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgbWFza0NsZWFyLFxuXG4gICAgICBhbmltaXQoZW50ZXJQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAxMDAlLCAwKScgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyB9XG4gICAgICAgICksXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdCh7IG9wYWNpdHk6IDEgfSwgeyBvcGFjaXR5OiAuNCB9KVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBwb3AoZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICBlbnRlclBhZ2UucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5iYWNrZ3JvdW5kTWFzaywgZW50ZXJQYWdlKTtcblxuICAgIGNvbnN0IHVuYmxvY2sgPSBzdXBlci5ibG9jayhlbnRlclBhZ2UpO1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcblxuICAgICAgYW5pbWl0KHRoaXMuYmFja2dyb3VuZE1hc2spXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkgKyB0aGlzLmR1cmF0aW9uKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kTWFzay5yZW1vdmUoKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQoZW50ZXJQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAuNCB9LCB7IG9wYWNpdHk6IDEgfSlcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMTAwJSwgMCknIH1cbiAgICAgICAgKVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBOYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5cbi8qKlxuICogRmFkZS1pbiArIExpZnQgc2NyZWVuIHRyYW5zaXRpb24uXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ERmFkZU5hdmlnYXRvckFuaW1hdG9yIGV4dGVuZHMgTmF2aWdhdG9yQW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnY3ViaWMtYmV6aWVyKDAuNCwgMCwgMC4yLCAxKScsIHRpbWluZ1BvcCA9ICdjdWJpYy1iZXppZXIoMC40LCAwLCAxLCAxKScsIGRlbGF5ID0gMCwgZHVyYXRpb24gPSAwLjJ9ID0ge30pIHtcbiAgICBzdXBlcih7dGltaW5nLCBkZWxheSwgZHVyYXRpb259KTtcbiAgICB0aGlzLnRpbWluZ1BvcCA9IHRpbWluZ1BvcDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge09iamVjdH0gZW50ZXJQYWdlXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBsZWF2ZVBhZ2VcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGNhbGxiYWNrKSB7XG4gICAgY29uc3QgdW5ibG9jayA9IHN1cGVyLmJsb2NrKGVudGVyUGFnZSk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuXG4gICAgICBhbmltaXQoZW50ZXJQYWdlLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzRCgwLCA0MnB4LCAwKScsIG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJywgb3BhY2l0eTogMSB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIHVuYmxvY2soKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICApO1xuXG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtPYmplY3R9IGVudGVyUGFnZVxuICAgKiBAcGFyYW0ge09iamVjdH0gbGVhdmVQYWdlXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIHBvcChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjb25zdCB1bmJsb2NrID0gc3VwZXIuYmxvY2soZW50ZXJQYWdlKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG5cbiAgICAgIGFuaW1pdChsZWF2ZVBhZ2UsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDAsIDApJywgb3BhY2l0eTogMSB9LFxuICAgICAgICAgIHsgY3NzOiB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNEKDAsIDM4cHgsIDApJywgb3BhY2l0eTogMCB9LCB0aW1pbmc6IHRoaXMudGltaW5nUG9wIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdW5ibG9jaygpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBOYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9uZU5hdmlnYXRvckFuaW1hdG9yIGV4dGVuZHMgTmF2aWdhdG9yQW5pbWF0b3Ige1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgc3VwZXIob3B0aW9ucyk7XG4gIH1cbiAgcHVzaChlbnRlclBhZ2UsIGxlYXZlUGFnZSwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgcG9wKGVudGVyUGFnZSwgbGVhdmVQYWdlLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn1cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi8uLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgU3dpcGVSZXZlYWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL3N3aXBlLXJldmVhbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCBOYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL2FuaW1hdG9yJztcbmltcG9ydCBJT1NTbGlkZU5hdmlnYXRvckFuaW1hdG9yIGZyb20gJy4vaW9zLXNsaWRlLWFuaW1hdG9yJztcbmltcG9ydCBJT1NMaWZ0TmF2aWdhdG9yQW5pbWF0b3IgZnJvbSAnLi9pb3MtbGlmdC1hbmltYXRvcic7XG5pbXBvcnQgSU9TRmFkZU5hdmlnYXRvckFuaW1hdG9yIGZyb20gJy4vaW9zLWZhZGUtYW5pbWF0b3InO1xuaW1wb3J0IE1EU2xpZGVOYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL21kLXNsaWRlLWFuaW1hdG9yJztcbmltcG9ydCBNRExpZnROYXZpZ2F0b3JBbmltYXRvciBmcm9tICcuL21kLWxpZnQtYW5pbWF0b3InO1xuaW1wb3J0IE1ERmFkZU5hdmlnYXRvckFuaW1hdG9yIGZyb20gJy4vbWQtZmFkZS1hbmltYXRvcic7XG5pbXBvcnQgTm9uZU5hdmlnYXRvckFuaW1hdG9yIGZyb20gJy4vbm9uZS1hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL2Jhc2UvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IHtQYWdlTG9hZGVyLCBkZWZhdWx0UGFnZUxvYWRlciwgaW5zdGFudFBhZ2VMb2FkZXJ9IGZyb20gJy4uLy4uL29ucy9wYWdlLWxvYWRlcic7XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNREZhZGVOYXZpZ2F0b3JBbmltYXRvciA6IElPU1NsaWRlTmF2aWdhdG9yQW5pbWF0b3IgfSxcbiAgJ3NsaWRlJzogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNRFNsaWRlTmF2aWdhdG9yQW5pbWF0b3IgOiBJT1NTbGlkZU5hdmlnYXRvckFuaW1hdG9yIH0sXG4gICdsaWZ0JzogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBNRExpZnROYXZpZ2F0b3JBbmltYXRvciA6IElPU0xpZnROYXZpZ2F0b3JBbmltYXRvciB9LFxuICAnZmFkZSc6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBsYXRmb3JtLmlzQW5kcm9pZCgpID8gTURGYWRlTmF2aWdhdG9yQW5pbWF0b3IgOiBJT1NGYWRlTmF2aWdhdG9yQW5pbWF0b3IgfSxcbiAgJ3NsaWRlLWlvcyc6IElPU1NsaWRlTmF2aWdhdG9yQW5pbWF0b3IsXG4gICdzbGlkZS1tZCc6IE1EU2xpZGVOYXZpZ2F0b3JBbmltYXRvcixcbiAgJ2xpZnQtaW9zJzogSU9TTGlmdE5hdmlnYXRvckFuaW1hdG9yLFxuICAnbGlmdC1tZCc6IE1ETGlmdE5hdmlnYXRvckFuaW1hdG9yLFxuICAnZmFkZS1pb3MnOiBJT1NGYWRlTmF2aWdhdG9yQW5pbWF0b3IsXG4gICdmYWRlLW1kJzogTURGYWRlTmF2aWdhdG9yQW5pbWF0b3IsXG4gICdub25lJzogTm9uZU5hdmlnYXRvckFuaW1hdG9yXG59O1xuXG5jb25zdCByZXdyaXRhYmxlcyA9IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gbmF2aWdhdG9yU2lkZUVsZW1lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHJlYWR5KG5hdmlnYXRvckVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufTtcblxuY29uc3QgdmVyaWZ5UGFnZUVsZW1lbnQgPSBlbCA9PiAoZWwubm9kZU5hbWUgIT09ICdPTlMtUEFHRScpICYmIHV0aWwudGhyb3coICdPbmx5IHBhZ2UgZWxlbWVudHMgY2FuIGJlIGNoaWxkcmVuIG9mIG5hdmlnYXRvcicpO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1uYXZpZ2F0b3JcbiAqIEBjYXRlZ29yeSBuYXZpZ2F0aW9uXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIEEgY29tcG9uZW50IHRoYXQgcHJvdmlkZXMgcGFnZSBzdGFjayBtYW5hZ2VtZW50IGFuZCBuYXZpZ2F0aW9uLiBTdGFjayBuYXZpZ2F0aW9uIGlzIHRoZSBtb3N0IGNvbW1vbiBuYXZpZ2F0aW9uIHBhdHRlcm4gZm9yIG1vYmlsZSBhcHBzLlxuICpcbiAqICAgICBXaGVuIGEgcGFnZSBpcyBwdXNoZWQgb24gdG9wIG9mIHRoZSBzdGFjayBpdCBpcyBkaXNwbGF5ZWQgd2l0aCBhIHRyYW5zaXRpb24gYW5pbWF0aW9uLiBXaGVuIHRoZSB1c2VyIHJldHVybnMgdG8gdGhlIHByZXZpb3VzIHBhZ2UgdGhlIHRvcCBwYWdlIHdpbGwgYmUgcG9wcGVkIGZyb20gdGhlIHRvcCBvZiB0aGUgc3RhY2sgYW5kIGhpZGRlbiB3aXRoIGFuIG9wcG9zaXRlIHRyYW5zaXRpb24gYW5pbWF0aW9uLlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIHlyaHR2XG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvbmF2aWdhdG9yXG4gKiBAZ3VpZGUgbGlmZWN5Y2xlLmh0bWwjZXZlbnRzXG4gKiAgIFtlbl1PdmVydmlldyBvZiBwYWdlIGV2ZW50c1svZW5dXG4gKiAgIFtqYV1PdmVydmlldyBvZiBwYWdlIGV2ZW50c1svamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhclxuICogICBbZW5dVGhlIGA8b25zLXRvb2xiYXI+YCBjb21wb25lbnQgaXMgdXNlZCB0byBkaXNwbGF5IGEgdG9vbGJhciBvbiB0aGUgdG9wIG9mIGEgcGFnZS5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1iYWNrLWJ1dHRvblxuICogICBbZW5dVGhlIGA8b25zLWJhY2stYnV0dG9uPmAgY29tcG9uZW50IGxldHMgdGhlIHVzZXIgcmV0dXJuIHRvIHRoZSBwcmV2aW91cyBwYWdlLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtbmF2aWdhdG9yIGlkPVwibmF2aWdhdG9yXCI+XG4gKiAgIDxvbnMtcGFnZT5cbiAqICAgICA8b25zLXRvb2xiYXI+XG4gKiAgICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+XG4gKiAgICAgICAgIFRpdGxlXG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICA8L29ucy10b29sYmFyPlxuICogICAgIDxwPlxuICogICAgICAgPG9ucy1idXR0b25cbiAqICAgICAgICAgb25jbGljaz1cImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCduYXZpZ2F0b3InKS5wdXNoUGFnZSgncGFnZS5odG1sJylcIj5cbiAqICAgICAgICAgUHVzaCBwYWdlXG4gKiAgICAgICA8L29ucy1idXR0b24+XG4gKiAgICAgPC9wPlxuICogICA8L29ucy1wYWdlPlxuICogPC9vbnMtbmF2aWdhdG9yPlxuICpcbiAqIDx0ZW1wbGF0ZSBpZD1cInBhZ2UuaHRtbFwiPlxuICogICA8b25zLXBhZ2U+XG4gKiAgICAgPG9ucy10b29sYmFyPlxuICogICAgICAgPGRpdiBjbGFzcz1cImxlZnRcIj5cbiAqICAgICAgICAgPG9ucy1iYWNrLWJ1dHRvbj5CYWNrPC9vbnMtYmFjay1idXR0b24+XG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICAgIDxkaXYgY2xhc3M9XCJjZW50ZXJcIj5cbiAqICAgICAgICAgQW5vdGhlciBwYWdlXG4gKiAgICAgICA8L2Rpdj5cbiAqICAgICA8L29ucy10b29sYmFyPlxuICogICA8L29ucy1wYWdlPlxuICogPC90ZW1wbGF0ZT5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmF2aWdhdG9yRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwYWdlXG4gICAqIEBpbml0b25seVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyc3QgcGFnZSB0byBzaG93IHdoZW4gbmF2aWdhdG9yIGlzIGluaXRpYWxpemVkLlsvZW5dXG4gICAqICAgW2phXeODiuODk+OCsuODvOOCv+ODvOOBjOWIneacn+WMluOBleOCjOOBn+aZguOBq+ihqOekuuOBmeOCi+ODmuODvOOCuOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUVuYWJsZSBpT1MgXCJzd2lwZSB0byBwb3BcIiBmZWF0dXJlLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlLXRhcmdldC13aWR0aFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCAyMHB4XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgd2lkdGggb2Ygc3dpcGVhYmxlIGFyZWEgY2FsY3VsYXRlZCBmcm9tIHRoZSBlZGdlIChpbiBwaXhlbHMpLiBVc2UgdGhpcyB0byBlbmFibGUgc3dpcGUgb25seSB3aGVuIHRoZSBmaW5nZXIgdG91Y2ggb24gdGhlIHNjcmVlbiBlZGdlLlsvZW5dXG4gICAqICAgW2phXeOCueODr+OCpOODl+OBruWIpOWumumgmOWfn+OCkuODlOOCr+OCu+ODq+WNmOS9jeOBp+aMh+WumuOBl+OBvuOBmeOAgueUu+mdouOBruerr+OBi+OCieaMh+WumuOBl+OBn+i3nembouOBq+mBlOOBmeOCi+OBqOODmuODvOOCuOOBjOihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlLXRocmVzaG9sZFxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVmYXVsdCAwLjJcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSBob3cgbXVjaCB0aGUgcGFnZSBuZWVkcyB0byBiZSBzd2lwZWQgYmVmb3JlIHBvcHBpbmcuIEEgdmFsdWUgYmV0d2VlbiBgMGAgYW5kIGAxYC5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIEFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwic2xpZGVcImAsIGBcImxpZnRcImAsIGBcImZhZGVcImAgYW5kIGBcIm5vbmVcImAuXG4gICAqXG4gICAqICAgICBUaGVzZSBhcmUgcGxhdGZvcm0gYmFzZWQgYW5pbWF0aW9ucy4gRm9yIGZpeGVkIGFuaW1hdGlvbnMsIGFkZCBgXCItaW9zXCJgIG9yIGBcIi1tZFwiYCBzdWZmaXggdG8gdGhlIGFuaW1hdGlvbiBuYW1lLiBFLmcuIGBcImxpZnQtaW9zXCJgLCBgXCJsaWZ0LW1kXCJgLiBEZWZhdWx0cyB2YWx1ZXMgYXJlIGBcInNsaWRlLWlvc1wiYCBhbmQgYFwiZmFkZS1tZFwiYCBkZXBlbmRpbmcgb24gdGhlIHBsYXRmb3JtLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvbi1vcHRpb25zXG4gICAqIEB0eXBlIHtFeHByZXNzaW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgdGltaW5nIGFuZCBkZWxheSB3aXRoIGFuIG9iamVjdCBsaXRlcmFsLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVwdXNoXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSBhIHBhZ2UgaXMgcHVzaGVkLlsvZW5dXG4gICAqICAgW2phXXBhZ2XjgYxwdXNo44GV44KM44KL55u05YmN44Gr55m654Gr44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm5hdmlnYXRvclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5jdXJyZW50UGFnZVxuICAgKiAgIFtlbl1DdXJyZW50IHBhZ2Ugb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrnBhZ2Xjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIGNhbmNlbCB0aGUgcHVzaC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlkbzjgbPlh7rjgZnjgajjgIFwdXNo5Yem55CG44GM44Kt44Oj44Oz44K744Or44GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVwb3BcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYmVmb3JlIGEgcGFnZSBpcyBwb3BwZWQuWy9lbl1cbiAgICogICBbamFdcGFnZeOBjHBvcOOBleOCjOOCi+ebtOWJjeOBq+eZuueBq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5uYXZpZ2F0b3JcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuY3VycmVudFBhZ2VcbiAgICogICBbZW5dQ3VycmVudCBwYWdlIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga5wYWdl44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUNhbGwgdGhpcyBmdW5jdGlvbiB0byBjYW5jZWwgdGhlIHBvcC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7plqLmlbDjgpLlkbzjgbPlh7rjgZnjgajjgIFwYWdl44GucG9w44GM44Kt44Oj44Oz44K744Or44GV44KM44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0cHVzaFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBhZnRlciBhIHBhZ2UgaXMgcHVzaGVkLlsvZW5dXG4gICAqICAgW2phXXBhZ2XjgYxwdXNo44GV44KM44Gm44Ki44OL44Oh44O844K344On44Oz44GM57WC5LqG44GX44Gm44GL44KJ55m654Gr44GV44KM44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50Lm5hdmlnYXRvclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5lbnRlclBhZ2VcbiAgICogICBbZW5dT2JqZWN0IG9mIHRoZSBuZXh0IHBhZ2UuWy9lbl1cbiAgICogICBbamFdcHVzaOOBleOCjOOBn3BhZ2Xjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQubGVhdmVQYWdlXG4gICAqICAgW2VuXU9iamVjdCBvZiB0aGUgcHJldmlvdXMgcGFnZS5bL2VuXVxuICAgKiAgIFtqYV3ku6XliY3jga5wYWdl44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0cG9wXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIGEgcGFnZSBpcyBwb3BwZWQuWy9lbl1cbiAgICogICBbamFdcGFnZeOBjHBvcOOBleOCjOOBpuOCouODi+ODoeODvOOCt+ODp+ODs+OBjOe1guOCj+OBo+OBn+W+jOOBq+eZuueBq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5uYXZpZ2F0b3JcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuZW50ZXJQYWdlXG4gICAqICAgW2VuXU9iamVjdCBvZiB0aGUgbmV4dCBwYWdlLlsvZW5dXG4gICAqICAgW2phXXBvcOOBleOCjOOBpuihqOekuuOBleOCjOOCi+ODmuODvOOCuOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5sZWF2ZVBhZ2VcbiAgICogICBbZW5dT2JqZWN0IG9mIHRoZSBwcmV2aW91cyBwYWdlLlsvZW5dXG4gICAqICAgW2phXXBvcOOBleOCjOOBpua2iOOBiOOCi+ODmuODvOOCuOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqL1xuXG4gIGdldCBhbmltYXRvckZhY3RvcnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FuaW1hdG9yRmFjdG9yeTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcbiAgICB0aGlzLl9pbml0aWFsaXplZCA9IGZhbHNlO1xuICAgIHRoaXMuX3BhZ2VMb2FkZXIgPSBkZWZhdWx0UGFnZUxvYWRlcjtcbiAgICB0aGlzLl9wYWdlTWFwID0gbmV3IFdlYWtNYXAoKTtcblxuICAgIHRoaXMuX3VwZGF0ZUFuaW1hdG9yRmFjdG9yeSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlTG9hZGVyXG4gICAqIEB0eXBlIHtQYWdlTG9hZGVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUGFnZUxvYWRlciBpbnN0YW5jZS4gSXQgY2FuIGJlIG92ZXJyaWRlbiB0byBjaGFuZ2UgdGhlIHdheSBwYWdlcyBhcmUgbG9hZGVkIGJ5IHRoaXMgZWxlbWVudC4gVXNlZnVsIGZvciBsaWIgZGV2ZWxvcGVycy5bL2VuXVxuICAgKiAgIFtqYV1QYWdlTG9hZGVy44Kk44Oz44K544K/44Oz44K544KS5qC857SN44GX44Gm44GE44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGdldCBwYWdlTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlTG9hZGVyO1xuICB9XG5cbiAgc2V0IHBhZ2VMb2FkZXIocGFnZUxvYWRlcikge1xuICAgIGlmICghKHBhZ2VMb2FkZXIgaW5zdGFuY2VvZiBQYWdlTG9hZGVyKSkge1xuICAgICAgdXRpbC50aHJvd1BhZ2VMb2FkZXIoKTtcbiAgICB9XG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IHBhZ2VMb2FkZXI7XG4gIH1cblxuICBfZ2V0UGFnZVRhcmdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGFnZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlXG4gICAqIEB0eXBlIHsqfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgcGFnZSB0byBiZSBsb2FkZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiBUaGlzIHZhbHVlIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGUgYHBhZ2VgIGF0dHJpYnV0ZS4gVXNlZnVsIGZvciBsaWIgZGV2ZWxvcGVycy5bL2VuXVxuICAgKiAgIFtqYV3liJ3mnJ/ljJbmmYLjgavoqq3jgb/ovrzjgoDjg5rjg7zjgrjjgpLmjIflrprjgZfjgb7jgZnjgIJgcGFnZWDlsZ7mgKfjgafmjIflrprjgZfjgZ/lgKTjgojjgorjgoJgcGFnZWDjg5fjg63jg5Hjg4bjgqPjgavmjIflrprjgZfjgZ/lgKTjgpLlhKrlhYjjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2U7XG4gIH1cblxuICBzZXQgcGFnZShwYWdlKSB7XG4gICAgdGhpcy5fcGFnZSA9IHBhZ2U7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLm9uRGV2aWNlQmFja0J1dHRvbiA9IHRoaXMuX29uRGV2aWNlQmFja0J1dHRvbi5iaW5kKHRoaXMpO1xuXG4gICAgaWYgKCFwbGF0Zm9ybS5pc0FuZHJvaWQoKSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgnc3dpcGVhYmxlJykgPT09ICdmb3JjZScpIHtcbiAgICAgIGxldCBzd2lwZUFuaW1hdG9yO1xuXG4gICAgICB0aGlzLl9zd2lwZSA9IG5ldyBTd2lwZVJldmVhbCh7XG4gICAgICAgIGVsZW1lbnQ6IHRoaXMsXG4gICAgICAgIGdldFRocmVzaG9sZDogKCkgPT4gTWF0aC5tYXgoMC4yLCBwYXJzZUZsb2F0KHRoaXMuZ2V0QXR0cmlidXRlKCdzd2lwZS10aHJlc2hvbGQnKSkgfHwgMCksXG5cbiAgICAgICAgc3dpcGVNYXg6ICgpID0+IHtcbiAgICAgICAgICB0aGlzLl9vblN3aXBlICYmIHRoaXMuX29uU3dpcGUoMSwgeyBkdXJhdGlvbjogc3dpcGVBbmltYXRvci5kdXJhdGlvblN3aXBlLCB0aW1pbmc6IHN3aXBlQW5pbWF0b3IudGltaW5nU3dpcGUgfSk7XG4gICAgICAgICAgdGhpc1t0aGlzLnN3aXBlTWF4ID8gJ3N3aXBlTWF4JyA6ICdwb3BQYWdlJ10oeyBhbmltYXRvcjogc3dpcGVBbmltYXRvciB9KTtcbiAgICAgICAgICBzd2lwZUFuaW1hdG9yID0gbnVsbDtcbiAgICAgICAgfSxcbiAgICAgICAgc3dpcGVNaWQ6IChkaXN0YW5jZSwgd2lkdGgpID0+IHtcbiAgICAgICAgICB0aGlzLl9vblN3aXBlICYmIHRoaXMuX29uU3dpcGUoZGlzdGFuY2Uvd2lkdGgpO1xuICAgICAgICAgIHN3aXBlQW5pbWF0b3IudHJhbnNsYXRlKGRpc3RhbmNlLCB3aWR0aCwgdGhpcy50b3BQYWdlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcsIHRoaXMudG9wUGFnZSk7XG4gICAgICAgIH0sXG4gICAgICAgIHN3aXBlTWluOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5fb25Td2lwZSAmJiB0aGlzLl9vblN3aXBlKDAsIHsgZHVyYXRpb246IHN3aXBlQW5pbWF0b3IuZHVyYXRpb25SZXN0b3JlLCB0aW1pbmc6IHN3aXBlQW5pbWF0b3IudGltaW5nU3dpcGUgfSk7XG4gICAgICAgICAgc3dpcGVBbmltYXRvci5yZXN0b3JlKHRoaXMudG9wUGFnZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLCB0aGlzLnRvcFBhZ2UpO1xuICAgICAgICAgIHN3aXBlQW5pbWF0b3IgPSBudWxsO1xuICAgICAgICB9LFxuXG4gICAgICAgIGlnbm9yZVN3aXBlOiAoZXZlbnQsIGRpc3RhbmNlKSA9PiB7XG4gICAgICAgICAgLy8gQmFzaWMgY29uZGl0aW9uc1xuICAgICAgICAgIGlmICghdGhpcy5faXNSdW5uaW5nICYmIHRoaXMuY2hpbGRyZW4ubGVuZ3RoID4gMSkge1xuXG4gICAgICAgICAgICAvLyBBcmVhIG9yIGRpcmVjdGlvbmFsIGlzc3Vlc1xuICAgICAgICAgICAgY29uc3QgYXJlYSA9IHBhcnNlSW50KHRoaXMuZ2V0QXR0cmlidXRlKCdzd2lwZS10YXJnZXQtd2lkdGgnKSB8fCAyNSwgMTApO1xuICAgICAgICAgICAgaWYgKGV2ZW50Lmdlc3R1cmUuZGlyZWN0aW9uID09PSAgJ3JpZ2h0JyAmJiBhcmVhID4gZGlzdGFuY2UpIHtcblxuICAgICAgICAgICAgICAvLyBTd2lwZXMgb24gb25zLWJhY2stYnV0dG9uIGFuZCBpdHMgY2hpbGRyZW5cbiAgICAgICAgICAgICAgY29uc3QgaXNCQiA9IGVsID0+IC9vbnMtYmFjay1idXR0b24vaS50ZXN0KGVsLnRhZ05hbWUpO1xuICAgICAgICAgICAgICBpZiAoIWlzQkIoZXZlbnQudGFyZ2V0KSAmJiAhdXRpbC5maW5kUGFyZW50KGV2ZW50LnRhcmdldCwgaXNCQiwgcCA9PiAvb25zLXBhZ2UvaS50ZXN0KHAudGFnTmFtZSkpKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBBbmltYXRvciBpcyBzd2lwZWFibGVcbiAgICAgICAgICAgICAgICBjb25zdCBhbmltYXRpb24gPSAodGhpcy50b3BQYWdlLnB1c2hlZE9wdGlvbnMgfHwge30pLmFuaW1hdGlvbiB8fCB0aGlzLmFuaW1hdG9yRmFjdG9yeS5fYW5pbWF0aW9uO1xuICAgICAgICAgICAgICAgIGNvbnN0IEFuaW1hdG9yID0gX2FuaW1hdG9yRGljdFthbmltYXRpb25dIGluc3RhbmNlb2YgRnVuY3Rpb25cbiAgICAgICAgICAgICAgICAgID8gX2FuaW1hdG9yRGljdFthbmltYXRpb25dLmNhbGwoKVxuICAgICAgICAgICAgICAgICAgOiBfYW5pbWF0b3JEaWN0W2FuaW1hdGlvbl07XG5cbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEFuaW1hdG9yICE9PSAndW5kZWZpbmVkJyAmJiBBbmltYXRvci5zd2lwZWFibGUpIHtcbiAgICAgICAgICAgICAgICAgIHN3aXBlQW5pbWF0b3IgPSBuZXcgQW5pbWF0b3IoKTsgLy8gUHJlcGFyZSBmb3IgdGhlIHN3aXBlXG4gICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHRydWU7IC8vIElnbm9yZSBzd2lwZVxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soJ3N3aXBlYWJsZScpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9pbml0aWFsaXplZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2luaXRpYWxpemVkID0gdHJ1ZTtcblxuICAgIGNvbnN0IGRlZmVycmVkID0gdXRpbC5kZWZlcigpO1xuICAgIHRoaXMubG9hZGVkID0gZGVmZXJyZWQucHJvbWlzZTtcblxuICAgIHJld3JpdGFibGVzLnJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIGNvbnN0IHNob3cgPSAhdXRpbC5oYXNBbnlDb21wb25lbnRBc1BhcmVudCh0aGlzKTtcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7IGFuaW1hdGlvbjogJ25vbmUnLCBzaG93IH07XG5cbiAgICAgIGlmICh0aGlzLnBhZ2VzLmxlbmd0aCA9PT0gMCAmJiB0aGlzLl9nZXRQYWdlVGFyZ2V0KCkpIHtcbiAgICAgICAgdGhpcy5wdXNoUGFnZSh0aGlzLl9nZXRQYWdlVGFyZ2V0KCksIG9wdGlvbnMpLnRoZW4oKCkgPT4gZGVmZXJyZWQucmVzb2x2ZSgpKTtcbiAgICAgIH0gZWxzZSBpZiAodGhpcy5wYWdlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIHZlcmlmeVBhZ2VFbGVtZW50KHRoaXMucGFnZXNbaV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMudG9wUGFnZSkge1xuICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLnRvcFBhZ2UsICgpID0+XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZSgpO1xuICAgICAgICAgICAgICBzaG93ICYmIHRoaXMudG9wUGFnZS5fc2hvdygpO1xuICAgICAgICAgICAgICB0aGlzLl91cGRhdGVMYXN0UGFnZUJhY2tCdXR0b24oKTtcbiAgICAgICAgICAgIH0sIDApXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgICBpZiAodGhpcy5wYWdlcy5sZW5ndGggPT09IDAgJiYgdGhpcy5fZ2V0UGFnZVRhcmdldCgpKSB7XG4gICAgICAgICAgICB0aGlzLnB1c2hQYWdlKHRoaXMuX2dldFBhZ2VUYXJnZXQoKSwgb3B0aW9ucykudGhlbigoKSA9PiBkZWZlcnJlZC5yZXNvbHZlKCkpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgdGhpcy5fYW5pbWF0b3JGYWN0b3J5ID0gbmV3IEFuaW1hdG9yRmFjdG9yeSh7XG4gICAgICBhbmltYXRvcnM6IF9hbmltYXRvckRpY3QsXG4gICAgICBiYXNlQ2xhc3M6IE5hdmlnYXRvckFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ05hdmlnYXRvckFuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKVxuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gbnVsbDtcblxuICAgIHRoaXMuX3N3aXBlICYmIHRoaXMuX3N3aXBlLmRpc3Bvc2UoKTtcbiAgICB0aGlzLl9zd2lwZSA9IG51bGw7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydhbmltYXRpb24nLCAnc3dpcGVhYmxlJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnYW5pbWF0aW9uJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc3dpcGVhYmxlJzpcbiAgICAgICAgdGhpcy5fc3dpcGUgJiYgdGhpcy5fc3dpcGUudXBkYXRlKCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHBvcFBhZ2VcbiAgICogQHNpZ25hdHVyZSBwb3BQYWdlKFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXVxuICAgKiAgICAgQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJzbGlkZVwiYCwgYFwibGlmdFwiYCwgYFwiZmFkZVwiYCBhbmQgYFwibm9uZVwiYC5cbiAgICpcbiAgICogICAgIFRoZXNlIGFyZSBwbGF0Zm9ybSBiYXNlZCBhbmltYXRpb25zLiBGb3IgZml4ZWQgYW5pbWF0aW9ucywgYWRkIGBcIi1pb3NcImAgb3IgYFwiLW1kXCJgIHN1ZmZpeCB0byB0aGUgYW5pbWF0aW9uIG5hbWUuIEUuZy4gYFwibGlmdC1pb3NcImAsIGBcImxpZnQtbWRcImAuIERlZmF1bHRzIHZhbHVlcyBhcmUgYFwic2xpZGUtaW9zXCJgIGFuZCBgXCJmYWRlLW1kXCJgLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dRnVuY3Rpb24gdGhhdCBpcyBjYWxsZWQgd2hlbiB0aGUgdHJhbnNpdGlvbiBoYXMgZW5kZWQuWy9lbl1cbiAgICogICBbamFd44GT44Gu44Oh44K944OD44OJ44Gr44KI44KL55S76Z2i6YG356e744GM57WC5LqG44GX44Gf6Zqb44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmRhdGFdXG4gICAqICAgW2VuXUN1c3RvbSBkYXRhIHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIG5ldyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IFtvcHRpb25zLnRpbWVzXVxuICAgKiAgIFtlbl1OdW1iZXIgb2YgcGFnZXMgdG8gYmUgcG9wcGVkLiBPbmx5IG9uZSBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1Qcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSByZXZlYWxlZCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaYjuOCieOBi+OBq+OBl+OBn+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUG9wcyB0aGUgY3VycmVudCBwYWdlIGZyb20gdGhlIHBhZ2Ugc3RhY2suIFRoZSBwcmV2aW91cyBwYWdlIHdpbGwgYmUgZGlzcGxheWVkLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOihqOekuuS4reOBruODmuODvOOCuOOCkuODmuODvOOCuOOCueOCv+ODg+OCr+OBi+OCieWPluOCiumZpOOBjeOBvuOBmeOAguS4gOOBpOWJjeOBruODmuODvOOCuOOBq+aIu+OCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuICBwb3BQYWdlKG9wdGlvbnMgPSB7fSkge1xuICAgICh7b3B0aW9uc30gPSB0aGlzLl9wcmVwYXJlUGFnZUFuZE9wdGlvbnMobnVsbCwgb3B0aW9ucykpO1xuXG4gICAgaWYgKHV0aWwuaXNJbnRlZ2VyKG9wdGlvbnMudGltZXMpICYmIG9wdGlvbnMudGltZXMgPiAxKSB7XG4gICAgICB0aGlzLl9yZW1vdmVQYWdlcyhvcHRpb25zLnRpbWVzKTtcbiAgICB9XG5cbiAgICBjb25zdCBwb3BVcGRhdGUgPSAoKSA9PiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5wYWdlc1t0aGlzLnBhZ2VzLmxlbmd0aCAtIDFdKTtcbiAgICAgIHJlc29sdmUoKTtcbiAgICB9KTtcblxuICAgIHJldHVybiB0aGlzLl9wb3BQYWdlKG9wdGlvbnMsIHBvcFVwZGF0ZSk7XG4gIH1cblxuICBfcG9wUGFnZShvcHRpb25zLCB1cGRhdGUgPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoKSkge1xuICAgIGlmICh0aGlzLl9pc1J1bm5pbmcpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgncG9wUGFnZSBpcyBhbHJlYWR5IHJ1bm5pbmcuJyk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMucGFnZXMubGVuZ3RoIDw9IDEpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnb25zLW5hdmlnYXRvclxcJ3MgcGFnZSBzdGFjayBpcyBlbXB0eS4nKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5fZW1pdFByZVBvcEV2ZW50KCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlcG9wIGV2ZW50LicpO1xuICAgIH1cblxuICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMucGFnZXMubGVuZ3RoO1xuXG4gICAgdGhpcy5faXNSdW5uaW5nID0gdHJ1ZTtcblxuICAgIHRoaXMucGFnZXNbbGVuZ3RoIC0gMl0udXBkYXRlQmFja0J1dHRvbigobGVuZ3RoIC0gMikgPiAwKTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGNvbnN0IGxlYXZlUGFnZSA9IHRoaXMucGFnZXNbbGVuZ3RoIC0gMV07XG4gICAgICBjb25zdCBlbnRlclBhZ2UgPSB0aGlzLnBhZ2VzW2xlbmd0aCAtIDJdO1xuXG4gICAgICBvcHRpb25zID0gdXRpbC5leHRlbmQoe30sIHRoaXMub3B0aW9ucyB8fCB7fSwgb3B0aW9ucyk7XG5cbiAgICAgIGlmIChvcHRpb25zLmRhdGEpIHtcbiAgICAgICAgZW50ZXJQYWdlLmRhdGEgPSB1dGlsLmV4dGVuZCh7fSwgZW50ZXJQYWdlLmRhdGEgfHwge30sIG9wdGlvbnMuZGF0YSB8fCB7fSk7XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRvbmUgPSAoKSA9PiB7XG4gICAgICAgIHVwZGF0ZSgpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgIHRoaXMuX2lzUnVubmluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgZW50ZXJQYWdlLl9zaG93KCk7XG4gICAgICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwb3N0cG9wJywge2xlYXZlUGFnZSwgZW50ZXJQYWdlLCBuYXZpZ2F0b3I6IHRoaXN9KTtcblxuICAgICAgICAgIG9wdGlvbnMuY2FsbGJhY2sgJiYgb3B0aW9ucy5jYWxsYmFjayhlbnRlclBhZ2UpO1xuXG4gICAgICAgICAgcmVzb2x2ZShlbnRlclBhZ2UpO1xuICAgICAgICB9KTtcbiAgICAgIH07XG5cbiAgICAgIGxlYXZlUGFnZS5faGlkZSgpO1xuICAgICAgZW50ZXJQYWdlLnN0eWxlLmRpc3BsYXkgPSAnJztcblxuICAgICAgY29uc3QgYW5pbWF0b3IgPSBvcHRpb25zLmFuaW1hdG9yIHx8IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcihvcHRpb25zKTtcbiAgICAgIGFuaW1hdG9yLnBvcCh0aGlzLnBhZ2VzW2xlbmd0aCAtIDJdLCB0aGlzLnBhZ2VzW2xlbmd0aCAtIDFdLCBkb25lKTtcbiAgICB9KS5jYXRjaCgoKSA9PiB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZSk7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHB1c2hQYWdlXG4gICAqIEBzaWduYXR1cmUgcHVzaFBhZ2UocGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gQ2FuIGJlIGVpdGhlciBhIEhUTUwgZG9jdW1lbnQgb3IgYSB0ZW1wbGF0ZSBkZWZpbmVkIHdpdGggdGhlIGA8dGVtcGxhdGU+YCB0YWcuWy9lbl1cbiAgICogICBbamFdcGFnZeOBrlVSTOOBi+OAgeOCguOBl+OBj+OBr2A8dGVtcGxhdGU+YOOBp+Wuo+iogOOBl+OBn+ODhuODs+ODl+ODrOODvOODiOOBrmlk5bGe5oCn44Gu5YCk44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5wYWdlXVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gT25seSBuZWNlc3NhcnkgaWYgYHBhZ2VgIHBhcmFtZXRlciBpcyBudWxsIG9yIHVuZGVmaW5lZC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMucGFnZUhUTUxdXG4gICAqICAgW2VuXUhUTUwgY29kZSB0aGF0IHdpbGwgYmUgY29tcHV0ZWQgYXMgYSBuZXcgcGFnZS4gT3ZlcndyaXRlcyBgcGFnZWAgcGFyYW1ldGVyLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXVxuICAgKiAgICAgQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJzbGlkZVwiYCwgYFwibGlmdFwiYCwgYFwiZmFkZVwiYCBhbmQgYFwibm9uZVwiYC5cbiAgICpcbiAgICogICAgIFRoZXNlIGFyZSBwbGF0Zm9ybSBiYXNlZCBhbmltYXRpb25zLiBGb3IgZml4ZWQgYW5pbWF0aW9ucywgYWRkIGBcIi1pb3NcImAgb3IgYFwiLW1kXCJgIHN1ZmZpeCB0byB0aGUgYW5pbWF0aW9uIG5hbWUuIEUuZy4gYFwibGlmdC1pb3NcImAsIGBcImxpZnQtbWRcImAuIERlZmF1bHRzIHZhbHVlcyBhcmUgYFwic2xpZGUtaW9zXCJgIGFuZCBgXCJmYWRlLW1kXCJgLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWBbL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gIFsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGhhcyBlbmRlZC5bL2VuXVxuICAgKiAgIFtqYV1wdXNoUGFnZSgp44Gr44KI44KL55S76Z2i6YG356e744GM57WC5LqG44GX44Gf5pmC44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLmRhdGFdXG4gICAqICAgW2VuXUN1c3RvbSBkYXRhIHRoYXQgd2lsbCBiZSBzdG9yZWQgaW4gdGhlIG5ldyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byB0aGUgcHVzaGVkIHBhZ2UuWy9lbl1cbiAgICogICBbamFd6L+95Yqg44GX44Gf44Oa44O844K444KS6Kej5rG644GZ44KLUHJvbWlzZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1QdXNoZXMgdGhlIHNwZWNpZmllZCBwYWdlIGludG8gdGhlIHN0YWNrLlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn3BhZ2XjgpLmlrDjgZfjgYTjg5rjg7zjgrjjgrnjgr/jg4Pjgq/jgavov73liqDjgZfjgb7jgZnjgILmlrDjgZfjgYTjg5rjg7zjgrjjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcHVzaFBhZ2UocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgKHtwYWdlLCBvcHRpb25zfSA9IHRoaXMuX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zKSk7XG5cbiAgICBjb25zdCBwcmVwYXJlID0gcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgdmVyaWZ5UGFnZUVsZW1lbnQocGFnZUVsZW1lbnQpO1xuICAgICAgdGhpcy5fcGFnZU1hcC5zZXQocGFnZUVsZW1lbnQsIHBhZ2UpO1xuICAgICAgcGFnZUVsZW1lbnQgPSB1dGlsLmV4dGVuZChwYWdlRWxlbWVudCwge1xuICAgICAgICBkYXRhOiBvcHRpb25zLmRhdGFcbiAgICAgIH0pO1xuICAgICAgcGFnZUVsZW1lbnQuc3R5bGUudmlzaWJpbGl0eSA9ICdoaWRkZW4nO1xuICAgIH07XG5cbiAgICBpZiAob3B0aW9ucy5wYWdlSFRNTCkge1xuICAgICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMsICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBpbnN0YW50UGFnZUxvYWRlci5sb2FkKHtwYWdlOiBvcHRpb25zLnBhZ2VIVE1MLCBwYXJlbnQ6IHRoaXMsIHBhcmFtczogb3B0aW9ucy5kYXRhfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICAgIHByZXBhcmUocGFnZUVsZW1lbnQpO1xuICAgICAgICAgIHJlc29sdmUoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMsICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci5sb2FkKHtwYWdlLCBwYXJlbnQ6IHRoaXMsIHBhcmFtczogb3B0aW9ucy5kYXRhfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICBwcmVwYXJlKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9KTtcbiAgICB9KSk7XG4gIH1cblxuICBfcHVzaFBhZ2Uob3B0aW9ucyA9IHt9LCB1cGRhdGUgPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoKSkge1xuICAgIGlmICh0aGlzLl9pc1J1bm5pbmcpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgncHVzaFBhZ2UgaXMgYWxyZWFkeSBydW5uaW5nLicpO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9lbWl0UHJlUHVzaEV2ZW50KCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlcHVzaCBldmVudC4nKTtcbiAgICB9XG5cbiAgICB0aGlzLl9pc1J1bm5pbmcgPSB0cnVlO1xuXG4gICAgY29uc3QgYW5pbWF0aW9uT3B0aW9ucyA9IEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpO1xuICAgIG9wdGlvbnMgPSB1dGlsLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zIHx8IHt9LCB7YW5pbWF0aW9uT3B0aW9uc30sIG9wdGlvbnMpO1xuXG4gICAgY29uc3QgYW5pbWF0b3IgPSB0aGlzLl9hbmltYXRvckZhY3RvcnkubmV3QW5pbWF0b3Iob3B0aW9ucyk7XG5cbiAgICByZXR1cm4gdXBkYXRlKCkudGhlbigoKSA9PiB7XG4gICAgICBjb25zdCBwYWdlTGVuZ3RoID0gdGhpcy5wYWdlcy5sZW5ndGg7XG5cbiAgICAgIGNvbnN0IGVudGVyUGFnZSAgPSB0aGlzLnBhZ2VzW3BhZ2VMZW5ndGggLSAxXTtcbiAgICAgIGNvbnN0IGxlYXZlUGFnZSA9IG9wdGlvbnMubGVhdmVQYWdlIHx8IHRoaXMucGFnZXNbcGFnZUxlbmd0aCAtIDJdO1xuXG4gICAgICB2ZXJpZnlQYWdlRWxlbWVudChlbnRlclBhZ2UpO1xuXG4gICAgICBlbnRlclBhZ2UudXBkYXRlQmFja0J1dHRvbihwYWdlTGVuZ3RoID4gKG9wdGlvbnMuX3JlcGxhY2VQYWdlID8gMiA6IDEpKTtcblxuICAgICAgZW50ZXJQYWdlLnB1c2hlZE9wdGlvbnMgPSB1dGlsLmV4dGVuZCh7fSwgZW50ZXJQYWdlLnB1c2hlZE9wdGlvbnMgfHwge30sIG9wdGlvbnMgfHwge30pO1xuICAgICAgZW50ZXJQYWdlLmRhdGEgPSB1dGlsLmV4dGVuZCh7fSwgZW50ZXJQYWdlLmRhdGEgfHwge30sIG9wdGlvbnMuZGF0YSB8fCB7fSk7XG4gICAgICBlbnRlclBhZ2UudW5sb2FkID0gZW50ZXJQYWdlLnVubG9hZCB8fCBvcHRpb25zLnVubG9hZDtcblxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBjb25zdCBkb25lID0gKCkgPT4ge1xuICAgICAgICAgIHRoaXMuX2lzUnVubmluZyA9IGZhbHNlO1xuXG4gICAgICAgICAgb3B0aW9ucy5zaG93ICE9PSBmYWxzZSAmJiBzZXRJbW1lZGlhdGUoKCkgPT4gZW50ZXJQYWdlLl9zaG93KCkpO1xuICAgICAgICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdHB1c2gnLCB7bGVhdmVQYWdlLCBlbnRlclBhZ2UsIG5hdmlnYXRvcjogdGhpc30pO1xuXG4gICAgICAgICAgaWYgKGxlYXZlUGFnZSkge1xuICAgICAgICAgICAgbGVhdmVQYWdlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgb3B0aW9ucy5jYWxsYmFjayAmJiBvcHRpb25zLmNhbGxiYWNrKGVudGVyUGFnZSk7XG5cbiAgICAgICAgICByZXNvbHZlKGVudGVyUGFnZSk7XG4gICAgICAgIH07XG5cbiAgICAgICAgZW50ZXJQYWdlLnN0eWxlLnZpc2liaWxpdHkgPSAnJztcbiAgICAgICAgaWYgKGxlYXZlUGFnZSkge1xuICAgICAgICAgIGxlYXZlUGFnZS5faGlkZSgpO1xuICAgICAgICAgIGFuaW1hdG9yLnB1c2goZW50ZXJQYWdlLCBsZWF2ZVBhZ2UsIGRvbmUpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICB0aGlzLl9pc1J1bm5pbmcgPSBmYWxzZTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVwbGFjZVBhZ2VcbiAgICogQHNpZ25hdHVyZSByZXBsYWNlUGFnZShwYWdlLCBbb3B0aW9uc10pXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVByb21pc2Ugd2hpY2ggcmVzb2x2ZXMgdG8gdGhlIG5ldyBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaWsOOBl+OBhOODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVwbGFjZXMgdGhlIGN1cnJlbnQgdG9wIHBhZ2Ugd2l0aCB0aGUgc3BlY2lmaWVkIG9uZS4gRXh0ZW5kcyBgcHVzaFBhZ2UoKWAgcGFyYW1ldGVycy5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjooajnpLrkuK3jga7jg5rjg7zjgrjjgpLjgpLmjIflrprjgZfjgZ/jg5rjg7zjgrjjgavnva7jgY3mj5vjgYjjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgcmVwbGFjZVBhZ2UocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMucHVzaFBhZ2UocGFnZSwgb3B0aW9ucylcbiAgICAgIC50aGVuKHJlc29sdmVkVmFsdWUgPT4ge1xuICAgICAgICBpZiAodGhpcy5wYWdlcy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5wYWdlc1t0aGlzLnBhZ2VzLmxlbmd0aCAtIDJdKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl91cGRhdGVMYXN0UGFnZUJhY2tCdXR0b24oKTtcblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlc29sdmVkVmFsdWUpO1xuICAgICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBpbnNlcnRQYWdlXG4gICAqIEBzaWduYXR1cmUgaW5zZXJ0UGFnZShpbmRleCwgcGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge051bWJlcn0gaW5kZXhcbiAgICogICBbZW5dVGhlIGluZGV4IHdoZXJlIGl0IHNob3VsZCBiZSBpbnNlcnRlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgr/jg4Pjgq/jgavmjL/lhaXjgZnjgovkvY3nva7jga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1Qcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSBpbnNlcnRlZCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSW5zZXJ0IHRoZSBzcGVjaWZpZWQgcGFnZSBpbnRvIHRoZSBzdGFjayB3aXRoIGF0IGEgcG9zaXRpb24gZGVmaW5lZCBieSB0aGUgYGluZGV4YCBhcmd1bWVudC4gRXh0ZW5kcyBgcHVzaFBhZ2UoKWAgcGFyYW1ldGVycy5bL2VuXVxuICAgKiAgIFtqYV3mjIflrprjgZfjgZ9wYWdl44KS44Oa44O844K444K544K/44OD44Kv44GuaW5kZXjjgafmjIflrprjgZfjgZ/kvY3nva7jgavov73liqDjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgaW5zZXJ0UGFnZShpbmRleCwgcGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgKHtwYWdlLCBvcHRpb25zfSA9IHRoaXMuX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zKSk7XG4gICAgaW5kZXggPSB0aGlzLl9ub3JtYWxpemVJbmRleChpbmRleCk7XG5cbiAgICBpZiAoaW5kZXggPj0gdGhpcy5wYWdlcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0aGlzLnB1c2hQYWdlKHBhZ2UsIG9wdGlvbnMpO1xuICAgIH1cblxuICAgIHBhZ2UgPSB0eXBlb2Ygb3B0aW9ucy5wYWdlSFRNTCA9PT0gJ3N0cmluZycgPyBvcHRpb25zLnBhZ2VIVE1MIDogcGFnZTtcbiAgICBjb25zdCBsb2FkZXIgPSB0eXBlb2Ygb3B0aW9ucy5wYWdlSFRNTCA9PT0gJ3N0cmluZycgPyBpbnN0YW50UGFnZUxvYWRlciA6IHRoaXMuX3BhZ2VMb2FkZXI7XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBsb2FkZXIubG9hZCh7cGFnZSwgcGFyZW50OiB0aGlzfSwgcGFnZUVsZW1lbnQgPT4ge1xuICAgICAgICB2ZXJpZnlQYWdlRWxlbWVudChwYWdlRWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3BhZ2VNYXAuc2V0KHBhZ2VFbGVtZW50LCBwYWdlKTtcbiAgICAgICAgcGFnZUVsZW1lbnQgPSB1dGlsLmV4dGVuZChwYWdlRWxlbWVudCwge1xuICAgICAgICAgIGRhdGE6IG9wdGlvbnMuZGF0YSxcbiAgICAgICAgICBwdXNoZWRPcHRpb25zOiBvcHRpb25zXG4gICAgICAgIH0pO1xuXG4gICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyA9IHV0aWwuZXh0ZW5kKFxuICAgICAgICAgIHt9LFxuICAgICAgICAgIEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpLFxuICAgICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fVxuICAgICAgICApO1xuXG4gICAgICAgIHBhZ2VFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICAgIHRoaXMuaW5zZXJ0QmVmb3JlKHBhZ2VFbGVtZW50LCB0aGlzLnBhZ2VzW2luZGV4XSk7XG4gICAgICAgIHRoaXMudG9wUGFnZS51cGRhdGVCYWNrQnV0dG9uKHRydWUpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgIHBhZ2VFbGVtZW50ID0gbnVsbDtcbiAgICAgICAgICByZXNvbHZlKHRoaXMucGFnZXNbaW5kZXhdKTtcbiAgICAgICAgfSwgMTAwMCAvIDYwKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgcmVtb3ZlUGFnZVxuICAgKiBAc2lnbmF0dXJlIHJlbW92ZVBhZ2UoaW5kZXgsIFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gICAqICAgW2VuXVRoZSBpbmRleCB3aGVyZSBpdCBzaG91bGQgYmUgcmVtb3ZlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgr/jg4Pjgq/jgYvjgonliYrpmaTjgZnjgovjg5rjg7zjgrjjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1Qcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSByZXZlYWxlZCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeWJiumZpOOBq+OCiOOBo+OBpuihqOekuuOBleOCjOOBn+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUmVtb3ZlIHRoZSBzcGVjaWZpZWQgcGFnZSBhdCBhIHBvc2l0aW9uIGluIHRoZSBzdGFjayBkZWZpbmVkIGJ5IHRoZSBgaW5kZXhgIGFyZ3VtZW50LiBFeHRlbmRzIGBwb3BQYWdlKClgIHBhcmFtZXRlcnMuWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44Gf44Kk44Oz44OH44OD44Kv44K544Gr44GC44KL44Oa44O844K444KS5YmK6Zmk44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIHJlbW92ZVBhZ2UoaW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgIGluZGV4ID0gdGhpcy5fbm9ybWFsaXplSW5kZXgoaW5kZXgpO1xuXG4gICAgaWYgKGluZGV4IDwgdGhpcy5wYWdlcy5sZW5ndGggLSAxKSB7XG4gICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGNvbnN0IGxlYXZlUGFnZSA9IHRoaXMucGFnZXNbaW5kZXhdO1xuICAgICAgICBjb25zdCBlbnRlclBhZ2UgPSB0aGlzLnRvcFBhZ2U7XG5cbiAgICAgICAgdGhpcy5fcGFnZU1hcC5kZWxldGUobGVhdmVQYWdlKTtcbiAgICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQobGVhdmVQYWdlKTtcbiAgICAgICAgaWYgKHRoaXMucGFnZXMubGVuZ3RoID09PSAxKSB7IC8vIGVkZ2UgY2FzZVxuICAgICAgICAgIHRoaXMudG9wUGFnZS51cGRhdGVCYWNrQnV0dG9uKGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc29sdmUoZW50ZXJQYWdlKTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gdGhpcy5wb3BQYWdlKG9wdGlvbnMpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHJlc2V0VG9QYWdlXG4gICAqIEBzaWduYXR1cmUgcmVzZXRUb1BhZ2UocGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1Qcm9taXNlIHdoaWNoIHJlc29sdmVzIHRvIHRoZSBuZXcgdG9wIHBhZ2UuWy9lbl1cbiAgICogICBbamFd5paw44GX44GE44OI44OD44OX44Oa44O844K444KS6Kej5rG644GZ44KLUHJvbWlzZeOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMucG9wXVxuICAgKiAgIFtlbl1QZXJmb3JtcyAncG9wJyBlZmZlY3QgaWYgYHRydWVgIGluc3RlYWQgb2YgJ3B1c2gnIG9yIG5vbmUuIFRoaXMgYWxzbyBzZXRzIGBvcHRpb25zLmFuaW1hdGlvbmAgdmFsdWUgdG8gYGRlZmF1bHRgIGluc3RlYWQgb2YgYG5vbmVgLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DbGVhcnMgcGFnZSBzdGFjayBhbmQgYWRkcyB0aGUgc3BlY2lmaWVkIHBhZ2UgdG8gdGhlIHN0YWNrLiBFeHRlbmRzIGBwdXNoUGFnZSgpYCBwYXJhbWV0ZXJzLlsvZW5dXG4gICAqICAgW2phXeODmuODvOOCuOOCueOCv+ODg+OCr+OCkuODquOCu+ODg+ODiOOBl+OAgeaMh+WumuOBl+OBn+ODmuODvOOCuOOCkuihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICByZXNldFRvUGFnZShwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICAoe3BhZ2UsIG9wdGlvbnN9ID0gdGhpcy5fcHJlcGFyZVBhZ2VBbmRPcHRpb25zKHBhZ2UsIG9wdGlvbnMpKTtcblxuICAgIGlmICghb3B0aW9ucy5hbmltYXRvciAmJiAhb3B0aW9ucy5hbmltYXRpb24gJiYgIW9wdGlvbnMucG9wKSB7XG4gICAgICBvcHRpb25zLmFuaW1hdGlvbiA9ICdub25lJztcbiAgICB9XG5cbiAgICBpZiAoIW9wdGlvbnMucGFnZSAmJiAhb3B0aW9ucy5wYWdlSFRNTCAmJiB0aGlzLl9nZXRQYWdlVGFyZ2V0KCkpIHtcbiAgICAgIHBhZ2UgPSBvcHRpb25zLnBhZ2UgPSB0aGlzLl9nZXRQYWdlVGFyZ2V0KCk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMucG9wKSB7XG4gICAgICB0aGlzLl9yZW1vdmVQYWdlcygpXG4gICAgICByZXR1cm4gdGhpcy5pbnNlcnRQYWdlKDAsIHBhZ2UsIHsgZGF0YTogb3B0aW9ucy5kYXRhIH0pXG4gICAgICAgIC50aGVuKCgpID0+IHRoaXMucG9wUGFnZShvcHRpb25zKSk7XG4gICAgfVxuXG4gICAgLy8gVGlwOiBjYWxsYmFjayBydW5zIGJlZm9yZSByZXNvbHZlZCBwcm9taXNlXG4gICAgY29uc3QgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrO1xuICAgIG9wdGlvbnMuY2FsbGJhY2sgPSBuZXdQYWdlID0+IHtcbiAgICAgIHRoaXMuX3JlbW92ZVBhZ2VzKClcbiAgICAgIG5ld1BhZ2UudXBkYXRlQmFja0J1dHRvbihmYWxzZSk7XG4gICAgICBjYWxsYmFjayAmJiBjYWxsYmFjayhuZXdQYWdlKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIHRoaXMucHVzaFBhZ2UocGFnZSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBicmluZ1BhZ2VUb3BcbiAgICogQHNpZ25hdHVyZSBicmluZ1BhZ2VUb3AoaXRlbSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IGl0ZW1cbiAgICogICBbZW5dUGFnZSBVUkwgb3IgaW5kZXggb2YgYW4gZXhpc3RpbmcgcGFnZSBpbiBuYXZpZ2F0b3IncyBzdGFjay5bL2VuXVxuICAgKiAgIFtqYV3jg5rjg7zjgrjjga5VUkzjgYvjgoLjgZfjgY/jga9vbnMtbmF2aWdhdG9y44Gu44Oa44O844K444K544K/44OD44Kv44Gu44Kk44Oz44OH44OD44Kv44K55YCk44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byB0aGUgbmV3IHRvcCBwYWdlLlsvZW5dXG4gICAqICAgW2phXeaWsOOBl+OBhOODiOODg+ODl+ODmuODvOOCuOOCkuino+axuuOBmeOCi1Byb21pc2XjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQnJpbmdzIHRoZSBnaXZlbiBwYWdlIHRvIHRoZSB0b3Agb2YgdGhlIHBhZ2Ugc3RhY2sgaWYgaXQgYWxyZWFkeSBleGlzdHMgb3IgcHVzaGVzIGl0IGludG8gdGhlIHN0YWNrIGlmIGRvZXNuJ3QuIEV4dGVuZHMgYHB1c2hQYWdlKClgIHBhcmFtZXRlcnMuWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44Gf44Oa44O844K444KS44Oa44O844K444K544K/44OD44Kv44Gu5LiA55Wq5LiK44Gr56e75YuV44GX44G+44GZ44CC44KC44GX5oyH5a6a44GX44Gf44Oa44O844K444GM54Sh44GL44Gj44Gf5aC05ZCI5paw44GX44GPcHVzaOOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuICBicmluZ1BhZ2VUb3AoaXRlbSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKFsnbnVtYmVyJywgJ3N0cmluZyddLmluZGV4T2YodHlwZW9mIGl0ZW0pID09PSAtMSkge1xuICAgICAgdXRpbC50aHJvdygnRmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIHBhZ2UgbmFtZSBvciB0aGUgaW5kZXggb2YgYW4gZXhpc3RpbmcgcGFnZS4gWW91IHN1cHBsaWVkICcgKyBpdGVtKTtcbiAgICB9XG4gICAgY29uc3QgaW5kZXggPSB0eXBlb2YgaXRlbSA9PT0gJ251bWJlcicgPyB0aGlzLl9ub3JtYWxpemVJbmRleChpdGVtKSA6IHRoaXMuX2xhc3RJbmRleE9mUGFnZShpdGVtKTtcbiAgICBjb25zdCBwYWdlID0gdGhpcy5wYWdlc1tpbmRleF07XG5cbiAgICBpZiAoaW5kZXggPCAwKSB7XG4gICAgICByZXR1cm4gdGhpcy5wdXNoUGFnZShpdGVtLCBvcHRpb25zKTtcbiAgICB9XG4gICAgKHtvcHRpb25zfSA9IHRoaXMuX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zKSk7XG5cbiAgICBpZiAoaW5kZXggPT09IHRoaXMucGFnZXMubGVuZ3RoIC0gMSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShwYWdlKTtcbiAgICB9XG4gICAgaWYgKCFwYWdlKSB7XG4gICAgICB1dGlsLnRocm93KCdGYWlsZWQgdG8gZmluZCBpdGVtICcgKyBpdGVtKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX2lzUnVubmluZykge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdwdXNoUGFnZSBpcyBhbHJlYWR5IHJ1bm5pbmcuJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLl9lbWl0UHJlUHVzaEV2ZW50KCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQ2FuY2VsZWQgaW4gcHJlcHVzaCBldmVudC4nKTtcbiAgICB9XG5cbiAgICBwYWdlLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICBwYWdlLnN0eWxlLnZpc2liaWxpdHkgPSAnaGlkZGVuJztcbiAgICBwYWdlLnBhcmVudE5vZGUuYXBwZW5kQ2hpbGQocGFnZSk7XG4gICAgcmV0dXJuIHRoaXMuX3B1c2hQYWdlKG9wdGlvbnMpO1xuICB9XG5cbiAgX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyhwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMgIT0gJ29iamVjdCcpIHtcbiAgICAgIHV0aWwudGhyb3coJ29wdGlvbnMgbXVzdCBiZSBhbiBvYmplY3QuIFlvdSBzdXBwbGllZCAnICsgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgaWYgKChwYWdlID09PSBudWxsIHx8IHBhZ2UgPT09IHVuZGVmaW5lZCkgJiYgb3B0aW9ucy5wYWdlKSB7XG4gICAgICBwYWdlID0gb3B0aW9ucy5wYWdlO1xuICAgIH1cblxuICAgIG9wdGlvbnMgPSB1dGlsLmV4dGVuZCh7fSwgdGhpcy5vcHRpb25zIHx8IHt9LCBvcHRpb25zLCB7cGFnZX0pO1xuXG4gICAgcmV0dXJuIHtwYWdlLCBvcHRpb25zfTtcbiAgfVxuXG4gIF9yZW1vdmVQYWdlcyh0aW1lcykge1xuICAgIGNvbnN0IHBhZ2VzID0gdGhpcy5wYWdlcztcbiAgICBsZXQgdW50aWwgPSB0aW1lcyA9PT0gdW5kZWZpbmVkID8gMCA6IHBhZ2VzLmxlbmd0aCAtIHRpbWVzO1xuICAgIHVudGlsID0gdW50aWwgPCAwID8gMSA6IHVudGlsO1xuXG4gICAgZm9yIChsZXQgaSA9IHBhZ2VzLmxlbmd0aCAtIDI7IGkgPj0gdW50aWw7IGktLSkge1xuICAgICAgdGhpcy5fcGFnZU1hcC5kZWxldGUocGFnZXNbaV0pO1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQocGFnZXNbaV0pO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVMYXN0UGFnZUJhY2tCdXR0b24oKSB7XG4gICAgY29uc3QgaW5kZXggPSB0aGlzLnBhZ2VzLmxlbmd0aCAtIDE7XG4gICAgaWYgKGluZGV4ID49IDApIHtcbiAgICAgIHRoaXMucGFnZXNbaW5kZXhdLnVwZGF0ZUJhY2tCdXR0b24oaW5kZXggPiAwKTtcbiAgICB9XG4gIH1cblxuICBfbm9ybWFsaXplSW5kZXgoaW5kZXgpIHtcbiAgICByZXR1cm4gaW5kZXggPj0gMCA/IGluZGV4IDogTWF0aC5hYnModGhpcy5wYWdlcy5sZW5ndGggKyBpbmRleCkgJSB0aGlzLnBhZ2VzLmxlbmd0aDtcbiAgfVxuXG4gIF9vbkRldmljZUJhY2tCdXR0b24oZXZlbnQpIHtcbiAgICBpZiAodGhpcy5wYWdlcy5sZW5ndGggPiAxKSB7XG4gICAgICB0aGlzLnBvcFBhZ2UoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXZlbnQuY2FsbFBhcmVudEhhbmRsZXIoKTtcbiAgICB9XG4gIH1cblxuICBfbGFzdEluZGV4T2ZQYWdlKHBhZ2VOYW1lKSB7XG4gICAgbGV0IGluZGV4O1xuICAgIGZvciAoaW5kZXggPSB0aGlzLnBhZ2VzLmxlbmd0aCAtIDE7IGluZGV4ID49IDA7IGluZGV4LS0pIHtcbiAgICAgIGlmIChwYWdlTmFtZSA9PT0gdGhpcy5fcGFnZU1hcC5nZXQodGhpcy5wYWdlc1tpbmRleF0pKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaW5kZXg7XG4gIH1cblxuICBfZW1pdFByZUV2ZW50KG5hbWUsIGRhdGEgPSB7fSkge1xuICAgIGxldCBpc0NhbmNlbGVkID0gZmFsc2U7XG5cbiAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3ByZScgKyBuYW1lLCB1dGlsLmV4dGVuZCh7XG4gICAgICBuYXZpZ2F0b3I6IHRoaXMsXG4gICAgICBjdXJyZW50UGFnZTogdGhpcy5wYWdlc1t0aGlzLnBhZ2VzLmxlbmd0aCAtIDFdLFxuICAgICAgY2FuY2VsOiAoKSA9PiBpc0NhbmNlbGVkID0gdHJ1ZVxuICAgIH0sIGRhdGEpKTtcblxuICAgIHJldHVybiBpc0NhbmNlbGVkO1xuICB9XG5cbiAgX2VtaXRQcmVQdXNoRXZlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VtaXRQcmVFdmVudCgncHVzaCcpO1xuICB9XG5cbiAgX2VtaXRQcmVQb3BFdmVudCgpIHtcbiAgICBjb25zdCBsID0gdGhpcy5wYWdlcy5sZW5ndGg7XG4gICAgcmV0dXJuIHRoaXMuX2VtaXRQcmVFdmVudCgncG9wJywge1xuICAgICAgbGVhdmVQYWdlOiB0aGlzLnBhZ2VzW2wgLSAxXSxcbiAgICAgIGVudGVyUGFnZTogdGhpcy5wYWdlc1tsIC0gMl1cbiAgICB9KTtcbiAgfVxuXG4gIC8vIFRPRE86IOabuOOBjeebtOOBmVxuICBfY3JlYXRlUGFnZUVsZW1lbnQodGVtcGxhdGVIVE1MKSB7XG4gICAgY29uc3QgcGFnZUVsZW1lbnQgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoaW50ZXJuYWwubm9ybWFsaXplUGFnZUhUTUwodGVtcGxhdGVIVE1MKSk7XG4gICAgdmVyaWZ5UGFnZUVsZW1lbnQocGFnZUVsZW1lbnQpO1xuICAgIHJldHVybiBwYWdlRWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuICBnZXQgb25EZXZpY2VCYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcjtcbiAgfVxuXG4gIHNldCBvbkRldmljZUJhY2tCdXR0b24oY2FsbGJhY2spIHtcbiAgICBpZiAodGhpcy5fYmFja0J1dHRvbkhhbmRsZXIpIHtcbiAgICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyLmRlc3Ryb3koKTtcbiAgICB9XG5cbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlciA9IGRldmljZUJhY2tCdXR0b25EaXNwYXRjaGVyLmNyZWF0ZUhhbmRsZXIodGhpcywgY2FsbGJhY2spO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB0b3BQYWdlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHRvcCBwYWdlIGVsZW1lbnQuIFVzZSB0aGlzIG1ldGhvZCB0byBhY2Nlc3Mgb3B0aW9ucyBwYXNzZWQgYnkgYHB1c2hQYWdlKClgLWxpa2UgbWV0aG9kcy5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7jg5rjg7zjgrjjgpLlj5blvpfjgZfjgb7jgZnjgIJwdXNoUGFnZSgp44KEcmVzZXRUb1BhZ2UoKeODoeOCveODg+ODieOBruW8leaVsOOCkuWPluW+l+OBp+OBjeOBvuOBmeOAglsvamFdXG4gICAqL1xuICBnZXQgdG9wUGFnZSgpIHtcbiAgICBsZXQgbGFzdCA9IHRoaXMubGFzdEVsZW1lbnRDaGlsZDtcbiAgICB3aGlsZSAobGFzdCAmJiBsYXN0LnRhZ05hbWUgIT09ICdPTlMtUEFHRScpIHsgbGFzdCA9IGxhc3QucHJldmlvdXNFbGVtZW50U2libGluZzsgfVxuICAgIHJldHVybiBsYXN0O1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwYWdlc1xuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0FycmF5fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ29weSBvZiB0aGUgbmF2aWdhdG9yJ3MgcGFnZSBzdGFjay5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2VzKCkge1xuICAgIHJldHVybiB1dGlsLmFycmF5RnJvbSh0aGlzLmNoaWxkcmVuKVxuICAgICAgLmZpbHRlcihlbGVtZW50ID0+IGVsZW1lbnQudGFnTmFtZSA9PT0gJ09OUy1QQUdFJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uU3dpcGVcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSG9vayBjYWxsZWQgd2hlbmV2ZXIgdGhlIHVzZXIgc2xpZGVzIHRoZSBuYXZpZ2F0b3IgKHN3aXBlLXRvLXBvcCkuIEl0IGdldHMgYSBkZWNpbWFsIHJhdGlvICgwLTEpIGFuZCBhbiBhbmltYXRpb25PcHRpb25zIG9iamVjdCBhcyBhcmd1bWVudHMuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBvblN3aXBlKCkge1xuICAgIHJldHVybiB0aGlzLl9vblN3aXBlO1xuICB9XG5cbiAgc2V0IG9uU3dpcGUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdXRpbC50aHJvdygnXCJvblN3aXBlXCIgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XG4gICAgfVxuICAgIHRoaXMuX29uU3dpcGUgPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb3B0aW9uc1xuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRGVmYXVsdCBvcHRpb25zIG9iamVjdC4gQXR0cmlidXRlcyBoYXZlIHByaW9yaXR5IG92ZXIgdGhpcyBwcm9wZXJ0eS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIEFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwic2xpZGVcImAsIGBcImxpZnRcImAsIGBcImZhZGVcImAgYW5kIGBcIm5vbmVcImAuXG4gICAqICAgICBUaGVzZSBhcmUgcGxhdGZvcm0gYmFzZWQgYW5pbWF0aW9ucy4gRm9yIGZpeGVkIGFuaW1hdGlvbnMsIGFkZCBgXCItaW9zXCJgIG9yIGBcIi1tZFwiYCBzdWZmaXggdG8gdGhlIGFuaW1hdGlvbiBuYW1lLiBFLmcuIGBcImxpZnQtaW9zXCJgLCBgXCJsaWZ0LW1kXCJgLiBEZWZhdWx0cyB2YWx1ZXMgYXJlIGBcInNsaWRlLWlvc1wiYCBhbmQgYFwiZmFkZS1tZFwiYC5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc1xuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvcHRpb25zLmNhbGxiYWNrXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GdW5jdGlvbiB0aGF0IGlzIGNhbGxlZCB3aGVuIHRoZSB0cmFuc2l0aW9uIGhhcyBlbmRlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jg6Hjgr3jg4Pjg4njgavjgojjgovnlLvpnaLpgbfnp7vjgYzntYLkuobjgZfjgZ/pmpvjgavlkbzjgbPlh7rjgZXjgozjgovplqLmlbDjgqrjg5bjgrjjgqfjgq/jg4jjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBnZXQgb3B0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5fb3B0aW9ucztcbiAgfVxuICBzZXQgb3B0aW9ucyhvYmplY3QpIHtcbiAgICB0aGlzLl9vcHRpb25zID0gb2JqZWN0O1xuICB9XG5cbiAgc2V0IF9pc1J1bm5pbmcodmFsdWUpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnX2lzLXJ1bm5pbmcnLCB2YWx1ZSA/ICd0cnVlJyA6ICdmYWxzZScpO1xuICB9XG4gIGdldCBfaXNSdW5uaW5nKCkge1xuICAgcmV0dXJuIEpTT04ucGFyc2UodGhpcy5nZXRBdHRyaWJ1dGUoJ19pcy1ydW5uaW5nJykpO1xuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgdGhpcy5sb2FkZWQudGhlbigoKSA9PiB0aGlzLnRvcFBhZ2UgJiYgdGhpcy50b3BQYWdlLl9zaG93KCkpXG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICB0aGlzLnRvcFBhZ2UgJiYgdGhpcy50b3BQYWdlLl9oaWRlKClcbiAgfVxuXG4gIF9kZXN0cm95KCkge1xuICAgIGZvciAobGV0IGkgPSB0aGlzLnBhZ2VzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZCh0aGlzLnBhZ2VzW2ldKTtcbiAgICB9XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBuYW1lXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IEFuaW1hdG9yXG4gICAqL1xuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yLnByb3RvdHlwZSBpbnN0YW5jZW9mIE5hdmlnYXRvckFuaW1hdG9yKSkge1xuICAgICAgdXRpbC50aHJvd0FuaW1hdG9yKCdOYXZpZ2F0b3InKTtcbiAgICB9XG5cbiAgICBfYW5pbWF0b3JEaWN0W25hbWVdID0gQW5pbWF0b3I7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGFuaW1hdG9ycygpIHtcbiAgICByZXR1cm4gX2FuaW1hdG9yRGljdDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgTmF2aWdhdG9yQW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIE5hdmlnYXRvckFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsncHJlcHVzaCcsICdwb3N0cHVzaCcsICdwcmVwb3AnLCAncG9zdHBvcCddO1xuICB9XG5cbiAgc3RhdGljIGdldCByZXdyaXRhYmxlcygpIHtcbiAgICByZXR1cm4gcmV3cml0YWJsZXM7XG4gIH1cbn1cblxub25zRWxlbWVudHMuTmF2aWdhdG9yID0gTmF2aWdhdG9yRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLW5hdmlnYXRvcicsIE5hdmlnYXRvckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1lbGVtZW50JztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3Rvb2xiYXInO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAndG9vbGJhci0tKicsXG4gICcudG9vbGJhcl9fbGVmdCc6ICd0b29sYmFyLS0qX19sZWZ0JyxcbiAgJy50b29sYmFyX19jZW50ZXInOiAndG9vbGJhci0tKl9fY2VudGVyJyxcbiAgJy50b29sYmFyX19yaWdodCc6ICd0b29sYmFyLS0qX19yaWdodCdcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXRvb2xiYXJcbiAqIEBjYXRlZ29yeSBwYWdlXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiB0b29sYmFyLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIHRyYW5zcGFyZW50XG4gKiAgIFtlbl1UcmFuc3BhcmVudCB0b29sYmFyLlsvZW5dXG4gKiAgIFtqYV3pgI/mmI7jgarog4zmma/jgpLmjIHjgaTjg4Tjg7zjg6vjg5Djg7zjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQG1vZGlmaWVyIGNvdmVyLWNvbnRlbnRcbiAqICAgW2VuXURpc3BsYXlzIHRoZSB0b29sYmFyIG9uIHRvcCBvZiB0aGUgcGFnZSdzIGNvbnRlbnQuIFNob3VsZCBiZSBjb21iaW5lZCB3aXRoIGB0cmFuc3BhcmVudGAgbW9kaWZpZXIuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgbm9zaGFkb3dcbiAqICAgW2VuXVRvb2xiYXIgd2l0aG91dCBzaGFkb3cuWy9lbl1cbiAqICAgW2phXeODhOODvOODq+ODkOODvOOBq+W9seOCkuS7mOOBkeOBmuOBq+ihqOekuuOBl+OBvuOBmeOAglsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRvb2xiYXIgY29tcG9uZW50IHRoYXQgY2FuIGJlIHVzZWQgd2l0aCBuYXZpZ2F0aW9uLlxuICpcbiAqICAgICBMZWZ0LCBjZW50ZXIgYW5kIHJpZ2h0IGNvbnRhaW5lcnMgY2FuIGJlIHNwZWNpZmllZCBieSBjbGFzcyBuYW1lcy5cbiAqXG4gKiAgICAgVGhpcyBjb21wb25lbnQgd2lsbCBhdXRvbWF0aWNhbGx5IGRpc3BsYXkgYXMgYSBNYXRlcmlhbCBEZXNpZ24gdG9vbGJhciB3aGVuIHJ1bm5pbmcgb24gQW5kcm9pZCBkZXZpY2VzLlxuICogICBbL2VuXVxuICogICBbamFd44OK44OT44Ky44O844K344On44Oz44Gn5L2/55So44GZ44KL44OE44O844Or44OQ44O855So44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CC44Kv44Op44K55ZCN44Gr44KI44KK44CB5bem44CB5Lit5aSu44CB5Y+z44Gu44Kz44Oz44OG44OK44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIGFIbUdMXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvdG9vbGJhclxuICogQGd1aWRlIGNvbXBpbGF0aW9uLmh0bWwjdG9vbGJhci1jb21waWxhdGlvbiBbZW5dQWRkaW5nIGEgdG9vbGJhclsvZW5dW2phXeODhOODvOODq+ODkOODvOOBrui/veWKoFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtYm90dG9tLXRvb2xiYXJcbiAqICAgW2VuXVRoZSBgPG9ucy1ib3R0b20tdG9vbGJhcj5gIGRpc3BsYXlzIGEgdG9vbGJhciBvbiB0aGUgYm90dG9tIG9mIHRoZSBwYWdlLlsvZW5dXG4gKiAgIFtqYV1vbnMtYm90dG9tLXRvb2xiYXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWJhY2stYnV0dG9uXG4gKiAgIFtlbl1UaGUgYDxvbnMtYmFjay1idXR0b24+YCBjb21wb25lbnQgZGlzcGxheXMgYSBiYWNrIGJ1dHRvbiBpbnNpZGUgdGhlIHRvb2xiYXIuWy9lbl1cbiAqICAgW2phXW9ucy1iYWNrLWJ1dHRvbuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhci1idXR0b25cbiAqICAgW2VuXVRoZSBgPG9ucy10b29sYmFyLWJ1dHRvbj5gIGNvbXBvbmVudCBkaXNwbGF5cyBhIHRvb2xiYXIgYnV0dG9uIGluc2lkZSB0aGUgdG9vbGJhci5bL2VuXVxuICogICBbamFdb25zLXRvb2xiYXItYnV0dG9u44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXBhZ2U+XG4gKiAgIDxvbnMtdG9vbGJhcj5cbiAqICAgICA8ZGl2IGNsYXNzPVwibGVmdFwiPlxuICogICAgICAgPG9ucy1iYWNrLWJ1dHRvbj5cbiAqICAgICAgICAgQmFja1xuICogICAgICAgPC9vbnMtYmFjay1idXR0b24+XG4gKiAgICAgPC9kaXY+XG4gKiAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPlxuICogICAgICAgVGl0bGVcbiAqICAgICA8L2Rpdj5cbiAqICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAqICAgICAgIDxvbnMtdG9vbGJhci1idXR0b24+XG4gKiAgICAgICAgIDxvbnMtaWNvbiBpY29uPVwibWQtbWVudVwiPjwvb25zLWljb24+XG4gKiAgICAgICA8L29ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9vbnMtdG9vbGJhcj5cbiAqIDwvb25zLXBhZ2U+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9vbGJhckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaW5saW5lXG4gICAqIEBpbml0b25seVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRGlzcGxheSB0aGUgdG9vbGJhciBhcyBhbiBpbmxpbmUgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV3jg4Tjg7zjg6vjg5Djg7zjgpLjgqTjg7Pjg6njgqTjg7Pjgavnva7jgY3jgb7jgZnjgILjgrnjgq/jg63jg7zjg6vpoJjln5/lhoXjgavjgZ3jga7jgb7jgb7ooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzdGF0aWNcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVN0YXRpYyB0b29sYmFycyBhcmUgbm90IGFuaW1hdGVkIGJ5IGBvbnMtbmF2aWdhdG9yYCB3aGVuIHB1c2hpbmcgb3IgcG9wcGluZyBwYWdlcy4gVGhpcyBjYW4gYmUgdXNlZnVsIHRvIGltcHJvdmUgcGVyZm9ybWFuY2UgaW4gc29tZSBzaXR1YXRpb25zLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgdG9vbGJhci5bL2VuXVxuICAgKiAgIFtqYV3jg4Tjg7zjg6vjg5Djg7zjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ2NsYXNzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIHN3aXRjaCAobmFtZSkge1xuICAgICAgY2FzZSAnY2xhc3MnOlxuICAgICAgICB1dGlsLnJlc3RvcmVDbGFzcyh0aGlzLCBkZWZhdWx0Q2xhc3NOYW1lLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNldFZpc2liaWxpdHlcbiAgICogQHNpZ25hdHVyZSBzZXRWaXNpYmlsaXR5KHZpc2libGUpXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gdmlzaWJsZVxuICAgKiAgIFtlbl1TZXQgdG8gdHJ1ZSB0byBzaG93IHRoZSB0b29sYmFyLCBmYWxzZSB0byBoaWRlIGl0Wy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3dzIHRoZSB0b29sYmFyIGlmIHZpc2libGUgaXMgdHJ1ZSwgb3RoZXJ3aXNlIGhpZGVzIGl0LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXRWaXNpYmlsaXR5KHZpc2libGUpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gdmlzaWJsZSA/ICcnIDogJ25vbmUnO1xuXG4gICAgICBpZiAodGhpcy5wYXJlbnROb2RlKSB7XG4gICAgICAgIGNvbnN0IHNpYmxpbmdCYWNrZ3JvdW5kID0gdXRpbC5maW5kQ2hpbGQodGhpcy5wYXJlbnROb2RlLCAnLnBhZ2VfX2JhY2tncm91bmQnKTtcbiAgICAgICAgaWYgKHNpYmxpbmdCYWNrZ3JvdW5kKSB7XG4gICAgICAgICAgc2libGluZ0JhY2tncm91bmQuc3R5bGUudG9wID0gdmlzaWJsZSA/IG51bGwgOiAwO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc2libGluZ0NvbnRlbnQgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLnBhcmVudE5vZGUsICcucGFnZV9fY29udGVudCcpO1xuICAgICAgICBpZiAoc2libGluZ0NvbnRlbnQpIHtcbiAgICAgICAgICBzaWJsaW5nQ29udGVudC5zdHlsZS50b3AgPSB2aXNpYmxlID8gbnVsbCA6IDA7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNob3dcbiAgICogQHNpZ25hdHVyZSBzaG93KClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgdGhlIHRvb2xiYXIuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNob3coKSB7XG4gICAgdGhpcy5zZXRWaXNpYmlsaXR5KHRydWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgaGlkZVxuICAgKiBAc2lnbmF0dXJlIGhpZGUoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSGlkZSB0aGUgdG9vbGJhci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgaGlkZSgpIHtcbiAgICB0aGlzLnNldFZpc2liaWxpdHkoZmFsc2UpO1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldFRvb2xiYXJMZWZ0SXRlbXNFbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5sZWZ0JykgfHwgaW50ZXJuYWwubnVsbEVsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gICAqL1xuICBfZ2V0VG9vbGJhckNlbnRlckl0ZW1zRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCcuY2VudGVyJykgfHwgaW50ZXJuYWwubnVsbEVsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gICAqL1xuICBfZ2V0VG9vbGJhclJpZ2h0SXRlbXNFbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJy5yaWdodCcpIHx8IGludGVybmFsLm51bGxFbGVtZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50fVxuICAgKi9cbiAgX2dldFRvb2xiYXJCYWNrQnV0dG9uTGFiZWxFbGVtZW50KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ29ucy1iYWNrLWJ1dHRvbiAuYmFjay1idXR0b25fX2xhYmVsJykgfHwgaW50ZXJuYWwubnVsbEVsZW1lbnQ7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7SFRNTEVsZW1lbnR9XG4gICAqL1xuICBfZ2V0VG9vbGJhckJhY2tCdXR0b25JY29uRWxlbWVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeVNlbGVjdG9yKCdvbnMtYmFjay1idXR0b24gLmJhY2stYnV0dG9uX19pY29uJykgfHwgaW50ZXJuYWwubnVsbEVsZW1lbnQ7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG4gICAgdGhpcy5fZW5zdXJlVG9vbGJhckl0ZW1FbGVtZW50cygpO1xuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxuXG4gIF9lbnN1cmVUb29sYmFySXRlbUVsZW1lbnRzKCkge1xuICAgIGZvciAobGV0IGkgPSB0aGlzLmNoaWxkTm9kZXMubGVuZ3RoIC0gMTsgaSA+PSAwIDsgaS0tKSB7XG4gICAgICAvLyBjYXNlIG9mIG5vdCBlbGVtZW50XG4gICAgICBpZiAodGhpcy5jaGlsZE5vZGVzW2ldLm5vZGVUeXBlICE9IDEpIHtcbiAgICAgICAgdGhpcy5yZW1vdmVDaGlsZCh0aGlzLmNoaWxkTm9kZXNbaV0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGNlbnRlciA9IHRoaXMuX2Vuc3VyZVRvb2xiYXJFbGVtZW50KCdjZW50ZXInKTtcbiAgICBjZW50ZXIuY2xhc3NMaXN0LmFkZCgndG9vbGJhcl9fdGl0bGUnKTtcblxuICAgIGlmICh0aGlzLmNoaWxkcmVuLmxlbmd0aCAhPT0gMSB8fCAhdGhpcy5jaGlsZHJlblswXS5jbGFzc0xpc3QuY29udGFpbnMoJ2NlbnRlcicpKSB7XG4gICAgICBjb25zdCBsZWZ0ID0gdGhpcy5fZW5zdXJlVG9vbGJhckVsZW1lbnQoJ2xlZnQnKTtcbiAgICAgIGNvbnN0IHJpZ2h0ID0gdGhpcy5fZW5zdXJlVG9vbGJhckVsZW1lbnQoJ3JpZ2h0Jyk7XG5cbiAgICAgIGlmICh0aGlzLmNoaWxkcmVuWzBdICE9PSBsZWZ0IHx8IHRoaXMuY2hpbGRyZW5bMV0gIT09IGNlbnRlciB8fCB0aGlzLmNoaWxkcmVuWzJdICE9PSByaWdodCkge1xuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGxlZnQpO1xuICAgICAgICB0aGlzLmFwcGVuZENoaWxkKGNlbnRlcik7XG4gICAgICAgIHRoaXMuYXBwZW5kQ2hpbGQocmlnaHQpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9lbnN1cmVUb29sYmFyRWxlbWVudChuYW1lKSB7XG4gICAgaWYgKHV0aWwuZmluZENoaWxkKHRoaXMsICcudG9vbGJhcl9fJyArIG5hbWUpKSB7XG4gICAgICBjb25zdCBlbGVtZW50ID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy50b29sYmFyX18nICsgbmFtZSk7XG4gICAgICBlbGVtZW50LmNsYXNzTGlzdC5hZGQobmFtZSk7XG4gICAgICByZXR1cm4gZWxlbWVudDtcbiAgICB9XG5cbiAgICBjb25zdCBlbGVtZW50ID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy4nICsgbmFtZSkgfHwgdXRpbC5jcmVhdGUoJy4nICsgbmFtZSk7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKCd0b29sYmFyX18nICsgbmFtZSk7XG5cbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5Ub29sYmFyID0gVG9vbGJhckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10b29sYmFyJywgVG9vbGJhckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBhdXRvU3R5bGUgZnJvbSAnLi4vb25zL2F1dG9zdHlsZSc7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi9vbnMvaW50ZXJuYWwvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmltcG9ydCAnLi9vbnMtdG9vbGJhcic7IC8vIGVuc3VyZXMgdGhhdCAnb25zLXRvb2xiYXInIGVsZW1lbnQgaXMgcmVnaXN0ZXJlZFxuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3BhZ2UnO1xuY29uc3Qgc2NoZW1lID0ge1xuICAnJzogJ3BhZ2UtLSonLFxuICAnLnBhZ2VfX2NvbnRlbnQnOiAncGFnZS0tKl9fY29udGVudCcsXG4gICcucGFnZV9fYmFja2dyb3VuZCc6ICdwYWdlLS0qX19iYWNrZ3JvdW5kJ1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtcGFnZVxuICogQGNhdGVnb3J5IHBhZ2VcbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHN0eWxlWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRoaXMgY29tcG9uZW50IGRlZmluZXMgdGhlIHJvb3Qgb2YgZWFjaCBwYWdlLiBJZiB0aGUgY29udGVudCBpcyBsYXJnZSBpdCB3aWxsIGJlY29tZSBzY3JvbGxhYmxlLlxuICpcbiAqICAgICBBIG5hdmlnYXRpb24gYmFyIGNhbiBiZSBhZGRlZCB0byB0aGUgdG9wIG9mIHRoZSBwYWdlIHVzaW5nIHRoZSBgPG9ucy10b29sYmFyPmAgZWxlbWVudC5cbiAqICAgWy9lbl1cbiAqICAgW2phXeODmuODvOOCuOWumue+qeOBruOBn+OCgeOBruOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAguOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBruWGheWuueOBr+OCueOCr+ODreODvOODq+OBjOioseWPr+OBleOCjOOBvuOBmeOAglsvamFdXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcGFnZVxuICogQGd1aWRlIGxpZmVjeWNsZS5odG1sI2V2ZW50c1xuICogICBbZW5dT3ZlcnZpZXcgb2YgcGFnZSBldmVudHNbL2VuXVxuICogICBbamFdT3ZlcnZpZXcgb2YgcGFnZSBldmVudHNbL2phXVxuICogQGd1aWRlIGZ1bmRhbWVudGFscy5odG1sI21hbmFnaW5nLXBhZ2VzXG4gKiAgIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlc1svZW5dXG4gKiAgIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhclxuICogICBbZW5dVXNlIHRoZSBgPG9ucy10b29sYmFyPmAgZWxlbWVudCB0byBhZGQgYSBuYXZpZ2F0aW9uIGJhciB0byB0aGUgdG9wIG9mIHRoZSBwYWdlLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtcGFnZT5cbiAqICAgPG9ucy10b29sYmFyPlxuICogICAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgICA8b25zLWJhY2stYnV0dG9uPkJhY2s8L29ucy1iYWNrLWJ1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgICA8ZGl2IGNsYXNzPVwiY2VudGVyXCI+VGl0bGU8L2Rpdj5cbiAqICAgICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAqICAgICAgIDxvbnMtdG9vbGJhci1idXR0b24+XG4gKiAgICAgICAgIDxvbnMtaWNvbiBpY29uPVwibWQtbWVudVwiPjwvb25zLWljb24+XG4gKiAgICAgICA8L29ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgICA8L2Rpdj5cbiAqICAgPC9vbnMtdG9vbGJhcj5cbiAqXG4gKiAgIDxwPlBhZ2UgY29udGVudDwvcD5cbiAqIDwvb25zLXBhZ2U+XG4gKlxuICogQGV4YW1wbGVcbiAqIDxzY3JpcHQ+XG4gKiAgIG15QXBwLmhhbmRsZXIgPSBmdW5jdGlvbihkb25lKSB7XG4gKiAgICAgbG9hZE1vcmUoKS50aGVuKGRvbmUpO1xuICogICB9XG4gKiA8L3NjcmlwdD5cbiAqXG4gKiA8b25zLXBhZ2Ugb24taW5maW5pdGUtc2Nyb2xsPVwibXlBcHAuaGFuZGxlclwiPlxuICogICA8b25zLXRvb2xiYXI+XG4gKiAgICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPkxpc3Q8L2Rpdj5cbiAqICAgPC9vbnMtdG9vbGJhcj5cbiAqXG4gKiAgIDxvbnMtbGlzdD5cbiAqICAgICA8b25zLWxpc3QtaXRlbT4jMTwvb25zLWxpc3QtaXRlbT5cbiAqICAgICA8b25zLWxpc3QtaXRlbT4jMjwvb25zLWxpc3QtaXRlbT5cbiAqICAgICA8b25zLWxpc3QtaXRlbT4jMzwvb25zLWxpc3QtaXRlbT5cbiAqICAgICAuLi5cbiAqICAgPC9vbnMtbGlzdD5cbiAqIDwvb25zLXBhZ2U+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhZ2VFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgaW5pdFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgcmlnaHQgYWZ0ZXIgdGhlIHBhZ2UgaXMgYXR0YWNoZWQuWy9lbl1cbiAgICogICBbamFd44Oa44O844K444GM44Ki44K/44OD44OB44GV44KM44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBzaG93XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCByaWdodCBhZnRlciB0aGUgcGFnZSBpcyBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jg5rjg7zjgrjjgYzooajnpLrjgZXjgozjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IGhpZGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHJpZ2h0IGFmdGVyIHRoZSBwYWdlIGlzIGhpZGRlbi5bL2VuXVxuICAgKiAgIFtqYV3jg5rjg7zjgrjjgYzpmqDjgozjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IGRlc3Ryb3lcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIHJpZ2h0IGJlZm9yZSB0aGUgcGFnZSBpcyBkZXN0cm95ZWQuWy9lbl1cbiAgICogICBbamFd44Oa44O844K444GM56C05qOE44GV44KM44KL5YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgbW9kaWZpZXIgbmFtZSB0byBzcGVjaWZ5IGN1c3RvbSBzdHlsZXMuWy9lbl1cbiAgICogICBbamFd44K544K/44Kk44Or5a6a576p44KS44Kr44K544K/44Oe44Kk44K644GZ44KL44Gf44KB44Gu5ZCN5YmN44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgb24taW5maW5pdGUtc2Nyb2xsXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1QYXRoIG9mIHRoZSBmdW5jdGlvbiB0byBiZSBleGVjdXRlZCBvbiBpbmZpbml0ZSBzY3JvbGxpbmcuIEV4YW1wbGU6IGBhcHAubG9hZERhdGFgLiBUaGUgZnVuY3Rpb24gcmVjZWl2ZXMgYSBkb25lIGNhbGxiYWNrIHRoYXQgbXVzdCBiZSBjYWxsZWQgd2hlbiBpdCdzIGZpbmlzaGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9kZXJpdmVIb29rcygpO1xuXG4gICAgdGhpcy5fZGVmYXVsdENsYXNzTmFtZSA9IGRlZmF1bHRDbGFzc05hbWU7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgdGhpcy5faW5pdGlhbGl6ZWQgPSBmYWxzZTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb21waWxlKCk7XG5cbiAgICAgIHRoaXMuX2lzU2hvd24gPSBmYWxzZTtcbiAgICAgIHRoaXMuX2NvbnRlbnRFbGVtZW50ID0gdGhpcy5fZ2V0Q29udGVudEVsZW1lbnQoKTtcbiAgICAgIHRoaXMuX2JhY2tncm91bmRFbGVtZW50ID0gdGhpcy5fZ2V0QmFja2dyb3VuZEVsZW1lbnQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuXG4gICAgY29uc3QgdG9vbGJhciA9IHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtdG9vbGJhcicpO1xuXG4gICAgY29uc3QgYmFja2dyb3VuZCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucGFnZV9fYmFja2dyb3VuZCcpIHx8IHV0aWwuZmluZENoaWxkKHRoaXMsICcuYmFja2dyb3VuZCcpIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGJhY2tncm91bmQuY2xhc3NMaXN0LmFkZCgncGFnZV9fYmFja2dyb3VuZCcpO1xuICAgIHRoaXMuaW5zZXJ0QmVmb3JlKGJhY2tncm91bmQsICF0b29sYmFyICYmIHRoaXMuZmlyc3RDaGlsZCB8fCB0b29sYmFyICYmIHRvb2xiYXIubmV4dFNpYmxpbmcpO1xuXG4gICAgY29uc3QgY29udGVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucGFnZV9fY29udGVudCcpIHx8IHV0aWwuZmluZENoaWxkKHRoaXMsICcuY29udGVudCcpIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgncGFnZV9fY29udGVudCcpO1xuICAgIGlmICghY29udGVudC5wYXJlbnRFbGVtZW50KSB7XG4gICAgICB1dGlsLmFycmF5RnJvbSh0aGlzLmNoaWxkTm9kZXMpLmZvckVhY2gobm9kZSA9PiB7XG4gICAgICAgIGlmIChub2RlLm5vZGVUeXBlICE9PSAxIHx8IHRoaXMuX2VsZW1lbnRTaG91bGRCZU1vdmVkKG5vZGUpKSB7XG4gICAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChub2RlKTsgLy8gQ2FuIHRyaWdnZXIgZGV0YWNoZWQgY29ubmVjdGVkQ2FsbGJhY2tzXG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRoaXMuX3RyeVRvRmlsbFN0YXR1c0Jhcihjb250ZW50KTsgLy8gTXVzdCBydW4gYmVmb3JlIGNoaWxkIHBhZ2VzIHRyeSB0byBmaWxsIHN0YXR1cyBiYXIuXG4gICAgdGhpcy5pbnNlcnRCZWZvcmUoY29udGVudCwgYmFja2dyb3VuZC5uZXh0U2libGluZyk7IC8vIENhbiB0cmlnZ2VyIGF0dGFjaGVkIGNvbm5lY3RlZENhbGxiYWNrc1xuXG4gICAgaWYgKCghdG9vbGJhciB8fCAhdXRpbC5oYXNNb2RpZmllcih0b29sYmFyLCAndHJhbnNwYXJlbnQnKSlcbiAgICAgICYmIGNvbnRlbnQuY2hpbGRyZW4ubGVuZ3RoID09PSAxXG4gICAgICAmJiB1dGlsLmlzUGFnZUNvbnRyb2woY29udGVudC5jaGlsZHJlblswXSlcbiAgICApIHtcbiAgICAgIHRoaXMuX2RlZmF1bHRDbGFzc05hbWUgKz0gJyBwYWdlLS13cmFwcGVyJztcbiAgICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKCdjbGFzcycpO1xuICAgIH1cblxuICAgIGNvbnN0IGJvdHRvbVRvb2xiYXIgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLWJvdHRvbS10b29sYmFyJyk7XG4gICAgaWYgKGJvdHRvbVRvb2xiYXIpIHtcbiAgICAgIHRoaXMuX2RlZmF1bHRDbGFzc05hbWUgKz0gJyBwYWdlLXdpdGgtYm90dG9tLXRvb2xiYXInO1xuICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soJ2NsYXNzJyk7XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX2VsZW1lbnRTaG91bGRCZU1vdmVkKGVsKSB7XG4gICAgaWYgKGVsLmNsYXNzTGlzdC5jb250YWlucygncGFnZV9fYmFja2dyb3VuZCcpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IHRhZ05hbWUgPSBlbC50YWdOYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKHRhZ05hbWUgPT09ICdvbnMtZmFiJykge1xuICAgICAgcmV0dXJuICFlbC5oYXNBdHRyaWJ1dGUoJ3Bvc2l0aW9uJyk7XG4gICAgfVxuICAgIGNvbnN0IGZpeGVkRWxlbWVudHMgPSBbJ3NjcmlwdCcsICdvbnMtdG9vbGJhcicsICdvbnMtYm90dG9tLXRvb2xiYXInLCAnb25zLW1vZGFsJywgJ29ucy1zcGVlZC1kaWFsJywgJ29ucy1kaWFsb2cnLCAnb25zLWFsZXJ0LWRpYWxvZycsICdvbnMtcG9wb3ZlcicsICdvbnMtYWN0aW9uLXNoZWV0J107XG4gICAgcmV0dXJuIGVsLmhhc0F0dHJpYnV0ZSgnaW5saW5lJykgfHwgZml4ZWRFbGVtZW50cy5pbmRleE9mKHRhZ05hbWUpID09PSAtMTtcbiAgfVxuXG4gIF90cnlUb0ZpbGxTdGF0dXNCYXIoY29udGVudCA9IHRoaXMuX2NvbnRlbnRFbGVtZW50KSB7XG4gICAgaW50ZXJuYWwuYXV0b1N0YXR1c0JhckZpbGwoKCkgPT4ge1xuICAgICAgdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ3N0YXR1cy1iYXItZmlsbCcsXG4gICAgICAgICF1dGlsLmZpbmRQYXJlbnQodGhpcywgZSA9PiBlLmhhc0F0dHJpYnV0ZSgnc3RhdHVzLWJhci1maWxsJykpIC8vIE5vdCBhbHJlYWR5IGZpbGxlZFxuICAgICAgICAmJiAodGhpcy5fY2FuQW5pbWF0ZVRvb2xiYXIoY29udGVudCkgfHwgIXV0aWwuZmluZENoaWxkKGNvbnRlbnQsIHV0aWwuaXNQYWdlQ29udHJvbCkpIC8vIEhhcyB0b29sYmFyIG9yIGNhbm5vdCBkZWxlZ2F0ZVxuICAgICAgKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9jYW5BbmltYXRlVG9vbGJhcihjb250ZW50ID0gdGhpcy5fY29udGVudEVsZW1lbnQpIHtcbiAgICBpZiAodXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy10b29sYmFyJykpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiAhIXV0aWwuZmluZENoaWxkKGNvbnRlbnQsIGVsID0+IHtcbiAgICAgIHJldHVybiB1dGlsLm1hdGNoKGVsLCAnb25zLXRvb2xiYXInKSAmJiAhZWwuaGFzQXR0cmlidXRlKCdpbmxpbmUnKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGlmICghdXRpbC5pc0F0dGFjaGVkKHRoaXMpKSB7IC8vIEF2b2lkIGRldGFjaGVkIGNhbGxzXG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX3RyeVRvRmlsbFN0YXR1c0JhcigpOyAvLyBFbnN1cmUgc3RhdHVzIGJhciB3aGVuIHRoZSBlbGVtZW50IHdhcyBjb21waWxlZCBiZWZvcmUgY29ubmVjdGVkXG5cbiAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnb24taW5maW5pdGUtc2Nyb2xsJykpIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soJ29uLWluZmluaXRlLXNjcm9sbCcsIG51bGwsIHRoaXMuZ2V0QXR0cmlidXRlKCdvbi1pbmZpbml0ZS1zY3JvbGwnKSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5faW5pdGlhbGl6ZWQpIHtcbiAgICAgICAgdGhpcy5faW5pdGlhbGl6ZWQgPSB0cnVlO1xuXG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICAgICAgdGhpcy5vbkluaXQgJiYgdGhpcy5vbkluaXQoKTtcbiAgICAgICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ2luaXQnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKCF1dGlsLmhhc0FueUNvbXBvbmVudEFzUGFyZW50KHRoaXMpKSB7XG4gICAgICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuX3Nob3coKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHVwZGF0ZUJhY2tCdXR0b24oc2hvdykge1xuICAgIGlmICh0aGlzLmJhY2tCdXR0b24pIHtcbiAgICAgIHNob3cgPyB0aGlzLmJhY2tCdXR0b24uc2hvdygpIDogdGhpcy5iYWNrQnV0dG9uLmhpZGUoKTtcbiAgICB9XG4gIH1cblxuICBzZXQgbmFtZShzdHIpIHtcbiAgICB0aGlzLnNldEF0dHJpYnV0ZSgnbmFtZScsIHN0cik7XG4gIH1cblxuICBnZXQgbmFtZSgpIHtcbiAgICByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgfVxuXG4gIGdldCBiYWNrQnV0dG9uKCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ29ucy1iYWNrLWJ1dHRvbicpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkluZmluaXRlU2Nyb2xsXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUZ1bmN0aW9uIHRvIGJlIGV4ZWN1dGVkIHdoZW4gc2Nyb2xsaW5nIHRvIHRoZSBib3R0b20gb2YgdGhlIHBhZ2UuIFRoZSBmdW5jdGlvbiByZWNlaXZlcyBhIGRvbmUgY2FsbGJhY2sgYXMgYW4gYXJndW1lbnQgdGhhdCBtdXN0IGJlIGNhbGxlZCB3aGVuIGl0J3MgZmluaXNoZWQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cbiAgc2V0IG9uSW5maW5pdGVTY3JvbGwodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdXRpbC50aHJvdygnXCJvbkluZmluaXRlU2Nyb2xsXCIgbXVzdCBiZSBmdW5jdGlvbiBvciBudWxsJyk7XG4gICAgfVxuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgdGhpcy5fY29udGVudEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPblNjcm9sbCk7XG4gICAgICB9IGVsc2UgaWYgKCF0aGlzLl9vbkluZmluaXRlU2Nyb2xsKSB7XG4gICAgICAgIHRoaXMuX2luZmluaXRlU2Nyb2xsTGltaXQgPSAwLjk7XG4gICAgICAgIHRoaXMuX2JvdW5kT25TY3JvbGwgPSB0aGlzLl9vblNjcm9sbC5iaW5kKHRoaXMpO1xuICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5fY29udGVudEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5fYm91bmRPblNjcm9sbCkpO1xuICAgICAgfVxuICAgICAgdGhpcy5fb25JbmZpbml0ZVNjcm9sbCA9IHZhbHVlO1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IG9uSW5maW5pdGVTY3JvbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMuX29uSW5maW5pdGVTY3JvbGw7XG4gIH1cblxuICBfb25TY3JvbGwoKSB7XG4gICAgY29uc3QgYyA9IHRoaXMuX2NvbnRlbnRFbGVtZW50LFxuICAgICAgb3ZlckxpbWl0ID0gKGMuc2Nyb2xsVG9wICsgYy5jbGllbnRIZWlnaHQpIC8gYy5zY3JvbGxIZWlnaHQgPj0gdGhpcy5faW5maW5pdGVTY3JvbGxMaW1pdDtcblxuICAgIGlmICh0aGlzLl9vbkluZmluaXRlU2Nyb2xsICYmICF0aGlzLl9sb2FkaW5nQ29udGVudCAmJiBvdmVyTGltaXQpIHtcbiAgICAgIHRoaXMuX2xvYWRpbmdDb250ZW50ID0gdHJ1ZTtcbiAgICAgIHRoaXMuX29uSW5maW5pdGVTY3JvbGwoKCkgPT4gdGhpcy5fbG9hZGluZ0NvbnRlbnQgPSBmYWxzZSk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkRldmljZUJhY2tCdXR0b25cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUJhY2stYnV0dG9uIGhhbmRsZXIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44Kv44Oc44K/44Oz44OP44Oz44OJ44Op44CCWy9qYV1cbiAgICovXG4gIGdldCBvbkRldmljZUJhY2tCdXR0b24oKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyO1xuICB9XG5cbiAgc2V0IG9uRGV2aWNlQmFja0J1dHRvbihjYWxsYmFjaykge1xuICAgIGlmICh0aGlzLl9iYWNrQnV0dG9uSGFuZGxlcikge1xuICAgICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIuZGVzdHJveSgpO1xuICAgIH1cblxuICAgIHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyID0gZGV2aWNlQmFja0J1dHRvbkRpc3BhdGNoZXIuY3JlYXRlSGFuZGxlcih0aGlzLCBjYWxsYmFjayk7XG4gIH1cblxuICBnZXQgc2Nyb2xsVG9wKCkge1xuICAgIHJldHVybiB0aGlzLl9jb250ZW50RWxlbWVudC5zY3JvbGxUb3A7XG4gIH1cblxuICBzZXQgc2Nyb2xsVG9wKG5ld1ZhbHVlKSB7XG4gICAgdGhpcy5fY29udGVudEVsZW1lbnQuc2Nyb2xsVG9wID0gbmV3VmFsdWU7XG4gIH1cblxuICBfZ2V0Q29udGVudEVsZW1lbnQoKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wYWdlX19jb250ZW50Jyk7XG4gICAgaWYgKHJlc3VsdCkge1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgdXRpbC50aHJvdygnRmFpbCB0byBnZXQgXCIucGFnZV9fY29udGVudFwiIGVsZW1lbnQnKTtcbiAgfVxuXG4gIF9nZXRCYWNrZ3JvdW5kRWxlbWVudCgpIHtcbiAgICBjb25zdCByZXN1bHQgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnBhZ2VfX2JhY2tncm91bmQnKTtcbiAgICBpZiAocmVzdWx0KSB7XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICB1dGlsLnRocm93KCdGYWlsIHRvIGdldCBcIi5wYWdlX19iYWNrZ3JvdW5kXCIgZWxlbWVudCcpO1xuICB9XG5cbiAgX2dldEJvdHRvbVRvb2xiYXJFbGVtZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLWJvdHRvbS10b29sYmFyJykgfHwgaW50ZXJuYWwubnVsbEVsZW1lbnQ7XG4gIH1cblxuICBfZ2V0VG9vbGJhckVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtdG9vbGJhcicpIHx8IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ29ucy10b29sYmFyJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICdvbi1pbmZpbml0ZS1zY3JvbGwnLCAnY2xhc3MnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIHRoaXMuX2RlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdvbi1pbmZpbml0ZS1zY3JvbGwnOlxuICAgICAgICBpZiAoY3VycmVudCA9PT0gbnVsbCkge1xuICAgICAgICAgIHRoaXMub25JbmZpbml0ZVNjcm9sbCA9IG51bGw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5vbkluZmluaXRlU2Nyb2xsID0gKGRvbmUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGYgPSB1dGlsLmZpbmRGcm9tUGF0aChjdXJyZW50KTtcbiAgICAgICAgICAgIHRoaXMub25JbmZpbml0ZVNjcm9sbCA9IGY7XG4gICAgICAgICAgICBmKGRvbmUpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgaWYgKCF0aGlzLl9pc1Nob3duICYmIHV0aWwuaXNBdHRhY2hlZCh0aGlzKSkge1xuICAgICAgdGhpcy5faXNTaG93biA9IHRydWU7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnc2hvd24nLCAnJyk7XG4gICAgICB0aGlzLm9uU2hvdyAmJiB0aGlzLm9uU2hvdygpO1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdzaG93Jyk7XG4gICAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX3Nob3cnKTtcbiAgICB9XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICBpZiAodGhpcy5faXNTaG93bikge1xuICAgICAgdGhpcy5faXNTaG93biA9IGZhbHNlO1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ3Nob3duJyk7XG4gICAgICB0aGlzLm9uSGlkZSAmJiB0aGlzLm9uSGlkZSgpO1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdoaWRlJyk7XG4gICAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX2hpZGUnKTtcbiAgICB9XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICB0aGlzLl9oaWRlKCk7XG5cbiAgICB0aGlzLm9uRGVzdHJveSAmJiB0aGlzLm9uRGVzdHJveSgpO1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAnZGVzdHJveScpO1xuXG4gICAgaWYgKHRoaXMub25EZXZpY2VCYWNrQnV0dG9uKSB7XG4gICAgICB0aGlzLm9uRGV2aWNlQmFja0J1dHRvbi5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgdXRpbC5wcm9wYWdhdGVBY3Rpb24odGhpcywgJ19kZXN0cm95Jyk7XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuICB9XG5cbiAgX2Rlcml2ZUhvb2tzKCkge1xuICAgIHRoaXMuY29uc3RydWN0b3IuZXZlbnRzLmZvckVhY2goZXZlbnQgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gJ29uJyArIGV2ZW50LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgZXZlbnQuc2xpY2UoMSk7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywga2V5LCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgZ2V0OiAoKSA9PiB0aGlzW2BfJHtrZXl9YF0sXG4gICAgICAgIHNldDogdmFsdWUgPT4ge1xuICAgICAgICAgIGlmICghKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICAgICAgICB1dGlsLnRocm93KGBcIiR7a2V5fVwiIGhvb2sgbXVzdCBiZSBhIGZ1bmN0aW9uYCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXNbYF8ke2tleX1gXSA9IHZhbHVlLmJpbmQodGhpcyk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldCBldmVudHMoKSB7XG4gICAgcmV0dXJuIFsnaW5pdCcsICdzaG93JywgJ2hpZGUnLCAnZGVzdHJveSddO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkYXRhXG4gICAqIEB0eXBlIHsqfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVXNlcidzIGN1c3RvbSBkYXRhIHBhc3NlZCB0byBgcHVzaFBhZ2UoKWAtbGlrZSBtZXRob2RzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xufVxuXG5vbnNFbGVtZW50cy5QYWdlID0gUGFnZUVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1wYWdlJywgUGFnZUVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgQmFzZUFuaW1hdG9yIGZyb20gJy4uLy4uL29ucy9iYXNlLWFuaW1hdG9yJztcblxuZXhwb3J0IGNsYXNzIFBvcG92ZXJBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnRpbWluZ1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kdXJhdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kZWxheVxuICAgKi9cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuNCwgMSknLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIHNob3cocG9wb3ZlciwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgaGlkZShwb3BvdmVyLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cblxuICBfYW5pbWF0ZShlbGVtZW50LCB7ZnJvbSwgdG8sIG9wdGlvbnMsIGNhbGxiYWNrLCByZXN0b3JlID0gZmFsc2UsIGFuaW1hdGlvbn0pIHtcbiAgICBvcHRpb25zID0gdXRpbC5leHRlbmQoe30sIHRoaXMub3B0aW9ucywgb3B0aW9ucyk7XG5cbiAgICBpZiAoYW5pbWF0aW9uKSB7XG4gICAgICBmcm9tID0gYW5pbWF0aW9uLmZyb207XG4gICAgICB0byA9IGFuaW1hdGlvbi50bztcbiAgICB9XG5cbiAgICBhbmltYXRpb24gPSBhbmltaXQoZWxlbWVudCk7XG4gICAgaWYgKHJlc3RvcmUpIHtcbiAgICAgIGFuaW1hdGlvbiA9IGFuaW1hdGlvbi5zYXZlU3R5bGUoKTtcbiAgICB9XG4gICAgYW5pbWF0aW9uID0gYW5pbWF0aW9uLnF1ZXVlKGZyb20pLndhaXQodGhpcy5kZWxheSkucXVldWUoe1xuICAgICAgY3NzOiB0byxcbiAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgdGltaW5nOiB0aGlzLnRpbWluZ1xuICAgIH0pO1xuICAgIGlmIChyZXN0b3JlKSB7XG4gICAgICBhbmltYXRpb24gPSBhbmltYXRpb24ucmVzdG9yZVN0eWxlKCk7XG4gICAgfVxuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgYW5pbWF0aW9uID0gYW5pbWF0aW9uLnF1ZXVlKChkb25lKSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gYW5pbWF0aW9uO1xuICB9XG5cbiAgX2FuaW1hdGVBbGwoZWxlbWVudCwgYW5pbWF0aW9ucykge1xuICAgIE9iamVjdC5rZXlzKGFuaW1hdGlvbnMpLmZvckVhY2goa2V5ID0+IHRoaXMuX2FuaW1hdGUoZWxlbWVudFtrZXldLCBhbmltYXRpb25zW2tleV0pLnBsYXkoKSk7XG4gIH1cblxufVxuXG5jb25zdCBmYWRlID0ge1xuICBvdXQ6IHtcbiAgICBmcm9tOiB7b3BhY2l0eTogMS4wfSxcbiAgICB0bzoge29wYWNpdHk6IDB9XG4gIH0sXG4gIGluOiB7XG4gICAgZnJvbToge29wYWNpdHk6IDB9LFxuICAgIHRvOiB7b3BhY2l0eTogMS4wfVxuICB9XG59O1xuXG5leHBvcnQgY2xhc3MgTURGYWRlUG9wb3ZlckFuaW1hdG9yIGV4dGVuZHMgUG9wb3ZlckFuaW1hdG9yIHtcbiAgc2hvdyhwb3BvdmVyLCBjYWxsYmFjaykge1xuICAgIHRoaXMuX2FuaW1hdGVBbGwocG9wb3Zlciwge1xuICAgICAgX21hc2s6IGZhZGUuaW4sXG4gICAgICBfcG9wb3Zlcjoge2FuaW1hdGlvbjogZmFkZS5pbiwgcmVzdG9yZTogdHJ1ZSwgY2FsbGJhY2t9XG4gICAgfSk7XG4gIH1cblxuICBoaWRlKHBvcG92ZXIsIGNhbGxiYWNrKSB7XG4gICAgdGhpcy5fYW5pbWF0ZUFsbChwb3BvdmVyLCB7XG4gICAgICBfbWFzazogZmFkZS5vdXQsXG4gICAgICBfcG9wb3Zlcjoge2FuaW1hdGlvbjogZmFkZS5vdXQsIHJlc3RvcmU6IHRydWUsIGNhbGxiYWNrfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBJT1NGYWRlUG9wb3ZlckFuaW1hdG9yIGV4dGVuZHMgTURGYWRlUG9wb3ZlckFuaW1hdG9yIHtcbiAgc2hvdyhwb3BvdmVyLCBjYWxsYmFjaykge1xuICAgIHRoaXMuX2FuaW1hdGVBbGwocG9wb3Zlciwge1xuICAgICAgX21hc2s6IGZhZGUuaW4sXG4gICAgICBfcG9wb3Zlcjoge1xuICAgICAgICBmcm9tOiB7XG4gICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUzZCgxLjMsIDEuMywgMS4wKScsXG4gICAgICAgICAgb3BhY2l0eTogMFxuICAgICAgICB9LFxuICAgICAgICB0bzoge1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlM2QoMS4wLCAxLjAsICAxLjApJyxcbiAgICAgICAgICBvcGFjaXR5OiAxLjBcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdG9yZTogdHJ1ZSxcbiAgICAgICAgY2FsbGJhY2tcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uLy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uLy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCB7IFBvcG92ZXJBbmltYXRvciwgSU9TRmFkZVBvcG92ZXJBbmltYXRvciwgTURGYWRlUG9wb3ZlckFuaW1hdG9yIH0gZnJvbSAnLi9hbmltYXRvcic7XG5pbXBvcnQgcGxhdGZvcm0gZnJvbSAnLi4vLi4vb25zL3BsYXRmb3JtJztcbmltcG9ydCBpUGhvbmVYUGF0Y2ggZnJvbSAnLi4vLi4vb25zL2lwaG9uZXgtcGF0Y2gnO1xuaW1wb3J0IEJhc2VEaWFsb2dFbGVtZW50IGZyb20gJy4uL2Jhc2UvYmFzZS1kaWFsb2cnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJy5wb3BvdmVyJzogJ3BvcG92ZXItLSonLFxuICAnLnBvcG92ZXItbWFzayc6ICdwb3BvdmVyLW1hc2stLSonLFxuICAnLnBvcG92ZXJfX2NvbnRlbnQnOiAncG9wb3Zlci0tKl9fY29udGVudCcsXG4gICcucG9wb3Zlcl9fYXJyb3cnOiAncG9wb3Zlci0tKl9fYXJyb3cnXG59O1xuXG5jb25zdCBfYW5pbWF0b3JEaWN0ID0ge1xuICAnZGVmYXVsdCc6ICgpID0+IHBsYXRmb3JtLmlzQW5kcm9pZCgpID8gTURGYWRlUG9wb3ZlckFuaW1hdG9yIDogSU9TRmFkZVBvcG92ZXJBbmltYXRvcixcbiAgJ25vbmUnOiBQb3BvdmVyQW5pbWF0b3IsXG4gICdmYWRlLWlvcyc6IElPU0ZhZGVQb3BvdmVyQW5pbWF0b3IsXG4gICdmYWRlLW1kJzogTURGYWRlUG9wb3ZlckFuaW1hdG9yXG59O1xuXG5jb25zdCBwb3NpdGlvbnMgPSB7XG4gIHVwOiAnYm90dG9tJyxcbiAgbGVmdDogJ3JpZ2h0JyxcbiAgZG93bjogJ3RvcCcsXG4gIHJpZ2h0OiAnbGVmdCdcbn07XG5cbmNvbnN0IGRpcmVjdGlvbnMgPSBPYmplY3Qua2V5cyhwb3NpdGlvbnMpO1xuLyoqXG4gKiBAZWxlbWVudCBvbnMtcG9wb3ZlclxuICogQGNhdGVnb3J5IGRpYWxvZ1xuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXVxuICogICAgQSBjb21wb25lbnQgdGhhdCBkaXNwbGF5cyBhIHBvcG92ZXIgbmV4dCB0byBhbiBlbGVtZW50LiBUaGUgcG9wb3ZlciBjYW4gYmUgdXNlZCB0byBkaXNwbGF5IGV4dHJhIGluZm9ybWF0aW9uIGFib3V0IGEgY29tcG9uZW50IG9yIGEgdG9vbHRpcC5cbiAqXG4gKiAgICBUbyB1c2UgdGhlIGVsZW1lbnQgaXQgY2FuIGVpdGhlciBiZSBhdHRhY2hlZCBkaXJlY3RseSB0byB0aGUgYDxib2R5PmAgZWxlbWVudCBvciBkeW5hbWljYWxseSBjcmVhdGVkIGZyb20gYSB0ZW1wbGF0ZSB1c2luZyB0aGUgYG9ucy5jcmVhdGVQb3BvdmVyKHRlbXBsYXRlKWAgdXRpbGl0eSBmdW5jdGlvbiBhbmQgdGhlIGA8dGVtcGxhdGU+YCB0YWcuXG4gKlxuICogICAgQW5vdGhlciBjb21tb24gd2F5IHRvIHVzZSB0aGUgcG9wb3ZlciBpcyB0byBkaXNwbGF5IGEgbWVudSB3aGVuIGEgYnV0dG9uIG9uIHRoZSBzY3JlZW4gaXMgdGFwcGVkLiBGb3IgTWF0ZXJpYWwgRGVzaWduLCBwb3BvdmVyIGxvb2tzIGV4YWN0bHkgYXMgYSBkcm9wZG93biBtZW51LlxuICogIFsvZW5dXG4gKiAgW2phXeOBguOCi+imgee0oOOCkuWvvuixoeOBqOOBmeOCi+ODneODg+ODl+OCquODvOODkOODvOOCkuihqOekuuOBmeOCi+OCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAglsvamFdXG4gKiBAY29kZXBlbiBaWVlSS29cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9wb3BvdmVyXG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sI21vZGlmaWVycyBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLWJ1dHRvbiBvbmNsaWNrPVwic2hvd1BvcG92ZXIodGhpcylcIj5cbiAqICAgQ2xpY2sgbWUhXG4gKiA8L29ucy1idXR0b24+XG4gKlxuICogPG9ucy1wb3BvdmVyIGRpcmVjdGlvbj1cImRvd25cIiBpZD1cInBvcG92ZXJcIj5cbiAqICAgPHA+VGhpcyBpcyBhIHBvcG92ZXIhPC9wPlxuICogPC9vbnMtcG9wb3Zlcj5cbiAqXG4gKiA8c2NyaXB0PlxuICogICB2YXIgc2hvd1BvcG92ZXIgPSBmdW5jdGlvbihlbGVtZW50KSB7XG4gKiAgICAgdmFyIHBvcG92ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncG9wb3ZlcicpO1xuICogICAgIHBvcG92ZXIuc2hvdyhlbGVtZW50KTtcbiAqICAgfTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3BvdmVyRWxlbWVudCBleHRlbmRzIEJhc2VEaWFsb2dFbGVtZW50IHtcblxuICAvKipcbiAgICogQGV2ZW50IHByZXNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYmVmb3JlIHRoZSBwb3BvdmVyIGlzIGRpc3BsYXllZC5bL2VuXVxuICAgKiAgIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjgYzooajnpLrjgZXjgozjgovnm7TliY3jgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQucG9wb3ZlclxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGV2ZW50LmNhbmNlbFxuICAgKiAgIFtlbl1DYWxsIHRoaXMgZnVuY3Rpb24gdG8gc3RvcCB0aGUgcG9wb3ZlciBmcm9tIGJlaW5nIHNob3duLlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWRvOOBs+WHuuOBmeOBqOOAgeODneODg+ODl+OCquODvOODkOODvOOBruihqOekuuOBjOOCreODo+ODs+OCu+ODq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdHNob3dcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYWZ0ZXIgdGhlIHBvcG92ZXIgaXMgZGlzcGxheWVkLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOihqOekuuOBleOCjOOBn+ebtOW+jOOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudCBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5wb3BvdmVyXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVoaWRlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGJlZm9yZSB0aGUgcG9wb3ZlciBpcyBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844GM6Zqg44KM44KL55u05YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnBvcG92ZXJcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIHN0b3AgdGhlIHBvcG92ZXIgZnJvbSBiZWluZyBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44GT44Gu6Zai5pWw44KS5ZG844Gz5Ye644GZ44Go44CB44Od44OD44OX44Kq44O844OQ44O844GM6Zqg44KM44KL5Yem55CG44KS44Kt44Oj44Oz44K744Or44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0aGlkZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgcG9wb3ZlciBpcyBoaWRkZW4uWy9lbl1cbiAgICogICBbamFd44Od44OD44OX44Kq44O844OQ44O844GM6Zqg44KM44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50IFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnBvcG92ZXJcbiAgICogICBbZW5dQ29tcG9uZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgcG9wb3Zlci5bL2VuXVxuICAgKiAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpcmVjdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1cbiAgICogICAgQSBzcGFjZSBzZXBhcmF0ZWQgbGlzdCBvZiBkaXJlY3Rpb25zLiBJZiBtb3JlIHRoYW4gb25lIGRpcmVjdGlvbiBpcyBzcGVjaWZpZWQsXG4gICAqICAgIGl0IHdpbGwgYmUgY2hvc2VuIGF1dG9tYXRpY2FsbHkuIFZhbGlkIGRpcmVjdGlvbnMgYXJlIGBcInVwXCJgLCBgXCJkb3duXCJgLCBgXCJsZWZ0XCJgIGFuZCBgXCJyaWdodFwiYC5cbiAgICogIFsvZW5dXG4gICAqICBbamFdXG4gICAqICAgIOODneODg+ODl+OCquODvOODkOODvOOCkuihqOekuuOBmeOCi+aWueWQkeOCkuepuueZveWMuuWIh+OCiuOBp+ikh+aVsOaMh+WumuOBp+OBjeOBvuOBmeOAglxuICAgKiAgICDmjIflrprjgafjgY3jgovmlrnlkJHjga/jgIFcInVwXCIsIFwiZG93blwiLCBcImxlZnRcIiwgXCJyaWdodFwi44GuNOOBpOOBp+OBmeOAguepuueZveWMuuWIh+OCiuOBp+ikh+aVsOaMh+WumuOBmeOCi+OBk+OBqOOCguOBp+OBjeOBvuOBmeOAglxuICAgKiAgICDopIfmlbDmjIflrprjgZXjgozjgZ/loLTlkIjjgIHlr77osaHjgajjgZnjgovopoHntKDjgavlkIjjgo/jgZvjgabmjIflrprjgZfjgZ/lgKTjgYvjgonoh6rli5XnmoTjgavpgbjmip7jgZXjgozjgb7jgZnjgIJcbiAgICogIFsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGNhbmNlbGFibGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgcG9wb3ZlciBjYW4gYmUgY2xvc2VkIGJ5IHRhcHBpbmcgdGhlIGJhY2tncm91bmQgb3IgYnkgcHJlc3NpbmcgdGhlIGJhY2sgYnV0dG9uLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOOBguOCi+OBqOOAgeODneODg+ODl+OCquODvOODkOODvOOBjOihqOekuuOBleOCjOOBn+aZguOBq+OAgeiDjOaZr+OChOODkOODg+OCr+ODnOOCv+ODs+OCkuOCv+ODg+ODl+OBl+OBn+aZguOBq+OCkuODneODg+ODl+OCquODvOODkOODvOmWieOBmOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGNvdmVyLXRhcmdldFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgc2V0IHRoZSBwb3BvdmVyIHdpbGwgY292ZXIgdGhlIHRhcmdldCBvbiB0aGUgc2NyZWVuLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFuaW1hdGlvbiB1c2VkIHdoZW4gc2hvd2luZyBhbiBoaWRpbmcgdGhlIHBvcG92ZXIuIENhbiBiZSBlaXRoZXIgYFwibm9uZVwiYCwgYFwiZGVmYXVsdFwiYCwgYFwiZmFkZS1pb3NcImAgb3IgYFwiZmFkZS1tZFwiYC5bL2VuXVxuICAgKiAgIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLooajnpLrjgZnjgovpmpvjga7jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbWFzay1jb2xvclxuICAgKiBAdHlwZSB7Q29sb3J9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Db2xvciBvZiB0aGUgYmFja2dyb3VuZCBtYXNrLiBEZWZhdWx0IGlzIGBcInJnYmEoMCwgMCwgMCwgMC4yKVwiYC5bL2VuXVxuICAgKiAgIFtqYV3og4zmma/jga7jg57jgrnjgq/jga7oibLjgpLmjIflrprjgZfjgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga9cInJnYmEoMCwgMCwgMCwgMC4yKVwi44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX2JvdW5kT25DaGFuZ2UgPSB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHJldHVybiBzY2hlbWU7XG4gIH1cblxuICBnZXQgX21hc2soKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICcucG9wb3Zlci1tYXNrJyk7XG4gIH1cblxuICBnZXQgX3BvcG92ZXIoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICcucG9wb3ZlcicpO1xuICB9XG5cbiAgZ2V0IF9jb250ZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLl9wb3BvdmVyLCAnLnBvcG92ZXJfX2NvbnRlbnQnKTtcbiAgfVxuXG4gIGdldCBfYXJyb3coKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMuX3BvcG92ZXIsICcucG9wb3Zlcl9fYXJyb3cnKTtcbiAgfVxuXG4gIF91cGRhdGVBbmltYXRvckZhY3RvcnkoKSB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBfYW5pbWF0b3JEaWN0LFxuICAgICAgYmFzZUNsYXNzOiBQb3BvdmVyQW5pbWF0b3IsXG4gICAgICBiYXNlQ2xhc3NOYW1lOiAnUG9wb3ZlckFuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKSB8fCAnZGVmYXVsdCdcbiAgICB9KTtcbiAgfVxuXG4gIF90b2dnbGVTdHlsZShzaG91bGRTaG93LCBvcHRpb25zID0ge30pIHtcbiAgICBpZiAoc2hvdWxkU2hvdykge1xuICAgICAgdGhpcy5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgIHRoaXMuX2N1cnJlbnRUYXJnZXQgPSBvcHRpb25zLnRhcmdldDtcbiAgICAgIHRoaXMuX3Bvc2l0aW9uUG9wb3ZlcihvcHRpb25zLnRhcmdldCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIHRoaXMuX2NsZWFyU3R5bGVzKCk7XG4gICAgfVxuICB9XG5cbiAgX3Bvc2l0aW9uUG9wb3Zlcih0YXJnZXQpIHtcbiAgICBjb25zdCB7X3JhZGl1czogcmFkaXVzLCBfY29udGVudDogY29udGVudEVsZW1lbnQsIF9tYXJnaW46IG1hcmdpbn0gPSB0aGlzO1xuICAgIGNvbnN0IHNhZmVBcmVhTGVuZ3RocyA9IGlQaG9uZVhQYXRjaC5nZXRTYWZlQXJlYUxlbmd0aHMoKTtcbiAgICBjb25zdCBzYWZlQXJlYVJlY3QgPSBpUGhvbmVYUGF0Y2guZ2V0U2FmZUFyZWFET01SZWN0KCk7XG4gICAgY29uc3QgdGFyZ2V0UmVjdCA9IHRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICBjb25zdCBpc01EID0gdXRpbC5oYXNNb2RpZmllcih0aGlzLCAnbWF0ZXJpYWwnKTtcbiAgICBjb25zdCBjb3ZlciA9IGlzTUQgJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ2NvdmVyLXRhcmdldCcpO1xuICAgIGNvbnN0IHBhcmVudCA9IHV0aWwuZmluZFBhcmVudCh0aGlzLCAnb25zLXBhZ2UnKSB8fCBkb2N1bWVudC5ib2R5O1xuICAgIGNvbnN0IHBhcmVudERpbWVuc2lvbnMgPSBwYXJlbnQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgY29uc3QgbWF4UG9zaXRpb25zID0ge1xuICAgICAgdG9wOiBNYXRoLm1heChwYXJlbnREaW1lbnNpb25zLnRvcCwgc2FmZUFyZWFSZWN0LnRvcCksXG4gICAgICBsZWZ0OiBNYXRoLm1heChwYXJlbnREaW1lbnNpb25zLmxlZnQsIHNhZmVBcmVhUmVjdC5sZWZ0KSxcbiAgICAgIGJvdHRvbTogTWF0aC5taW4ocGFyZW50RGltZW5zaW9ucy5ib3R0b20sIHNhZmVBcmVhUmVjdC5ib3R0b20pLFxuICAgICAgcmlnaHQ6IE1hdGgubWluKHBhcmVudERpbWVuc2lvbnMucmlnaHQsIHNhZmVBcmVhUmVjdC5yaWdodCksXG4gICAgfTtcblxuICAgIC8vIERpc3RhbmNlIGZyb20gZWFjaCBzaWRlIG9mIHRoZSBzYWZlIGFyZWEgKHdpdGggbWFyZ2luKSB0byB0aGUgdGFyZ2V0IGVsZW1lbnRcbiAgICBjb25zdCB0YXJnZXREaXN0YW5jZSA9IHtcbiAgICAgIHRvcDogdGFyZ2V0UmVjdC50b3AgLSAobWF4UG9zaXRpb25zLnRvcCArIG1hcmdpbiksXG4gICAgICBsZWZ0OiB0YXJnZXRSZWN0LmxlZnQgLSAobWF4UG9zaXRpb25zLmxlZnQgKyBtYXJnaW4pLFxuICAgICAgYm90dG9tOiAobWF4UG9zaXRpb25zLmJvdHRvbSAtIG1hcmdpbikgLSB0YXJnZXRSZWN0LmJvdHRvbSxcbiAgICAgIHJpZ2h0OiAobWF4UG9zaXRpb25zLnJpZ2h0IC0gbWFyZ2luKSAtIHRhcmdldFJlY3QucmlnaHRcbiAgICB9O1xuXG4gICAgLy8gRGlzdGFuY2UgZnJvbSBlYWNoIHNpZGUgb2YgdGhlIHNhZmUgYXJlYSAod2l0aCBtYXJnaW4pIHRvIHRoZSBnZW9tZXRyaWMgY2VudGVyIG9mIHRoZSB0YXJnZXQgZWxlbWVudFxuICAgIGNvbnN0IHRhcmdldENlbnRlckRpc3RhbmNlRnJvbSA9IHtcbiAgICAgIHRvcDogdGFyZ2V0UmVjdC50b3AgKyBNYXRoLnJvdW5kKHRhcmdldFJlY3QuaGVpZ2h0IC8gMikgLSAobWF4UG9zaXRpb25zLnRvcCArIG1hcmdpbiksXG4gICAgICBsZWZ0OiB0YXJnZXRSZWN0LmxlZnQgKyBNYXRoLnJvdW5kKHRhcmdldFJlY3Qud2lkdGggLyAyKSAtIChtYXhQb3NpdGlvbnMubGVmdCArIG1hcmdpbiksXG4gICAgICBib3R0b206IChtYXhQb3NpdGlvbnMuYm90dG9tIC0gbWFyZ2luKSAtIHRhcmdldFJlY3QuYm90dG9tICsgTWF0aC5yb3VuZCh0YXJnZXRSZWN0LmhlaWdodCAvIDIpLFxuICAgICAgcmlnaHQ6IChtYXhQb3NpdGlvbnMucmlnaHQgLSBtYXJnaW4pIC0gdGFyZ2V0UmVjdC5yaWdodCArIE1hdGgucm91bmQodGFyZ2V0UmVjdC53aWR0aCAvIDIpXG4gICAgfTtcblxuICAgIGNvbnN0IHt2ZXJ0aWNhbCwgcHJpbWFyeTogcHJpbWFyeURpcmVjdGlvbiwgc2Vjb25kYXJ5OiBzZWNvbmRhcnlEaXJlY3Rpb259ID0gdGhpcy5fY2FsY3VsYXRlRGlyZWN0aW9ucyh0YXJnZXREaXN0YW5jZSk7XG4gICAgdGhpcy5fY3VycmVudERpcmVjdGlvbiA9IHByaW1hcnlEaXJlY3Rpb247XG4gICAgdXRpbC5hZGRNb2RpZmllcih0aGlzLCBwcmltYXJ5RGlyZWN0aW9uKTtcblxuICAgIGNvbnN0IHNpemVOYW1lID0gdmVydGljYWwgPyAnd2lkdGgnIDogJ2hlaWdodCc7XG4gICAgLy8gR2V0IC5wb3BvdmVyX19jb250ZW50IHNpemVcbiAgICBjb25zdCBjb250ZW50U2l6ZSA9IChzdHlsZSA9PiAoe1xuICAgICAgd2lkdGg6IHBhcnNlSW50KHN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ3dpZHRoJyksIDEwKSxcbiAgICAgIGhlaWdodDogcGFyc2VJbnQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnaGVpZ2h0JyksIDEwKVxuICAgIH0pKSh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShjb250ZW50RWxlbWVudCkpO1xuXG4gICAgLy8gU2V0dGluZyAucG9wb3ZlciBwb3NpdGlvbi5cbiAgICBjb25zdCB0YXJnZXRBbmRBcnJvd0xlbmd0aCA9IGNvdmVyID8gMCA6ICh2ZXJ0aWNhbCA/IHRhcmdldFJlY3QuaGVpZ2h0IDogdGFyZ2V0UmVjdC53aWR0aCkgKyAoaXNNRCA/IDAgOiAxNCk7XG4gICAgY29uc3QgcHJpbWFyeU9mZnNldCA9IE1hdGgubWF4KFxuICAgICAgc2FmZUFyZWFMZW5ndGhzW3ByaW1hcnlEaXJlY3Rpb25dICsgbWFyZ2luLFxuICAgICAgc2FmZUFyZWFMZW5ndGhzW3ByaW1hcnlEaXJlY3Rpb25dICsgbWFyZ2luICsgdGFyZ2V0RGlzdGFuY2VbcHJpbWFyeURpcmVjdGlvbl0gKyB0YXJnZXRBbmRBcnJvd0xlbmd0aFxuICAgICk7XG4gICAgY29uc3Qgc2Vjb25kYXJ5T2Zmc2V0ID0gTWF0aC5tYXgoXG4gICAgICBzYWZlQXJlYUxlbmd0aHNbc2Vjb25kYXJ5RGlyZWN0aW9uXSArIG1hcmdpbixcbiAgICAgIHNhZmVBcmVhTGVuZ3Roc1tzZWNvbmRhcnlEaXJlY3Rpb25dICsgbWFyZ2luICsgdGFyZ2V0Q2VudGVyRGlzdGFuY2VGcm9tW3NlY29uZGFyeURpcmVjdGlvbl0gLSAoY29udGVudFNpemVbc2l6ZU5hbWVdIC8gMilcbiAgICApO1xuICAgIHRoaXMuX3BvcG92ZXIuc3R5bGVbcHJpbWFyeURpcmVjdGlvbl0gPSBwcmltYXJ5T2Zmc2V0ICsgJ3B4JztcbiAgICB0aGlzLl9wb3BvdmVyLnN0eWxlW3NlY29uZGFyeURpcmVjdGlvbl0gPSBzZWNvbmRhcnlPZmZzZXQgKyAncHgnO1xuXG4gICAgLy8gU2V0dGluZyAucG9wb3Zlcl9fYXJyb3cgcG9zaXRpb24uXG4gICAgdGhpcy5fYXJyb3cuc3R5bGVbc2Vjb25kYXJ5RGlyZWN0aW9uXSA9IE1hdGgubWF4KFxuICAgICAgcmFkaXVzLFxuICAgICAgKHNhZmVBcmVhTGVuZ3Roc1tzZWNvbmRhcnlEaXJlY3Rpb25dICsgbWFyZ2luKSArIHRhcmdldENlbnRlckRpc3RhbmNlRnJvbVtzZWNvbmRhcnlEaXJlY3Rpb25dIC0gc2Vjb25kYXJ5T2Zmc2V0XG4gICAgKSArICdweCc7XG4gIH1cblxuICBfY2FsY3VsYXRlRGlyZWN0aW9ucyhkaXN0YW5jZSkge1xuICAgIGNvbnN0IG9wdGlvbnMgPSAodGhpcy5nZXRBdHRyaWJ1dGUoJ2RpcmVjdGlvbicpIHx8ICd1cCBkb3duIGxlZnQgcmlnaHQnKS5zcGxpdCgvXFxzKy8pLm1hcChlID0+IHBvc2l0aW9uc1tlXSk7XG4gICAgY29uc3QgcHJpbWFyeSA9IG9wdGlvbnMuc29ydCgoYSwgYikgPT4gZGlzdGFuY2VbYV0gLSBkaXN0YW5jZVtiXSlbMF07XG4gICAgY29uc3QgdmVydGljYWwgPSAndG9wJyA9PSBwcmltYXJ5IHx8ICdib3R0b20nID09IHByaW1hcnk7XG4gICAgbGV0IHNlY29uZGFyeTtcblxuICAgIGlmICh2ZXJ0aWNhbCkge1xuICAgICAgc2Vjb25kYXJ5ID0gZGlzdGFuY2UubGVmdCA8IGRpc3RhbmNlLnJpZ2h0ID8gJ2xlZnQnIDogJ3JpZ2h0JztcbiAgICB9IGVsc2Uge1xuICAgICAgc2Vjb25kYXJ5ID0gZGlzdGFuY2UudG9wIDwgZGlzdGFuY2UuYm90dG9tID8gJ3RvcCcgOiAnYm90dG9tJztcbiAgICB9XG5cbiAgICByZXR1cm4ge3ZlcnRpY2FsLCBwcmltYXJ5LCBzZWNvbmRhcnl9O1xuICB9XG5cbiAgX2NsZWFyU3R5bGVzKCkge1xuICAgIHRoaXMuX2N1cnJlbnREaXJlY3Rpb24gPSBudWxsO1xuICAgIFsndG9wJywgJ2JvdHRvbScsICdsZWZ0JywgJ3JpZ2h0J10uZm9yRWFjaChlID0+IHtcbiAgICAgIHRoaXMuX2Fycm93LnN0eWxlW2VdID0gdGhpcy5fY29udGVudC5zdHlsZVtlXSA9IHRoaXMuX3BvcG92ZXIuc3R5bGVbZV0gPSAnJztcbiAgICAgIHV0aWwucmVtb3ZlTW9kaWZpZXIodGhpcywgZSk7XG4gICAgfSk7XG4gIH1cblxuICBfb25DaGFuZ2UoKSB7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgIGlmICh0aGlzLl9jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgIHRoaXMuX3Bvc2l0aW9uUG9wb3Zlcih0aGlzLl9jdXJyZW50VGFyZ2V0KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuXG4gICAgaWYgKHRoaXMuX3BvcG92ZXIgJiYgdGhpcy5fbWFzaykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGhhc0RlZmF1bHRDb250YWluZXIgPSB0aGlzLl9wb3BvdmVyICYmIHRoaXMuX2NvbnRlbnQ7XG5cbiAgICBpZiAoaGFzRGVmYXVsdENvbnRhaW5lcikge1xuXG4gICAgICBpZiAoIXRoaXMuX21hc2spIHtcbiAgICAgICAgY29uc3QgbWFzayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBtYXNrLmNsYXNzTGlzdC5hZGQoJ3BvcG92ZXItbWFzaycpO1xuICAgICAgICB0aGlzLmluc2VydEJlZm9yZShtYXNrLCB0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMuX2Fycm93KSB7XG4gICAgICAgIGNvbnN0IGFycm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgIGFycm93LmNsYXNzTGlzdC5hZGQoJ3BvcG92ZXJfX2Fycm93Jyk7XG4gICAgICAgIHRoaXMuX3BvcG92ZXIuYXBwZW5kQ2hpbGQoYXJyb3cpO1xuICAgICAgfVxuXG4gICAgfSBlbHNlIHtcblxuICAgICAgY29uc3QgdGVtcGxhdGUgPSB1dGlsLmNyZWF0ZUZyYWdtZW50KGBcbiAgICAgICAgPGRpdiBjbGFzcz1cInBvcG92ZXItbWFza1wiPjwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzPVwicG9wb3ZlclwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwb3BvdmVyX19jb250ZW50XCI+PC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cInBvcG92ZXJfX2Fycm93XCI+PC9kaXY+XG4gICAgICAgIDwvZGl2PlxuICAgICAgYCk7XG4gICAgICBjb25zdCBjb250ZW50ID0gdGVtcGxhdGUucXVlcnlTZWxlY3RvcignLnBvcG92ZXJfX2NvbnRlbnQnKTtcblxuICAgICAgd2hpbGUgKHRoaXMuY2hpbGROb2Rlc1swXSkge1xuICAgICAgICBjb250ZW50LmFwcGVuZENoaWxkKHRoaXMuY2hpbGROb2Rlc1swXSk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQodGVtcGxhdGUpO1xuICAgIH1cblxuICAgIC8vIEZJWE1FIVxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnc3R5bGUnKSkge1xuICAgICAgdGhpcy5fcG9wb3Zlci5zZXRBdHRyaWJ1dGUoJ3N0eWxlJywgdGhpcy5nZXRBdHRyaWJ1dGUoJ3N0eWxlJykpO1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ3N0eWxlJyk7XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCB0aGlzLl9zY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3codGFyZ2V0LCBbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7U3RyaW5nfEV2ZW50fEhUTUxFbGVtZW50fSB0YXJnZXRcbiAgICogICBbZW5dVGFyZ2V0IGVsZW1lbnQuIENhbiBiZSBlaXRoZXIgYSBDU1Mgc2VsZWN0b3IsIGFuIGV2ZW50IG9iamVjdCBvciBhIERPTSBlbGVtZW50LiBJdCBjYW4gYmUgYWxzbyBwcm92aWRlZCBhcyAnb3B0aW9ucy50YXJnZXQnIGluc3RlYWQuIFsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBruOCv+ODvOOCsuODg+ODiOOBqOOBquOCi+imgee0oOOCkuaMh+WumuOBl+OBvuOBmeOAgkNTU+OCu+ODrOOCr+OCv+OBi2V2ZW5044Kq44OW44K444Kn44Kv44OI44GLRE9N6KaB57Sg44Gu44GE44Ga44KM44GL44KS5rih44Gb44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiAgVXNlIG9uZSBvZiBgXCJmYWRlLWlvc1wiYCwgYFwiZmFkZS1tZFwiYCwgYFwibm9uZVwiYCBhbmQgYFwiZGVmYXVsdFwiYC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PlkI3jgpLmjIflrprjgZfjgb7jgZnjgIJcImZhZGUtaW9zXCIsIFwiZmFkZS1tZFwiLCBcIm5vbmVcIiwgXCJkZWZhdWx0XCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIGFmdGVyIHRoZSBwb3BvdmVyIGhhcyBiZWVuIHJldmVhbGVkLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOihqOekuuOBleOCjOe1guOCj+OBo+OBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1PcGVuIHRoZSBwb3BvdmVyIGFuZCBwb2ludCBpdCBhdCBhIHRhcmdldC4gVGhlIHRhcmdldCBjYW4gYmUgZWl0aGVyIGFuIGV2ZW50LCBhIENTUyBzZWxlY3RvciBvciBhIERPTSBlbGVtZW50Li5bL2VuXVxuICAgKiAgIFtqYV3lr77osaHjgajjgZnjgovopoHntKDjgavjg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLooajnpLrjgZfjgb7jgZnjgIJ0YXJnZXTlvJXmlbDjgavjga/jgIEkZXZlbnTjgqrjg5bjgrjjgqfjgq/jg4jjgoRET03jgqjjg6zjg6Hjg7Pjg4jjgoRDU1Pjgrvjg6zjgq/jgr/jgpLmuKHjgZnjgZPjgajjgYzlh7rmnaXjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgZGlzcGxheWVkIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgc2hvdyh0YXJnZXQsIG9wdGlvbnMgPSB7fSkge1xuICAgIC8vIENvcHkgb3B0aW9ucyBhbmQgaW5jbHVkZSBvcHRpb25zLnRhcmdldFxuICAgIGlmICh0YXJnZXQgJiYgdHlwZW9mIHRhcmdldCA9PT0gJ29iamVjdCcgJiYgISh0YXJnZXQgaW5zdGFuY2VvZiBFdmVudCkgJiYgISh0YXJnZXQgaW5zdGFuY2VvZiBIVE1MRWxlbWVudCkpIHtcbiAgICAgIG9wdGlvbnMgPSB7IC4uLnRhcmdldCB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBvcHRpb25zID0geyAuLi5vcHRpb25zLCB0YXJnZXQgfTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIG9wdGlvbnMudGFyZ2V0ID09PSAnc3RyaW5nJykge1xuICAgICAgb3B0aW9ucy50YXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG9wdGlvbnMudGFyZ2V0KTtcbiAgICB9IGVsc2UgaWYgKG9wdGlvbnMudGFyZ2V0IGluc3RhbmNlb2YgRXZlbnQpIHtcbiAgICAgIG9wdGlvbnMudGFyZ2V0ID0gb3B0aW9ucy50YXJnZXQudGFyZ2V0O1xuICAgIH1cblxuICAgIGlmICghKG9wdGlvbnMudGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgIHV0aWwudGhyb3coJ0ludmFsaWQgdGFyZ2V0IHR5cGUgb3IgdW5kZWZpbmVkJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN1cGVyLnNob3cob3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBoaWRlXG4gICAqIEBzaWduYXR1cmUgaGlkZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gIFVzZSBvbmUgb2YgYFwiZmFkZS1pb3NcImAsIGBcImZhZGUtbWRcImAsIGBcIm5vbmVcImAgYW5kIGBcImRlZmF1bHRcImAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCXCJmYWRlLWlvc1wiLCBcImZhZGUtbWRcIiwgXCJub25lXCIsIFwiZGVmYXVsdFwi44Gu44GE44Ga44KM44GL44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiAgIFtlbl1UaGlzIGZ1bmN0aW9ucyBpcyBjYWxsZWQgYWZ0ZXIgdGhlIHBvcG92ZXIgaGFzIGJlZW4gaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXeODneODg+ODl+OCquODvOODkOODvOOBjOmaoOOCjOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DbG9zZSB0aGUgcG9wb3Zlci5bL2VuXVxuICAgKiAgIFtqYV3jg53jg4Pjg5fjgqrjg7zjg5Djg7zjgpLplonjgZjjgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgaGlkZGVuIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IHZpc2libGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyB2aXNpYmxlIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3opoHntKDjgYzopovjgYjjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGNhbmNlbGFibGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1cbiAgICogICAgIEEgYm9vbGVhbiB2YWx1ZSB0aGF0IHNwZWNpZmllcyB3aGV0aGVyIHRoZSBwb3BvdmVyIGlzIGNhbmNlbGFibGUgb3Igbm90LlxuICAgKlxuICAgKiAgICAgV2hlbiB0aGUgcG9wb3ZlciBpcyBjYW5jZWxhYmxlIGl0IGNhbiBiZSBjbG9zZWQgYnkgdGFwcGluZyB0aGUgYmFja2dyb3VuZCBvciBieSBwcmVzc2luZyB0aGUgYmFjayBidXR0b24gb24gQW5kcm9pZCBkZXZpY2VzLlxuICAgKiAgIFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25EZXZpY2VCYWNrQnV0dG9uXG4gICAqIEB0eXBlIHtPYmplY3R9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1CYWNrLWJ1dHRvbiBoYW5kbGVyLlsvZW5dXG4gICAqICAgW2phXeODkOODg+OCr+ODnOOCv+ODs+ODj+ODs+ODieODqeOAglsvamFdXG4gICAqL1xuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5fYm91bmRPbkNoYW5nZSwgZmFsc2UpO1xuICAgIHRoaXMuX21hcmdpbiA9IHRoaXMuX21hcmdpbiB8fCBwYXJzZUludCh3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0aGlzKS5nZXRQcm9wZXJ0eVZhbHVlKCd0b3AnKSk7XG4gICAgdGhpcy5fbWFyZ2luID0gdGhpcy5fbWFyZ2luIHx8IDY7IC8vIEZpeCBmb3IgaWZyYW1lc1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX3JhZGl1cyA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuX2NvbnRlbnQpLmdldFByb3BlcnR5VmFsdWUoJ2JvcmRlci10b3AtbGVmdC1yYWRpdXMnKSk7XG4gICAgfSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLl9ib3VuZE9uQ2hhbmdlLCBmYWxzZSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWy4uLnN1cGVyLm9ic2VydmVkQXR0cmlidXRlcywgJ2RpcmVjdGlvbiddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ2RpcmVjdGlvbicpIHtcbiAgICAgIHJldHVybiB0aGlzLl9ib3VuZE9uQ2hhbmdlKCk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICB0aGlzLl9jdXJyZW50RGlyZWN0aW9uICYmIHV0aWwuYWRkTW9kaWZpZXIodGhpcywgdGhpcy5fY3VycmVudERpcmVjdGlvbik7XG4gICAgfVxuICAgIHN1cGVyLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZVxuICAgKiBAcGFyYW0ge1BvcG92ZXJBbmltYXRvcn0gQW5pbWF0b3JcbiAgICovXG4gIHN0YXRpYyByZWdpc3RlckFuaW1hdG9yKG5hbWUsIEFuaW1hdG9yKSB7XG4gICAgaWYgKCEoQW5pbWF0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgUG9wb3ZlckFuaW1hdG9yKSkge1xuICAgICAgdXRpbC50aHJvd0FuaW1hdG9yKCdQb3BvdmVyJyk7XG4gICAgfVxuICAgIF9hbmltYXRvckRpY3RbbmFtZV0gPSBBbmltYXRvcjtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgYW5pbWF0b3JzKCkge1xuICAgIHJldHVybiBfYW5pbWF0b3JEaWN0O1xuICB9XG5cbiAgc3RhdGljIGdldCBQb3BvdmVyQW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIFBvcG92ZXJBbmltYXRvcjtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5Qb3BvdmVyID0gUG9wb3ZlckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1wb3BvdmVyJywgUG9wb3ZlckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnByb2dyZXNzLWJhcic6ICdwcm9ncmVzcy1iYXItLSonLFxuICAnLnByb2dyZXNzLWJhcl9fcHJpbWFyeSc6ICdwcm9ncmVzcy1iYXItLSpfX3ByaW1hcnknLFxuICAnLnByb2dyZXNzLWJhcl9fc2Vjb25kYXJ5JzogJ3Byb2dyZXNzLWJhci0tKl9fc2Vjb25kYXJ5J1xufTtcblxuY29uc3QgdGVtcGxhdGUgPSB1dGlsLmNyZWF0ZUVsZW1lbnQoYFxuICA8ZGl2IGNsYXNzPVwicHJvZ3Jlc3MtYmFyXCI+XG4gICAgPGRpdiBjbGFzcz1cInByb2dyZXNzLWJhcl9fc2Vjb25kYXJ5XCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInByb2dyZXNzLWJhcl9fcHJpbWFyeVwiPjwvZGl2PlxuICA8L2Rpdj5cbmApO1xuXG5jb25zdCBJTkRFVCA9ICdpbmRldGVybWluYXRlJztcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtcHJvZ3Jlc3MtYmFyXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXURpc3BsYXkgYSBNYXRlcmlhbCBEZXNpZ24gcHJvZ3Jlc3MgYmFyLlsvZW5dXG4gKiAgIFtqYV3jg57jg4bjg6rjgqLjg6vjg4fjgrbjgqTjg7Pjga7jgrnjgr/jgqTjg6vjgafjg5fjg63jgrDjg6zjgrnjg5Djg7zjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBUaGUgY29tcG9uZW50IGlzIHVzZWQgdG8gZGlzcGxheSBhIGxpbmVhciBwcm9ncmVzcyBiYXIuIEl0IGNhbiBlaXRoZXIgZGlzcGxheSBhIHByb2dyZXNzIGJhciB0aGF0IHNob3dzIHRoZSB1c2VyIGhvdyBtdWNoIG9mIGEgdGFzayBoYXMgYmVlbiBjb21wbGV0ZWQuIEluIHRoZSBjYXNlIHdoZXJlIHRoZSBwZXJjZW50YWdlIGlzIG5vdCBrbm93biBpdCBjYW4gYmUgdXNlZCB0byBkaXNwbGF5IGFuIGFuaW1hdGVkIHByb2dyZXNzIGJhciBzbyB0aGUgdXNlciBjYW4gc2VlIHRoYXQgYW4gb3BlcmF0aW9uIGlzIGluIHByb2dyZXNzLlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBjb2RlcGVuIHp2UWJHalxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3Byb2dyZXNzXG4gKiBAc2VlYWxzbyBvbnMtcHJvZ3Jlc3MtY2lyY3VsYXJcbiAqICAgW2VuXVRoZSBgPG9ucy1wcm9ncmVzcy1jaXJjdWxhcj5gIGNvbXBvbmVudCBkaXNwbGF5cyBhIGNpcmN1bGFyIHByb2dyZXNzIGluZGljYXRvci5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXByb2dyZXNzLWJhclxuICogIHZhbHVlPVwiNTVcIlxuICogIHNlY29uZGFyeS12YWx1ZT1cIjg3XCI+XG4gKiA8L29ucy1wcm9ncmVzcy1iYXI+XG4gKlxuICogPG9ucy1wcm9ncmVzcy1iYXJcbiAqICBpbmRldGVybWluYXRlPlxuICogPC9vbnMtcHJvZ3Jlc3MtYmFyPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9ncmVzc0JhckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUNoYW5nZSB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgcHJvZ3Jlc3MgaW5kaWNhdG9yLlsvZW5dXG4gICAqICAgW2phXeODl+ODreOCsOODrOOCueOCpOODs+OCuOOCseODvOOCv+OBruimi+OBn+ebruOCkuWkieabtOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHZhbHVlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2Vjb25kYXJ5LXZhbHVlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHNlY29uZGFyeSBwcm9ncmVzcy4gU2hvdWxkIGJlIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCAxMDAuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu77yS55Wq55uu44Gu6YCy6KGM54q25rOB44Gu5YCk44KS5oyH5a6a44GX44G+44GZ44CCMOOBi+OCiTEwMOOBrumWk+OBruWApOOCkuaMh+WumuOBl+OBpuS4i+OBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGluZGV0ZXJtaW5hdGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCwgYW4gaW5maW5pdGUgbG9vcGluZyBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6vjg7zjg5fjgZnjgovjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBpZiAoIXRoaXMuX2lzQ29tcGlsZWQoKSkge1xuICAgICAgdGhpcy5fdGVtcGxhdGUgPSB0ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX3RlbXBsYXRlID0gdXRpbC5maW5kQ2hpbGQodGhpcywgJy5wcm9ncmVzcy1iYXInKTtcbiAgICB9XG5cbiAgICB0aGlzLl9wcmltYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtYmFyX19wcmltYXJ5Jyk7XG4gICAgdGhpcy5fc2Vjb25kYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtYmFyX19zZWNvbmRhcnknKTtcblxuICAgIHRoaXMuX3VwZGF0ZURldGVybWluYXRlKCk7XG4gICAgdGhpcy5fdXBkYXRlVmFsdWUoKTtcblxuICAgIHRoaXMuYXBwZW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUpO1xuXG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX2lzQ29tcGlsZWQoKSB7XG4gICAgaWYgKCF1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnByb2dyZXNzLWJhcicpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgY29uc3QgYmFyRWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucHJvZ3Jlc3MtYmFyJyk7XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKGJhckVsZW1lbnQsICcucHJvZ3Jlc3MtYmFyX19zZWNvbmRhcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQoYmFyRWxlbWVudCwgJy5wcm9ncmVzcy1iYXJfX3ByaW1hcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAndmFsdWUnLCAnc2Vjb25kYXJ5LXZhbHVlJywgSU5ERVRdO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBpZiAobmFtZSA9PT0gJ21vZGlmaWVyJykge1xuICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICB0aGlzLmhhc0F0dHJpYnV0ZShJTkRFVCkgJiYgdGhpcy5fdXBkYXRlRGV0ZXJtaW5hdGUoKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICd2YWx1ZScgfHwgbmFtZSA9PT0gJ3NlY29uZGFyeS12YWx1ZScpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZVZhbHVlKCk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSBJTkRFVCkge1xuICAgICAgdGhpcy5fdXBkYXRlRGV0ZXJtaW5hdGUoKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlRGV0ZXJtaW5hdGUoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHV0aWwudG9nZ2xlTW9kaWZpZXIodGhpcywgSU5ERVQsIHsgZm9yY2U6IHRoaXMuaGFzQXR0cmlidXRlKElOREVUKSB9KSk7XG4gIH1cblxuICBfdXBkYXRlVmFsdWUoKSB7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX3ByaW1hcnkuc3R5bGUud2lkdGggPSAodGhpcy5oYXNBdHRyaWJ1dGUoJ3ZhbHVlJykpID8gdGhpcy5nZXRBdHRyaWJ1dGUoJ3ZhbHVlJykgKyAnJScgOiAnMCUnO1xuICAgICAgdGhpcy5fc2Vjb25kYXJ5LnN0eWxlLndpZHRoID0gdGhpcy5oYXNBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpID8gdGhpcy5nZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpICsgJyUnIDogJzAlJztcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cbiAgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicgfHwgdmFsdWUgPCAwIHx8IHZhbHVlID4gMTAwKSB7XG4gICAgICB1dGlsLnRocm93KCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgTWF0aC5mbG9vcih2YWx1ZSkpO1xuICB9XG5cbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSB8fCAnMCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBzZWNvbmRhcnlWYWx1ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBzZWNvbmRhcnkgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBru+8kueVquebruOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cbiAgc2V0IHNlY29uZGFyeVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicgfHwgdmFsdWUgPCAwIHx8IHZhbHVlID4gMTAwKSB7XG4gICAgICB1dGlsLnRocm93KCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScsIE1hdGguZmxvb3IodmFsdWUpKTtcbiAgfVxuXG4gIGdldCBzZWNvbmRhcnlWYWx1ZSgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpIHx8ICcwJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGluZGV0ZXJtaW5hdGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIHByb3BlcnR5IGlzIGB0cnVlYCwgYW4gaW5maW5pdGUgbG9vcGluZyBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6vjg7zjg5fjgZnjgovjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgc2V0IGluZGV0ZXJtaW5hdGUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKElOREVULCAnJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoSU5ERVQpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpbmRldGVybWluYXRlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZShJTkRFVCk7XG4gIH1cbn1cblxub25zRWxlbWVudHMuUHJvZ3Jlc3NCYXIgPSBQcm9ncmVzc0JhckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1wcm9ncmVzcy1iYXInLCBQcm9ncmVzc0JhckVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnByb2dyZXNzLWNpcmN1bGFyJzogJ3Byb2dyZXNzLWNpcmN1bGFyLS0qJyxcbiAgJy5wcm9ncmVzcy1jaXJjdWxhcl9fYmFja2dyb3VuZCc6ICdwcm9ncmVzcy1jaXJjdWxhci0tKl9fYmFja2dyb3VuZCcsXG4gICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3ByaW1hcnknOiAncHJvZ3Jlc3MtY2lyY3VsYXItLSpfX3ByaW1hcnknLFxuICAnLnByb2dyZXNzLWNpcmN1bGFyX19zZWNvbmRhcnknOiAncHJvZ3Jlc3MtY2lyY3VsYXItLSpfX3NlY29uZGFyeSdcbn07XG5cbmNvbnN0IHRlbXBsYXRlID0gdXRpbC5jcmVhdGVFbGVtZW50KGBcbiAgPHN2ZyBjbGFzcz1cInByb2dyZXNzLWNpcmN1bGFyXCI+XG4gICAgPGNpcmNsZSBjbGFzcz1cInByb2dyZXNzLWNpcmN1bGFyX19iYWNrZ3JvdW5kXCIgLz5cbiAgICA8Y2lyY2xlIGNsYXNzPVwicHJvZ3Jlc3MtY2lyY3VsYXJfX3NlY29uZGFyeVwiIGN4PVwiNTAlXCIgY3k9XCI1MCVcIiByPVwiNDAlXCIgLz5cbiAgICA8Y2lyY2xlIGNsYXNzPVwicHJvZ3Jlc3MtY2lyY3VsYXJfX3ByaW1hcnlcIiBjeD1cIjUwJVwiIGN5PVwiNTAlXCIgcj1cIjQwJVwiIC8+XG4gIDwvc3ZnPlxuYCk7XG5cbmNvbnN0IElOREVUID0gJ2luZGV0ZXJtaW5hdGUnO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1wcm9ncmVzcy1jaXJjdWxhclxuICogQGNhdGVnb3J5IHZpc3VhbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBUaGlzIGNvbXBvbmVudCBkaXNwbGF5cyBhIGNpcmN1bGFyIHByb2dyZXNzIGluZGljYXRvci4gSXQgY2FuIGVpdGhlciBiZSB1c2VkIHRvIHNob3cgaG93IG11Y2ggb2YgYSB0YXNrIGhhcyBiZWVuIGNvbXBsZXRlZCBvciB0byBzaG93IGEgbG9vcGluZyBhbmltYXRpb24gdG8gaW5kaWNhdGUgdGhhdCBhbiBvcGVyYXRpb24gaXMgY3VycmVudGx5IHJ1bm5pbmcuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gRVZ6TWpSXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcHJvZ3Jlc3MtY2lyY3VsYXJcbiAqIEBzZWVhbHNvIG9ucy1wcm9ncmVzcy1iYXJcbiAqICAgW2VuXVRoZSBgPG9ucy1wcm9ncmVzcy1iYXI+YCBjb21wb25lbnQgZGlzcGxheXMgYSBiYXIgcHJvZ3Jlc3MgaW5kaWNhdG9yLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtcHJvZ3Jlc3MtY2lyY3VsYXJcbiAqICB2YWx1ZT1cIjU1XCJcbiAqICBzZWNvbmRhcnktdmFsdWU9XCI4N1wiPlxuICogPC9vbnMtcHJvZ3Jlc3MtY2lyY3VsYXI+XG4gKlxuICogPG9ucy1wcm9ncmVzcy1jaXJjdWxhclxuICogIGluZGV0ZXJtaW5hdGU+XG4gKiA8L29ucy1wcm9ncmVzcy1jaXJjdWxhcj5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZ3Jlc3NDaXJjdWxhckVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUNoYW5nZSB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgcHJvZ3Jlc3MgaW5kaWNhdG9yLlsvZW5dXG4gICAqICAgW2phXeODl+ODreOCsOODrOOCueOCpOODs+OCuOOCseODvOOCv+OBruimi+OBn+ebruOCkuWkieabtOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHZhbHVlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHByb2dyZXNzLiBTaG91bGQgYmUgYSB2YWx1ZSBiZXR3ZWVuIDAgYW5kIDEwMC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7pgLLooYznirbms4Hjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIIw44GL44KJMTAw44Gu6ZaT44Gu5YCk44KS5oyH5a6a44GX44Gm5LiL44GV44GE44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2Vjb25kYXJ5LXZhbHVlXG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHNlY29uZGFyeSBwcm9ncmVzcy4gU2hvdWxkIGJlIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCAxMDAuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu77yS55Wq55uu44Gu6YCy6KGM54q25rOB44Gu5YCk44KS5oyH5a6a44GX44G+44GZ44CCMOOBi+OCiTEwMOOBrumWk+OBruWApOOCkuaMh+WumuOBl+OBpuS4i+OBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGluZGV0ZXJtaW5hdGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCwgYW4gaW5maW5pdGUgbG9vcGluZyBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6vjg7zjg5fjgZnjgovjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydtb2RpZmllcicsICd2YWx1ZScsICdzZWNvbmRhcnktdmFsdWUnLCBJTkRFVF07XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgIHRoaXMuaGFzQXR0cmlidXRlKElOREVUKSAmJiB0aGlzLl91cGRhdGVEZXRlcm1pbmF0ZSgpO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3ZhbHVlJyB8fCBuYW1lID09PSAnc2Vjb25kYXJ5LXZhbHVlJykge1xuICAgICAgdGhpcy5fdXBkYXRlVmFsdWUoKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09IElOREVUKSB7XG4gICAgICB0aGlzLl91cGRhdGVEZXRlcm1pbmF0ZSgpO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVEZXRlcm1pbmF0ZSgpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdXRpbC50b2dnbGVNb2RpZmllcih0aGlzLCBJTkRFVCwgeyBmb3JjZTogdGhpcy5oYXNBdHRyaWJ1dGUoSU5ERVQpIH0pKTtcbiAgfVxuXG4gIF91cGRhdGVWYWx1ZSgpIHtcbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ3ZhbHVlJykpIHtcbiAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBlciA9IE1hdGguY2VpbCh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSAqIDI1MS4zMiAqIDAuMDEpO1xuICAgICAgICB0aGlzLl9wcmltYXJ5LnN0eWxlWydzdHJva2UtZGFzaGFycmF5J10gPSBwZXIgKyAnJSwgMjUxLjMyJSc7XG4gICAgICB9KTtcbiAgICB9XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdzZWNvbmRhcnktdmFsdWUnKSkge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgY29uc3QgcGVyID0gIE1hdGguY2VpbCh0aGlzLmdldEF0dHJpYnV0ZSgnc2Vjb25kYXJ5LXZhbHVlJykgKiAyNTEuMzIgKiAwLjAxKTtcbiAgICAgICAgdGhpcy5fc2Vjb25kYXJ5LnN0eWxlLmRpc3BsYXkgPSBudWxsO1xuICAgICAgICB0aGlzLl9zZWNvbmRhcnkuc3R5bGVbJ3N0cm9rZS1kYXNoYXJyYXknXSA9IHBlciArICclLCAyNTEuMzIlJztcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9zZWNvbmRhcnkuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cbiAgc2V0IHZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicgfHwgdmFsdWUgPCAwIHx8IHZhbHVlID4gMTAwKSB7XG4gICAgICB1dGlsLnRocm93KCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgTWF0aC5mbG9vcih2YWx1ZSkpO1xuICB9XG5cbiAgZ2V0IHZhbHVlKCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgndmFsdWUnKSB8fCAnMCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBzZWNvbmRhcnlWYWx1ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBzZWNvbmRhcnkgcHJvZ3Jlc3MuIFNob3VsZCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBru+8kueVquebruOBrumAsuihjOeKtuazgeOBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAgjDjgYvjgokxMDDjga7plpPjga7lgKTjgpLmjIflrprjgZfjgabkuIvjgZXjgYTjgIJbL2phXVxuICAgKi9cbiAgc2V0IHNlY29uZGFyeVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ251bWJlcicgfHwgdmFsdWUgPCAwIHx8IHZhbHVlID4gMTAwKSB7XG4gICAgICB1dGlsLnRocm93KCdJbnZhbGlkIHZhbHVlJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScsIE1hdGguZmxvb3IodmFsdWUpKTtcbiAgfVxuXG4gIGdldCBzZWNvbmRhcnlWYWx1ZSgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ3NlY29uZGFyeS12YWx1ZScpIHx8ICcwJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGluZGV0ZXJtaW5hdGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIHByb3BlcnR5IGlzIGB0cnVlYCwgYW4gaW5maW5pdGUgbG9vcGluZyBhbmltYXRpb24gd2lsbCBiZSBzaG93bi5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7lsZ7mgKfjgYzoqK3lrprjgZXjgozjgZ/loLTlkIjjgIHjg6vjg7zjg5fjgZnjgovjgqLjg4vjg6Hjg7zjgrfjg6fjg7PjgYzooajnpLrjgZXjgozjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgc2V0IGluZGV0ZXJtaW5hdGUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKElOREVULCAnJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoSU5ERVQpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBpbmRldGVybWluYXRlKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZShJTkRFVCk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBpZiAodGhpcy5faXNDb21waWxlZCgpKSB7XG4gICAgICB0aGlzLl90ZW1wbGF0ZSA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucHJvZ3Jlc3MtY2lyY3VsYXInKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fdGVtcGxhdGUgPSB0ZW1wbGF0ZS5jbG9uZU5vZGUodHJ1ZSk7XG4gICAgfVxuXG4gICAgdGhpcy5fcHJpbWFyeSA9IHV0aWwuZmluZENoaWxkKHRoaXMuX3RlbXBsYXRlLCAnLnByb2dyZXNzLWNpcmN1bGFyX19wcmltYXJ5Jyk7XG4gICAgdGhpcy5fc2Vjb25kYXJ5ID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGVtcGxhdGUsICcucHJvZ3Jlc3MtY2lyY3VsYXJfX3NlY29uZGFyeScpO1xuXG4gICAgdGhpcy5fdXBkYXRlRGV0ZXJtaW5hdGUoKTtcbiAgICB0aGlzLl91cGRhdGVWYWx1ZSgpO1xuXG4gICAgdGhpcy5hcHBlbmRDaGlsZCh0aGlzLl90ZW1wbGF0ZSk7XG5cbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBfaXNDb21waWxlZCgpIHtcbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRoaXMsICcucHJvZ3Jlc3MtY2lyY3VsYXInKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IHN2ZyA9IHV0aWwuZmluZENoaWxkKHRoaXMsICcucHJvZ3Jlc3MtY2lyY3VsYXInKTtcblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQoc3ZnLCAnLnByb2dyZXNzLWNpcmN1bGFyX19zZWNvbmRhcnknKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGlmICghdXRpbC5maW5kQ2hpbGQoc3ZnLCAnLnByb2dyZXNzLWNpcmN1bGFyX19wcmltYXJ5JykpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5Qcm9ncmVzc0NpcmN1bGFyID0gUHJvZ3Jlc3NDaXJjdWxhckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1wcm9ncmVzcy1jaXJjdWxhcicsIFByb2dyZXNzQ2lyY3VsYXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IHN0eWxlciBmcm9tICcuLi9vbnMvc3R5bGVyJztcbmltcG9ydCBwbGF0Zm9ybSBmcm9tICcuLi9vbnMvcGxhdGZvcm0nO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IEdlc3R1cmVEZXRlY3RvciBmcm9tICcuLi9vbnMvZ2VzdHVyZS1kZXRlY3Rvcic7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uL29ucy9hbmltaXQnO1xuXG5jb25zdCBTVEFURV9JTklUSUFMID0gJ2luaXRpYWwnO1xuY29uc3QgU1RBVEVfUFJFQUNUSU9OID0gJ3ByZWFjdGlvbic7XG5jb25zdCBTVEFURV9BQ1RJT04gPSAnYWN0aW9uJztcblxuY29uc3QgdGhyb3dUeXBlID0gKGVsLCB0eXBlKSA9PiB1dGlsLnRocm93KGBcIiR7ZWx9XCIgbXVzdCBiZSAke3R5cGV9YCk7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXB1bGwtaG9va1xuICogQGNhdGVnb3J5IGNvbnRyb2xcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgQ29tcG9uZW50IHRoYXQgYWRkcyAqKlB1bGwgdG8gcmVmcmVzaCoqIGZ1bmN0aW9uYWxpdHkgdG8gYW4gYDxvbnMtcGFnZT5gIGVsZW1lbnQuXG4gKlxuICogICAgIEl0IGNhbiBiZSB1c2VkIHRvIHBlcmZvcm0gYSB0YXNrIHdoZW4gdGhlIHVzZXIgcHVsbHMgZG93biBhdCB0aGUgdG9wIG9mIHRoZSBwYWdlLiBBIGNvbW1vbiB1c2FnZSBpcyB0byByZWZyZXNoIHRoZSBkYXRhIGRpc3BsYXllZCBpbiBhIHBhZ2UuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gV2JKb2dNXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvcHVsbC1ob29rXG4gKiBAZXhhbXBsZVxuICogPG9ucy1wYWdlPlxuICogICA8b25zLXB1bGwtaG9vaz5cbiAqICAgICBSZWxlYXNlIHRvIHJlZnJlc2hcbiAqICAgPC9vbnMtcHVsbC1ob29rPlxuICogPC9vbnMtcGFnZT5cbiAqXG4gKiA8c2NyaXB0PlxuICogICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdvbnMtcHVsbC1ob29rJykub25BY3Rpb24gPSBmdW5jdGlvbihkb25lKSB7XG4gKiAgICAgc2V0VGltZW91dChkb25lLCAxMDAwKTtcbiAqICAgfTtcbiAqIDwvc2NyaXB0PlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdWxsSG9va0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBjaGFuZ2VzdGF0ZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgc3RhdGUgaXMgY2hhbmdlZC4gVGhlIHN0YXRlIGNhbiBiZSBlaXRoZXIgXCJpbml0aWFsXCIsIFwicHJlYWN0aW9uXCIgb3IgXCJhY3Rpb25cIi5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jjga7nirbmhYvjgYzlpInjgo/jgaPjgZ/loLTlkIjjgavnmbrngavjgZfjgb7jgZnjgILnirbmhYvjga/jgIFcImluaXRpYWxcIiwgXCJwcmVhY3Rpb25cIiwgXCJhY3Rpb25cIuOBruOBhOOBmuOCjOOBi+OBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnB1bGxIb29rXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IGV2ZW50LnN0YXRlXG4gICAqICAgW2VuXUN1cnJlbnQgc3RhdGUuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu54q25oWL5ZCN44KS5Y+C54Wn44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgXCJwdWxsLXRvLXJlZnJlc2hcIiBmdW5jdGlvbmFsaXR5IGlzIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOOBguOCi+aZguOAgWRpc2FibGVk54q25oWL44Gr44Gq44KK44Ki44Kv44K344On44Oz44GM5a6f6KGM44GV44KM44Gq44GP44Gq44KK44G+44GZWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaGVpZ2h0XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBoZWlnaHQgb2YgdGhlIGNvbXBvbmVudC4gV2hlbiBwdWxsZWQgZG93biBmdXJ0aGVyIHRoYW4gdGhpcyB2YWx1ZSBpdCB3aWxsIHN3aXRjaCB0byB0aGUgXCJwcmVhY3Rpb25cIiBzdGF0ZS4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgXCI2NHB4XCIuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu6auY44GV44KS5oyH5a6a44GX44G+44GZ44CC44GT44Gu6auY44GV5Lul5LiK44GrcHVsbCBkb3du44GZ44KL44GoXCJwcmVhY3Rpb25cIueKtuaFi+OBq+enu+ihjOOBl+OBvuOBmeOAguODh+ODleOCqeODq+ODiOOBruWApOOBr1wiNjRweFwi44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgdGhyZXNob2xkLWhlaWdodFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgdGhyZXNob2xkIGhlaWdodC4gVGhlIGNvbXBvbmVudCBhdXRvbWF0aWNhbGx5IHN3aXRjaGVzIHRvIHRoZSBcImFjdGlvblwiIHN0YXRlIHdoZW4gcHVsbGVkIGZ1cnRoZXIgdGhhbiB0aGlzIHZhbHVlLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBcIjk2cHhcIi4gQSBuZWdhdGl2ZSB2YWx1ZSB3aWxsIGRpc2FibGUgdGhpcyBwcm9wZXJ0eS4gSWYgdGhpcyB2YWx1ZSBpcyBsb3dlciB0aGFuIHRoZSBoZWlnaHQsIGl0IHdpbGwgc2tpcCBcInByZWFjdGlvblwiIHN0YXRlLlsvZW5dXG4gICAqICAgW2phXemWvuWApOOBqOOBquOCi+mrmOOBleOCkuaMh+WumuOBl+OBvuOBmeOAguOBk+OBruWApOOBp+aMh+WumuOBl+OBn+mrmOOBleOCiOOCiuOCgnB1bGwgZG93buOBmeOCi+OBqOOAgeOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBr+iHquWLleeahOOBq1wiYWN0aW9uXCLnirbmhYvjgavnp7vooYzjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBmaXhlZC1jb250ZW50XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIGNvbnRlbnQgb2YgdGhlIHBhZ2Ugd2lsbCBub3QgbW92ZSB3aGVuIHB1bGxpbmcuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44OX44Or44OV44OD44Kv44GM5byV44GN5Ye644GV44KM44Gm44GE44KL5pmC44Gr44KC44Kz44Oz44OG44Oz44OE44Gv5YuV44GN44G+44Gb44KT44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX29uRHJhZyA9IHRoaXMuX29uRHJhZy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uRHJhZ1N0YXJ0ID0gdGhpcy5fb25EcmFnU3RhcnQuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vbkRyYWdFbmQgPSB0aGlzLl9vbkRyYWdFbmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vblNjcm9sbCA9IHRoaXMuX29uU2Nyb2xsLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9JTklUSUFMLCB0cnVlKTtcbiAgICB0aGlzLl9oaWRlKCk7IC8vIEZpeCBmb3IgdHJhbnNwYXJlbnQgdG9vbGJhciB0cmFuc2l0aW9uc1xuICB9XG5cbiAgX3NldFN0eWxlKCkge1xuICAgIGNvbnN0IGhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4JztcbiAgICBzdHlsZXIodGhpcywgeyBoZWlnaHQsIGxpbmVIZWlnaHQ6IGhlaWdodCB9KTtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPT09ICcnICYmIHRoaXMuX3Nob3coKTtcbiAgfVxuXG4gIF9vblNjcm9sbChldmVudCkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSB0aGlzLl9wYWdlRWxlbWVudDtcblxuICAgIGlmIChlbGVtZW50LnNjcm9sbFRvcCA8IDApIHtcbiAgICAgIGVsZW1lbnQuc2Nyb2xsVG9wID0gMDtcbiAgICB9XG4gIH1cblxuICBfY2FuQ29uc3VtZUdlc3R1cmUoZ2VzdHVyZSkge1xuICAgIHJldHVybiBnZXN0dXJlLmRpcmVjdGlvbiA9PT0gJ3VwJyB8fCBnZXN0dXJlLmRpcmVjdGlvbiA9PT0gJ2Rvd24nO1xuICB9XG5cbiAgX29uRHJhZ1N0YXJ0KGV2ZW50KSB7XG4gICAgaWYgKCFldmVudC5nZXN0dXJlIHx8IHRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCB0YXBZID0gZXZlbnQuZ2VzdHVyZS5jZW50ZXIuY2xpZW50WSArIHRoaXMuX3BhZ2VFbGVtZW50LnNjcm9sbFRvcDtcbiAgICBjb25zdCBtYXhZID0gd2luZG93LmlubmVySGVpZ2h0O1xuICAgIC8vIE9ubHkgdXNlIGRyYWdzIHRoYXQgc3RhcnQgbmVhciB0aGUgcHVsbEhvb2sgdG8gcmVkdWNlIGZsaWNrZXJpbmdzXG4gICAgY29uc3QgZHJhZ2dhYmxlQXJlYVJhdGlvID0gMTtcblxuICAgIHRoaXMuX2lnbm9yZURyYWcgPSBldmVudC5jb25zdW1lZCB8fCAodGFwWSA+IG1heFkgKiBkcmFnZ2FibGVBcmVhUmF0aW8pO1xuXG4gICAgaWYgKCF0aGlzLl9pZ25vcmVEcmFnKSB7XG4gICAgICBjb25zdCBjb25zdW1lID0gZXZlbnQuY29uc3VtZTtcbiAgICAgIGV2ZW50LmNvbnN1bWUgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN1bWUgJiYgY29uc3VtZSgpO1xuICAgICAgICB0aGlzLl9pZ25vcmVEcmFnID0gdHJ1ZTtcbiAgICAgICAgLy8gVGhpcyBlbGVtZW50cyByZXNpemVzIC5wYWdlX19jb250ZW50IHNvIGl0IGlzIHNhZmVyXG4gICAgICAgIC8vIHRvIGhpZGUgaXQgd2hlbiBvdGhlciBjb21wb25lbnRzIGFyZSBkcmFnZ2VkLlxuICAgICAgICB0aGlzLl9oaWRlKCk7XG4gICAgICB9O1xuXG4gICAgICBpZiAodGhpcy5fY2FuQ29uc3VtZUdlc3R1cmUoZXZlbnQuZ2VzdHVyZSkpIHtcbiAgICAgICAgY29uc3VtZSAmJiBjb25zdW1lKCk7XG4gICAgICAgIGV2ZW50LmNvbnN1bWVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5fc2hvdygpOyAvLyBOb3QgZW5vdWdoIGR1ZSB0byAnZHJhZ0xvY2tBeGlzJ1xuICAgICAgfVxuICAgIH1cblxuICAgIHRoaXMuX3N0YXJ0U2Nyb2xsID0gdGhpcy5fcGFnZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICB9XG5cbiAgX29uRHJhZyhldmVudCkge1xuICAgIGlmICghZXZlbnQuZ2VzdHVyZSB8fCB0aGlzLmRpc2FibGVkIHx8IHRoaXMuX2lnbm9yZURyYWcgfHwgIXRoaXMuX2NhbkNvbnN1bWVHZXN0dXJlKGV2ZW50Lmdlc3R1cmUpKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gTmVjZXNzYXJ5IGR1ZSB0byAnZHJhZ0xvY2tBeGlzJyAoMjVweClcbiAgICBpZiAodGhpcy5zdHlsZS5kaXNwbGF5ID09PSAnbm9uZScpIHtcbiAgICAgIHRoaXMuX3Nob3coKTtcbiAgICB9XG5cbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblxuICAgIGNvbnN0IHRhcFkgPSBldmVudC5nZXN0dXJlLmNlbnRlci5jbGllbnRZICsgdGhpcy5fcGFnZUVsZW1lbnQuc2Nyb2xsVG9wO1xuICAgIGNvbnN0IG1heFkgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cbiAgICBjb25zdCBzY3JvbGwgPSBNYXRoLm1heChldmVudC5nZXN0dXJlLmRlbHRhWSAtIHRoaXMuX3N0YXJ0U2Nyb2xsLCAwKTtcbiAgICBpZiAoc2Nyb2xsICE9PSB0aGlzLl9jdXJyZW50VHJhbnNsYXRpb24pIHtcblxuICAgICAgY29uc3QgdGggPSB0aGlzLnRocmVzaG9sZEhlaWdodDtcbiAgICAgIGlmICh0aCA+IDAgJiYgc2Nyb2xsID49IHRoKSB7XG4gICAgICAgIGV2ZW50Lmdlc3R1cmUuc3RvcERldGVjdCgpO1xuICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5fZmluaXNoKCkpO1xuXG4gICAgICB9IGVsc2UgaWYgKHNjcm9sbCA+PSB0aGlzLmhlaWdodCkge1xuICAgICAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9QUkVBQ1RJT04pO1xuXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9JTklUSUFMKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5fdHJhbnNsYXRlVG8oc2Nyb2xsKTtcbiAgICB9XG4gIH1cblxuICBfb25EcmFnRW5kKGV2ZW50KSB7XG4gICAgaWYgKCFldmVudC5nZXN0dXJlIHx8IHRoaXMuZGlzYWJsZWQgfHwgdGhpcy5faWdub3JlRHJhZykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgaWYgKHRoaXMuX2N1cnJlbnRUcmFuc2xhdGlvbiA+IDApIHtcbiAgICAgIGNvbnN0IHNjcm9sbCA9IHRoaXMuX2N1cnJlbnRUcmFuc2xhdGlvbjtcblxuICAgICAgaWYgKHNjcm9sbCA+IHRoaXMuaGVpZ2h0KSB7XG4gICAgICAgIHRoaXMuX2ZpbmlzaCgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5fdHJhbnNsYXRlVG8oMCwge2FuaW1hdGU6IHRydWV9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uQWN0aW9uXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoaXMgd2lsbCBiZSBjYWxsZWQgaW4gdGhlIGBhY3Rpb25gIHN0YXRlIGlmIGl0IGV4aXN0cy4gVGhlIGZ1bmN0aW9uIHdpbGwgYmUgZ2l2ZW4gYSBgZG9uZWAgY2FsbGJhY2sgYXMgaXQncyBmaXJzdCBhcmd1bWVudC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IG9uQWN0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9vbkFjdGlvbjtcbiAgfVxuXG4gIHNldCBvbkFjdGlvbih2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB0aHJvd1R5cGUoJ29uQWN0aW9uJywgJ2Z1bmN0aW9uIG9yIG51bGwnKTtcbiAgICB9XG4gICAgdGhpcy5fb25BY3Rpb24gPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgb25QdWxsXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhvb2sgY2FsbGVkIHdoZW5ldmVyIHRoZSB1c2VyIHB1bGxzIHRoZSBlbGVtZW50LiBJdCBnZXRzIHRoZSBwdWxsZWQgZGlzdGFuY2UgcmF0aW8gKHNjcm9sbCAvIGhlaWdodCkgYW5kIGFuIGFuaW1hdGlvbk9wdGlvbnMgb2JqZWN0IGFzIGFyZ3VtZW50cy5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IG9uUHVsbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fb25QdWxsO1xuICB9XG5cbiAgc2V0IG9uUHVsbCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgRnVuY3Rpb24pKSB7XG4gICAgICB0aHJvd1R5cGUoJ29uUHVsbCcsICdmdW5jdGlvbiBvciBudWxsJyk7XG4gICAgfVxuICAgIHRoaXMuX29uUHVsbCA9IHZhbHVlO1xuICB9XG5cbiAgX2ZpbmlzaCgpIHtcbiAgICB0aGlzLl9zZXRTdGF0ZShTVEFURV9BQ1RJT04pO1xuICAgIHRoaXMuX3RyYW5zbGF0ZVRvKHRoaXMuaGVpZ2h0LCB7YW5pbWF0ZTogdHJ1ZX0pO1xuICAgIGNvbnN0IGFjdGlvbiA9IHRoaXMub25BY3Rpb24gfHwgKGRvbmUgPT4gZG9uZSgpKTtcbiAgICBhY3Rpb24oKCkgPT4ge1xuICAgICAgdGhpcy5fdHJhbnNsYXRlVG8oMCwge2FuaW1hdGU6IHRydWV9KTtcbiAgICAgIHRoaXMuX3NldFN0YXRlKFNUQVRFX0lOSVRJQUwpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBoZWlnaHRcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBoZWlnaHQgb2YgdGhlIHB1bGwgaG9vayBpbiBwaXhlbHMuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGA2NHB4YC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgc2V0IGhlaWdodCh2YWx1ZSkge1xuICAgIGlmICghdXRpbC5pc0ludGVnZXIodmFsdWUpKSB7XG4gICAgICB0aHJvd1R5cGUoJ2hlaWdodCcsICdpbnRlZ2VyJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIGAke3ZhbHVlfXB4YCk7XG4gIH1cblxuICBnZXQgaGVpZ2h0KCkge1xuICAgIHJldHVybiBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgnaGVpZ2h0JykgfHwgJzY0JywgMTApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB0aHJlc2hvbGRIZWlnaHRcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSB0aHJlc2hvbGRIZWlnaHQgb2YgdGhlIHB1bGwgaG9vayBpbiBwaXhlbHMuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGA5NnB4YC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgc2V0IHRocmVzaG9sZEhlaWdodCh2YWx1ZSkge1xuICAgIGlmICghdXRpbC5pc0ludGVnZXIodmFsdWUpKSB7XG4gICAgICB0aHJvd1R5cGUoJ3RocmVzaG9sZEhlaWdodCcsICdpbnRlZ2VyJyk7XG4gICAgfVxuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3RocmVzaG9sZC1oZWlnaHQnLCBgJHt2YWx1ZX1weGApO1xuICB9XG5cbiAgZ2V0IHRocmVzaG9sZEhlaWdodCgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQodGhpcy5nZXRBdHRyaWJ1dGUoJ3RocmVzaG9sZC1oZWlnaHQnKSB8fCAnOTYnLCAxMCk7XG4gIH1cblxuICBfc2V0U3RhdGUoc3RhdGUsIG5vRXZlbnQpIHtcbiAgICBjb25zdCBsYXN0U3RhdGUgPSB0aGlzLnN0YXRlO1xuXG4gICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ3N0YXRlJywgc3RhdGUpO1xuXG4gICAgaWYgKCFub0V2ZW50ICYmIGxhc3RTdGF0ZSAhPT0gdGhpcy5zdGF0ZSkge1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdjaGFuZ2VzdGF0ZScsIHtcbiAgICAgICAgcHVsbEhvb2s6IHRoaXMsXG4gICAgICAgIHN0YXRlOiBzdGF0ZSxcbiAgICAgICAgbGFzdFN0YXRlOiBsYXN0U3RhdGVcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgc3RhdGVcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DdXJyZW50IHN0YXRlIG9mIHRoZSBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgc3RhdGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2V0QXR0cmlidXRlKCdzdGF0ZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBwdWxsRGlzdGFuY2VcbiAgICogQHJlYWRvbmx5XG4gICAqIEB0eXBlIHtOdW1iZXJ9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgY3VycmVudCBudW1iZXIgb2YgcGl4ZWxzIHRoZSBwdWxsIGhvb2sgaGFzIG1vdmVkLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruODl+ODq+ODleODg+OCr+OBjOW8leOBjeWHuuOBleOCjOOBn+i3nembouOCkuODlOOCr+OCu+ODq+aVsOOAglsvamFdXG4gICAqL1xuICBnZXQgcHVsbERpc3RhbmNlKCkge1xuICAgIHJldHVybiB0aGlzLl9jdXJyZW50VHJhbnNsYXRpb247XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG5cbiAgX3Nob3coKSB7XG4gICAgLy8gUnVuIGFzeW5jcmhvbm91c2x5IHRvIGF2b2lkIGNvbmZsaWN0cyB3aXRoIEFuaW1pdCdzIHN0eWxlIGNsZWFuXG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgIHRoaXMuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgICAgaWYgKHRoaXMuX3BhZ2VFbGVtZW50KSB7XG4gICAgICAgIHRoaXMuX3BhZ2VFbGVtZW50LnN0eWxlLm1hcmdpblRvcCA9IGAtJHt0aGlzLmhlaWdodH1weGA7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgaWYgKHRoaXMuX3BhZ2VFbGVtZW50KSB7XG4gICAgICB0aGlzLl9wYWdlRWxlbWVudC5zdHlsZS5tYXJnaW5Ub3AgPSAnJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtOdW1iZXJ9IHNjcm9sbFxuICAgKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICovXG4gIF90cmFuc2xhdGVUbyhzY3JvbGwsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICh0aGlzLl9jdXJyZW50VHJhbnNsYXRpb24gPT0gMCAmJiBzY3JvbGwgPT0gMCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2N1cnJlbnRUcmFuc2xhdGlvbiA9IHNjcm9sbDtcbiAgICBjb25zdCBvcHQgPSBvcHRpb25zLmFuaW1hdGUgPyB7IGR1cmF0aW9uOiAuMywgdGltaW5nOiAnY3ViaWMtYmV6aWVyKC4xLCAuNywgLjEsIDEpJyB9IDoge307XG4gICAgdGhpcy5fb25QdWxsICYmIHRoaXMuX29uUHVsbCgoc2Nyb2xsIC8gdGhpcy5oZWlnaHQpLnRvRml4ZWQoMiksIG9wdCk7XG4gICAgY29uc3Qgc2Nyb2xsRWxlbWVudCA9ICB0aGlzLmhhc0F0dHJpYnV0ZSgnZml4ZWQtY29udGVudCcpID8gdGhpcyA6IHRoaXMuX3BhZ2VFbGVtZW50O1xuXG4gICAgYW5pbWl0KHNjcm9sbEVsZW1lbnQpXG4gICAgICAucXVldWUoeyB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgwcHgsICR7c2Nyb2xsfXB4LCAwcHgpYCB9LCBvcHQpXG4gICAgICAucGxheSgoKSA9PiB7XG4gICAgICAgIHNjcm9sbCA9PT0gMCAmJiBzdHlsZXIuY2xlYXIoc2Nyb2xsRWxlbWVudCwgJ3RyYW5zaXRpb24gdHJhbnNmb3JtJyk7XG4gICAgICAgIG9wdGlvbnMuY2FsbGJhY2sgaW5zdGFuY2VvZiBGdW5jdGlvbiAmJiBvcHRpb25zLmNhbGxiYWNrKCk7XG4gICAgfSk7XG4gIH1cblxuICBfZGlzYWJsZURyYWdMb2NrKCkgeyAvLyBlMmUgdGVzdHMgbmVlZCBpdFxuICAgIHRoaXMuX2RyYWdMb2NrRGlzYWJsZWQgPSB0cnVlO1xuICAgIHRoaXMuX3NldHVwTGlzdGVuZXJzKHRydWUpO1xuICB9XG5cbiAgX3NldHVwTGlzdGVuZXJzKGFkZCkge1xuICAgIGNvbnN0IHNjcm9sbFRvZ2dsZSA9IGFjdGlvbiA9PiB0aGlzLl9wYWdlRWxlbWVudFtgJHthY3Rpb259RXZlbnRMaXN0ZW5lcmBdKCdzY3JvbGwnLCB0aGlzLl9vblNjcm9sbCwgZmFsc2UpO1xuICAgIGNvbnN0IGdkVG9nZ2xlID0gYWN0aW9uID0+IHtcbiAgICAgIGNvbnN0IHBhc3NpdmUgPSB7IHBhc3NpdmU6IHRydWUgfTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvclthY3Rpb25dKCdkcmFnJywgdGhpcy5fb25EcmFnLCBwYXNzaXZlKTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvclthY3Rpb25dKCdkcmFnc3RhcnQnLCB0aGlzLl9vbkRyYWdTdGFydCwgcGFzc2l2ZSk7XG4gICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3JbYWN0aW9uXSgnZHJhZ2VuZCcsIHRoaXMuX29uRHJhZ0VuZCwgcGFzc2l2ZSk7XG4gICAgfTtcblxuICAgIGlmICh0aGlzLl9nZXN0dXJlRGV0ZWN0b3IpIHtcbiAgICAgIGdkVG9nZ2xlKCdvZmYnKTtcbiAgICAgIHRoaXMuX2dlc3R1cmVEZXRlY3Rvci5kaXNwb3NlKCk7XG4gICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3IgPSBudWxsO1xuICAgIH1cbiAgICBzY3JvbGxUb2dnbGUoJ3JlbW92ZScpO1xuXG4gICAgaWYgKGFkZCkge1xuICAgICAgdGhpcy5fZ2VzdHVyZURldGVjdG9yID0gbmV3IEdlc3R1cmVEZXRlY3Rvcih0aGlzLl9wYWdlRWxlbWVudCwge1xuICAgICAgICBkcmFnTWluRGlzdGFuY2U6IDEsXG4gICAgICAgIGRyYWdEaXN0YW5jZUNvcnJlY3Rpb246IGZhbHNlLFxuICAgICAgICBkcmFnTG9ja1RvQXhpczogIXRoaXMuX2RyYWdMb2NrRGlzYWJsZWQsXG4gICAgICAgIHBhc3NpdmU6IHRydWVcbiAgICAgIH0pO1xuXG4gICAgICBnZFRvZ2dsZSgnb24nKTtcbiAgICAgIHNjcm9sbFRvZ2dsZSgnYWRkJyk7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5fY3VycmVudFRyYW5zbGF0aW9uID0gMDtcbiAgICB0aGlzLl9wYWdlRWxlbWVudCA9IHRoaXMucGFyZW50Tm9kZTtcblxuICAgIHRoaXMuX3NldHVwTGlzdGVuZXJzKHRydWUpO1xuICAgIHRoaXMuX3NldFN0eWxlKCk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9oaWRlKCk7XG4gICAgdGhpcy5fc2V0dXBMaXN0ZW5lcnMoZmFsc2UpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnaGVpZ2h0J107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnaGVpZ2h0JyAmJiB0aGlzLl9wYWdlRWxlbWVudCkge1xuICAgICAgdGhpcy5fc2V0U3R5bGUoKTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydjaGFuZ2VzdGF0ZSddXG4gIH1cbn1cblxub25zRWxlbWVudHMuUHVsbEhvb2sgPSBQdWxsSG9va0VsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1wdWxsLWhvb2snLCBQdWxsSG9va0VsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IEJhc2VJbnB1dEVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtaW5wdXQnO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAncmFuZ2UtLSonLFxuICAnLnJhbmdlX19pbnB1dCc6ICdyYW5nZS0tKl9faW5wdXQnLFxuICAnLnJhbmdlX19mb2N1cy1yaW5nJzogJ3JhbmdlLS0qX19mb2N1cy1yaW5nJ1xufTtcblxuY29uc3QgYWN0aXZlQ2xhc3NUb2tlbiA9ICdyYW5nZV9faW5wdXQtLWFjdGl2ZSc7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXJhbmdlXG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQG1vZGlmaWVyIG1hdGVyaWFsXG4gKiAgIFtlbl1NYXRlcmlhbCBEZXNpZ24gc2xpZGVyWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFJhbmdlIGlucHV0IGNvbXBvbmVudC4gVXNlZCB0byBkaXNwbGF5IGEgZHJhZ2dhYmxlIHNsaWRlci5cbiAqXG4gKiAgICAgV29ya3MgdmVyeSBzaW1pbGFyIHRvIHRoZSBgPGlucHV0IHR5cGU9XCJyYW5nZVwiPmAgZWxlbWVudC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiB4WlFvbU1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9yYW5nZVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNtb2RpZmllcnMgW2VuXU1vcmUgZGV0YWlscyBhYm91dCB0aGUgYG1vZGlmaWVyYCBhdHRyaWJ1dGVbL2VuXVtqYV1tb2RpZmllcuWxnuaAp+OBruS9v+OBhOaWuVsvamFdXG4gKiBAc2VlYWxzbyBvbnMtaW5wdXRcbiAqICAgW2VuXVRoZSBgPG9ucy1pbnB1dD5gIGNvbXBvbmVudCBpcyB1c2VkIHRvIGRpc3BsYXkgdGV4dCBpbnB1dHMsIHJhZGlvIGJ1dHRvbnMgYW5kIGNoZWNrYm94ZXMuWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1yYW5nZSB2YWx1ZT1cIjIwXCI+PC9vbnMtcmFuZ2U+XG4gKiA8b25zLXJhbmdlIG1vZGlmaWVyPVwibWF0ZXJpYWxcIiB2YWx1ZT1cIjEwXCI+PC9yYW5nZT5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYW5nZUVsZW1lbnQgZXh0ZW5kcyBCYXNlSW5wdXRFbGVtZW50IHtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fb25Nb3VzZURvd24gPSB0aGlzLl9vbk1vdXNlRG93bi5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uTW91c2VVcCA9IHRoaXMuX29uTW91c2VVcC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uVG91Y2hTdGFydCA9IHRoaXMuX29uVG91Y2hTdGFydC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uVG91Y2hFbmQgPSB0aGlzLl9vblRvdWNoRW5kLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25JbnB1dCA9IHRoaXMuX3VwZGF0ZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uRHJhZ3N0YXJ0ID0gdGhpcy5fb25EcmFnc3RhcnQuYmluZCh0aGlzKTtcbiAgICB0aGlzLl9vbkRyYWdlbmQgPSB0aGlzLl9vbkRyYWdlbmQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIF9jb21waWxlKCkge1xuICAgIHN1cGVyLl9jb21waWxlKCk7XG4gICAgdGhpcy5fdXBkYXRlRGlzYWJsZWQodGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJykpO1xuICB9XG5cbiAgLyogSW5oZXJpdGVkIHByb3BzICovXG5cbiAgX3VwZGF0ZSgpIHtcbiAgICBjb25zdCBpbnB1dCA9IHRoaXMuX2lucHV0O1xuICAgIGNvbnN0IGZvY3VzUmluZyA9IHRoaXMuX2ZvY3VzUmluZztcblxuICAgIGlucHV0LnN0eWxlLmJhY2tncm91bmRTaXplID0gYCR7MTAwICogdGhpcy5fcmF0aW99JSAycHhgO1xuICAgIGZvY3VzUmluZy52YWx1ZSA9IHRoaXMudmFsdWU7XG5cbiAgICAvLyBOT1RFOiBcIl96ZXJvXCIgYXR0cmlidXRlIGlzIHVzZWQgZm9yIENTUyBzdHlsaW5nLlxuICAgIGlmICgoaW5wdXQubWluID09PSAnJyAmJiBpbnB1dC52YWx1ZSA9PT0gJzAnKSB8fCBpbnB1dC5taW4gPT09IGlucHV0LnZhbHVlKSB7XG4gICAgICBpbnB1dC5zZXRBdHRyaWJ1dGUoJ196ZXJvJywgJycpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnB1dC5yZW1vdmVBdHRyaWJ1dGUoJ196ZXJvJyk7XG4gICAgfVxuXG4gICAgWydtaW4nLCAnbWF4J10uZm9yRWFjaChhdHRyID0+IGZvY3VzUmluZ1thdHRyXSA9IGlucHV0W2F0dHJdKTtcbiAgfVxuXG4gIGdldCBfc2NoZW1lKCkge1xuICAgIHJldHVybiBzY2hlbWU7XG4gIH1cblxuICBnZXQgX3RlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8aW5wdXQgdHlwZT1cIiR7dGhpcy50eXBlfVwiIGNsYXNzPVwiJHt0aGlzLl9kZWZhdWx0Q2xhc3NOYW1lfV9faW5wdXRcIj5cbiAgICAgIDxpbnB1dCB0eXBlPVwicmFuZ2VcIiBjbGFzcz1cInJhbmdlX19mb2N1cy1yaW5nXCIgdGFiSW5kZXg9XCItMVwiPlxuICAgIGA7XG4gIH1cblxuICBnZXQgX2RlZmF1bHRDbGFzc05hbWUoKSB7XG4gICAgcmV0dXJuICdyYW5nZSc7XG4gIH1cblxuICBnZXQgdHlwZSgpIHtcbiAgICByZXR1cm4gJ3JhbmdlJztcbiAgfVxuXG4gIC8qIE93biBwcm9wcyAqL1xuXG4gIF9vbk1vdXNlRG93bihlKSB7XG4gICAgdGhpcy5faW5wdXQuY2xhc3NMaXN0LmFkZChhY3RpdmVDbGFzc1Rva2VuKTtcbiAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5faW5wdXQuZm9jdXMoKSk7XG4gIH1cblxuICBfb25Ub3VjaFN0YXJ0KGUpIHtcbiAgICB0aGlzLl9vbk1vdXNlRG93bigpO1xuICB9XG5cbiAgX29uTW91c2VVcChlKSB7XG4gICAgdGhpcy5faW5wdXQuY2xhc3NMaXN0LnJlbW92ZShhY3RpdmVDbGFzc1Rva2VuKTtcbiAgfVxuXG4gIF9vblRvdWNoRW5kKGUpIHtcbiAgICB0aGlzLl9vbk1vdXNlVXAoZSk7XG4gIH1cblxuICBfb25EcmFnc3RhcnQoZSkge1xuICAgIGUuY29uc3VtZWQgPSB0cnVlO1xuICAgIGUuZ2VzdHVyZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB0aGlzLl9pbnB1dC5jbGFzc0xpc3QuYWRkKGFjdGl2ZUNsYXNzVG9rZW4pO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gIH1cblxuICBfb25EcmFnKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgX29uRHJhZ2VuZChlKSB7XG4gICAgdGhpcy5faW5wdXQuY2xhc3NMaXN0LnJlbW92ZShhY3RpdmVDbGFzc1Rva2VuKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2RyYWcnLCB0aGlzLl9vbkRyYWcpO1xuICB9XG5cbiAgZ2V0IF9mb2N1c1JpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5bMV07XG4gIH1cblxuICBnZXQgX3JhdGlvKCkge1xuICAgIC8vIFJldHVybnMgdGhlIGN1cnJlbnQgcmF0aW8uXG4gICAgY29uc3QgbWluID0gdGhpcy5faW5wdXQubWluID09PSAnJyA/IDAgOiBwYXJzZUludCh0aGlzLl9pbnB1dC5taW4pO1xuICAgIGNvbnN0IG1heCA9IHRoaXMuX2lucHV0Lm1heCA9PT0gJycgPyAxMDAgOiBwYXJzZUludCh0aGlzLl9pbnB1dC5tYXgpO1xuXG4gICAgcmV0dXJuICh0aGlzLnZhbHVlIC0gbWluKSAvIChtYXggLSBtaW4pO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnZGlzYWJsZWQnLCAuLi5CYXNlSW5wdXRFbGVtZW50Lm9ic2VydmVkQXR0cmlidXRlc107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnZGlzYWJsZWQnKSB7XG4gICAgICB0aGlzLl91cGRhdGVEaXNhYmxlZChjdXJyZW50KTtcbiAgICB9XG4gICAgc3VwZXIuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICovXG4gIF91cGRhdGVEaXNhYmxlZChkaXNhYmxlZCkge1xuICAgIGlmIChkaXNhYmxlZCkge1xuICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdyYW5nZS0tZGlzYWJsZWQnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5jbGFzc0xpc3QucmVtb3ZlKCdyYW5nZS0tZGlzYWJsZWQnKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9zZXR1cExpc3RlbmVycyh0cnVlKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuX3NldHVwTGlzdGVuZXJzKGZhbHNlKTtcbiAgfVxuXG4gIF9zZXR1cExpc3RlbmVycyhhZGQpIHtcbiAgICBjb25zdCBhY3Rpb24gPSAoYWRkID8gJ2FkZCcgOiAncmVtb3ZlJykgKyAnRXZlbnRMaXN0ZW5lcic7XG4gICAgdXRpbFthY3Rpb25dKHRoaXMsICd0b3VjaHN0YXJ0JywgdGhpcy5fb25Ub3VjaFN0YXJ0LCB7IHBhc3NpdmU6IHRydWUgfSk7XG4gICAgdGhpc1thY3Rpb25dKCdtb3VzZWRvd24nLCB0aGlzLl9vbk1vdXNlRG93bik7XG4gICAgdGhpc1thY3Rpb25dKCdtb3VzZXVwJywgdGhpcy5fb25Nb3VzZVVwKTtcbiAgICB0aGlzW2FjdGlvbl0oJ3RvdWNoZW5kJywgdGhpcy5fb25Ub3VjaEVuZCk7XG4gICAgdGhpc1thY3Rpb25dKCdkcmFnc3RhcnQnLCB0aGlzLl9vbkRyYWdzdGFydCk7XG4gICAgdGhpc1thY3Rpb25dKCdkcmFnZW5kJywgdGhpcy5fb25EcmFnZW5kKTtcbiAgICB0aGlzW2FjdGlvbl0oJ2lucHV0JywgdGhpcy5fb25JbnB1dCk7XG4gIH1cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBkaXNhYmxlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgZGlzYWJsZWQgb3Igbm90LlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBleOCjOOBpuOBhOOCi+WgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUN1cnJlbnQgdmFsdWUuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2QgZm9jdXNcbiAgICogQHNpZ25hdHVyZSBmb2N1cygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Gb2N1c2VzIHRoZSByYW5nZS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQG1ldGhvZCBibHVyXG4gICAqIEBzaWduYXR1cmUgYmx1cigpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZW1vdmVzIGZvY3VzIGZyb20gdGhlIHJhbmdlLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xufVxuXG5vbnNFbGVtZW50cy5SYW5nZSA9IFJhbmdlRWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXJhbmdlJywgUmFuZ2VFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE2IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBpbnRlcm5hbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwnO1xuXG4vKipcbiAqIEBjbGFzcyBBbmltYXRvckNTUyAtIGltcGxlbWVudGF0aW9uIG9mIEFuaW1hdG9yIGNsYXNzIHVzaW5nIGNzcyB0cmFuc2l0aW9uc1xuICovXG5jbGFzcyBBbmltYXRvckNTUyB7XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgYW5pbWF0ZVxuICAgKiBAZGVzYyBtYWluIGFuaW1hdGlvbiBmdW5jdGlvblxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHBhcmFtIHtPYmplY3R9IGZpbmFsQ1NTXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZHVyYXRpb249MjAwXSAtIGR1cmF0aW9uIGluIG1pbGxpc2Vjb25kc1xuICAgKiBAcmV0dXJuIHtPYmplY3R9IHJlc3VsdFxuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gcmVzdWx0LnRoZW4oY2FsbGJhY2spIC0gc2V0cyBhIGNhbGxiYWNrIHRvIGJlIGV4ZWN1dGVkIGFmdGVyIHRoZSBhbmltYXRpb24gaGFzIHN0b3BwZWRcbiAgICogQHJldHVybiB7RnVuY3Rpb259IHJlc3VsdC5zdG9wKG9wdGlvbnMpIC0gc3RvcHMgdGhlIGFuaW1hdGlvbjsgaWYgb3B0aW9ucy5zdG9wTmV4dCBpcyB0cnVlIHRoZW4gaXQgZG9lc24ndCBjYWxsIHRoZSBjYWxsYmFja1xuICAgKiBAcmV0dXJuIHtGdW5jdGlvbn0gcmVzdWx0LmZpbmlzaChtcykgLSBmaW5pc2hlcyB0aGUgYW5pbWF0aW9uIGluIHRoZSBzcGVjaWZpZWQgdGltZSBpbiBtaWxsaXNlY29uZHNcbiAgICogQHJldHVybiB7RnVuY3Rpb259IHJlc3VsdC5zcGVlZChtcykgLSBzZXRzIHRoZSBhbmltYXRpb24gc3BlZWQgc28gdGhhdCBpdCBmaW5pc2hlcyBhcyBpZiB0aGUgb3JpZ2luYWwgZHVyYXRpb24gd2FzIHRoZSBvbmUgc3BlY2lmaWVkIGhlcmVcbiAgICogQGV4YW1wbGVcbiAgICogYGBgYFxuICAgKiAgdmFyIHJlc3VsdCA9IGFuaW1hdG9yLmFuaW1hdGUoZWwsIHtvcGFjaXR5OiAwLjV9LCAxMDAwKTtcbiAgICpcbiAgICogIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24oZSl7XG4gICAqICAgIHJlc3VsdC5zcGVlZCgyMDApLnRoZW4oZnVuY3Rpb24oKXtcbiAgICogICAgICBjb25zb2xlLmxvZygnZG9uZScpO1xuICAgKiAgICB9KTtcbiAgICogIH0sIDMwMCk7XG4gICAqIGBgYGBcbiAgICovXG4gIGFuaW1hdGUoZWwsIGZpbmFsLCBkdXJhdGlvbiA9IDIwMCkge1xuICAgIHZhciBzdGFydCA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCksXG4gICAgICAgIGluaXRpYWwgPSB7fSxcbiAgICAgICAgc3RvcHBlZCA9IGZhbHNlLFxuICAgICAgICBuZXh0ID0gZmFsc2UsXG4gICAgICAgIHRpbWVvdXQgPSBmYWxzZSxcbiAgICAgICAgcHJvcGVydGllcyA9IE9iamVjdC5rZXlzKGZpbmFsKTtcblxuICAgIHZhciB1cGRhdGVTdHlsZXMgPSAoKSA9PiB7XG4gICAgICBsZXQgcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGVsKTtcbiAgICAgIHByb3BlcnRpZXMuZm9yRWFjaChzLmdldFByb3BlcnR5VmFsdWUuYmluZChzKSk7XG4gICAgICBzID0gZWwub2Zmc2V0SGVpZ2h0O1xuICAgIH07XG5cbiAgICB2YXIgcmVzdWx0ID0ge1xuICAgICAgc3RvcDogKG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICB0aW1lb3V0ICYmIGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiAgICAgICAgdmFyIGsgPSBNYXRoLm1pbigxLCAoKG5ldyBEYXRlKCkpLmdldFRpbWUoKSAtIHN0YXJ0KSAvIGR1cmF0aW9uKTtcbiAgICAgICAgcHJvcGVydGllcy5mb3JFYWNoKGkgPT4ge1xuICAgICAgICAgIGVsLnN0eWxlW2ldID0gKDEgLSBrKSAqIGluaXRpYWxbaV0gKyBrICogZmluYWxbaV0gKyAoaSA9PSAnb3BhY2l0eScgPyAnJyA6ICdweCcpO1xuICAgICAgICB9KTtcbiAgICAgICAgZWwuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gJzBzJztcblxuICAgICAgICBpZiAob3B0aW9ucy5zdG9wTmV4dCkge1xuICAgICAgICAgIG5leHQgPSBmYWxzZTtcbiAgICAgICAgfSBlbHNlIGlmICghc3RvcHBlZCkge1xuICAgICAgICAgIHN0b3BwZWQgPSB0cnVlO1xuICAgICAgICAgIG5leHQgJiYgbmV4dCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9LFxuICAgICAgdGhlbjogKGNiKSA9PiB7XG4gICAgICAgIG5leHQgPSBjYjtcbiAgICAgICAgaWYgKHN0b3BwZWQpIHtcbiAgICAgICAgICBuZXh0ICYmIG5leHQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfSxcbiAgICAgIHNwZWVkOiAobmV3RHVyYXRpb24pID0+IHtcbiAgICAgICAgaWYgKGludGVybmFsLmNvbmZpZy5hbmltYXRpb25zRGlzYWJsZWQpIHtcbiAgICAgICAgICBuZXdEdXJhdGlvbiA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFzdG9wcGVkKSB7XG4gICAgICAgICAgdGltZW91dCAmJiBjbGVhclRpbWVvdXQodGltZW91dCk7XG5cbiAgICAgICAgICBjb25zdCBwYXNzZWQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gc3RhcnQ7XG4gICAgICAgICAgY29uc3QgIGsgPSBwYXNzZWQgLyBkdXJhdGlvbjtcbiAgICAgICAgICBjb25zdCByZW1haW5pbmcgPSBuZXdEdXJhdGlvbiAqICgxIC0gayk7XG5cbiAgICAgICAgICBwcm9wZXJ0aWVzLmZvckVhY2goaSA9PiB7XG4gICAgICAgICAgICBlbC5zdHlsZVtpXSA9ICgxIC0gaykgKiBpbml0aWFsW2ldICsgayAqIGZpbmFsW2ldICsgKGkgPT0gJ29wYWNpdHknID8gJycgOiAncHgnKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIHVwZGF0ZVN0eWxlcygpO1xuXG4gICAgICAgICAgc3RhcnQgPSBlbC5zcGVlZFVwVGltZTtcbiAgICAgICAgICBkdXJhdGlvbiA9IHJlbWFpbmluZztcblxuICAgICAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uIC8gMTAwMCArICdzJztcblxuICAgICAgICAgIHByb3BlcnRpZXMuZm9yRWFjaChpID0+IHtcbiAgICAgICAgICAgIGVsLnN0eWxlW2ldID0gZmluYWxbaV0gKyAoaSA9PSAnb3BhY2l0eScgPyAnJyA6ICdweCcpO1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgdGltZW91dCA9IHNldFRpbWVvdXQocmVzdWx0LnN0b3AsIHJlbWFpbmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH0sXG4gICAgICBmaW5pc2g6IChtaWxsaXNlY29uZHMgPSA1MCkgPT4ge1xuICAgICAgICB2YXIgayA9ICgobmV3IERhdGUoKSkuZ2V0VGltZSgpIC0gc3RhcnQpIC8gZHVyYXRpb247XG5cbiAgICAgICAgcmVzdWx0LnNwZWVkKG1pbGxpc2Vjb25kcyAvICgxIC0gaykpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgIH07XG5cbiAgICBpZiAoZWwuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpIHx8IHN0b3BwZWQgfHwgaW50ZXJuYWwuY29uZmlnLmFuaW1hdGlvbnNEaXNhYmxlZCkge1xuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG5cbiAgICB2YXIgc3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShlbCk7XG4gICAgcHJvcGVydGllcy5mb3JFYWNoKGUgPT4ge1xuICAgICAgY29uc3QgdiA9IHBhcnNlRmxvYXQoc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShlKSk7XG4gICAgICBpbml0aWFsW2VdID0gaXNOYU4odikgPyAwIDogdjtcbiAgICB9KTtcblxuXG4gICAgaWYgKCFzdG9wcGVkKSB7XG4gICAgICBlbC5zdHlsZS50cmFuc2l0aW9uUHJvcGVydHkgPSBwcm9wZXJ0aWVzLmpvaW4oJywnKTtcbiAgICAgIGVsLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IGR1cmF0aW9uIC8gMTAwMCArICdzJztcblxuICAgICAgcHJvcGVydGllcy5mb3JFYWNoKGUgPT4ge1xuICAgICAgICBlbC5zdHlsZVtlXSA9IGZpbmFsW2VdICsgKGUgPT0gJ29wYWNpdHknID8gJycgOiAncHgnKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KHJlc3VsdC5zdG9wLCBkdXJhdGlvbik7XG4gICAgdGhpcy5fb25TdG9wQW5pbWF0aW9ucyhlbCwgcmVzdWx0LnN0b3ApO1xuXG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuX3F1ZXVlID0gW107XG4gICAgdGhpcy5faW5kZXggPSAwO1xuICB9XG5cbiAgX29uU3RvcEFuaW1hdGlvbnMoZWwsIGxpc3RlbmVyKSB7XG4gICAgdmFyIHF1ZXVlID0gdGhpcy5fcXVldWU7XG4gICAgdmFyIGkgPSB0aGlzLl9pbmRleCsrO1xuICAgIHF1ZXVlW2VsXSA9IHF1ZXVlW2VsXSB8fCBbXTtcbiAgICBxdWV1ZVtlbF1baV0gPSAob3B0aW9ucykgPT4ge1xuICAgICAgZGVsZXRlIHF1ZXVlW2VsXVtpXTtcbiAgICAgIGlmIChxdWV1ZVtlbF0gJiYgcXVldWVbZWxdLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgIGRlbGV0ZSBxdWV1ZVtlbF07XG4gICAgICB9XG4gICAgICByZXR1cm4gbGlzdGVuZXIob3B0aW9ucyk7XG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAqIEBtZXRob2Qgc3RvcEFuaW1hdGlvbnNcbiAgKiBAZGVzYyBzdG9wcyBhY3RpdmUgYW5pbWF0aW9ucyBvbiBhIHNwZWNpZmllZCBlbGVtZW50XG4gICogQHBhcmFtIHtFbGVtZW50fEFycmF5fSBlbGVtZW50IC0gZWxlbWVudCBvciBhcnJheSBvZiBlbGVtZW50c1xuICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV1cbiAgKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLnN0b3BOZXh0XSAtIHRoZSBjYWxsYmFja3MgYWZ0ZXIgdGhlIGFuaW1hdGlvbnMgd29uJ3QgYmUgY2FsbGVkIGlmIHRoaXMgb3B0aW9uIGlzIHRydWVcbiAgKi9cbiAgc3RvcEFuaW1hdGlvbnMoZWwsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGVsKSkge1xuICAgICAgcmV0dXJuIGVsLmZvckVhY2goZWwgPT4ge1xuICAgICAgICB0aGlzLnN0b3BBbmltYXRpb25zKGVsLCBvcHRpb25zKTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgICh0aGlzLl9xdWV1ZVtlbF0gfHwgW10pLmZvckVhY2goZSA9PiB7IGUob3B0aW9ucyB8fCB7fSk7IH0pO1xuICB9XG5cbiAgLyoqXG4gICogQG1ldGhvZCBzdG9wQWxsXG4gICogQGRlc2Mgc3RvcHMgYWxsIGFjdGl2ZSBhbmltYXRpb25zXG4gICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XVxuICAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuc3RvcE5leHRdIC0gdGhlIGNhbGxiYWNrcyBhZnRlciB0aGUgYW5pbWF0aW9ucyB3b24ndCBiZSBjYWxsZWQgaWYgdGhpcyBvcHRpb24gaXMgdHJ1ZVxuICAqL1xuICBzdG9wQWxsKG9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuc3RvcEFuaW1hdGlvbnMoT2JqZWN0LmtleXModGhpcy5fcXVldWUpLCBvcHRpb25zKTtcbiAgfVxuXG4gIC8qKlxuICAqIEBtZXRob2QgZmFkZVxuICAqIEBkZXNjIGZhZGVzIHRoZSBlbGVtZW50IChzaG9ydCB2ZXJzaW9uIGZvciBhbmltYXRlKGVsLCB7b3BhY2l0eTogMH0pKVxuICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAqIEBwYXJhbSB7bnVtYmVyfSBbZHVyYXRpb249MjAwXVxuICAqL1xuICBmYWRlKGVsLCBkdXJhdGlvbiA9IDIwMCkge1xuICAgIHJldHVybiB0aGlzLmFuaW1hdGUoZWwsIHtvcGFjaXR5OiAwfSwgZHVyYXRpb24pO1xuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgQW5pbWF0b3JDU1M7XG5cbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi8uLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vLi4vb25zL3V0aWwnO1xuaW1wb3J0IGludGVybmFsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3ItY3NzJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAncmlwcGxlJztcbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdyaXBwbGUtLSonLFxuICAnLnJpcHBsZV9fd2F2ZSc6ICdyaXBwbGUtLSpfX3dhdmUnLFxuICAnLnJpcHBsZV9fYmFja2dyb3VuZCc6ICdyaXBwbGUtLSpfX2JhY2tncm91bmQnLFxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtcmlwcGxlXG4gKiBAY2F0ZWdvcnkgdmlzdWFsXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIEFkZHMgYSBNYXRlcmlhbCBEZXNpZ24gXCJyaXBwbGVcIiBlZmZlY3QgdG8gYW4gZWxlbWVudC4gVGhlIHJpcHBsZSBlZmZlY3Qgd2lsbCBzcHJlYWQgZnJvbSB0aGUgcG9zaXRpb24gd2hlcmUgdGhlIHVzZXIgdGFwcy5cbiAqXG4gKiAgICAgU29tZSBlbGVtZW50cyBzdWNoIGFzIGA8b25zLWJ1dHRvbj5gIGFuZCBgPG9ucy1mYWI+YCAgc3VwcG9ydCBhIGByaXBwbGVgIGF0dHJpYnV0ZS5cbiAqICAgWy9lbl1cbiAqICAgW2phXeODnuODhuODquOCouODq+ODh+OCtuOCpOODs+OBruODquODg+ODl+ODq+WKueaenOOCkkRPTeimgee0oOOBq+i/veWKoOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiB3S1FXZFpcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9yaXBwbGVcbiAqIEBtb2RpZmllciBsaWdodC1ncmF5XG4gKiAgIFtlbl1DaGFuZ2UgdGhlIGNvbG9yIG9mIGVmZmVjdHMgdG8gbGlnaHQgZ3JheS5bL2VuXVxuICogICBbamFd44Ko44OV44Kn44Kv44OI44Gu6Imy44GM5piO44KL44GE54Gw6Imy44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAqIEBndWlkZSB0aGVtaW5nLmh0bWwjY3Jvc3MtcGxhdGZvcm0tc3R5bGluZy1hdXRvc3R5bGluZ1xuICogIFtlbl1Dcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1cbiAqICBbamFdQ3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svamFdXG4gKiBAZXhhbXBsZVxuICogPGRpdiBjbGFzcz1cIm15LWRpdlwiPlxuICogIDxvbnMtcmlwcGxlPjwvb25zLXJpcHBsZT5cbiAqIDwvZGl2PlxuICpcbiAqIEBleGFtcGxlXG4gKiA8b25zLWJ1dHRvbiByaXBwbGU+Q2xpY2sgbWUhPC9vbnMtYnV0dG9uPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSaXBwbGVFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGNvbG9yXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Db2xvciBvZiB0aGUgcmlwcGxlIGVmZmVjdC5bL2VuXVxuICAgKiAgIFtqYV3jg6rjg4Pjg5fjg6vjgqjjg5Xjgqfjgq/jg4jjga7oibLjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHJpcHBsZSBlZmZlY3QuWy9lbl1cbiAgICogICBbamFd44Ko44OV44Kn44Kv44OI44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYmFja2dyb3VuZFxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ29sb3Igb2YgdGhlIGJhY2tncm91bmQuWy9lbl1cbiAgICogICBbamFd6IOM5pmv44Gu6Imy44KS6Kit5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2l6ZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2l6aW5nIG9mIHRoZSB3YXZlIG9uIHJpcHBsZSBlZmZlY3QuIFNldCBcImNvdmVyXCIgb3IgXCJjb250YWluXCIuIERlZmF1bHQgaXMgXCJjb3ZlclwiLlsvZW5dXG4gICAqICAgW2phXeOCqOODleOCp+OCr+ODiOOBruOCteOCpOOCuuOCkuaMh+WumuOBl+OBvuOBmeOAglwiY292ZXJcIuOCguOBl+OBj+OBr1wiY29udGFpblwi44KS5oyH5a6a44GX44G+44GZ44CC44OH44OV44Kp44Or44OI44GvXCJjb3Zlclwi44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgY2VudGVyXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgcHJlc2VudHMsIGNoYW5nZSB0aGUgcG9zaXRpb24gb2Ygd2F2ZSBlZmZlY3QgdG8gY2VudGVyIG9mIHRoZSB0YXJnZXQgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDjgpLoqK3lrprjgZnjgovjgajjgIHjgqjjg5Xjgqfjgq/jg4jjga7kvY3nva7jgYzopoHntKDjga7nnJ/jgpPkuK3jgYvjgonlp4vjgb7jgorjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0LCB0aGUgcmlwcGxlIGVmZmVjdCB3aWxsIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruWxnuaAp+OBjOioreWumuOBleOCjOOBn+WgtOWQiOOAgeODquODg+ODl+ODq+OCqOODleOCp+OCr+ODiOOBr+eEoeWKueOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9vblRhcCA9IHRoaXMuX29uVGFwLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25Ib2xkID0gdGhpcy5fb25Ib2xkLmJpbmQodGhpcyk7XG4gICAgdGhpcy5fb25EcmFnU3RhcnQgPSB0aGlzLl9vbkRyYWdTdGFydC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uUmVsZWFzZSA9IHRoaXMuX29uUmVsZWFzZS5iaW5kKHRoaXMpO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG5cbiAgICB0aGlzLl9hbmltYXRvciA9IG5ldyBBbmltYXRvcigpO1xuXG4gICAgWydjb2xvcicsICdjZW50ZXInLCAnc3RhcnQtcmFkaXVzJywgJ2JhY2tncm91bmQnLCAnbW9kaWZpZXInXS5mb3JFYWNoKGUgPT4ge1xuICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soZSwgbnVsbCwgdGhpcy5nZXRBdHRyaWJ1dGUoZSkpO1xuICAgIH0pO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgdGhpcy5fd2F2ZSA9IHRoaXMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmlwcGxlX193YXZlJylbMF07XG4gICAgdGhpcy5fYmFja2dyb3VuZCA9IHRoaXMuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncmlwcGxlX19iYWNrZ3JvdW5kJylbMF07XG5cbiAgICBpZiAoISh0aGlzLl9iYWNrZ3JvdW5kICYmIHRoaXMuX3dhdmUpKSB7XG4gICAgICB0aGlzLl93YXZlID0gdXRpbC5jcmVhdGUoJy5yaXBwbGVfX3dhdmUnKTtcbiAgICAgIHRoaXMuX2JhY2tncm91bmQgPSB1dGlsLmNyZWF0ZSgnLnJpcHBsZV9fYmFja2dyb3VuZCcpO1xuXG4gICAgICB0aGlzLmFwcGVuZENoaWxkKHRoaXMuX3dhdmUpO1xuICAgICAgdGhpcy5hcHBlbmRDaGlsZCh0aGlzLl9iYWNrZ3JvdW5kKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBfZ2V0RWZmZWN0U2l6ZSgpIHtcbiAgICBjb25zdCBzaXplcyA9IFsnY292ZXInLCAnY29udGFpbiddO1xuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnc2l6ZScpKSB7XG4gICAgICBjb25zdCBzaXplID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3NpemUnKTtcbiAgICAgIGlmIChzaXplcy5pbmRleE9mKHNpemUpICE9PSAtMSkge1xuICAgICAgICByZXR1cm4gc2l6ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJ2NvdmVyJztcbiAgfVxuXG4gIF9jYWxjdWxhdGVDb29yZHMoZSkge1xuICAgIGxldCB4LCB5LCBoLCB3LCByO1xuICAgIGNvbnN0IGIgPSB0aGlzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgIGNvbnN0IHNpemUgPSB0aGlzLl9nZXRFZmZlY3RTaXplKCk7XG4gICAgY29uc3QgZXJyb3IgPSAoKSA9PiB1dGlsLnRocm93KCdSaXBwbGUgaW52YWxpZCBzdGF0ZScpO1xuXG4gICAgaWYgKHRoaXMuX2NlbnRlcikge1xuICAgICAgeCA9IGIud2lkdGggLyAyO1xuICAgICAgeSA9IGIuaGVpZ2h0IC8gMjtcblxuICAgICAgaWYgKHNpemUgPT09ICdjb3ZlcicpIHtcbiAgICAgICAgciA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5KTtcbiAgICAgIH0gZWxzZSBpZiAoc2l6ZSA9PT0gJ2NvbnRhaW4nKSB7XG4gICAgICAgIHIgPSBNYXRoLm1pbih4LCB5KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGVycm9yKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHggPSAodHlwZW9mIGUuY2xpZW50WCA9PT0gJ251bWJlcicgPyBlLmNsaWVudFggOiBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgpIC0gYi5sZWZ0O1xuICAgICAgeSA9ICh0eXBlb2YgZS5jbGllbnRZID09PSAnbnVtYmVyJyA/IGUuY2xpZW50WSA6IGUuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WSkgLSBiLnRvcDtcbiAgICAgIGggPSBNYXRoLm1heCh5LCBiLmhlaWdodCAtIHkpO1xuICAgICAgdyA9IE1hdGgubWF4KHgsIGIud2lkdGggLSB4KTtcblxuICAgICAgaWYgKHNpemUgPT09ICdjb3ZlcicpIHtcbiAgICAgICAgciA9IE1hdGguc3FydChoICogaCArIHcgKiB3KTtcbiAgICAgIH0gZWxzZSBpZiAoc2l6ZSA9PT0gJ2NvbnRhaW4nKSB7XG4gICAgICAgIHIgPSBNYXRoLm1pbihNYXRoLnJvdW5kKGggLyAyKSwgTWF0aC5yb3VuZCh3IC8gMikpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXJyb3IoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4ge3gsIHksIHJ9O1xuICB9XG5cbiAgX3JpcHBsZUFuaW1hdGlvbihlLCBkdXJhdGlvbiA9IDMwMCkge1xuICAgIGNvbnN0IHtfYW5pbWF0b3IsIF93YXZlLCBfYmFja2dyb3VuZCwgX21pblJ9ID0gdGhpcztcbiAgICBjb25zdCB7eCwgeSwgcn0gPSB0aGlzLl9jYWxjdWxhdGVDb29yZHMoZSk7XG5cbiAgICBfYW5pbWF0b3Iuc3RvcEFsbCh7c3RvcE5leHQ6IDF9KTtcbiAgICBfYW5pbWF0b3IuYW5pbWF0ZShfYmFja2dyb3VuZCwge29wYWNpdHk6IDF9LCBkdXJhdGlvbik7XG5cbiAgICB1dGlsLmV4dGVuZChfd2F2ZS5zdHlsZSwge1xuICAgICAgb3BhY2l0eTogMSxcbiAgICAgIHRvcDogeSAtIF9taW5SICsgJ3B4JyxcbiAgICAgIGxlZnQ6IHggLSBfbWluUiArICdweCcsXG4gICAgICB3aWR0aDogMiAqIF9taW5SICsgJ3B4JyxcbiAgICAgIGhlaWdodDogMiAqIF9taW5SICsgJ3B4J1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIF9hbmltYXRvci5hbmltYXRlKF93YXZlLCB7XG4gICAgICB0b3A6IHkgLSByLFxuICAgICAgbGVmdDogeCAtIHIsXG4gICAgICBoZWlnaHQ6IDIgKiByLFxuICAgICAgd2lkdGg6IDIgKiByXG4gICAgfSwgZHVyYXRpb24pO1xuICB9XG5cbiAgX3VwZGF0ZVBhcmVudCgpIHtcbiAgICBpZiAoIXRoaXMuX3BhcmVudFVwZGF0ZWQgJiYgdGhpcy5wYXJlbnROb2RlKSB7XG4gICAgICBjb25zdCBjb21wdXRlZFN0eWxlID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUodGhpcy5wYXJlbnROb2RlKTtcbiAgICAgIGlmIChjb21wdXRlZFN0eWxlLmdldFByb3BlcnR5VmFsdWUoJ3Bvc2l0aW9uJykgPT09ICdzdGF0aWMnKSB7XG4gICAgICAgIHRoaXMucGFyZW50Tm9kZS5zdHlsZS5wb3NpdGlvbiA9ICdyZWxhdGl2ZSc7XG4gICAgICB9XG4gICAgICB0aGlzLl9wYXJlbnRVcGRhdGVkID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBfb25UYXAoZSkge1xuICAgIGlmICghdGhpcy5kaXNhYmxlZCAmJiAhZS5yaXBwbGUpIHtcbiAgICAgIGUucmlwcGxlID0gdHJ1ZTtcbiAgICAgIHRoaXMuX3VwZGF0ZVBhcmVudCgpO1xuICAgICAgdGhpcy5fcmlwcGxlQW5pbWF0aW9uKGUuZ2VzdHVyZS5zcmNFdmVudCkudGhlbigoKSA9PiB7XG4gICAgICAgIHRoaXMuX2FuaW1hdG9yLmZhZGUodGhpcy5fd2F2ZSk7XG4gICAgICAgIHRoaXMuX2FuaW1hdG9yLmZhZGUodGhpcy5fYmFja2dyb3VuZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBfb25Ib2xkKGUpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQgJiYgIWUucmlwcGxlKSB7XG4gICAgICBlLnJpcHBsZSA9IHRydWU7XG4gICAgICB0aGlzLl91cGRhdGVQYXJlbnQoKTtcbiAgICAgIHRoaXMuX2hvbGRpbmcgPSB0aGlzLl9yaXBwbGVBbmltYXRpb24oZS5nZXN0dXJlLnNyY0V2ZW50LCAyMDAwKTtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3JlbGVhc2UnLCB0aGlzLl9vblJlbGVhc2UpO1xuICAgIH1cbiAgfVxuXG4gIF9vblJlbGVhc2UoZSkge1xuICAgIGlmICh0aGlzLl9ob2xkaW5nICYmICFlLnJpcHBsZSkge1xuICAgICAgZS5yaXBwbGUgPSB0cnVlO1xuICAgICAgdGhpcy5faG9sZGluZy5zcGVlZCgzMDApLnRoZW4oKCkgPT4ge1xuICAgICAgICB0aGlzLl9hbmltYXRvci5zdG9wQWxsKHtzdG9wTmV4dDogdHJ1ZX0pO1xuICAgICAgICB0aGlzLl9hbmltYXRvci5mYWRlKHRoaXMuX3dhdmUpO1xuICAgICAgICB0aGlzLl9hbmltYXRvci5mYWRlKHRoaXMuX2JhY2tncm91bmQpO1xuICAgICAgfSk7XG5cbiAgICAgIHRoaXMuX2hvbGRpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdyZWxlYXNlJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgfVxuXG4gIF9vbkRyYWdTdGFydChlKSB7XG4gICAgaWYgKHRoaXMuX2hvbGRpbmcpIHtcbiAgICAgIHJldHVybiB0aGlzLl9vblJlbGVhc2UoZSk7XG4gICAgfVxuICAgIGlmIChbJ2xlZnQnLCAncmlnaHQnXS5pbmRleE9mKGUuZ2VzdHVyZS5kaXJlY3Rpb24pICE9IC0xKSB7XG4gICAgICB0aGlzLl9vblRhcChlKTtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9wYXJlbnROb2RlID0gdGhpcy5wYXJlbnROb2RlO1xuXG4gICAgaWYgKGludGVybmFsLmNvbmZpZy5hbmltYXRpb25zRGlzYWJsZWQpIHtcbiAgICAgIHRoaXMuZGlzYWJsZWQgPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9wYXJlbnROb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ3RhcCcsIHRoaXMuX29uVGFwKTtcbiAgICAgIHRoaXMuX3BhcmVudE5vZGUuYWRkRXZlbnRMaXN0ZW5lcignaG9sZCcsIHRoaXMuX29uSG9sZCk7XG4gICAgICB0aGlzLl9wYXJlbnROb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ1N0YXJ0KTtcbiAgICB9XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb25zdCBwbiA9IHRoaXMuX3BhcmVudE5vZGUgfHwgdGhpcy5wYXJlbnROb2RlO1xuICAgIHBuLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RhcCcsIHRoaXMuX29uVGFwKTtcbiAgICBwbi5yZW1vdmVFdmVudExpc3RlbmVyKCdob2xkJywgdGhpcy5fb25Ib2xkKTtcbiAgICBwbi5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCB0aGlzLl9vbkRyYWdTdGFydCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydzdGFydC1yYWRpdXMnLCAnY29sb3InLCAnYmFja2dyb3VuZCcsICdjZW50ZXInLCAnY2xhc3MnLCAnbW9kaWZpZXInXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG5cbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ21vZGlmaWVyJzpcbiAgICAgICAgTW9kaWZpZXJVdGlsLm9uTW9kaWZpZXJDaGFuZ2VkKGxhc3QsIGN1cnJlbnQsIHRoaXMsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdzdGFydC1yYWRpdXMnOlxuICAgICAgICB0aGlzLl9taW5SID0gTWF0aC5tYXgoMCwgcGFyc2VGbG9hdChjdXJyZW50KSB8fCAwKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2NvbG9yJzpcbiAgICAgICAgaWYgKGN1cnJlbnQpIHtcbiAgICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fd2F2ZS5zdHlsZS5iYWNrZ3JvdW5kID0gY3VycmVudDtcbiAgICAgICAgICAgIGlmICghdGhpcy5oYXNBdHRyaWJ1dGUoJ2JhY2tncm91bmQnKSkge1xuICAgICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kLnN0eWxlLmJhY2tncm91bmQgPSBjdXJyZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdiYWNrZ3JvdW5kJzpcbiAgICAgICAgaWYgKGN1cnJlbnQgfHwgbGFzdCkge1xuICAgICAgICAgIGlmIChjdXJyZW50ID09PSAnbm9uZScpIHtcbiAgICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQuc2V0QXR0cmlidXRlKCdkaXNhYmxlZCcsICdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kLnN0eWxlLmJhY2tncm91bmQgPSAndHJhbnNwYXJlbnQnO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAgICAgICAgIGlmICh0aGlzLl9iYWNrZ3JvdW5kLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmQuc3R5bGUuYmFja2dyb3VuZCA9IGN1cnJlbnQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ2NlbnRlcic6XG4gICAgICAgIGlmIChuYW1lID09PSAnY2VudGVyJykge1xuICAgICAgICAgIHRoaXMuX2NlbnRlciA9IGN1cnJlbnQgIT0gbnVsbCAmJiBjdXJyZW50ICE9ICdmYWxzZSc7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gIH1cblxuICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzQXR0cmlidXRlKCdkaXNhYmxlZCcpO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLlJpcHBsZSA9IFJpcHBsZUVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1yaXBwbGUnLCBSaXBwbGVFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1yb3dcbiAqIEBjYXRlZ29yeSBncmlkXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJlcHJlc2VudHMgYSByb3cgaW4gdGhlIGdyaWQgc3lzdGVtLiBVc2Ugd2l0aCBgPG9ucy1jb2w+YCB0byBsYXlvdXQgY29tcG9uZW50cy5bL2VuXVxuICogICBbamFd44Kw44Oq44OD44OJ44K344K544OG44Og44Gr44Gm6KGM44KS5a6a576p44GX44G+44GZ44CCb25zLWNvbOOBqOOBqOOCguOBq+S9v+eUqOOBl+OAgeOCs+ODs+ODneODvOODjeODs+ODiOOBrumFjee9ruOBq+S9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gKiBAY29kZXBlbiBHZ3VqQyB7d2lkZX1cbiAqIEBndWlkZSBmZWF0dXJlcy5odG1sXG4gKiAgIFtlbl1MYXlvdXRpbmcgZ3VpZGVbL2VuXVxuICogICBbamFd44Os44Kk44Ki44Km44OI6Kq/5pW0Wy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1jb2xcbiAqICAgW2VuXVRoZSBgPG9ucy1jb2w+YCBjb21wb25lbnQgaXMgdXNlZCBhcyBjaGlsZHJlbiBvZiBgPG9ucy1yb3c+YC5bL2VuXVxuICogICBbamFdb25zLWNvbOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAbm90ZVxuICogICBbZW5dRm9yIEFuZHJvaWQgNC4zIGFuZCBlYXJsaWVyLCBhbmQgaU9TNiBhbmQgZWFybGllciwgd2hlbiB1c2luZyBtaXhlZCBhbGlnbm1lbnQgd2l0aCBvbnMtcm93IGFuZCBvbnMtY29sLCB0aGV5IG1heSBub3QgYmUgZGlzcGxheWVkIGNvcnJlY3RseS4gWW91IGNhbiB1c2Ugb25seSBvbmUgdmVydGljYWwtYWxpZ24uWy9lbl1cbiAqICAgW2phXUFuZHJvaWQgNC4z5Lul5YmN44CB44KC44GX44GP44GvaU9TIDbku6XliY3jga5PU+OBruWgtOWQiOOAgW9ucy1yb3fjgahvbnMtY29s44KS57WE44G/5ZCI44KP44Gb44Gm44Gd44KM44Ge44KM44Gub25zLWNvbOimgee0oOOBrnZlcnRpY2FsLWFsaWdu5bGe5oCn44Gu5YCk44Gr5Yil44CF44Gu5YCk44KS5oyH5a6a44GZ44KL44Go44CB5o+P55S744GM5bSp44KM44KL5aC05ZCI44GM44GC44KK44G+44GZ44CCdmVydGljYWwtYWxpZ27lsZ7mgKfjga7lgKTjgavjga/kuIDjgaTjga7lgKTjgaDjgZHjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtcm93PlxuICogICA8b25zLWNvbCB3aWR0aD1cIjUwcHhcIj48b25zLWljb24gaWNvbj1cImZhLXR3aXR0ZXJcIj48L29ucy1pY29uPjwvb25zLWNvbD5cbiAqICAgPG9ucy1jb2w+VGV4dDwvb25zLWNvbD5cbiAqIDwvb25zLXJvdz5cbiAqL1xuXG4vKipcbiAqIEBhdHRyaWJ1dGUgdmVydGljYWwtYWxpZ25cbiAqIEB0eXBlIHtTdHJpbmd9XG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVNob3J0IGhhbmQgYXR0cmlidXRlIGZvciBhbGlnbmluZyB2ZXJ0aWNhbGx5LiBWYWxpZCB2YWx1ZXMgYXJlIHRvcCwgYm90dG9tLCBhbmQgY2VudGVyLlsvZW5dXG4gKiAgIFtqYV3nuKbjgavmlbTliJfjgZnjgovjgZ/jgoHjgavmjIflrprjgZfjgb7jgZnjgIJ0b3DjgIFib3R0b23jgIFjZW50ZXLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvd0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG59XG5cbm9uc0VsZW1lbnRzLlJvdyA9IFJvd0VsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1yb3cnLCBSb3dFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnc2VnbWVudCc7XG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnc2VnbWVudC0tKicsXG4gICcuc2VnbWVudF9faXRlbSc6ICdzZWdtZW50LS0qX19pdGVtJyxcbiAgJy5zZWdtZW50X19pbnB1dCc6ICdzZWdtZW50LS0qX19pbnB1dCcsXG4gICcuc2VnbWVudF9fYnV0dG9uJzogJ3NlZ21lbnQtLSpfX2J1dHRvbidcbn07XG5cbmNvbnN0IGdlbmVyYXRlSWQgPSAoKCkgPT4ge1xuICBsZXQgaSA9IDA7XG4gIHJldHVybiAoKSA9PiAnb25zLXNlZ21lbnQtZ2VuLScgKyAoaSsrKTtcbn0pKCk7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXNlZ21lbnRcbiAqIEBjYXRlZ29yeSBjb250cm9sXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXU1hdGVyaWFsIERlc2lnbiBzZWdtZW50Wy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFNlZ21lbnQgY29tcG9uZW50LiBVc2UgdGhpcyBjb21wb25lbnQgdG8gaGF2ZSBhIGJ1dHRvbiBiYXIgd2l0aCBhdXRvbWF0aWMgc3R5bGVzIHRoYXQgc3dpdGNoIG9uIGNsaWNrIG9mIGFub3RoZXIgYnV0dG9uLlxuICpcbiAqICAgICBXaWxsIGF1dG9tYXRpY2FsbHkgZGlzcGxheSBhcyBhIE1hdGVyaWFsIERlc2lnbiBzZWdtZW50IG9uIEFuZHJvaWQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gaExheXhcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zZWdtZW50XG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sI21vZGlmaWVycyBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBndWlkZSB0aGVtaW5nLmh0bWwjY3Jvc3MtcGxhdGZvcm0tc3R5bGluZy1hdXRvc3R5bGluZyBbZW5dSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svZW5dW2phXUluZm9ybWF0aW9uIGFib3V0IGNyb3NzIHBsYXRmb3JtIHN0eWxpbmdbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtc2VnbWVudD5cbiAqICAgPG9ucy1idXR0b24+TGFiZWwgMTwvb25zLWJ1dHRvbj5cbiAqICAgPG9ucy1idXR0b24+TGFiZWwgMjwvb25zLWJ1dHRvbj5cbiAqICAgPG9ucy1idXR0b24+TGFiZWwgMzwvb25zLWJ1dHRvbj5cbiAqIDwvb25zLXNlZ21lbnQ+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VnbWVudEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0Y2hhbmdlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlcyBhZnRlciB0aGUgYWN0aXZlIGJ1dHRvbiBpcyBjaGFuZ2VkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtOdW1iZXJ9IGV2ZW50LmluZGV4XG4gICAqICAgW2VuXVRhcHBlZCBidXR0b24gaW5kZXguWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnNlZ21lbnRJdGVtXG4gICAqICAgW2VuXVNlZ21lbnQgaXRlbSBvYmplY3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIHNlZ21lbnQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSB0YWJiYXItaWRcbiAgICogQGluaXRvbmx5XG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlEIG9mIHRoZSB0YWJiYXIgZWxlbWVudCB0byBcImNvbm5lY3RcIiB0byB0aGUgc2VnbWVudC4gTXVzdCBiZSBpbnNpZGUgdGhlIHNhbWUgcGFnZS5bL2VuXVxuICAgKiAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFjdGl2ZS1pbmRleFxuICAgKiBAaW5pdG9ubHlcbiAgICogQGRlZmF1bHQgMFxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JbmRleCBvZiB0aGUgZmlyc3QgYWN0aXZlIGJ1dHRvbiwgb25seSB3b3JrcyBpZiB0aGVyZSBpcyBubyBjb25uZWN0ZWQgdGFiYmFyIChpbiB3aGljaCBjYXNlIHRoZSBhY3RpdmUgdGFiIHNldHMgdGhlIGFjdGl2ZSBidXR0b24pLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgaWYgc2VnbWVudCBzaG91bGQgYmUgZGlzYWJsZWQuWy9lbl1cbiAgICogICBbamFd44Oc44K/44Oz44KS54Sh5Yq55YyW44GZ44KL5aC05ZCI44Gv5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fc2VnbWVudElkID0gZ2VuZXJhdGVJZCgpO1xuICAgIHRoaXMuX3RhYmJhciA9IG51bGw7XG4gICAgdGhpcy5fb25DaGFuZ2UgPSB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uVGFiYmFyUHJlQ2hhbmdlID0gdGhpcy5fb25UYWJiYXJQcmVDaGFuZ2UuYmluZCh0aGlzKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9jb21waWxlKClcbiAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl9sYXN0QWN0aXZlSW5kZXggPSB0aGlzLl90YWJiYXIgPyB0aGlzLl90YWJiYXIuZ2V0QWN0aXZlVGFiSW5kZXgoKSA6IHRoaXMuZ2V0QWN0aXZlQnV0dG9uSW5kZXgoKSk7XG4gICAgfSk7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5hZGQoZGVmYXVsdENsYXNzTmFtZSk7XG5cbiAgICBmb3IgKGxldCBpbmRleCA9IHRoaXMuY2hpbGRyZW4ubGVuZ3RoIC0gMTsgaW5kZXggPj0gMDsgaW5kZXgtLSkge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMuY2hpbGRyZW5baW5kZXhdO1xuICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdzZWdtZW50X19pdGVtJyk7XG5cbiAgICAgIGNvbnN0IGlucHV0ID0gdXRpbC5maW5kQ2hpbGQoaXRlbSwgJy5zZWdtZW50X19pbnB1dCcpIHx8IHV0aWwuY3JlYXRlKCdpbnB1dC5zZWdtZW50X19pbnB1dCcpO1xuICAgICAgaW5wdXQudHlwZSA9ICdyYWRpbyc7XG4gICAgICBpbnB1dC52YWx1ZSA9IGluZGV4O1xuICAgICAgaW5wdXQubmFtZSA9IGlucHV0Lm5hbWUgfHwgdGhpcy5fc2VnbWVudElkO1xuICAgICAgaW5wdXQuY2hlY2tlZCA9ICF0aGlzLmhhc0F0dHJpYnV0ZSgndGFiYmFyLWlkJykgJiYgaW5kZXggPT09IChwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgnYWN0aXZlLWluZGV4JykpIHx8IDApO1xuXG4gICAgICBjb25zdCBidXR0b24gPSB1dGlsLmZpbmRDaGlsZChpdGVtLCAnLnNlZ21lbnRfX2J1dHRvbicpIHx8IHV0aWwuY3JlYXRlKCcuc2VnbWVudF9fYnV0dG9uJyk7XG4gICAgICBpZiAoYnV0dG9uLnBhcmVudEVsZW1lbnQgIT09IGl0ZW0pIHtcbiAgICAgICAgd2hpbGUgKGl0ZW0uZmlyc3RDaGlsZCkge1xuICAgICAgICAgIGJ1dHRvbi5hcHBlbmRDaGlsZChpdGVtLmZpcnN0Q2hpbGQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoaW5wdXQpO1xuICAgICAgaXRlbS5hcHBlbmRDaGlsZChidXR0b24pO1xuICAgIH1cblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ3RhYmJhci1pZCcpKSB7XG4gICAgICAgIGNvbnN0IHBhZ2UgPSB1dGlsLmZpbmRQYXJlbnQodGhpcywgJ29ucy1wYWdlJyk7XG4gICAgICAgIHRoaXMuX3RhYmJhciA9IHBhZ2UgJiYgcGFnZS5xdWVyeVNlbGVjdG9yKCcjJyArIHRoaXMuZ2V0QXR0cmlidXRlKCd0YWJiYXItaWQnKSk7XG4gICAgICAgIGlmICghdGhpcy5fdGFiYmFyIHx8IHRoaXMuX3RhYmJhci50YWdOYW1lICE9PSAnT05TLVRBQkJBUicpIHtcbiAgICAgICAgICB1dGlsLnRocm93KGBObyB0YWJiYXIgd2l0aCBpZCAke3RoaXMuZ2V0QXR0cmlidXRlKCd0YWJiYXItaWQnKX0gd2FzIGZvdW5kLmApO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fdGFiYmFyLnNldEF0dHJpYnV0ZSgnaGlkZS10YWJzJywgJycpO1xuICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5fc2V0Q2hlY2tlZCh0aGlzLl90YWJiYXIuZ2V0QWN0aXZlVGFiSW5kZXgoKSkpO1xuXG4gICAgICAgIHRoaXMuX3RhYmJhci5hZGRFdmVudExpc3RlbmVyKCdwcmVjaGFuZ2UnLCB0aGlzLl9vblRhYmJhclByZUNoYW5nZSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIHRoaXMuX29uQ2hhbmdlKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICBpZiAodGhpcy5fdGFiYmFyKSB7XG4gICAgICAgIHRoaXMuX3RhYmJhci5yZW1vdmVFdmVudExpc3RlbmVyKCdwcmVjaGFuZ2UnLCB0aGlzLl9vblRhYmJhclByZUNoYW5nZSk7XG4gICAgICAgIHRoaXMuX3RhYmJhciA9IG51bGw7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZSk7XG4gIH1cblxuICBfc2V0Q2hlY2tlZChpbmRleCkge1xuICAgIHRoaXMuY2hpbGRyZW5baW5kZXhdLmZpcnN0RWxlbWVudENoaWxkLmNoZWNrZWQgPSB0cnVlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2V0QWN0aXZlQnV0dG9uXG4gICAqIEBzaWduYXR1cmUgc2V0QWN0aXZlQnV0dG9uKGluZGV4LCBbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7TnVtYmVyfSBpbmRleFxuICAgKiAgIFtlbl1CdXR0b24gaW5kZXguWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LCB3b3JrcyBvbmx5IGlmIHRoZXJlIGlzIGEgY29ubmVjdGVkIHRhYmJhci4gU3VwcG9ydHMgdGhlIHNhbWUgb3B0aW9ucyBhcyBgb25zLXRhYmJhcmAncyBgc2V0QWN0aXZlVGFiYCBtZXRob2QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU1ha2UgYnV0dG9uIHdpdGggdGhlIHNwZWNpZmllZCBpbmRleCBhY3RpdmUuIElmIHRoZXJlIGlzIGEgY29ubmVjdGVkIHRhYmJhciBpdCBzaG93cyB0aGUgY29ycmVzcG9uZGluZyB0YWIgcGFnZS4gSW4gdGhpcyBjYXNlIGFuaW1hdGlvbnMgYW5kIHRoZWlyIG9wdGlvbnMgY2FuIGJlIHNwZWNpZmllZCBieSB0aGUgc2Vjb25kIHBhcmFtZXRlci5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgc2VsZWN0ZWQgaW5kZXggb3IgdG8gdGhlIG5ldyBwYWdlIGVsZW1lbnQgaWYgdGhlcmUgaXMgYSBjb25uZWN0ZWQgdGFiYmFyLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXRBY3RpdmVCdXR0b24oaW5kZXgsIG9wdGlvbnMpIHtcbiAgICBpZiAodGhpcy5fdGFiYmFyKSB7XG4gICAgICByZXR1cm4gdGhpcy5fdGFiYmFyLnNldEFjdGl2ZVRhYihpbmRleCwgb3B0aW9ucyk7XG4gICAgfVxuXG4gICAgdGhpcy5fc2V0Q2hlY2tlZChpbmRleCk7XG4gICAgdGhpcy5fcG9zdENoYW5nZShpbmRleCk7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShpbmRleCk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBnZXRBY3RpdmVCdXR0b25JbmRleFxuICAgKiBAc2lnbmF0dXJlIGdldEFjdGl2ZUJ1dHRvbkluZGV4KClcbiAgICogQHJldHVybiB7TnVtYmVyfVxuICAgKiAgIFtlbl1UaGUgaW5kZXggb2YgdGhlIGN1cnJlbnRseSBhY3RpdmUgYnV0dG9uLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIGJ1dHRvbiBpbmRleCBvZiBjdXJyZW50IGFjdGl2ZSBidXR0b24uIElmIGFjdGl2ZSBidXR0b24gaXMgbm90IGZvdW5kLCByZXR1cm5zIC0xLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXRBY3RpdmVCdXR0b25JbmRleCgpIHtcbiAgICBmb3IgKGxldCBpID0gdGhpcy5jaGlsZHJlbi5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgeyAvLyBBcnJheS5maW5kSW5kZXhcbiAgICAgIGlmICh0aGlzLmNoaWxkcmVuW2ldLmZpcnN0RWxlbWVudENoaWxkLmNoZWNrZWQpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIF9vbkNoYW5nZShldmVudCkge1xuICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMuX3RhYmJhclxuICAgICAgPyB0aGlzLl90YWJiYXIuc2V0QWN0aXZlVGFiKHRoaXMuZ2V0QWN0aXZlQnV0dG9uSW5kZXgoKSwgeyByZWplY3Q6IGZhbHNlIH0pXG4gICAgICA6IHRoaXMuX3Bvc3RDaGFuZ2UodGhpcy5nZXRBY3RpdmVCdXR0b25JbmRleCgpKTtcbiAgfVxuXG4gIF9vblRhYmJhclByZUNoYW5nZShldmVudCkge1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICBpZiAoIWV2ZW50LmRldGFpbC5jYW5jZWxlZCkge1xuICAgICAgICB0aGlzLl9zZXRDaGVja2VkKGV2ZW50LmluZGV4KTtcbiAgICAgICAgdGhpcy5fcG9zdENoYW5nZShldmVudC5pbmRleCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfcG9zdENoYW5nZShpbmRleCkge1xuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCAncG9zdGNoYW5nZScsIHtcbiAgICAgIGluZGV4LFxuICAgICAgYWN0aXZlSW5kZXg6IGluZGV4LFxuICAgICAgbGFzdEFjdGl2ZUluZGV4OiB0aGlzLl9sYXN0QWN0aXZlSW5kZXgsXG4gICAgICBzZWdtZW50SXRlbTogdGhpcy5jaGlsZHJlbltpbmRleF1cbiAgICB9KTtcbiAgICB0aGlzLl9sYXN0QWN0aXZlSW5kZXggPSBpbmRleDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBzZWdtZW50IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgc2V0IGRpc2FibGVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdkaXNhYmxlZCcsIHZhbHVlKTtcbiAgfVxuXG4gIGdldCBkaXNhYmxlZCgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVkQXR0cmlidXRlcygpIHtcbiAgICByZXR1cm4gWydjbGFzcycsICdtb2RpZmllciddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwb3N0Y2hhbmdlJ107XG4gIH1cbn1cblxub25zRWxlbWVudHMuU2VnbWVudCA9IFNlZ21lbnRFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc2VnbWVudCcsIFNlZ21lbnRFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdzZWxlY3QtKiBzZWxlY3QtLSonLFxuICAnLnNlbGVjdC1pbnB1dCc6ICdzZWxlY3QtaW5wdXQtLSonXG59O1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3NlbGVjdCc7XG5cbmNvbnN0IElOUFVUX0FUVFJJQlVURVMgPSBbXG4gICdhdXRvZm9jdXMnLFxuICAnZGlzYWJsZWQnLFxuICAnZm9ybScsXG4gICdtdWx0aXBsZScsXG4gICduYW1lJyxcbiAgJ3JlcXVpcmVkJyxcbiAgJ3NpemUnXG5dO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1zZWxlY3RcbiAqIEBjYXRlZ29yeSBmb3JtXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICBbZW5dRGlzcGxheXMgYSBNYXRlcmlhbCBEZXNpZ24gc2VsZWN0IGlucHV0LlsvZW5dXG4gKiAgW2phXVsvamFdXG4gKiBAbW9kaWZpZXIgdW5kZXJiYXJcbiAqICBbZW5dRGlzcGxheXMgYSBob3Jpem9udGFsIGxpbmUgdW5kZXJuZWF0aCBhIHNlbGVjdCBpbnB1dC5bL2VuXVxuICogIFtqYV1bL2phXVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBTZWxlY3QgY29tcG9uZW50LiBJZiB5b3Ugd2FudCB0byBwbGFjZSBhIHNlbGVjdCB3aXRoIGFuIElEIG9mIGBteS1pZGAgb24gYSBwYWdlLCB1c2UgYDxvbnMtc2VsZWN0IHNlbGVjdC1pZD1cIm15LWlkXCI+YC5cbiAqXG4gKiAgICAgVGhlIGNvbXBvbmVudCB3aWxsIGF1dG9tYXRpY2FsbHkgZGlzcGxheSBhcyBhIE1hdGVyaWFsIERlc2lnbiBzZWxlY3Qgb24gQW5kcm9pZC5cbiAqXG4gKiAgICAgTW9zdCBhdHRyaWJ1dGVzIHRoYXQgY2FuIGJlIHVzZWQgZm9yIGEgbm9ybWFsIGA8c2VsZWN0PmAgZWxlbWVudCBjYW4gYWxzbyBiZSB1c2VkIG9uIHRoZSBgPG9ucy1zZWxlY3Q+YCBlbGVtZW50LlxuICogICBbL2VuXVxuICogICBbamFd44K744Os44Kv44OI44Oc44OD44Kv44K544KS6KGo56S644GZ44KL44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CCYHNlbGVjdGAg6KaB57Sg44Gr5L2/55So44Gn44GN44KL5bGe5oCn44Gu5aSa44GP44GMIGBvbnMtc2VsZWN0YCDopoHntKDjgafjgoLliKnnlKjjgafjgY3jgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gaExheXhcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zZWxlY3RcbiAqIEBndWlkZSB0aGVtaW5nLmh0bWwjbW9kaWZpZXJzIFtlbl1Nb3JlIGRldGFpbHMgYWJvdXQgdGhlIGBtb2RpZmllcmAgYXR0cmlidXRlWy9lbl1bamFdbW9kaWZpZXLlsZ7mgKfjga7kvb/jgYTmlrlbL2phXVxuICogQGd1aWRlIHRoZW1pbmcuaHRtbCNjcm9zcy1wbGF0Zm9ybS1zdHlsaW5nLWF1dG9zdHlsaW5nIFtlbl1JbmZvcm1hdGlvbiBhYm91dCBjcm9zcyBwbGF0Zm9ybSBzdHlsaW5nWy9lbl1bamFdSW5mb3JtYXRpb24gYWJvdXQgY3Jvc3MgcGxhdGZvcm0gc3R5bGluZ1svamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zZWxlY3Q+XG4gKiAgIDxvcHRpb24gdmFsdWU9XCIxXCI+MTwvb3B0aW9uPlxuICogICA8b3B0aW9uIHZhbHVlPVwiMlwiPjJuZDwvb3B0aW9uPlxuICogICA8b3B0aW9uIHZhbHVlPVwiM1wiPjNyZCBvcHRpb248L29wdGlvbj5cbiAqIDwvb25zLXNlbGVjdD5cbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWxlY3RFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGF1dG9mb2N1c1xuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlZmF1bHQgZmFsc2VcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dRWxlbWVudCBhdXRvbWF0aWNhbGx5IGdhaW5zIGZvY3VzIG9uIHBhZ2UgbG9hZC5bL2VuXVxuICAgKiAgW2phXeODmuODvOOCuOODreODvOODieaZguOBq+OBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBq+ODleOCqeODvOOCq+OCueOBjOenu+OCi+OCiOOBhuOBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVmYXVsdCBmYWxzZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBzZWxlY3QgaW5wdXQgc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBq+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGZvcm1cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUFzc29jaWF0ZSBhIHNlbGVjdCBlbGVtZW50IHRvIGFuIGV4aXN0aW5nIGZvcm0gb24gdGhlIHBhZ2UsIGV2ZW4gaWYgbm90IG5lc3RlZC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jgrvjg6zjgq/jg4jjg5zjg4Pjgq/jgrnjgpLjgIHmjIflrprjgZfjgZ8gYGZvcm1gIOimgee0oOOBq+e0kOS7mOOBkeOBvuOBmeOAguOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOCkiBgZm9ybWAg6KaB57Sg44Gu5aSW5YG044Gr6YWN572u44GZ44KL6Zqb44Gr5L2/55So44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbXVsdGlwbGVcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZWZhdWx0IGZhbHNlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIGRlZmluZWQsIG11bHRpcGxlIG9wdGlvbnMgY2FuIGJlIHNlbGVjdGVkIGF0IG9uY2UuWy9lbl1cbiAgICogIFtqYV3pgbjmip7ogqLjga7opIfmlbDpgbjmip7jgpLmnInlirnjgavjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBuYW1lXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1OYW1lIHRoZSBzZWxlY3QgZWxlbWVudCwgdXNlZnVsIGZvciBpbnN0YW5jZSBpZiBpdCBpcyBwYXJ0IG9mIGEgZm9ybS5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7jgrvjg6zjgq/jg4jjg5zjg4Pjgq/jgrnjga7lkI3liY3jgpLmjIflrprjgZfjgb7jgZnjgILpgJrluLggYGZvcm1gIOimgee0oOOBqOWFseOBq+S9v+eUqOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHJlcXVpcmVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dTWFrZSB0aGUgc2VsZWN0IGlucHV0IHJlcXVpcmVkIGZvciBzdWJtaXR0aW5nIHRoZSBmb3JtIGl0IGlzIHBhcnQgb2YuWy9lbl1cbiAgICogICBbamFd44GT44Gu44K744Os44Kv44OI44Oc44OD44Kv44K544KS5YWl5Yqb5b+F6aCI44Gr44GZ44KL5aC05ZCI44Gr5oyH5a6a44GX44G+44GZ44CC6YCa5bi4IGBmb3JtYCDopoHntKDjgajlhbHjgavkvb/nlKjjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzZWxlY3QtaWRcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlEIGdpdmVuIHRvIHRoZSBpbm5lciBzZWxlY3QsIHVzZWZ1bCBmb3IgZHluYW1pYyBtYW5pcHVsYXRpb24uWy9lbl1cbiAgICogICBbamFd44GT44Gu44K744Os44Kv44OI44Oc44OD44Kv44K544GM5YaF6YOo44Gr5oyB44GkIHNlbGVjdCDopoHntKDjgavkuI7jgYjjgosgSUQg44KS5oyH5a6a44GX44G+44GZ44CC44K744Os44Kv44OI44Oc44OD44Kv44K544Gu5YaF5a6544KS5YuV55qE44Gr5aSJ5pu044GZ44KL5b+F6KaB44GM44GC44KL5aC05ZCI44Gr5L2/55So44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc2l6ZVxuICAgKiBAdHlwZSB7TnVtYmVyfVxuICAgKiBAZGVmYXVsdCAxXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ib3cgbWFueSBvcHRpb25zIGFyZSBkaXNwbGF5ZWQ7IGlmIHRoZXJlIGFyZSBtb3JlIHRoYW4gdGhlIHNpemUgdGhlbiBhIHNjcm9sbCBhcHBlYXJzIHRvIG5hdmlnYXRlIHRoZW0uWy9lbl1cbiAgICogICBbamFd5LiA5bqm44Gr6KGo56S644GZ44KL6YG45oqe6IKi44Gu5YCL5pWw44KS5oyH5a6a44GX44G+44GZ44CC6YG45oqe6IKi44GM44GT44Gu5bGe5oCn44Gn5oyH5a6a44GX44Gf5YCL5pWw44KI44KK44KC5aSa44GE5aC05ZCI44CB44K544Kv44Ot44O844Or44GM5pyJ5Yq544Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl9jb21waWxlKCkpO1xuXG4gICAgdGhpcy5fZGVyaXZlR2V0dGVycygpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAnY2xhc3MnLCAuLi5JTlBVVF9BVFRSSUJVVEVTXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKElOUFVUX0FUVFJJQlVURVMuaW5kZXhPZihuYW1lKSA+PSAwKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fdXBkYXRlQm91bmRBdHRyaWJ1dGVzKCkpO1xuICAgIH1cbiAgfVxuXG4gIGdldCBfc2VsZWN0KCkge1xuICAgIHJldHVybiB0aGlzLnF1ZXJ5U2VsZWN0b3IoJ3NlbGVjdCcpO1xuICB9XG5cbiAgX3VwZGF0ZUJvdW5kQXR0cmlidXRlcygpIHtcbiAgICBJTlBVVF9BVFRSSUJVVEVTLmZvckVhY2goKGF0dHIpID0+IHtcbiAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZShhdHRyKSkge1xuICAgICAgICB0aGlzLl9zZWxlY3Quc2V0QXR0cmlidXRlKGF0dHIsIHRoaXMuZ2V0QXR0cmlidXRlKGF0dHIpKTtcbiAgICAgIH1cbiAgICAgIGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWxlY3QucmVtb3ZlQXR0cmlidXRlKGF0dHIpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBsZW5ndGhcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU51bWJlciBvZiBvcHRpb25zIGluIHRoZSBzZWxlY3QgYm94LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBq+WQq+OBvuOCjOOCi+mBuOaKnuiCouOBruWAi+aVsOOCkui/lOOBl+OBvuOBmeOAgiBgc2VsZWN0YCDopoHntKBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9wdGlvbnNcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNldmVyYWwgb3B0aW9ucyBmb3IgaGFuZGxpbmcgdGhlIHNlbGVjdCBET00gb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCu+ODrOOCr+ODiOODnOODg+OCr+OCueOBq+WQq+OBvuOCjOOCiyBgb3B0aW9uYCDopoHntKDjga7phY3liJfjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IHNlbGVjdGVkSW5kZXhcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUluZGV4IG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3B0aW9uLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOmBuOaKnuOBleOCjOOBpuOBhOOCi+mBuOaKnuiCouOBruOCpOODs+ODh+ODg+OCr+OCueOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVZhbHVlIG9mIHRoZSBjdXJyZW50bHkgc2VsZWN0ZWQgb3B0aW9uLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOmBuOaKnuOBleOCjOOBpuOBhOOCi+mBuOaKnuiCouOBruWApOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIHRoaXMuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICBjb25zdCBzZWwgPSB0aGlzLl9zZWxlY3QgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2VsZWN0Jyk7XG4gICAgaWYgKCFzZWwuaWQgJiYgdGhpcy5oYXNBdHRyaWJ1dGUoJ3NlbGVjdC1pZCcpKSB7XG4gICAgICBzZWwuaWQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnc2VsZWN0LWlkJyk7XG4gICAgfVxuICAgIHNlbC5jbGFzc0xpc3QuYWRkKCdzZWxlY3QtaW5wdXQnKTtcbiAgICBpZiAoIXRoaXMuX3NlbGVjdCkge1xuICAgICAgdXRpbC5hcnJheUZyb20odGhpcy5jaGlsZE5vZGVzKS5mb3JFYWNoKGVsZW1lbnQgPT4gc2VsLmFwcGVuZENoaWxkKGVsZW1lbnQpKTtcbiAgICAgIHRoaXMuYXBwZW5kQ2hpbGQoc2VsKTtcbiAgICB9XG5cbiAgICBNb2RpZmllclV0aWwuaW5pdE1vZGlmaWVyKHRoaXMsIHNjaGVtZSk7XG4gIH1cblxuICBfZGVyaXZlR2V0dGVycygpIHtcbiAgICBbJ2Rpc2FibGVkJywgJ2xlbmd0aCcsICdtdWx0aXBsZScsICduYW1lJywgJ29wdGlvbnMnLCAnc2VsZWN0ZWRJbmRleCcsICdzaXplJywgJ3ZhbHVlJywgJ2Zvcm0nLCAndHlwZSddXG4gICAgICAuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywga2V5LCB7XG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgZ2V0OiAoKSA9PiB0aGlzLl9zZWxlY3Rba2V5XSxcbiAgICAgICAgICBzZXQ6IFsnZm9ybScsICd0eXBlJ10uaW5kZXhPZihrZXkpID09PSAtMVxuICAgICAgICAgICAgPyB2YWx1ZSA9PiBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fc2VsZWN0W2tleV0gPSB2YWx1ZSlcbiAgICAgICAgICAgIDogdW5kZWZpbmVkXG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gIH1cblxuICBhZGQob3B0aW9uLCBpbmRleCA9IG51bGwpIHtcbiAgICB0aGlzLl9zZWxlY3QuYWRkKG9wdGlvbiwgaW5kZXgpO1xuICB9XG5cbiAgcmVtb3ZlKGluZGV4KSB7XG4gICAgdGhpcy5fc2VsZWN0LnJlbW92ZShpbmRleCk7XG4gIH1cbn1cblxub25zRWxlbWVudHMuU2VsZWN0ID0gU2VsZWN0RWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXNlbGVjdCcsIFNlbGVjdEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ2ZhYiBmYWItLW1pbmkgc3BlZWQtZGlhbF9faXRlbSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICdmYWItLSogc3BlZWQtZGlhbF9faXRlbS0tKidcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXNwZWVkLWRpYWwtaXRlbVxuICogQGNhdGVnb3J5IGNvbnRyb2xcbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dXG4gKiAgICAgVGhpcyBjb21wb25lbnQgZGlzcGxheXMgdGhlIGNoaWxkIGVsZW1lbnRzIG9mIHRoZSBNYXRlcmlhbCBEZXNpZ24gU3BlZWQgZGlhbCBjb21wb25lbnQuXG4gKiAgIFsvZW5dXG4gKiAgIFtqYV1cbiAqICAgICBNYXRlcmlhbCBEZXNpZ27jga5TcGVlZCBkaWFs44Gu5a2Q6KaB57Sg44KS6KGo54++44GZ44KL6KaB57Sg44Gn44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBkWVFZTGdcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zcGVlZC1kaWFsXG4gKiBAc2VlYWxzbyBvbnMtc3BlZWQtZGlhbFxuICogICBbZW5dVGhlIGA8b25zLXNwZWVkLWRpYWw+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXW9ucy1zcGVlZC1kaWFs44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1mYWJcbiAqICAgW2VuXW9ucy1mYWIgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1mYWLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQGV4YW1wbGVcbiAqIDxvbnMtc3BlZWQtZGlhbCBwb3NpdGlvbj1cImxlZnQgYm90dG9tXCI+XG4gKiAgIDxvbnMtZmFiPlxuICogICAgIDxvbnMtaWNvbiBpY29uPVwiZmEtdHdpdHRlclwiPjwvb25zLWljb24+XG4gKiAgIDwvb25zLWZhYj5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+QTwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+Qjwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqICAgPG9ucy1zcGVlZC1kaWFsLWl0ZW0+Qzwvb25zLXNwZWVkLWRpYWwtaXRlbT5cbiAqIDwvb25zLXNwZWVkLWRpYWw+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwZWVkRGlhbEl0ZW1FbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgY29tcG9uZW50LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHJpcHBsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBkZWZpbmVkLCB0aGUgYnV0dG9uIHdpbGwgaGF2ZSBhIHJpcHBsZSBlZmZlY3Qgd2hlbiB0YXBwZWQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ21vZGlmaWVyJywgJ3JpcHBsZScsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIE1vZGlmaWVyVXRpbC5vbk1vZGlmaWVyQ2hhbmdlZChsYXN0LCBjdXJyZW50LCB0aGlzLCBzY2hlbWUpO1xuICAgICAgICB1dGlsLmFkZE1vZGlmaWVyKHRoaXMsICdtaW5pJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmlwcGxlJzpcbiAgICAgICAgdGhpcy5fdXBkYXRlUmlwcGxlKCk7XG4gICAgfVxuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX2JvdW5kT25DbGljaywgZmFsc2UpO1xuICB9XG5cbiAgX3VwZGF0ZVJpcHBsZSgpIHtcbiAgICB1dGlsLnVwZGF0ZVJpcHBsZSh0aGlzKTtcbiAgfVxuXG4gIF9vbkNsaWNrKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICBkZWZhdWx0Q2xhc3NOYW1lLnNwbGl0KC9cXHMrLykuZm9yRWFjaCh0b2tlbiA9PiB0aGlzLmNsYXNzTGlzdC5hZGQodG9rZW4pKTtcblxuICAgIHV0aWwuYWRkTW9kaWZpZXIodGhpcywgJ21pbmknKTtcbiAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcblxuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5TcGVlZERpYWxJdGVtID0gU3BlZWREaWFsSXRlbUVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGVlZC1kaWFsLWl0ZW0nLCBTcGVlZERpYWxJdGVtRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUVsZW1lbnQgZnJvbSAnLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBzdHlsZXIgZnJvbSAnLi4vb25zL3N0eWxlcic7XG5cbmNvbnN0IGRlZmF1bHRDbGFzc05hbWUgPSAnc3BlZWQtZGlhbCc7XG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnc3BlZWQtZGlhbC0tKicsXG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1zcGVlZC1kaWFsXG4gKiBAY2F0ZWdvcnkgY29udHJvbFxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBFbGVtZW50IHRoYXQgZGlzcGxheXMgYSBNYXRlcmlhbCBEZXNpZ24gU3BlZWQgRGlhbG9nIGNvbXBvbmVudC4gSXQgaXMgdXNlZnVsIHdoZW4gdGhlcmUgYXJlIG1vcmUgdGhhbiBvbmUgcHJpbWFyeSBhY3Rpb24gdGhhdCBjYW4gYmUgcGVyZm9ybWVkIGluIGEgcGFnZS5cbiAqXG4gKiAgICAgVGhlIFNwZWVkIGRpYWwgbG9va3MgbGlrZSBhIGA8b25zLWZhYj5gIGVsZW1lbnQgYnV0IHdpbGwgZXhwYW5kIGEgbWVudSB3aGVuIHRhcHBlZC5cbiAqICAgWy9lbl1cbiAqICAgW2phXVsvamFdXG4gKiBAY29kZXBlbiBkWVFZTGdcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9zcGVlZC1kaWFsXG4gKiBAc2VlYWxzbyBvbnMtc3BlZWQtZGlhbC1pdGVtXG4gKiAgIFtlbl1UaGUgYDxvbnMtc3BlZWQtZGlhbC1pdGVtPmAgcmVwcmVzZW50cyBhIG1lbnUgaXRlbS5bL2VuXVxuICogICBbamFdb25zLXNwZWVkLWRpYWwtaXRlbeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtZmFiXG4gKiAgIFtlbl1vbnMtZmFiIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtZmFi44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXNwZWVkLWRpYWwgcG9zaXRpb249XCJsZWZ0IGJvdHRvbVwiPlxuICogICA8b25zLWZhYj5cbiAqICAgICA8b25zLWljb24gaWNvbj1cImZhLXR3aXR0ZXJcIj48L29ucy1pY29uPlxuICogICA8L29ucy1mYWI+XG4gKiAgIDxvbnMtc3BlZWQtZGlhbC1pdGVtPkE8L29ucy1zcGVlZC1kaWFsLWl0ZW0+XG4gKiAgIDxvbnMtc3BlZWQtZGlhbC1pdGVtPkI8L29ucy1zcGVlZC1kaWFsLWl0ZW0+XG4gKiAgIDxvbnMtc3BlZWQtZGlhbC1pdGVtPkM8L29ucy1zcGVlZC1kaWFsLWl0ZW0+XG4gKiA8L29ucy1zcGVlZC1kaWFsPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTcGVlZERpYWxFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgb3BlblxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgbWVudSBpdGVtcyBhcmUgc2hvd24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBjbG9zZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgbWVudSBpdGVtcyBhcmUgaGlkZGVuLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIG1vZGlmaWVyXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgY29tcG9uZW50LlsvZW5dXG4gICAqICAgW2phXeOBk+OBruOCs+ODs+ODneODvOODjeODs+ODiOOBruihqOePvuOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHJpcHBsZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBkZWZpbmVkLCB0aGUgYnV0dG9uIHdpbGwgaGF2ZSBhIHJpcHBsZSBlZmZlY3Qgd2hlbiB0YXBwZWQuWy9lbl1cbiAgICogIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwb3NpdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBTcGVjaWZ5IHRoZSB2ZXJ0aWNhbCBhbmQgaG9yaXpvbnRhbCBwb3NpdGlvbiBvZiB0aGUgY29tcG9uZW50LlxuICAgKiAgICAgSS5lLiB0byBkaXNwbGF5IGl0IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyIHNwZWNpZnkgXCJyaWdodCB0b3BcIi5cbiAgICogICAgIENob29zZSBmcm9tIFwicmlnaHRcIiwgXCJsZWZ0XCIsIFwidG9wXCIgYW5kIFwiYm90dG9tXCIuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDjgZPjga7opoHntKDjgpLooajnpLrjgZnjgovlt6blj7PjgajkuIrkuIvjga7kvY3nva7jgpLmjIflrprjgZfjgb7jgZnjgIJcbiAgICogICAgIOS+i+OBiOOBsOOAgeWPs+S4iuOBq+ihqOekuuOBmeOCi+WgtOWQiOOBq+OBr1wicmlnaHQgdG9wXCLjgpLmjIflrprjgZfjgb7jgZnjgIJcbiAgICogICAgIOW3puWPs+OBqOS4iuS4i+OBruS9jee9ruOBruaMh+WumuOBq+OBr+OAgXJpZ2h044GobGVmdOOAgXRvcOOBqGJvdHRvbeOBjOOBneOCjOOBnuOCjOaMh+WumuOBp+OBjeOBvuOBmeOAglxuICAgKiAgIFsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGRpcmVjdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgZGlyZWN0aW9uIHRoZSBpdGVtcyBhcmUgZGlzcGxheWVkLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwidXBcIiwgXCJkb3duXCIsIFwibGVmdFwiIGFuZCBcInJpZ2h0XCIuWy9lbl1cbiAgICogICBbamFdXG4gICAqICAgICDopoHntKDjgYzooajnpLrjgZnjgovmlrnlkJHjgpLmjIflrprjgZfjgb7jgZnjgIJ1cCwgZG93biwgbGVmdCwgcmlnaHTjgYzmjIflrprjgafjgY3jgb7jgZnjgIJcbiAgICogICBbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeeEoeWKueWMluOBmeOCi+WgtOWQiOOBq+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29tcGlsZSgpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5faXRlbVNob3duID0gZmFsc2U7XG4gICAgdGhpcy5fYm91bmRPbkNsaWNrID0gdGhpcy5fb25DbGljay5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuICAgIGF1dG9TdHlsZS5wcmVwYXJlKHRoaXMpO1xuICAgIHRoaXMuX3VwZGF0ZVJpcHBsZSgpO1xuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcblxuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnZGlyZWN0aW9uJykpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZURpcmVjdGlvbih0aGlzLmdldEF0dHJpYnV0ZSgnZGlyZWN0aW9uJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl91cGRhdGVEaXJlY3Rpb24oJ3VwJyk7XG4gICAgfVxuXG4gICAgdGhpcy5fdXBkYXRlUG9zaXRpb24oKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ2NsYXNzJywgJ21vZGlmaWVyJywgJ3JpcHBsZScsICdkaXJlY3Rpb24nLCAncG9zaXRpb24nXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdjbGFzcyc6XG4gICAgICAgIHV0aWwucmVzdG9yZUNsYXNzKHRoaXMsIGRlZmF1bHRDbGFzc05hbWUsIHNjaGVtZSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbW9kaWZpZXInOlxuICAgICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdyaXBwbGUnOlxuICAgICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4gdGhpcy5fdXBkYXRlUmlwcGxlKCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2RpcmVjdGlvbic6XG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB0aGlzLl91cGRhdGVEaXJlY3Rpb24oY3VycmVudCkpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3Bvc2l0aW9uJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCkpO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrLCBmYWxzZSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrLCBmYWxzZSk7XG4gIH1cblxuICBnZXQgaXRlbXMoKSB7XG4gICAgcmV0dXJuIHV0aWwuYXJyYXlGcm9tKHRoaXMucXVlcnlTZWxlY3RvckFsbCgnb25zLXNwZWVkLWRpYWwtaXRlbScpKTtcbiAgfVxuXG4gIGdldCBfZmFiKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLWZhYicpO1xuICB9XG5cbiAgX29uQ2xpY2soZSkge1xuICAgIGlmICh0aGlzLm9uQ2xpY2spIHtcbiAgICAgIHRoaXMub25DbGljay5hcHBseSh0aGlzKTtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICB9IGVsc2UgaWYgKCF0aGlzLmRpc2FibGVkICYmIHRoaXMudmlzaWJsZSkge1xuICAgICAgcmV0dXJuIHRoaXMudG9nZ2xlSXRlbXMoKTtcbiAgICB9XG4gIH1cblxuICBfc2hvdygpIHtcbiAgICBpZiAoIXRoaXMuaW5saW5lKSB7XG4gICAgICByZXR1cm4gdGhpcy5zaG93KCk7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGlmICghdGhpcy5pbmxpbmUpIHtcbiAgICAgICAgc2V0SW1tZWRpYXRlKCgpID0+IHRoaXMuaGlkZSgpLnRoZW4ocmVzb2x2ZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cblxuICBfdXBkYXRlUmlwcGxlKCkge1xuICAgIGlmICh0aGlzLl9mYWIpIHtcbiAgICAgIHRoaXMuaGFzQXR0cmlidXRlKCdyaXBwbGUnKSA/IHRoaXMuX2ZhYi5zZXRBdHRyaWJ1dGUoJ3JpcHBsZScsICcnKSA6IHRoaXMuX2ZhYi5yZW1vdmVBdHRyaWJ1dGUoJ3JpcHBsZScpO1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVEaXJlY3Rpb24oZGlyZWN0aW9uKSB7XG4gICAgY29uc3QgY2hpbGRyZW4gPSB0aGlzLml0ZW1zO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgIHN0eWxlcihjaGlsZHJlbltpXSwge1xuICAgICAgICB0cmFuc2l0aW9uRGVsYXk6IDI1ICogaSArICdtcycsXG4gICAgICAgIGJvdHRvbTogJ2F1dG8nLFxuICAgICAgICByaWdodDogJ2F1dG8nLFxuICAgICAgICB0b3A6ICdhdXRvJyxcbiAgICAgICAgbGVmdDogJ2F1dG8nXG4gICAgICB9KTtcbiAgICB9XG4gICAgc3dpdGNoIChkaXJlY3Rpb24pIHtcbiAgICAgIGNhc2UgJ3VwJzpcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLmJvdHRvbSA9IDcyICsgNTYgKiBpICsgJ3B4JztcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS5yaWdodCA9ICc4cHgnO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnZG93bic6XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS50b3AgPSA3MiArIDU2ICogaSArICdweCc7XG4gICAgICAgICAgY2hpbGRyZW5baV0uc3R5bGUubGVmdCA9ICc4cHgnO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbGVmdCc6XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS50b3AgPSAnOHB4JztcbiAgICAgICAgICBjaGlsZHJlbltpXS5zdHlsZS5yaWdodCA9IDcyICsgNTYgKiBpICsgJ3B4JztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3JpZ2h0JzpcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLnRvcCA9ICc4cHgnO1xuICAgICAgICAgIGNoaWxkcmVuW2ldLnN0eWxlLmxlZnQgPSA3MiArIDU2ICogaSArICdweCc7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB1dGlsLnRocm93KCdBcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB1cCwgZG93biwgbGVmdCBvciByaWdodC4nKTtcbiAgICB9XG4gIH1cblxuICBfdXBkYXRlUG9zaXRpb24oKSB7XG4gICAgY29uc3QgcG9zaXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICB0aGlzLmNsYXNzTGlzdC5yZW1vdmUoXG4gICAgICAnZmFiLS10b3BfX2xlZnQnLFxuICAgICAgJ2ZhYi0tYm90dG9tX19yaWdodCcsXG4gICAgICAnZmFiLS1ib3R0b21fX2xlZnQnLFxuICAgICAgJ2ZhYi0tdG9wX19yaWdodCcsXG4gICAgICAnZmFiLS10b3BfX2NlbnRlcicsXG4gICAgICAnZmFiLS1ib3R0b21fX2NlbnRlcicpO1xuICAgIHN3aXRjaCAocG9zaXRpb24pIHtcbiAgICAgIGNhc2UgJ3RvcCByaWdodCc6XG4gICAgICBjYXNlICdyaWdodCB0b3AnOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tdG9wX19yaWdodCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ3RvcCBsZWZ0JzpcbiAgICAgIGNhc2UgJ2xlZnQgdG9wJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLXRvcF9fbGVmdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JvdHRvbSByaWdodCc6XG4gICAgICBjYXNlICdyaWdodCBib3R0b20nOlxuICAgICAgICB0aGlzLmNsYXNzTGlzdC5hZGQoJ2ZhYi0tYm90dG9tX19yaWdodCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2JvdHRvbSBsZWZ0JzpcbiAgICAgIGNhc2UgJ2xlZnQgYm90dG9tJzpcbiAgICAgICAgdGhpcy5jbGFzc0xpc3QuYWRkKCdmYWItLWJvdHRvbV9fbGVmdCcpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NlbnRlciB0b3AnOlxuICAgICAgY2FzZSAndG9wIGNlbnRlcic6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS10b3BfX2NlbnRlcicpO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2NlbnRlciBib3R0b20nOlxuICAgICAgY2FzZSAnYm90dG9tIGNlbnRlcic6XG4gICAgICAgIHRoaXMuY2xhc3NMaXN0LmFkZCgnZmFiLS1ib3R0b21fX2NlbnRlcicpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIF9nZXRUcmFuc2xhdGUoKSB7XG4gICAgY29uc3QgaXNCb3R0b20gPSAodGhpcy5nZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJykgfHwgJycpLmluZGV4T2YoJ2JvdHRvbScpID49IDA7XG4gICAgY29uc3QgdHJhbnNsYXRlID0gaXNCb3R0b20gPyBgdHJhbnNsYXRlM2QoMHB4LCAtJHt1dGlsLmdsb2JhbHMuZmFiT2Zmc2V0IHx8IDB9cHgsIDBweCkgYCA6ICcnO1xuICAgIHJldHVybiB0cmFuc2xhdGU7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzaG93XG4gICAqIEBzaWduYXR1cmUgc2hvdygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBzcGVlZCBkaWFsLlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgc2hvdygpIHtcbiAgICB0aGlzLl9mYWIuc2hvdygpO1xuICAgIHN0eWxlcih0aGlzLCB7IHRyYW5zZm9ybTogdGhpcy5fZ2V0VHJhbnNsYXRlIH0pO1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVcbiAgICogQHNpZ25hdHVyZSBoaWRlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhpZGUgdGhlIHNwZWVkIGRpYWwuWy9lbl1cbiAgICogICBbamFdU3BlZWQgZGlhbOOCkumdnuihqOekuuOBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuICBoaWRlKCkge1xuICAgIHJldHVybiB0aGlzLmhpZGVJdGVtcygpLnRoZW4oKCk9PiB0aGlzLl9mYWIuaGlkZSgpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHNob3dJdGVtc1xuICAgKiBAc2lnbmF0dXJlIHNob3dJdGVtcygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBzcGVlZCBkaWFsIGl0ZW1zLlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjga7lrZDopoHntKDjgpLooajnpLrjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgc2hvd0l0ZW1zKCkge1xuICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnZGlyZWN0aW9uJykpIHtcbiAgICAgIHRoaXMuX3VwZGF0ZURpcmVjdGlvbih0aGlzLmdldEF0dHJpYnV0ZSgnZGlyZWN0aW9uJykpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl91cGRhdGVEaXJlY3Rpb24oJ3VwJyk7XG4gICAgfVxuXG4gICAgbGV0IHRvdGFsRGVsYXkgPSAwO1xuICAgIGlmICghdGhpcy5faXRlbVNob3duKSB7XG4gICAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuaXRlbXM7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRlbGF5ID0gMjUgKiBpO1xuICAgICAgICB0b3RhbERlbGF5ICs9IGRlbGF5O1xuICAgICAgICBzdHlsZXIoY2hpbGRyZW5baV0sIHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICdzY2FsZSgxKScsXG4gICAgICAgICAgdHJhbnNpdGlvbkRlbGF5OiBkZWxheSArICdtcydcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICB0b3RhbERlbGF5ICs9IDUwO1xuXG4gICAgICB0aGlzLl9pdGVtU2hvd24gPSB0cnVlO1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdvcGVuJyk7XG4gICAgfVxuXG4gICAgY29uc3QgZGVmZXJyZWQgPSB1dGlsLmRlZmVyKCk7XG4gICAgc2V0VGltZW91dChkZWZlcnJlZC5yZXNvbHZlLCB0b3RhbERlbGF5KTtcbiAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVJdGVtc1xuICAgKiBAc2lnbmF0dXJlIGhpZGVJdGVtcygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1IaWRlIHRoZSBzcGVlZCBkaWFsIGl0ZW1zLlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjga7lrZDopoHntKDjgpLpnZ7ooajnpLrjgavjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgaGlkZUl0ZW1zKCkge1xuICAgIGxldCB0b3RhbERlbGF5ID0gMDtcbiAgICBpZiAodGhpcy5faXRlbVNob3duKSB7XG4gICAgICBjb25zdCBjaGlsZHJlbiA9IHRoaXMuaXRlbXM7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoaWxkcmVuLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRlbGF5ID0gMjUgKiAoY2hpbGRyZW4ubGVuZ3RoIC0gaSk7XG4gICAgICAgIHRvdGFsRGVsYXkgKz0gZGVsYXk7XG4gICAgICAgIHN0eWxlcihjaGlsZHJlbltpXSwge1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3NjYWxlKDApJyxcbiAgICAgICAgICB0cmFuc2l0aW9uRGVsYXk6IGRlbGF5ICsgJ21zJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIHRvdGFsRGVsYXkgKz0gNTA7XG5cbiAgICAgIHRoaXMuX2l0ZW1TaG93biA9IGZhbHNlO1xuICAgICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdjbG9zZScpO1xuICAgIH1cblxuICAgIGNvbnN0IGRlZmVycmVkID0gdXRpbC5kZWZlcigpO1xuICAgIHNldFRpbWVvdXQoZGVmZXJyZWQucmVzb2x2ZSwgdG90YWxEZWxheSk7XG4gICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIHNldCBkaXNhYmxlZCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSkge1xuICAgICAgdGhpcy5oaWRlSXRlbXMoKTtcbiAgICB9XG4gICAgdXRpbC5hcnJheUZyb20odGhpcy5jaGlsZHJlbikuZm9yRWFjaChlID0+IHtcbiAgICAgIHV0aWwubWF0Y2goZSwgJy5mYWInKSAmJiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZShlLCAnZGlzYWJsZWQnLCB2YWx1ZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gdXRpbC50b2dnbGVBdHRyaWJ1dGUodGhpcywgJ2Rpc2FibGVkJywgdmFsdWUpO1xuICB9XG5cbiAgZ2V0IGRpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmhhc0F0dHJpYnV0ZSgnZGlzYWJsZWQnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgaW5saW5lXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgaW5saW5lIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg7Pjg6njgqTjg7PopoHntKDjga7loLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cbiAgZ2V0IGlubGluZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ2lubGluZScpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLl9mYWIudmlzaWJsZSAmJiB0aGlzLnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGlzT3BlblxuICAgKiBAc2lnbmF0dXJlIGlzT3BlbigpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SZXR1cm5zIHdoZXRoZXIgdGhlIG1lbnUgaXMgb3BlbiBvciBub3QuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGlzT3BlbigpIHtcbiAgICByZXR1cm4gdGhpcy5faXRlbVNob3duO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgdG9nZ2xlXG4gICAqIEBzaWduYXR1cmUgdG9nZ2xlKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRvZ2dsZSB2aXNpYmlsaXR5LlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjga7ooajnpLrpnZ7ooajnpLrjgpLliIfjgormm7/jgYjjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgdG9nZ2xlKCkge1xuICAgIHJldHVybiB0aGlzLnZpc2libGUgPyB0aGlzLmhpZGUoKSA6IHRoaXMuc2hvdygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgdG9nZ2xlSXRlbXNcbiAgICogQHNpZ25hdHVyZSB0b2dnbGVJdGVtcygpXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1Ub2dnbGUgaXRlbSB2aXNpYmlsaXR5LlsvZW5dXG4gICAqICAgW2phXVNwZWVkIGRpYWzjga7lrZDopoHntKDjga7ooajnpLrpnZ7ooajnpLrjgpLliIfjgormm7/jgYjjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgdG9nZ2xlSXRlbXMoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNPcGVuKCkgPyB0aGlzLmhpZGVJdGVtcygpIDogdGhpcy5zaG93SXRlbXMoKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgZXZlbnRzKCkge1xuICAgIHJldHVybiBbJ29wZW4nLCAnY2xvc2UnXTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5TcGVlZERpYWwgPSBTcGVlZERpYWxFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3BlZWQtZGlhbCcsIFNwZWVkRGlhbEVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IHtQYWdlTG9hZGVyLCBkZWZhdWx0UGFnZUxvYWRlcn0gZnJvbSAnLi4vb25zL3BhZ2UtbG9hZGVyJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuXG5jb25zdCByZXdyaXRhYmxlcyA9IHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7RWxlbWVudH0gZWxlbWVudFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgcmVhZHkoZWxlbWVudCwgY2FsbGJhY2spIHtcbiAgICBzZXRJbW1lZGlhdGUoY2FsbGJhY2spO1xuICB9XG59O1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy1zcGxpdHRlci1jb250ZW50XG4gKiBAY2F0ZWdvcnkgbWVudVxuICogQGRlc2NyaXB0aW9uXG4gKiAgW2VuXVxuICogICAgVGhlIGA8b25zLXNwbGl0dGVyLWNvbnRlbnQ+YCBlbGVtZW50IGlzIHVzZWQgYXMgYSBjaGlsZCBlbGVtZW50IG9mIGA8b25zLXNwbGl0dGVyPmAuXG4gKlxuICogICAgSXQgY29udGFpbnMgdGhlIG1haW4gY29udGVudCBvZiB0aGUgcGFnZSB3aGlsZSBgPG9ucy1zcGxpdHRlci1zaWRlPmAgY29udGFpbnMgdGhlIGxpc3QuXG4gKiAgWy9lbl1cbiAqICBbamFdb25zLXNwbGl0dGVyLWNvbnRlbnTopoHntKDjga/jgIFvbnMtc3BsaXR0ZXLopoHntKDjga7lrZDopoHntKDjgajjgZfjgabliKnnlKjjgZfjgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gck9RT01MXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3BsaXR0ZXJcbiAqIEBndWlkZSBmdW5kYW1lbnRhbHMuaHRtbCNtYW5hZ2luZy1wYWdlc1xuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQHNlZWFsc28gb25zLXNwbGl0dGVyXG4gKiAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlcj5gIGNvbXBvbmVudCBpcyB0aGUgcGFyZW50IGVsZW1lbnQuWy9lbl1cbiAqICBbamFdb25zLXNwbGl0dGVy44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy1zcGxpdHRlci1zaWRlXG4gKiAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlci1zaWRlPmAgY29tcG9uZW50IGNvbnRhaW5zIHRoZSBtZW51LlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlci1zaWRl44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXNwbGl0dGVyPlxuICogICA8b25zLXNwbGl0dGVyLWNvbnRlbnQ+XG4gKiAgICAgLi4uXG4gKiAgIDwvb25zLXNwbGl0dGVyLWNvbnRlbnQ+XG4gKlxuICogICA8b25zLXNwbGl0dGVyLXNpZGUgc2lkZT1cImxlZnRcIiB3aWR0aD1cIjgwJVwiIGNvbGxhcHNlPlxuICogICAgIC4uLlxuICogICA8L29ucy1zcGxpdHRlci1zaWRlPlxuICogPC9vbnMtc3BsaXR0ZXI+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwbGl0dGVyQ29udGVudEVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcGFnZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBUaGUgdXJsIG9mIHRoZSBjb250ZW50IHBhZ2UuIElmIHRoaXMgYXR0cmlidXRlIGlzIHVzZWQgdGhlIGNvbnRlbnQgd2lsbCBiZSBsb2FkZWQgZnJvbSBhIGA8dGVtcGxhdGU+YCB0YWcgb3IgYSByZW1vdGUgZmlsZS5cbiAgICpcbiAgICogICAgIEl0IGlzIGFsc28gcG9zc2libGUgdG8gcHV0IGA8b25zLXBhZ2U+YCBlbGVtZW50IGFzIGEgY2hpbGQgb2YgdGhlIGVsZW1lbnQuXG4gICAqICAgWy9lbl1cbiAgICogICBbamFdb25zLXNwbGl0dGVyLWNvbnRlbnTopoHntKDjgavooajnpLrjgZnjgovjg5rjg7zjgrjjga5VUkzjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fcGFnZSA9IG51bGw7XG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IGRlZmF1bHRQYWdlTG9hZGVyO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHJld3JpdGFibGVzLnJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgY29uc3QgcGFnZSA9IHRoaXMuX2dldFBhZ2VUYXJnZXQoKTtcblxuICAgICAgICBpZiAocGFnZSkge1xuICAgICAgICAgIHRoaXMubG9hZChwYWdlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAoIXV0aWwubWF0Y2godGhpcy5wYXJlbnROb2RlLCAnb25zLXNwbGl0dGVyJykpIHtcbiAgICAgIHV0aWwudGhyb3coJ1wib25zLXNwbGl0dGVyLWNvbnRlbnRcIiBtdXN0IGhhdmUgXCJvbnMtc3BsaXR0ZXJcIiBhcyBwYXJlbnQnKTtcbiAgICB9XG4gIH1cblxuICBfZ2V0UGFnZVRhcmdldCgpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGFnZScpO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7fVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHBhZ2VcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIHBhZ2UgdG8gbG9hZCBpbiB0aGUgc3BsaXR0ZXIgY29udGVudC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDlhoXjgavooajnpLrjgZnjgovjg5rjg7zjgrjjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2U7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHsqfSBwYWdlXG4gICAqL1xuICBzZXQgcGFnZShwYWdlKSB7XG4gICAgdGhpcy5fcGFnZSA9IHBhZ2U7XG4gIH1cblxuICBnZXQgX2NvbnRlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5bMF07XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHBhZ2VMb2FkZXJcbiAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dUGFnZSBlbGVtZW50IGxvYWRlZCBpbiB0aGUgc3BsaXR0ZXIgY29udGVudC5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDlhoXjgavooajnpLrjgZnjgovjg5rjg7zjgrjjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2VMb2FkZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2VMb2FkZXI7XG4gIH1cblxuICBzZXQgcGFnZUxvYWRlcihsb2FkZXIpIHtcbiAgICBpZiAoIShsb2FkZXIgaW5zdGFuY2VvZiBQYWdlTG9hZGVyKSkge1xuICAgICAgdXRpbC50aHJvd1BhZ2VMb2FkZXIoKTtcbiAgICB9XG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IGxvYWRlcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGxvYWRcbiAgICogQHNpZ25hdHVyZSBsb2FkKHBhZ2UsIFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBhZ2UsIFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gQ2FuIGJlIGVpdGhlciBhbiBIVE1MIGRvY3VtZW50IG9yIGFuIGA8dGVtcGxhdGU+YCBpZC5bL2VuXVxuICAgKiAgIFtqYV1wYWdl44GuVVJM44GL44CBYDx0ZW1wbGF0ZT5g44Gn5a6j6KiA44GX44Gf44OG44Oz44OX44Os44O844OI44GuaWTlsZ7mgKfjga7lgKTjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IFtvcHRpb25zLmNhbGxiYWNrXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU2hvdyB0aGUgcGFnZSBzcGVjaWZpZWQgaW4gYHBhZ2VgIGluIHRoZSBjb250ZW50LlsvZW5dXG4gICAqICAgW2phXeaMh+WumuOBl+OBn1VSTOOCkuODoeOCpOODs+ODmuODvOOCuOOCkuiqreOBv+i+vOOBv+OBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBuZXcgYDxvbnMtcGFnZT5gIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1gPG9ucy1wYWdlPmDopoHntKDjgpLop6PmsbrjgZnjgotQcm9taXNl44Kq44OW44K444Kn44Kv44OI44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICovXG4gIGxvYWQocGFnZSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgdGhpcy5fcGFnZSA9IHBhZ2U7XG4gICAgY29uc3QgY2FsbGJhY2sgPSBvcHRpb25zLmNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XG5cbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICBsZXQgb2xkQ29udGVudCA9IHRoaXMuX2NvbnRlbnQgfHwgbnVsbDtcblxuICAgICAgdGhpcy5fcGFnZUxvYWRlci5sb2FkKHtwYWdlLCBwYXJlbnQ6IHRoaXN9LCBwYWdlRWxlbWVudCA9PiB7XG4gICAgICAgIGlmIChvbGRDb250ZW50KSB7XG4gICAgICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQob2xkQ29udGVudCk7XG4gICAgICAgICAgb2xkQ29udGVudCA9IG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBzZXRJbW1lZGlhdGUoKCkgPT4gdGhpcy5fc2hvdygpKTtcblxuICAgICAgICBjYWxsYmFjayhwYWdlRWxlbWVudCk7XG4gICAgICAgIHJlc29sdmUocGFnZUVsZW1lbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBfc2hvdygpIHtcbiAgICBpZiAodGhpcy5fY29udGVudCkge1xuICAgICAgdGhpcy5fY29udGVudC5fc2hvdygpO1xuICAgIH1cbiAgfVxuXG4gIF9oaWRlKCkge1xuICAgIGlmICh0aGlzLl9jb250ZW50KSB7XG4gICAgICB0aGlzLl9jb250ZW50Ll9oaWRlKCk7XG4gICAgfVxuICB9XG5cbiAgX2Rlc3Ryb3koKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRlbnQpIHtcbiAgICAgIHRoaXMuX3BhZ2VMb2FkZXIudW5sb2FkKHRoaXMuX2NvbnRlbnQpO1xuICAgIH1cbiAgICB0aGlzLnJlbW92ZSgpO1xuICB9XG5cbiAgc3RhdGljIGdldCByZXdyaXRhYmxlcygpIHtcbiAgICByZXR1cm4gcmV3cml0YWJsZXM7XG4gIH1cbn1cblxub25zRWxlbWVudHMuU3BsaXR0ZXJDb250ZW50ID0gU3BsaXR0ZXJDb250ZW50RWxlbWVudDtcbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnb25zLXNwbGl0dGVyLWNvbnRlbnQnLCBTcGxpdHRlckNvbnRlbnRFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwbGl0dGVyTWFza0VsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuX2JvdW5kT25DbGljayA9IHRoaXMuX29uQ2xpY2suYmluZCh0aGlzKTtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgaWYgKHRoaXMucGFyZW50Tm9kZS5fc2lkZXMuZXZlcnkoc2lkZSA9PiBzaWRlLm1vZGUgPT09ICdzcGxpdCcpKSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdzdHlsZScsICdkaXNwbGF5OiBub25lICFpbXBvcnRhbnQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIF9vbkNsaWNrKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMub25DbGljayBpbnN0YW5jZW9mIEZ1bmN0aW9uKSB7XG4gICAgICB0aGlzLm9uQ2xpY2soKTtcbiAgICB9IGVsc2UgaWYgKHV0aWwubWF0Y2godGhpcy5wYXJlbnROb2RlLCAnb25zLXNwbGl0dGVyJykpIHtcbiAgICAgIHRoaXMucGFyZW50Tm9kZS5fc2lkZXMuZm9yRWFjaChzaWRlID0+IHNpZGUuY2xvc2UoJ2xlZnQnKS5jYXRjaCgoKSA9PiB7fSkpO1xuICAgIH1cbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fYm91bmRPbkNsaWNrKTtcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9ib3VuZE9uQ2xpY2spO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLlNwbGl0dGVyTWFzayA9IFNwbGl0dGVyTWFza0VsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGxpdHRlci1tYXNrJywgU3BsaXR0ZXJNYXNrRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgc3R5bGVyIGZyb20gJy4uLy4uL29ucy9zdHlsZXInO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5pbXBvcnQgQmFzZUFuaW1hdG9yIGZyb20gJy4uLy4uL29ucy9iYXNlLWFuaW1hdG9yJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3BsaXR0ZXJBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdjdWJpYy1iZXppZXIoLjEsIC43LCAuMSwgMSknLCBkdXJhdGlvbiA9IDAuMywgZGVsYXkgPSAwfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGR1cmF0aW9uLCBkZWxheSB9KTtcbiAgfVxuXG4gIHVwZGF0ZU9wdGlvbnMob3B0aW9ucyA9IHt9KSB7XG4gICAgdXRpbC5leHRlbmQodGhpcywge1xuICAgICAgdGltaW5nOiB0aGlzLnRpbWluZywgZHVyYXRpb246IHRoaXMuZHVyYXRpb24sIGRlbGF5OiB0aGlzLmRlbGF5XG4gICAgfSwgb3B0aW9ucyk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtFbGVtZW50fSBzaWRlRWxlbWVudFxuICAgKi9cbiAgYWN0aXZhdGUoc2lkZUVsZW1lbnQpIHtcbiAgICBjb25zdCBzcGxpdHRlciA9IHNpZGVFbGVtZW50LnBhcmVudE5vZGU7XG5cbiAgICBjb250ZW50UmVhZHkoc3BsaXR0ZXIsICgpID0+IHtcbiAgICAgIHRoaXMuX3NpZGUgPSBzaWRlRWxlbWVudDtcbiAgICAgIHRoaXMuX29wcG9zaXRlU2lkZSA9IHNwbGl0dGVyLnJpZ2h0ICE9PSBzaWRlRWxlbWVudCAmJiBzcGxpdHRlci5yaWdodCB8fCBzcGxpdHRlci5sZWZ0ICE9PSBzaWRlRWxlbWVudCAmJiBzcGxpdHRlci5sZWZ0O1xuICAgICAgdGhpcy5fY29udGVudCA9IHNwbGl0dGVyLmNvbnRlbnQ7XG4gICAgICB0aGlzLl9tYXNrID0gc3BsaXR0ZXIubWFzaztcbiAgICB9KTtcbiAgfVxuXG4gIGRlYWN0aXZhdGUoKSB7XG4gICAgdGhpcy5jbGVhclRyYW5zaXRpb24oKTtcbiAgICB0aGlzLl9tYXNrICYmIHRoaXMuY2xlYXJNYXNrKCk7XG4gICAgdGhpcy5fY29udGVudCA9IHRoaXMuX3NpZGUgPSB0aGlzLl9vcHBvc2l0ZVNpZGUgPSB0aGlzLl9tYXNrID0gbnVsbDtcbiAgfVxuXG4gIGdldCBtaW51cygpIHtcbiAgICByZXR1cm4gdGhpcy5fc2lkZS5zaWRlID09PSAncmlnaHQnID8gJy0nIDogJyc7XG4gIH1cblxuICBjbGVhclRyYW5zaXRpb24oKSB7XG4gICAgJ3NpZGUgbWFzayBjb250ZW50Jy5zcGxpdCgvXFxzKy8pXG4gICAgICAuZm9yRWFjaChlID0+IHRoaXNbJ18nICsgZV0gJiYgc3R5bGVyLmNsZWFyKHRoaXNbJ18nICsgZV0sICd0cmFuc2Zvcm0gdHJhbnNpdGlvbicpKVxuICB9XG5cbiAgY2xlYXJNYXNrKCkge1xuICAgIC8vIENoZWNrIGlmIHRoZSBvdGhlciBzaWRlIG5lZWRzIHRoZSBtYXNrIGJlZm9yZSBjbGVhcmluZ1xuICAgIGlmICghdGhpcy5fb3Bwb3NpdGVTaWRlIHx8IHRoaXMuX29wcG9zaXRlU2lkZS5tb2RlID09PSAnc3BsaXQnIHx8ICF0aGlzLl9vcHBvc2l0ZVNpZGUuaXNPcGVuKSB7XG4gICAgICB0aGlzLl9tYXNrLnN0eWxlLm9wYWNpdHkgPSAnJztcbiAgICAgIHRoaXMuX21hc2suc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGRpc3RhbmNlXG4gICAqL1xuICB0cmFuc2xhdGUoZGlzdGFuY2UpIHtcblxuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIG9wZW4oZG9uZSkge1xuICAgIGRvbmUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBjbG9zZShkb25lKSB7XG4gICAgZG9uZSgpO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IFNwbGl0dGVyQW5pbWF0b3IgZnJvbSAnLi9hbmltYXRvci5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE92ZXJsYXlTcGxpdHRlckFuaW1hdG9yIGV4dGVuZHMgU3BsaXR0ZXJBbmltYXRvciB7XG5cbiAgdHJhbnNsYXRlKGRpc3RhbmNlKSB7XG4gICAgdGhpcy5fbWFzay5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsgLy8gQXZvaWQgY29udGVudCBjbGlja3NcblxuICAgIGFuaW1pdCh0aGlzLl9zaWRlKVxuICAgICAgLnF1ZXVlKHtcbiAgICAgICAgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoJHt0aGlzLm1pbnVzICsgZGlzdGFuY2V9cHgsIDAsIDApYFxuICAgICAgfSlcbiAgICAgIC5wbGF5KCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZG9uZVxuICAgKi9cbiAgb3Blbihkb25lKSB7XG4gICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgIGFuaW1pdCh0aGlzLl9zaWRlKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5taW51c30xMDAlLCAwLCAwKWBcbiAgICAgICAgfSwgdGhpcy5kZWYpXG4gICAgICAgIC5xdWV1ZShjYWxsYmFjayA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lICYmIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdCh0aGlzLl9tYXNrKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGRpc3BsYXk6ICdibG9jaydcbiAgICAgICAgfSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAnMSdcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogJ2xpbmVhcicsXG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBjbG9zZShkb25lKSB7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRoaXMuX3NpZGUpXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgdHJhbnNmb3JtOiAndHJhbnNsYXRlM2QoMCwgMCwgMCknXG4gICAgICAgIH0sIHRoaXMuZGVmKVxuICAgICAgICAucXVldWUoY2FsbGJhY2sgPT4ge1xuICAgICAgICAgIGRvbmUgJiYgZG9uZSgpO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQodGhpcy5fbWFzaylcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBvcGFjaXR5OiAnMCdcbiAgICAgICAgfSwge1xuICAgICAgICAgIGR1cmF0aW9uOiB0aGlzLmR1cmF0aW9uLFxuICAgICAgICAgIHRpbWluZzogJ2xpbmVhcicsXG4gICAgICAgIH0pXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnXG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBTcGxpdHRlckFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3IuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQdXNoU3BsaXR0ZXJBbmltYXRvciBleHRlbmRzIFNwbGl0dGVyQW5pbWF0b3Ige1xuXG4gIF9nZXRTbGlkaW5nRWxlbWVudHMoKSB7XG4gICAgY29uc3Qgc2xpZGluZ0VsZW1lbnRzID0gW3RoaXMuX3NpZGUsIHRoaXMuX2NvbnRlbnRdO1xuICAgIGlmICh0aGlzLl9vcHBvc2l0ZVNpZGUgJiYgdGhpcy5fb3Bwb3NpdGVTaWRlLm1vZGUgPT09ICdzcGxpdCcpIHtcbiAgICAgIHNsaWRpbmdFbGVtZW50cy5wdXNoKHRoaXMuX29wcG9zaXRlU2lkZSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHNsaWRpbmdFbGVtZW50cztcbiAgfVxuXG4gIHRyYW5zbGF0ZShkaXN0YW5jZSkge1xuICAgIGlmICghdGhpcy5fc2xpZGluZ0VsZW1lbnRzKSB7XG4gICAgICB0aGlzLl9zbGlkaW5nRWxlbWVudHMgPSB0aGlzLl9nZXRTbGlkaW5nRWxlbWVudHMoKTtcbiAgICB9XG5cbiAgICB0aGlzLl9tYXNrLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snOyAvLyBBdm9pZCBjb250ZW50IGNsaWNrc1xuXG4gICAgYW5pbWl0KHRoaXMuX3NsaWRpbmdFbGVtZW50cylcbiAgICAgIC5xdWV1ZSh7XG4gICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5taW51cyArIGRpc3RhbmNlfXB4LCAwLCAwKWBcbiAgICAgIH0pXG4gICAgICAucGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIG9wZW4oZG9uZSkge1xuICAgIGNvbnN0IG1heCA9IHRoaXMuX3NpZGUub2Zmc2V0V2lkdGg7XG4gICAgdGhpcy5fc2xpZGluZ0VsZW1lbnRzID0gdGhpcy5fZ2V0U2xpZGluZ0VsZW1lbnRzKCk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRoaXMuX3NsaWRpbmdFbGVtZW50cylcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke3RoaXMubWludXMgKyBtYXh9cHgsIDAsIDApYFxuICAgICAgICB9LCB0aGlzLmRlZilcbiAgICAgICAgLnF1ZXVlKGNhbGxiYWNrID0+IHtcbiAgICAgICAgICB0aGlzLl9zbGlkaW5nRWxlbWVudHMgPSBudWxsO1xuICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSAmJiBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQodGhpcy5fbWFzaylcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICBkaXNwbGF5OiAnYmxvY2snXG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBkb25lXG4gICAqL1xuICBjbG9zZShkb25lKSB7XG4gICAgdGhpcy5fc2xpZGluZ0VsZW1lbnRzID0gdGhpcy5fZ2V0U2xpZGluZ0VsZW1lbnRzKCk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRoaXMuX3NsaWRpbmdFbGVtZW50cylcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHtcbiAgICAgICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKSdcbiAgICAgICAgfSwgdGhpcy5kZWYpXG4gICAgICAgIC5xdWV1ZShjYWxsYmFjayA9PiB7XG4gICAgICAgICAgdGhpcy5fc2xpZGluZ0VsZW1lbnRzID0gbnVsbDtcbiAgICAgICAgICBzdXBlci5jbGVhclRyYW5zaXRpb24oKTtcbiAgICAgICAgICBkb25lICYmIGRvbmUoKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KHRoaXMuX21hc2spXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgZGlzcGxheTogJ25vbmUnXG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5pbXBvcnQgc3R5bGVyIGZyb20gJy4uLy4uL29ucy9zdHlsZXInO1xuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBTcGxpdHRlckFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3IuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXZlYWxTcGxpdHRlckFuaW1hdG9yIGV4dGVuZHMgU3BsaXR0ZXJBbmltYXRvciB7XG5cbiAgX2dldFNsaWRpbmdFbGVtZW50cygpIHtcbiAgICBjb25zdCBzbGlkaW5nRWxlbWVudHMgPSBbdGhpcy5fY29udGVudCwgdGhpcy5fbWFza107XG4gICAgaWYgKHRoaXMuX29wcG9zaXRlU2lkZSAmJiB0aGlzLl9vcHBvc2l0ZVNpZGUubW9kZSA9PT0gJ3NwbGl0Jykge1xuICAgICAgc2xpZGluZ0VsZW1lbnRzLnB1c2godGhpcy5fb3Bwb3NpdGVTaWRlKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc2xpZGluZ0VsZW1lbnRzO1xuICB9XG5cbiAgYWN0aXZhdGUoc2lkZUVsZW1lbnQpIHtcbiAgICBzdXBlci5hY3RpdmF0ZShzaWRlRWxlbWVudCk7XG4gICAgaWYgKHNpZGVFbGVtZW50Lm1vZGUgPT09ICdjb2xsYXBzZScpIHtcbiAgICAgIHRoaXMuX3NldFN0eWxlcyhzaWRlRWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgZGVhY3RpdmF0ZSgpIHtcbiAgICB0aGlzLl9zaWRlICYmIHRoaXMuX3Vuc2V0U3R5bGVzKHRoaXMuX3NpZGUpO1xuICAgIHN1cGVyLmRlYWN0aXZhdGUoKTtcbiAgfVxuXG4gIF9zZXRTdHlsZXMoc2lkZUVsZW1lbnQpIHtcbiAgICBzdHlsZXIoc2lkZUVsZW1lbnQsIHtcbiAgICAgIGxlZnQ6IHNpZGVFbGVtZW50LnNpZGUgPT09ICdyaWdodCcgPyAnYXV0bycgOiAwLFxuICAgICAgcmlnaHQ6IHNpZGVFbGVtZW50LnNpZGUgPT09ICdyaWdodCcgID8gMCA6ICdhdXRvJyxcbiAgICAgIHpJbmRleDogMCxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJ2JsYWNrJyxcbiAgICAgIHRyYW5zZm9ybTogdGhpcy5fZ2VuZXJhdGVCZWhpbmRQYWdlU3R5bGUoMCkuY29udGFpbmVyLnRyYW5zZm9ybSxcbiAgICAgIGRpc3BsYXk6ICdub25lJ1xuICAgIH0pO1xuXG4gICAgY29uc3Qgc3BsaXR0ZXIgPSBzaWRlRWxlbWVudC5wYXJlbnRFbGVtZW50O1xuICAgIGNvbnRlbnRSZWFkeShzcGxpdHRlciwgKCkgPT4gc3BsaXR0ZXIuY29udGVudCAmJiBzdHlsZXIoc3BsaXR0ZXIuY29udGVudCwgeyBib3hTaGFkb3c6ICcwIDAgMTJweCAwIHJnYmEoMCwgMCwgMCwgMC4yKScgfSkpO1xuICB9XG5cbiAgX3Vuc2V0U3R5bGVzKHNpZGVFbGVtZW50KSB7XG4gICAgc3R5bGVyLmNsZWFyKHNpZGVFbGVtZW50LCAnbGVmdCByaWdodCB6SW5kZXggYmFja2dyb3VuZENvbG9yIGRpc3BsYXknKTtcbiAgICBpZiAoc2lkZUVsZW1lbnQuX2NvbnRlbnQpIHtcbiAgICAgIHNpZGVFbGVtZW50Ll9jb250ZW50LnN0eWxlLm9wYWNpdHkgPSAnJztcbiAgICB9XG5cbiAgICAvLyBDaGVjayBpZiB0aGUgb3RoZXIgc2lkZSBuZWVkcyB0aGUgY29tbW9uIHN0eWxlc1xuICAgIGlmICghdGhpcy5fb3Bwb3NpdGVTaWRlIHx8IHRoaXMuX29wcG9zaXRlU2lkZS5tb2RlID09PSAnc3BsaXQnKSB7XG4gICAgICBzaWRlRWxlbWVudC5wYXJlbnRFbGVtZW50LmNvbnRlbnQgJiYgc3R5bGVyLmNsZWFyKHNpZGVFbGVtZW50LnBhcmVudEVsZW1lbnQuY29udGVudCwgJ2JveFNoYWRvdycpO1xuICAgIH1cbiAgfVxuXG4gIF9nZW5lcmF0ZUJlaGluZFBhZ2VTdHlsZShkaXN0YW5jZSkge1xuICAgIGNvbnN0IG1heCA9IHRoaXMubWF4V2lkdGg7XG5cbiAgICBsZXQgYmVoaW5kRGlzdGFuY2UgPSAoZGlzdGFuY2UgLSBtYXgpIC8gbWF4ICogMTA7XG4gICAgYmVoaW5kRGlzdGFuY2UgPSBpc05hTihiZWhpbmREaXN0YW5jZSkgPyAwIDogTWF0aC5tYXgoTWF0aC5taW4oYmVoaW5kRGlzdGFuY2UsIDApLCAtMTApO1xuXG4gICAgY29uc3QgYmVoaW5kVHJhbnNmb3JtID0gYHRyYW5zbGF0ZTNkKCR7KHRoaXMubWludXMgPyAtMSA6IDEpICogYmVoaW5kRGlzdGFuY2V9JSwgMCwgMClgO1xuICAgIGNvbnN0IG9wYWNpdHkgPSAxICsgYmVoaW5kRGlzdGFuY2UgLyAxMDA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgY29udGVudDoge1xuICAgICAgICBvcGFjaXR5XG4gICAgICB9LFxuICAgICAgY29udGFpbmVyOiB7XG4gICAgICAgIHRyYW5zZm9ybTogYmVoaW5kVHJhbnNmb3JtXG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIHRyYW5zbGF0ZShkaXN0YW5jZSkge1xuICAgIHRoaXMuX3NpZGUuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgIHRoaXMuX3NpZGUuc3R5bGUuekluZGV4ID0gMTtcbiAgICB0aGlzLm1heFdpZHRoID0gdGhpcy5tYXhXaWR0aCB8fCB0aGlzLl9nZXRNYXhXaWR0aCgpO1xuICAgIGNvbnN0IG1lbnVTdHlsZSA9IHRoaXMuX2dlbmVyYXRlQmVoaW5kUGFnZVN0eWxlKE1hdGgubWluKGRpc3RhbmNlLCB0aGlzLm1heFdpZHRoKSk7XG5cbiAgICBpZiAoIXRoaXMuX3NsaWRpbmdFbGVtZW50cykge1xuICAgICAgdGhpcy5fc2xpZGluZ0VsZW1lbnRzID0gdGhpcy5fZ2V0U2xpZGluZ0VsZW1lbnRzKCk7XG4gICAgfVxuXG4gICAgdGhpcy5fbWFzay5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsgLy8gQXZvaWQgY29udGVudCBjbGlja3NcblxuICAgIGFuaW1pdC5ydW5BbGwoXG4gICAgICBhbmltaXQodGhpcy5fc2xpZGluZ0VsZW1lbnRzKVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKCR7dGhpcy5taW51cyArIGRpc3RhbmNlfXB4LCAwLCAwKWBcbiAgICAgICAgfSksXG4gICAgICBhbmltaXQodGhpcy5fc2lkZS5fY29udGVudClcbiAgICAgICAgLnF1ZXVlKG1lbnVTdHlsZS5jb250ZW50KSxcbiAgICAgIGFuaW1pdCh0aGlzLl9zaWRlKVxuICAgICAgICAucXVldWUobWVudVN0eWxlLmNvbnRhaW5lcilcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIG9wZW4oZG9uZSkge1xuICAgIHRoaXMuX3NpZGUuc3R5bGUuZGlzcGxheSA9ICcnO1xuICAgIHRoaXMuX3NpZGUuc3R5bGUuekluZGV4ID0gMTtcbiAgICB0aGlzLm1heFdpZHRoID0gdGhpcy5tYXhXaWR0aCB8fCB0aGlzLl9nZXRNYXhXaWR0aCgpO1xuICAgIGNvbnN0IG1lbnVTdHlsZSA9IHRoaXMuX2dlbmVyYXRlQmVoaW5kUGFnZVN0eWxlKHRoaXMubWF4V2lkdGgpO1xuICAgIHRoaXMuX3NsaWRpbmdFbGVtZW50cyA9IHRoaXMuX2dldFNsaWRpbmdFbGVtZW50cygpO1xuXG4gICAgc2V0VGltZW91dCgoKSA9PiB7IC8vIEZpeDogVGltZSB0byB1cGRhdGUgcHJldmlvdXMgdHJhbnNsYXRlM2QgYWZ0ZXIgY2hhbmdpbmcgc3R5bGUuZGlzcGxheVxuICAgICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgICAgYW5pbWl0KHRoaXMuX3NsaWRpbmdFbGVtZW50cylcbiAgICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAgIC5xdWV1ZSh7XG4gICAgICAgICAgICB0cmFuc2Zvcm06IGB0cmFuc2xhdGUzZCgke3RoaXMubWludXMgKyB0aGlzLm1heFdpZHRofXB4LCAwLCAwKWBcbiAgICAgICAgICB9LCB0aGlzLmRlZiksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuX21hc2spXG4gICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAucXVldWUoe1xuICAgICAgICAgICAgZGlzcGxheTogJ2Jsb2NrJ1xuICAgICAgICAgIH0pLFxuXG4gICAgICAgIGFuaW1pdCh0aGlzLl9zaWRlLl9jb250ZW50KVxuICAgICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgICAgLnF1ZXVlKG1lbnVTdHlsZS5jb250ZW50LCB0aGlzLmRlZiksXG5cbiAgICAgICAgYW5pbWl0KHRoaXMuX3NpZGUpXG4gICAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgICAucXVldWUobWVudVN0eWxlLmNvbnRhaW5lciwgdGhpcy5kZWYpXG4gICAgICAgICAgLnF1ZXVlKGNhbGxiYWNrID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3NsaWRpbmdFbGVtZW50cyA9IG51bGw7XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgZG9uZSAmJiBkb25lKCk7XG4gICAgICAgICAgfSksXG4gICAgICApO1xuICAgIH0sIDEwMDAvNjApO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGRvbmVcbiAgICovXG4gIGNsb3NlKGRvbmUpIHtcbiAgICBjb25zdCBtZW51U3R5bGUgPSB0aGlzLl9nZW5lcmF0ZUJlaGluZFBhZ2VTdHlsZSgwKTtcbiAgICB0aGlzLl9zbGlkaW5nRWxlbWVudHMgPSB0aGlzLl9nZXRTbGlkaW5nRWxlbWVudHMoKTtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG4gICAgICBhbmltaXQodGhpcy5fc2xpZGluZ0VsZW1lbnRzKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJ1xuICAgICAgICB9LCB0aGlzLmRlZiksXG5cbiAgICAgIGFuaW1pdCh0aGlzLl9tYXNrKVxuICAgICAgICAud2FpdCh0aGlzLmRlbGF5KVxuICAgICAgICAucXVldWUoe1xuICAgICAgICAgIGRpc3BsYXk6ICdub25lJ1xuICAgICAgICB9KSxcblxuICAgICAgYW5pbWl0KHRoaXMuX3NpZGUuX2NvbnRlbnQpXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZShtZW51U3R5bGUuY29udGVudCwgdGhpcy5kZWYpLFxuXG4gICAgICBhbmltaXQodGhpcy5fc2lkZSlcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKG1lbnVTdHlsZS5jb250YWluZXIsIHRoaXMuZGVmKVxuICAgICAgICAucXVldWUoY2FsbGJhY2sgPT4ge1xuICAgICAgICAgIHRoaXMuX3NsaWRpbmdFbGVtZW50cyA9IG51bGw7XG4gICAgICAgICAgdGhpcy5fc2lkZS5zdHlsZS56SW5kZXggPSAwO1xuICAgICAgICAgIHRoaXMuX3NpZGUuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICB0aGlzLl9zaWRlLl9jb250ZW50LnN0eWxlLm9wYWNpdHkgPSAnJztcbiAgICAgICAgICBkb25lICYmIGRvbmUoKTtcbiAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9KSxcbiAgICApO1xuICB9XG5cbiAgX2dldE1heFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLl9zaWRlLm9mZnNldFdpZHRoO1xuICB9XG59XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEFuaW1hdG9yRmFjdG9yeSBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvYW5pbWF0b3ItZmFjdG9yeSc7XG5pbXBvcnQgT3ZlcmxheVNwbGl0dGVyQW5pbWF0b3IgZnJvbSAnLi9vdmVybGF5LWFuaW1hdG9yJztcbmltcG9ydCBQdXNoU3BsaXR0ZXJBbmltYXRvciBmcm9tICcuL3B1c2gtYW5pbWF0b3InO1xuaW1wb3J0IFJldmVhbFNwbGl0dGVyQW5pbWF0b3IgZnJvbSAnLi9yZXZlYWwtYW5pbWF0b3InO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4uL2Jhc2UvYmFzZS1lbGVtZW50JztcbmltcG9ydCBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvZGV2aWNlLWJhY2stYnV0dG9uLWRpc3BhdGNoZXInO1xuaW1wb3J0IGNvbnRlbnRSZWFkeSBmcm9tICcuLi8uLi9vbnMvY29udGVudC1yZWFkeSc7XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gIGRlZmF1bHQ6IE92ZXJsYXlTcGxpdHRlckFuaW1hdG9yLFxuICBvdmVybGF5OiBPdmVybGF5U3BsaXR0ZXJBbmltYXRvcixcbiAgcHVzaDogUHVzaFNwbGl0dGVyQW5pbWF0b3IsXG4gIHJldmVhbDogUmV2ZWFsU3BsaXR0ZXJBbmltYXRvclxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3BsaXR0ZXJcbiAqIEBjYXRlZ29yeSBtZW51XG4gKiBAZGVzY3JpcHRpb25cbiAqICBbZW5dXG4gKiAgICBBIGNvbXBvbmVudCB0aGF0IGVuYWJsZXMgcmVzcG9uc2l2ZSBsYXlvdXQgYnkgaW1wbGVtZW50aW5nIGJvdGggYSB0d28tY29sdW1uIGxheW91dCBhbmQgYSBzbGlkaW5nIG1lbnUgbGF5b3V0LlxuICpcbiAqICAgIEl0IGNhbiBiZSBjb25maWd1cmVkIHRvIGF1dG9tYXRpY2FsbHkgZXhwYW5kIGludG8gYSBjb2x1bW4gbGF5b3V0IG9uIGxhcmdlIHNjcmVlbnMgYW5kIGNvbGxhcHNlIHRoZSBtZW51IG9uIHNtYWxsZXIgc2NyZWVucy4gV2hlbiB0aGUgbWVudSBpcyBjb2xsYXBzZWQgdGhlIHVzZXIgY2FuIG9wZW4gaXQgYnkgc3dpcGluZy5cbiAqICBbL2VuXVxuICogIFtqYV1bL2phXVxuICogQGNvZGVwZW4gck9RT01MXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3BsaXR0ZXJcbiAqIEBndWlkZSBmdW5kYW1lbnRhbHMuaHRtbCNtYW5hZ2luZy1wYWdlc1xuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQHNlZWFsc28gb25zLXNwbGl0dGVyLWNvbnRlbnRcbiAqICBbZW5dVGhlIGA8b25zLXNwbGl0dGVyLWNvbnRlbnQ+YCBjb21wb25lbnQgY29udGFpbnMgdGhlIG1haW4gY29udGVudCBvZiB0aGUgcGFnZS5bL2VuXVxuICogIFtqYV1vbnMtc3BsaXR0ZXItY29udGVudOOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXItc2lkZVxuICogIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXItc2lkZT5gIGNvbXBvbmVudCBjb250YWlucyB0aGUgbWVudS5bL2VuXVxuICogIFtqYV1vbnMtc3BsaXR0ZXItc2lkZeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAZXhhbXBsZVxuICogPG9ucy1zcGxpdHRlciBpZD1cInNwbGl0dGVyXCI+XG4gKiAgIDxvbnMtc3BsaXR0ZXItY29udGVudD5cbiAqICAgICAuLi5cbiAqICAgPC9vbnMtc3BsaXR0ZXItY29udGVudD5cbiAqXG4gKiAgIDxvbnMtc3BsaXR0ZXItc2lkZSBzaWRlPVwibGVmdFwiIHdpZHRoPVwiODAlXCIgY29sbGFwc2Ugc3dpcGVhYmxlPlxuICogICAgIC4uLlxuICogICA8L29ucy1zcGxpdHRlci1zaWRlPlxuICogPC9vbnMtc3BsaXR0ZXI+XG4gKlxuICogPHNjcmlwdD5cbiAqICAgdmFyIHNwbGl0dGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NwbGl0dGVyJyk7XG4gKiAgIHNwbGl0dGVyLmxlZnQub3BlbigpO1xuICogPC9zY3JpcHQ+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwbGl0dGVyRWxlbWVudCBleHRlbmRzIEJhc2VFbGVtZW50IHtcblxuICBfZ2V0U2lkZShzaWRlKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IHV0aWwuZmluZENoaWxkKHRoaXMsIGUgPT4ge1xuICAgICAgcmV0dXJuIHV0aWwubWF0Y2goZSwgJ29ucy1zcGxpdHRlci1zaWRlJykgJiYgZS5nZXRBdHRyaWJ1dGUoJ3NpZGUnKSA9PT0gc2lkZTtcbiAgICB9KTtcbiAgICByZXR1cm4gZWxlbWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgbGVmdFxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dTGVmdCBgPG9ucy1zcGxpdHRlci1zaWRlPmAgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IGxlZnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2dldFNpZGUoJ2xlZnQnKTtcbiAgfVxuICAvKipcbiAgICogQHByb3BlcnR5IHJpZ2h0XG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1SaWdodCBgPG9ucy1zcGxpdHRlci1zaWRlPmAgZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IHJpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLl9nZXRTaWRlKCdyaWdodCcpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBzaWRlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJzdCBgPG9ucy1zcGxpdHRlci1zaWRlPmAgZWxlbWVudCByZWdhcmRsZXNzIHRoZSBhY3R1YWwgc2lkZS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgZ2V0IHNpZGUoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICdvbnMtc3BsaXR0ZXItc2lkZScpO1xuICB9XG5cbiAgZ2V0IF9zaWRlcygpIHtcbiAgICByZXR1cm4gW3RoaXMubGVmdCwgdGhpcy5yaWdodF0uZmlsdGVyKGUgPT4gZSk7XG4gIH1cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBjb250ZW50XG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7SFRNTEVsZW1lbnR9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXItY29udGVudD5gIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBjb250ZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnb25zLXNwbGl0dGVyLWNvbnRlbnQnKTtcbiAgfVxuXG4gIGdldCB0b3BQYWdlKCkge1xuICAgIHJldHVybiB0aGlzLmNvbnRlbnQuX2NvbnRlbnQ7XG4gIH1cblxuICBnZXQgbWFzaygpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgJ29ucy1zcGxpdHRlci1tYXNrJyk7XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IG9uRGV2aWNlQmFja0J1dHRvblxuICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQmFjay1idXR0b24gaGFuZGxlci5bL2VuXVxuICAgKiAgIFtqYV3jg5Djg4Pjgq/jg5zjgr/jg7Pjg4/jg7Pjg4njg6njgIJbL2phXVxuICAgKi9cbiAgZ2V0IG9uRGV2aWNlQmFja0J1dHRvbigpIHtcbiAgICByZXR1cm4gdGhpcy5fYmFja0J1dHRvbkhhbmRsZXI7XG4gIH1cblxuICBzZXQgb25EZXZpY2VCYWNrQnV0dG9uKGNhbGxiYWNrKSB7XG4gICAgaWYgKHRoaXMuX2JhY2tCdXR0b25IYW5kbGVyKSB7XG4gICAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgfVxuXG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIgPSBkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlci5jcmVhdGVIYW5kbGVyKHRoaXMsIGNhbGxiYWNrKTtcbiAgfVxuXG4gIF9vbkRldmljZUJhY2tCdXR0b24oZXZlbnQpIHtcbiAgICB0aGlzLl9zaWRlcy5zb21lKHMgPT4gcy5pc09wZW4gPyBzLmNsb3NlKCkgOiBmYWxzZSkgfHwgZXZlbnQuY2FsbFBhcmVudEhhbmRsZXIoKTtcbiAgfVxuXG4gIF9vbk1vZGVDaGFuZ2UoZSkge1xuICAgIGlmIChlLnRhcmdldC5wYXJlbnROb2RlKSB7XG4gICAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICB0aGlzLl9sYXlvdXQoKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIF9sYXlvdXQoKSB7XG4gICAgdGhpcy5fc2lkZXMuZm9yRWFjaChzaWRlID0+IHtcbiAgICAgIGlmICh0aGlzLmNvbnRlbnQpIHtcbiAgICAgICAgdGhpcy5jb250ZW50LnN0eWxlW3NpZGUuc2lkZV0gPSBzaWRlLm1vZGUgPT09ICdzcGxpdCcgPyBzaWRlLnN0eWxlLndpZHRoIDogMDtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9vbk1vZGVDaGFuZ2UgPSB0aGlzLl9vbk1vZGVDaGFuZ2UuYmluZCh0aGlzKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICAhdGhpcy5tYXNrICYmIHRoaXMuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb25zLXNwbGl0dGVyLW1hc2snKSk7XG4gICAgICB0aGlzLl9sYXlvdXQoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMub25EZXZpY2VCYWNrQnV0dG9uID0gdGhpcy5fb25EZXZpY2VCYWNrQnV0dG9uLmJpbmQodGhpcyk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdtb2RlY2hhbmdlJywgdGhpcy5fb25Nb2RlQ2hhbmdlLCBmYWxzZSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLl9iYWNrQnV0dG9uSGFuZGxlci5kZXN0cm95KCk7XG4gICAgdGhpcy5fYmFja0J1dHRvbkhhbmRsZXIgPSBudWxsO1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW9kZWNoYW5nZScsIHRoaXMuX29uTW9kZUNoYW5nZSwgZmFsc2UpO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHt9XG5cbiAgX3Nob3coKSB7XG4gICAgdXRpbC5wcm9wYWdhdGVBY3Rpb24odGhpcywgJ19zaG93Jyk7XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICB1dGlsLnByb3BhZ2F0ZUFjdGlvbih0aGlzLCAnX2hpZGUnKTtcbiAgfVxuXG4gIF9kZXN0cm95KCkge1xuICAgIHV0aWwucHJvcGFnYXRlQWN0aW9uKHRoaXMsICdfZGVzdHJveScpO1xuICAgIHRoaXMucmVtb3ZlKCk7XG4gIH1cblxuICBzdGF0aWMgcmVnaXN0ZXJBbmltYXRvcihuYW1lLCBBbmltYXRvcikge1xuICAgIGlmICghKEFuaW1hdG9yIGluc3RhbmNlb2YgU3BsaXR0ZXJBbmltYXRvcikpIHtcbiAgICAgIHV0aWwudGhyb3dBbmltYXRvcignU3BsaXR0ZXInKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBTcGxpdHRlckFuaW1hdG9yKCkge1xuICAgIHJldHVybiBTcGxpdHRlckFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cbn1cblxub25zRWxlbWVudHMuU3BsaXR0ZXIgPSBTcGxpdHRlckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy1zcGxpdHRlcicsIFNwbGl0dGVyRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uL29ucy91dGlsJztcbmltcG9ydCBBbmltYXRvckZhY3RvcnkgZnJvbSAnLi4vb25zL2ludGVybmFsL2FuaW1hdG9yLWZhY3RvcnknO1xuaW1wb3J0IG9yaWVudGF0aW9uIGZyb20gJy4uL29ucy9vcmllbnRhdGlvbic7XG5pbXBvcnQgaW50ZXJuYWwgZnJvbSAnLi4vb25zL2ludGVybmFsJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IFNwbGl0dGVyQW5pbWF0b3IgZnJvbSAnLi9vbnMtc3BsaXR0ZXIvYW5pbWF0b3InO1xuaW1wb3J0IFN3aXBlUmV2ZWFsIGZyb20gJy4uL29ucy9pbnRlcm5hbC9zd2lwZS1yZXZlYWwnO1xuaW1wb3J0IERvb3JMb2NrIGZyb20gJy4uL29ucy9kb29ybG9jayc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCB7IFBhZ2VMb2FkZXIsIGRlZmF1bHRQYWdlTG9hZGVyfSBmcm9tICcuLi9vbnMvcGFnZS1sb2FkZXInO1xuaW1wb3J0IFNwbGl0dGVyRWxlbWVudCBmcm9tICcuL29ucy1zcGxpdHRlcic7XG5cbmNvbnN0IFNQTElUX01PREUgPSAnc3BsaXQnO1xuY29uc3QgQ09MTEFQU0VfTU9ERSA9ICdjb2xsYXBzZSc7XG5jb25zdCBDTE9TRURfU1RBVEUgPSAnY2xvc2VkJztcbmNvbnN0IE9QRU5fU1RBVEUgPSAnb3Blbic7XG5jb25zdCBDSEFOR0lOR19TVEFURSA9ICdjaGFuZ2luZyc7XG5cbmNvbnN0IHJld3JpdGFibGVzID0ge1xuICAvKipcbiAgICogQHBhcmFtIHtFbGVtZW50fSBzcGxpdHRlclNpZGVFbGVtZW50XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICByZWFkeShzcGxpdHRlclNpZGVFbGVtZW50LCBjYWxsYmFjaykge1xuICAgIHNldEltbWVkaWF0ZShjYWxsYmFjayk7XG4gIH1cbn07XG5cbmNsYXNzIENvbGxhcHNlRGV0ZWN0aW9uIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgdGFyZ2V0KSB7XG4gICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgdGhpcy5fb25DaGFuZ2UgPSB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRhcmdldCAmJiB0aGlzLmNoYW5nZVRhcmdldCh0YXJnZXQpO1xuICB9XG5cbiAgY2hhbmdlVGFyZ2V0KHRhcmdldCkge1xuICAgIHRoaXMuZGlzYWJsZSgpO1xuICAgIHRoaXMuX3RhcmdldCA9IHRhcmdldDtcbiAgICBpZiAodGFyZ2V0KSB7XG4gICAgICB0aGlzLl9vcmllbnRhdGlvbiA9IFsncG9ydHJhaXQnLCAnbGFuZHNjYXBlJ10uaW5kZXhPZih0YXJnZXQpICE9PSAtMTtcbiAgICAgIHRoaXMuYWN0aXZhdGUoKTtcbiAgICB9XG4gIH1cblxuICBfbWF0Y2godmFsdWUpIHtcbiAgICBpZiAodGhpcy5fb3JpZW50YXRpb24pIHtcbiAgICAgIHJldHVybiB0aGlzLl90YXJnZXQgPT09ICh2YWx1ZS5pc1BvcnRyYWl0ID8gJ3BvcnRyYWl0JyA6ICdsYW5kc2NhcGUnKTtcbiAgICB9XG4gICAgcmV0dXJuIHZhbHVlLm1hdGNoZXM7XG4gIH1cblxuICBfb25DaGFuZ2UodmFsdWUpIHtcbiAgICB0aGlzLl9lbGVtZW50Ll91cGRhdGVNb2RlKHRoaXMuX21hdGNoKHZhbHVlKSA/IENPTExBUFNFX01PREUgOiBTUExJVF9NT0RFKTtcbiAgfVxuXG4gIGFjdGl2YXRlKCkge1xuICAgIGlmICh0aGlzLl9vcmllbnRhdGlvbikge1xuICAgICAgb3JpZW50YXRpb24ub24oJ2NoYW5nZScsIHRoaXMuX29uQ2hhbmdlKTtcbiAgICAgIHRoaXMuX29uQ2hhbmdlKHtpc1BvcnRyYWl0OiBvcmllbnRhdGlvbi5pc1BvcnRyYWl0KCl9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcXVlcnlSZXN1bHQgPSB3aW5kb3cubWF0Y2hNZWRpYSh0aGlzLl90YXJnZXQpO1xuICAgICAgdGhpcy5fcXVlcnlSZXN1bHQuYWRkTGlzdGVuZXIodGhpcy5fb25DaGFuZ2UpO1xuICAgICAgdGhpcy5fb25DaGFuZ2UodGhpcy5fcXVlcnlSZXN1bHQpO1xuICAgIH1cbiAgfVxuXG4gIGRpc2FibGUoKSB7XG4gICAgaWYgKHRoaXMuX29yaWVudGF0aW9uKSB7XG4gICAgICBvcmllbnRhdGlvbi5vZmYoJ2NoYW5nZScsIHRoaXMuX29uQ2hhbmdlKTtcbiAgICB9IGVsc2UgaWYgKHRoaXMuX3F1ZXJ5UmVzdWx0KSB7XG4gICAgICB0aGlzLl9xdWVyeVJlc3VsdC5yZW1vdmVMaXN0ZW5lcih0aGlzLl9vbkNoYW5nZSk7XG4gICAgICB0aGlzLl9xdWVyeVJlc3VsdCA9IG51bGw7XG4gICAgfVxuICB9XG59XG5cbmNvbnN0IHdpZHRoVG9QeCA9ICh3aWR0aCwgcGFyZW50KSA9PiB7XG4gIGNvbnN0IFt2YWx1ZSwgcHhdID0gW3BhcnNlSW50KHdpZHRoLCAxMCksIC9weC8udGVzdCh3aWR0aCldO1xuICByZXR1cm4gcHggPyB2YWx1ZSA6IE1hdGgucm91bmQocGFyZW50Lm9mZnNldFdpZHRoICogdmFsdWUgLyAxMDApO1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3BsaXR0ZXItc2lkZVxuICogQGNhdGVnb3J5IG1lbnVcbiAqIEBkZXNjcmlwdGlvblxuICogIFtlbl1cbiAqICAgIFRoZSBgPG9ucy1zcGxpdHRlci1zaWRlPmAgZWxlbWVudCBpcyB1c2VkIGFzIGEgY2hpbGQgZWxlbWVudCBvZiBgPG9ucy1zcGxpdHRlcj5gLlxuICpcbiAqICAgIEl0IHdpbGwgYmUgZGlzcGxheWVkIG9uIGVpdGhlciB0aGUgbGVmdCBvciByaWdodCBzaWRlIG9mIHRoZSBgPG9ucy1zcGxpdHRlci1jb250ZW50PmAgZWxlbWVudC5cbiAqXG4gKiAgICBJdCBzdXBwb3J0cyB0d28gbW9kZXM6IGNvbGxhcHNlZCBhbmQgc3BsaXQuIFdoZW4gaXQncyBpbiBjb2xsYXBzZWQgbW9kZSBpdCB3aWxsIGJlIGhpZGRlbiBmcm9tIHZpZXcgYW5kIGNhbiBiZSBkaXNwbGF5ZWQgd2hlbiB0aGUgdXNlciBzd2lwZXMgdGhlIHNjcmVlbiBvciB0YXBzIGEgYnV0dG9uLiBJbiBzcGxpdCBtb2RlIHRoZSBlbGVtZW50IGlzIGFsd2F5cyBzaG93bi4gSXQgY2FuIGJlIGNvbmZpZ3VyZWQgdG8gYXV0b21hdGljYWxseSBzd2l0Y2ggYmV0d2VlbiB0aGUgdHdvIG1vZGVzIGRlcGVuZGluZyBvbiB0aGUgc2NyZWVuIHNpemUuXG4gKiAgWy9lbl1cbiAqICBbamFdb25zLXNwbGl0dGVyLXNpZGXopoHntKDjga/jgIFvbnMtc3BsaXR0ZXLopoHntKDjga7lrZDopoHntKDjgajjgZfjgabliKnnlKjjgZfjgb7jgZnjgIJbL2phXVxuICogQGNvZGVwZW4gck9RT01MXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3BsaXR0ZXJcbiAqIEBndWlkZSBmdW5kYW1lbnRhbHMuaHRtbCNtYW5hZ2luZy1wYWdlc1xuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQHNlZWFsc28gb25zLXNwbGl0dGVyXG4gKiAgW2VuXVRoZSBgPG9ucy1zcGxpdHRlcj5gIGlzIHRoZSBwYXJlbnQgY29tcG9uZW50LlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlcuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtc3BsaXR0ZXItY29udGVudFxuICogIFtlbl1UaGUgYDxvbnMtc3BsaXR0ZXItY29udGVudD5gIGNvbXBvbmVudCBjb250YWlucyB0aGUgbWFpbiBjb250ZW50IG9mIHRoZSBwYWdlLlsvZW5dXG4gKiAgW2phXW9ucy1zcGxpdHRlci1jb250ZW5044Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXNwbGl0dGVyPlxuICogICA8b25zLXNwbGl0dGVyLWNvbnRlbnQ+XG4gKiAgICAgLi4uXG4gKiAgIDwvb25zLXNwbGl0dGVyLWNvbnRlbnQ+XG4gKlxuICogICA8b25zLXNwbGl0dGVyLXNpZGUgc2lkZT1cImxlZnRcIiB3aWR0aD1cIjgwJVwiIGNvbGxhcHNlPlxuICogICAgIC4uLlxuICogICA8L29ucy1zcGxpdHRlci1zaWRlPlxuICogPC9vbnMtc3BsaXR0ZXI+XG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNwbGl0dGVyU2lkZUVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBldmVudCBtb2RlY2hhbmdlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlZCBqdXN0IGFmdGVyIHRoZSBjb21wb25lbnQncyBtb2RlIGNoYW5nZXMuWy9lbl1cbiAgICogICBbamFd44GT44Gu6KaB57Sg44Gu44Oi44O844OJ44GM5aSJ5YyW44GX44Gf6Zqb44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuc2lkZVxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBldmVudC5tb2RlXG4gICAqICAgW2VuXVJldHVybnMgdGhlIGN1cnJlbnQgbW9kZS4gQ2FuIGJlIGVpdGhlciBgXCJjb2xsYXBzZVwiYCBvciBgXCJzcGxpdFwiYC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjga7jg6Ljg7zjg4njgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHByZW9wZW5cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUZpcmVkIGp1c3QgYmVmb3JlIHRoZSBzbGlkaW5nIG1lbnUgaXMgb3BlbmVkLlsvZW5dXG4gICAqICAgW2phXeOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOBjOmWi+OBj+WJjeOBq+eZuueBq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudFxuICAgKiAgIFtlbl1FdmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44Kq44OW44K444Kn44Kv44OI44Gn44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gZXZlbnQuY2FuY2VsXG4gICAqICAgW2VuXUNhbGwgdG8gY2FuY2VsIG9wZW5pbmcgc2xpZGluZyBtZW51LlsvZW5dXG4gICAqICAgW2phXeOCueODqeOCpOODh+OCo+ODs+OCsOODoeODi+ODpeODvOOBjOmWi+OBj+OBruOCkuOCreODo+ODs+OCu+ODq+OBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5zaWRlXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwb3N0b3BlblxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgc2xpZGluZyBtZW51IGlzIG9wZW5lZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjg6njgqTjg4fjgqPjg7PjgrDjg6Hjg4vjg6Xjg7zjgYzplovjgYTjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5zaWRlXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBldmVudCBwcmVjbG9zZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBiZWZvcmUgdGhlIHNsaWRpbmcgbWVudSBpcyBjbG9zZWQuWy9lbl1cbiAgICogICBbamFd44K544Op44Kk44OH44Kj44Oz44Kw44Oh44OL44Ol44O844GM6ZaJ44GY44KL5YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgafjgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuc2lkZVxuICAgKiAgIFtlbl1Db21wb25lbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCs+ODs+ODneODvOODjeODs+ODiOOBruOCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGV2ZW50LmNhbmNlbFxuICAgKiAgIFtlbl1DYWxsIHRvIGNhbmNlbCBvcGVuaW5nIHNsaWRpbmctbWVudS5bL2VuXVxuICAgKiAgIFtqYV3jgrnjg6njgqTjg4fjgqPjg7PjgrDjg6Hjg4vjg6Xjg7zjgYzplonjgZjjgovjga7jgpLjgq3jg6Pjg7Pjgrvjg6vjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHBvc3RjbG9zZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQganVzdCBhZnRlciB0aGUgc2xpZGluZyBtZW51IGlzIGNsb3NlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjg6njgqTjg4fjgqPjg7PjgrDjg6Hjg4vjg6Xjg7zjgYzplonjgZjjgZ/lvozjgavnmbrngavjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnRcbiAgICogICBbZW5dRXZlbnQgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCpOODmeODs+ODiOOCquODluOCuOOCp+OCr+ODiOOBp+OBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBldmVudC5zaWRlXG4gICAqICAgW2VuXUNvbXBvbmVudCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kz44Oz44Od44O844ON44Oz44OI44Gu44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0ICBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbi4gVXNlIG9uZSBvZiBgb3ZlcmxheWAsIGBwdXNoYCwgYHJldmVhbGAgb3IgIGBkZWZhdWx0YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+OCkuaMh+WumuOBl+OBvuOBmeOAglwib3ZlcmxheVwiLCBcInB1c2hcIiwgXCJyZXZlYWxcIiwgXCJkZWZhdWx0XCLjga7jgYTjgZrjgozjgYvjgpLmjIflrprjgafjgY3jgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb24tb3B0aW9uc1xuICAgKiBAdHlwZSB7RXhwcmVzc2lvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIHRpbWluZyBhbmQgZGVsYXkgd2l0aCBhbiBvYmplY3QgbGl0ZXJhbC4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIHRpbWluZywgZGVsYXnjgpLjgqrjg5bjgrjjgqfjgq/jg4jjg6rjg4bjg6njg6vjgafmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgb3Blbi10aHJlc2hvbGRcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgIDAuM1xuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TcGVjaWZ5IGhvdyBtdWNoIHRoZSBtZW51IG5lZWRzIHRvIGJlIHN3aXBlZCBiZWZvcmUgb3BlbmluZy4gQSB2YWx1ZSBiZXR3ZWVuIGAwYCBhbmQgYDFgLlsvZW5dXG4gICAqICBbamFd44Gp44Gu44GP44KJ44GE44K544Ov44Kk44OX44GZ44KM44Gw44K544Op44Kk44OH44Kj44Oz44Kw44Oh44OL44Ol44O844KS6ZaL44GP44GL44Gp44GG44GL44Gu5Ymy5ZCI44KS5oyH5a6a44GX44G+44GZ44CCMOOBi+OCiTHjga7plpPjga7mlbDlgKTjgpLmjIflrprjgZfjgb7jgZnjgILjgrnjg6/jgqTjg5fjga7ot53pm6LjgYzjgZPjgZPjgafmjIflrprjgZfjgZ/mlbDlgKTmjpvjgZHjgovjgZPjga7opoHntKDjga7luYXjgojjgorjgoLlpKfjgY3jgZHjgozjgbDjgIHjgrnjg6/jgqTjg5fjgYzntYLjgo/jgaPjgZ/mmYLjgavjgZPjga7opoHntKDjgpLplovjgY3jgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga8wLjPjgafjgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjb2xsYXBzZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dXG4gICAqICAgICBTcGVjaWZ5IHRoZSBjb2xsYXBzZSBiZWhhdmlvci4gVmFsaWQgdmFsdWVzIGFyZSBgXCJwb3J0cmFpdFwiYCwgYFwibGFuZHNjYXBlXCJgIG9yIGEgbWVkaWEgcXVlcnkuXG4gICAqICAgICBUaGUgc3RyaW5ncyBgXCJwb3J0cmFpdFwiYCBhbmQgYFwibGFuZHNjYXBlXCJgIG1lYW5zIHRoZSB2aWV3IHdpbGwgY29sbGFwc2Ugd2hlbiBkZXZpY2UgaXMgaW4gbGFuZHNjYXBlIG9yIHBvcnRyYWl0IG9yaWVudGF0aW9uLlxuICAgKiAgICAgSWYgdGhlIHZhbHVlIGlzIGEgbWVkaWEgcXVlcnksIHRoZSB2aWV3IHdpbGwgY29sbGFwc2Ugd2hlbiB0aGUgbWVkaWEgcXVlcnkgcmVzb2x2ZXMgdG8gYHRydWVgLlxuICAgKiAgICAgSWYgdGhlIHZhbHVlIGlzIG5vdCBkZWZpbmVkLCB0aGUgdmlldyBhbHdheXMgYmUgaW4gYFwiY29sbGFwc2VcImAgbW9kZS5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOW3puWBtOOBruODmuODvOOCuOOCkumdnuihqOekuuOBq+OBmeOCi+adoeS7tuOCkuaMh+WumuOBl+OBvuOBmeOAgnBvcnRyYWl0LCBsYW5kc2NhcGXjgIF3aWR0aCAjcHjjgoLjgZfjgY/jga/jg6Hjg4fjgqPjgqLjgq/jgqjjg6rjga7mjIflrprjgYzlj6/og73jgafjgZnjgIJcbiAgICogICAgIHBvcnRyYWl044KC44GX44GP44GvbGFuZHNjYXBl44KS5oyH5a6a44GZ44KL44Go44CB44OH44OQ44Kk44K544Gu55S76Z2i44GM57im5ZCR44GN44KC44GX44GP44Gv5qiq5ZCR44GN44Gr44Gq44Gj44Gf5pmC44Gr6YGp55So44GV44KM44G+44GZ44CCXG4gICAqICAgICDjg6Hjg4fjgqPjgqLjgq/jgqjjg6rjgpLmjIflrprjgZnjgovjgajjgIHmjIflrprjgZfjgZ/jgq/jgqjjg6rjgavpganlkIjjgZfjgabjgYTjgovloLTlkIjjgavpgannlKjjgZXjgozjgb7jgZnjgIJcbiAgICogICAgIOWApOOBq+S9leOCguaMh+WumuOBl+OBquOBhOWgtOWQiOOBq+OBr+OAgeW4uOOBq2NvbGxhcHNl44Oi44O844OJ44Gr44Gq44KK44G+44GZ44CCXG4gICAqICAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc3dpcGUtdGFyZ2V0LXdpZHRoXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGUgd2lkdGggb2Ygc3dpcGVhYmxlIGFyZWEgY2FsY3VsYXRlZCBmcm9tIHRoZSBlZGdlIChpbiBwaXhlbHMpLiBVc2UgdGhpcyB0byBlbmFibGUgc3dpcGUgb25seSB3aGVuIHRoZSBmaW5nZXIgdG91Y2ggb24gdGhlIHNjcmVlbiBlZGdlLlsvZW5dXG4gICAqICAgW2phXeOCueODr+OCpOODl+OBruWIpOWumumgmOWfn+OCkuODlOOCr+OCu+ODq+WNmOS9jeOBp+aMh+WumuOBl+OBvuOBmeOAgueUu+mdouOBruerr+OBi+OCieaMh+WumuOBl+OBn+i3nembouOBq+mBlOOBmeOCi+OBqOODmuODvOOCuOOBjOihqOekuuOBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHdpZHRoXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DYW4gYmUgc3BlY2lmaWVkIGluIGVpdGhlciBwaXhlbHMgb3IgYXMgYSBwZXJjZW50YWdlLCBlLmcuIGA5MCVgIG9yIGAyMDBweGAuWy9lbl1cbiAgICogICBbamFd44GT44Gu6KaB57Sg44Gu5qiq5bmF44KS5oyH5a6a44GX44G+44GZ44CCcHjjgagl44Gn44Gu5oyH5a6a44GM5Y+v6IO944Gn44GZ44CCZWcuIDkwJSwgMjAwcHhbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBzaWRlXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZWZhdWx0IGxlZnRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNwZWNpZnkgd2hpY2ggc2lkZSBvZiB0aGUgc2NyZWVuIHRoZSBgPG9ucy1zcGxpdHRlci1zaWRlPmAgZWxlbWVudCBpcyBsb2NhdGVkLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIGBcImxlZnRcImAgYW5kIGBcInJpZ2h0XCJgLlsvZW5dXG4gICAqICAgW2phXeOBk+OBruimgee0oOOBjOW3puOBi+WPs+OBi+OCkuaMh+WumuOBl+OBvuOBmeOAguaMh+WumuOBp+OBjeOCi+WApOOBr1wibGVmdFwi44GLXCJyaWdodFwi44Gu44G/44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kZVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBtb2RlLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIGBcImNvbGxhcHNlXCJgIG9yIGBcInNwbGl0XCJgLiBUaGlzIGF0dHJpYnV0ZSBpcyByZWFkIG9ubHkuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Gu44Oi44O844OJ44GM6Kit5a6a44GV44KM44G+44GZ44CCXCJjb2xsYXBzZVwi44KC44GX44GP44GvXCJzcGxpdFwi44GM5oyH5a6a44GV44KM44G+44GZ44CC44GT44Gu5bGe5oCn44Gv6Kqt44G/6L6844G/5bCC55So44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcGFnZVxuICAgKiBAaW5pdG9ubHlcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBVUkwgb2YgdGhlIG1lbnUgcGFnZS5bL2VuXVxuICAgKiAgIFtqYV1vbnMtc3BsaXR0ZXItc2lkZeimgee0oOOBq+ihqOekuuOBmeOCi+ODmuODvOOCuOOBrlVSTOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHN3aXBlYWJsZVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdG8gZW5hYmxlIHN3aXBlIGludGVyYWN0aW9uIG9uIGNvbGxhcHNlIG1vZGUuWy9lbl1cbiAgICogICBbamFdY29sbGFwc2Xjg6Ljg7zjg4nmmYLjgavjgrnjg6/jgqTjg5fmk43kvZzjgpLmnInlirnjgavjgZnjgovloLTlkIjjgavmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fcGFnZSA9IG51bGw7XG4gICAgdGhpcy5fc3RhdGUgPSBDTE9TRURfU1RBVEU7XG4gICAgdGhpcy5fbG9jayA9IG5ldyBEb29yTG9jaygpO1xuICAgIHRoaXMuX3BhZ2VMb2FkZXIgPSBkZWZhdWx0UGFnZUxvYWRlcjtcbiAgICB0aGlzLl9jb2xsYXBzZURldGVjdGlvbiA9IG5ldyBDb2xsYXBzZURldGVjdGlvbih0aGlzKTtcblxuICAgIHRoaXMuX2FuaW1hdG9yRmFjdG9yeSA9IG5ldyBBbmltYXRvckZhY3Rvcnkoe1xuICAgICAgYW5pbWF0b3JzOiBTcGxpdHRlckVsZW1lbnQuYW5pbWF0b3JzLFxuICAgICAgYmFzZUNsYXNzOiBTcGxpdHRlckFuaW1hdG9yLFxuICAgICAgYmFzZUNsYXNzTmFtZTogJ1NwbGl0dGVyQW5pbWF0b3InLFxuICAgICAgZGVmYXVsdEFuaW1hdGlvbjogdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbicpXG4gICAgfSk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgLy8gVGhlc2UgYXR0cmlidXRlcyBhcmUgdXNlZCBlYXJseSBieSB0aGUgcGFyZW50IGVsZW1lbnRcbiAgICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKCd3aWR0aCcpO1xuICAgICAgaWYgKCF0aGlzLmhhc0F0dHJpYnV0ZSgnc2lkZScpKSB7XG4gICAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdzaWRlJywgJ2xlZnQnKTtcbiAgICAgIH1cblxuICAgICAgcmV3cml0YWJsZXMucmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgICBjb25zdCBwYWdlID0gdGhpcy5fcGFnZSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGFnZScpO1xuICAgICAgICBwYWdlICYmIHRoaXMubG9hZChwYWdlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKCF1dGlsLm1hdGNoKHRoaXMucGFyZW50Tm9kZSwgJ29ucy1zcGxpdHRlcicpKSB7XG4gICAgICB1dGlsLnRocm93KCdQYXJlbnQgbXVzdCBiZSBhbiBvbnMtc3BsaXR0ZXIgZWxlbWVudCcpO1xuICAgIH1cblxuICAgIHRoaXMuX3N3aXBlID0gbmV3IFN3aXBlUmV2ZWFsKHtcbiAgICAgIGVsZW1lbnQ6IHRoaXMsXG4gICAgICBlbGVtZW50SGFuZGxlcjogdGhpcy5wYXJlbnRFbGVtZW50LFxuICAgICAgc3dpcGVNYXg6ICgpID0+IHtcbiAgICAgICAgdGhpcy5fb25Td2lwZSAmJiB0aGlzLl9vblN3aXBlKDEsIHRoaXMuX2FuaW1hdGlvbk9wdCk7XG4gICAgICAgIHRoaXMub3BlbigpO1xuICAgICAgfSxcbiAgICAgIHN3aXBlTWlkOiAoZGlzdGFuY2UsIHdpZHRoKSA9PiB7XG4gICAgICAgIHRoaXMuX29uU3dpcGUgJiYgdGhpcy5fb25Td2lwZShkaXN0YW5jZS93aWR0aCk7XG4gICAgICAgIHRoaXMuX2FuaW1hdG9yLnRyYW5zbGF0ZShkaXN0YW5jZSk7XG4gICAgICB9LFxuICAgICAgc3dpcGVNaW46ICgpID0+IHtcbiAgICAgICAgdGhpcy5fb25Td2lwZSAmJiB0aGlzLl9vblN3aXBlKDAsIHRoaXMuX2FuaW1hdGlvbk9wdCk7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH0sXG4gICAgICBnZXRUaHJlc2hvbGQ6ICgpID0+IE1hdGgubWF4KDAsIE1hdGgubWluKDEsIHBhcnNlRmxvYXQodGhpcy5nZXRBdHRyaWJ1dGUoJ29wZW4tdGhyZXNob2xkJykpIHx8IDAuMykpLFxuICAgICAgZ2V0U2lkZTogKCkgPT4gdGhpcy5zaWRlLFxuICAgICAgaXNJbml0aWFsU3RhdGU6ICgpID0+IHtcbiAgICAgICAgY29uc3QgY2xvc2VkID0gdGhpcy5fc3RhdGUgPT09IENMT1NFRF9TVEFURTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSBDSEFOR0lOR19TVEFURTtcbiAgICAgICAgcmV0dXJuIGNsb3NlZDtcbiAgICAgIH0sXG4gICAgICBpZ25vcmVTd2lwZTogKGV2ZW50LCBkaXN0YW5jZSkgPT4ge1xuICAgICAgICBjb25zdCBpc09wZW4gPSB0aGlzLmlzT3BlbjtcbiAgICAgICAgY29uc3QgdmFsaWREcmFnID0gZCA9PiB0aGlzLnNpZGUgPT09ICdsZWZ0J1xuICAgICAgICAgID8gKChkID09PSAnbGVmdCcgJiYgaXNPcGVuKSB8fCAoZCA9PT0gJ3JpZ2h0JyAmJiAhaXNPcGVuKSlcbiAgICAgICAgICA6ICgoZCA9PT0gJ2xlZnQnICYmICFpc09wZW4pIHx8IChkID09PSAncmlnaHQnICYmIGlzT3BlbikpO1xuXG4gICAgICAgIGNvbnN0IGFyZWEgPSBNYXRoLm1heCgwLCBwYXJzZUludCh0aGlzLmdldEF0dHJpYnV0ZSgnc3dpcGUtdGFyZ2V0LXdpZHRoJyksIDEwKSB8fCAwKTtcblxuICAgICAgICByZXR1cm4gdGhpcy5fbW9kZSA9PT0gU1BMSVRfTU9ERSB8fCB0aGlzLl9sb2NrLmlzTG9ja2VkKCkgfHwgdGhpcy5faXNPdGhlclNpZGVPcGVuKClcbiAgICAgICAgICB8fCAhdmFsaWREcmFnKGV2ZW50Lmdlc3R1cmUuZGlyZWN0aW9uKVxuICAgICAgICAgIHx8ICghaXNPcGVuICYmIGFyZWEgIT09IDAgJiYgZGlzdGFuY2UgPiBhcmVhKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKCdzd2lwZWFibGUnKTtcblxuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLmNvbnN0cnVjdG9yLm9ic2VydmVkQXR0cmlidXRlcy5mb3JFYWNoKGF0dHIgPT4gdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soYXR0ciwgbnVsbCwgdGhpcy5nZXRBdHRyaWJ1dGUoYXR0cikpKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBzaWRlKCkge1xuICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnc2lkZScpID09PSAncmlnaHQnID8gJ3JpZ2h0JyA6ICdsZWZ0JztcbiAgfVxuXG4gIGRpc2Nvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHRoaXMuX3N3aXBlICYmIHRoaXMuX3N3aXBlLmRpc3Bvc2UoKTtcbiAgICB0aGlzLl9hbmltYXRvciA9IHRoaXMuX2FuaW1hdGlvbk9wdCA9IHRoaXMuX3N3aXBlID0gbnVsbDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbJ2FuaW1hdGlvbicsICd3aWR0aCcsICdjb2xsYXBzZScsICdzd2lwZWFibGUnLCAnYW5pbWF0aW9uLW9wdGlvbnMnXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgc3dpdGNoIChuYW1lKSB7XG4gICAgICBjYXNlICdzd2lwZWFibGUnOlxuICAgICAgICB0aGlzLl9zd2lwZSAmJiB0aGlzLl9zd2lwZS51cGRhdGUoKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICd3aWR0aCc6XG4gICAgICAgIGN1cnJlbnQgPSB0aGlzLmdldEF0dHJpYnV0ZSgnd2lkdGgnKTsgLy8gU29tZXRpbWVzIHVuZGVmaW5lZC4gQ0UgYnVnP1xuICAgICAgICB0aGlzLnN0eWxlLndpZHRoID0gL15cXGQrKHB4fCUpJC8udGVzdChjdXJyZW50KSA/IGN1cnJlbnQgOiAnODAlJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICB0aGlzW3V0aWwuY2FtZWxpemUoYF91cGRhdGUtJHtuYW1lfWApXShjdXJyZW50KTtcbiAgICB9XG4gIH1cblxuICBfZW1pdEV2ZW50KG5hbWUpIHtcbiAgICBpZiAobmFtZS5zbGljZSgwLCAzKSAhPT0gJ3ByZScpIHtcbiAgICAgIHJldHVybiB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgbmFtZSwge3NpZGU6IHRoaXN9KTtcbiAgICB9XG4gICAgbGV0IGlzQ2FuY2VsZWQgPSBmYWxzZTtcblxuICAgIHV0aWwudHJpZ2dlckVsZW1lbnRFdmVudCh0aGlzLCBuYW1lLCB7XG4gICAgICBzaWRlOiB0aGlzLFxuICAgICAgY2FuY2VsOiAoKSA9PiBpc0NhbmNlbGVkID0gdHJ1ZVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIGlzQ2FuY2VsZWQ7XG4gIH1cblxuICBfaXNPdGhlclNpZGVPcGVuKCkge1xuICAgIHJldHVybiAhIXV0aWwuZmluZENoaWxkKHRoaXMucGFyZW50RWxlbWVudCxcbiAgICAgIGVsID0+IGVsIGluc3RhbmNlb2YgdGhpcy5jb25zdHJ1Y3RvciAmJiBlbCAhPT0gdGhpcyAmJiBlbC5fbW9kZSA9PT0gQ09MTEFQU0VfTU9ERSAmJiBlbC5pc09wZW5cbiAgICApO1xuICB9XG5cbiAgX3VwZGF0ZUNvbGxhcHNlKHZhbHVlID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2NvbGxhcHNlJykpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09ICdzcGxpdCcpIHtcbiAgICAgIHRoaXMuX2NvbGxhcHNlRGV0ZWN0aW9uLmRpc2FibGUoKTtcbiAgICAgIHJldHVybiB0aGlzLl91cGRhdGVNb2RlKFNQTElUX01PREUpO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09ICcnIHx8IHZhbHVlID09PSAnY29sbGFwc2UnKSB7XG4gICAgICB0aGlzLl9jb2xsYXBzZURldGVjdGlvbi5kaXNhYmxlKCk7XG4gICAgICByZXR1cm4gdGhpcy5fdXBkYXRlTW9kZShDT0xMQVBTRV9NT0RFKTtcbiAgICB9XG5cbiAgICB0aGlzLl9jb2xsYXBzZURldGVjdGlvbi5jaGFuZ2VUYXJnZXQodmFsdWUpO1xuICB9XG5cbiAgX3VwZGF0ZU1vZGUobW9kZSkge1xuICAgIGlmIChtb2RlICE9PSB0aGlzLl9tb2RlKSB7XG4gICAgICB0aGlzLl9tb2RlID0gbW9kZTtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdtb2RlJywgbW9kZSk7IC8vIHJlYWRvbmx5IGF0dHJpYnV0ZSBmb3IgdGhlIHVzZXJzXG5cbiAgICAgIGlmIChtb2RlID09PSBTUExJVF9NT0RFKSB7XG4gICAgICAgIHRoaXMuX2FuaW1hdG9yICYmIHRoaXMuX2FuaW1hdG9yLmRlYWN0aXZhdGUoKTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSBDTE9TRURfU1RBVEU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9hbmltYXRvciAmJiB0aGlzLl9hbmltYXRvci5hY3RpdmF0ZSh0aGlzKTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPT09IE9QRU5fU1RBVEUgJiYgdGhpcy5fYW5pbWF0b3Iub3BlbigpO1xuICAgICAgfVxuXG4gICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ21vZGVjaGFuZ2UnLCB7IHNpZGU6IHRoaXMsIG1vZGUgfSk7XG4gICAgfVxuICB9XG5cbiAgX3VwZGF0ZUFuaW1hdGlvbihhbmltYXRpb24gPSB0aGlzLmdldEF0dHJpYnV0ZSgnYW5pbWF0aW9uJykpIHtcbiAgICBpZiAodGhpcy5wYXJlbnROb2RlKSB7XG4gICAgICB0aGlzLl9hbmltYXRvciAmJiB0aGlzLl9hbmltYXRvci5kZWFjdGl2YXRlKCk7XG4gICAgICB0aGlzLl9hbmltYXRvciA9IHRoaXMuX2FuaW1hdG9yRmFjdG9yeS5uZXdBbmltYXRvcih7YW5pbWF0aW9ufSk7XG4gICAgICB0aGlzLl9hbmltYXRvci5hY3RpdmF0ZSh0aGlzKTtcbiAgICAgIHRoaXMuX2FuaW1hdGlvbk9wdCA9IHtcbiAgICAgICAgdGltaW5nOiB0aGlzLl9hbmltYXRvci5kdXJhdGlvbixcbiAgICAgICAgZHVyYXRpb246IHRoaXMuX2FuaW1hdG9yLmR1cmF0aW9uXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIF91cGRhdGVBbmltYXRpb25PcHRpb25zKHZhbHVlID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ2FuaW1hdGlvbi1vcHRpb25zJykpIHtcbiAgICB0aGlzLl9hbmltYXRvci51cGRhdGVPcHRpb25zKEFuaW1hdG9yRmFjdG9yeS5wYXJzZUFuaW1hdGlvbk9wdGlvbnNTdHJpbmcodmFsdWUpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgcGFnZVxuICAgKiBAdHlwZSB7Kn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVBhZ2UgbG9jYXRpb24gdG8gbG9hZCBpbiB0aGUgc3BsaXR0ZXIgc2lkZS5bL2VuXVxuICAgKiAgIFtqYV3jgZPjga7opoHntKDlhoXjgavooajnpLrjgZnjgovjg5rjg7zjgrjjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHBhZ2UoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3BhZ2U7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHsqfSBwYWdlXG4gICAqL1xuICBzZXQgcGFnZShwYWdlKSB7XG4gICAgdGhpcy5fcGFnZSA9IHBhZ2U7XG4gIH1cblxuICBnZXQgX2NvbnRlbnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuY2hpbGRyZW5bMF07XG4gIH1cblxuICAvKipcbiAgICogQHByb3BlcnR5IHBhZ2VMb2FkZXJcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgcGFnZUxvYWRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fcGFnZUxvYWRlcjtcbiAgfVxuXG4gIHNldCBwYWdlTG9hZGVyKGxvYWRlcikge1xuICAgIGlmICghKGxvYWRlciBpbnN0YW5jZW9mIFBhZ2VMb2FkZXIpKSB7XG4gICAgICB1dGlsLnRocm93UGFnZUxvYWRlcigpO1xuICAgIH1cbiAgICB0aGlzLl9wYWdlTG9hZGVyID0gbG9hZGVyO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBtb2RlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dQ3VycmVudCBtb2RlLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwic3BsaXRcIiwgXCJjb2xsYXBzZVwiLCBcImNsb3NlZFwiLCBcIm9wZW5cIiBvciBcImNoYW5naW5nXCIuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBtb2RlKCkge1xuICAgIHJldHVybiB0aGlzLl9tb2RlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvblN3aXBlXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhvb2sgY2FsbGVkIHdoZW5ldmVyIHRoZSB1c2VyIHNsaWRlcyB0aGUgc3BsaXR0ZXIuIEl0IGdldHMgYSBkZWNpbWFsIHJhdGlvICgwLTEpIGFuZCBhbiBhbmltYXRpb25PcHRpb25zIG9iamVjdCBhcyBhcmd1bWVudHMuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIGdldCBvblN3aXBlKCkge1xuICAgIHJldHVybiB0aGlzLl9vblN3aXBlO1xuICB9XG5cbiAgc2V0IG9uU3dpcGUodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgJiYgISh2YWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uKSkge1xuICAgICAgdXRpbC50aHJvdygnXCJvblN3aXBlXCIgbXVzdCBiZSBhIGZ1bmN0aW9uJylcbiAgICB9XG4gICAgdGhpcy5fb25Td2lwZSA9IHZhbHVlO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBpc09wZW5cbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEByZWFkb25seVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhpcyB2YWx1ZSBpcyBgdHJ1ZWAgd2hlbiB0aGUgbWVudSBpcyBvcGVuLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgaXNPcGVuKCkge1xuICAgIHJldHVybiB0aGlzLl9tb2RlID09PSBDT0xMQVBTRV9NT0RFICYmIHRoaXMuX3N0YXRlICE9PSBDTE9TRURfU1RBVEU7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBvcGVuXG4gICAqIEBzaWduYXR1cmUgb3Blbihbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbb3B0aW9ucy5jYWxsYmFja11cbiAgICogICBbZW5dVGhpcyBmdW5jdGlvbiB3aWxsIGJlIGNhbGxlZCBhZnRlciB0aGUgbWVudSBoYXMgYmVlbiBvcGVuZWQuWy9lbl1cbiAgICogICBbamFd44Oh44OL44Ol44O844GM6ZaL44GE44Gf5b6M44Gr5ZG844Gz5Ye644GV44KM44KL6Zai5pWw44Kq44OW44K444Kn44Kv44OI44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXU9wZW4gbWVudSBpbiBjb2xsYXBzZSBtb2RlLlsvZW5dXG4gICAqICAgW2phXWNvbGxhcHNl44Oi44O844OJ44Gr44Gq44Gj44Gm44GE44KLb25zLXNwbGl0dGVyLXNpZGXopoHntKDjgpLplovjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgc3BsaXR0ZXIgc2lkZSBlbGVtZW50IG9yIGZhbHNlIGlmIG5vdCBpbiBjb2xsYXBzZSBtb2RlWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIG9wZW4ob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLnRvZ2dsZShvcHRpb25zLCB0cnVlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGNsb3NlXG4gICAqIEBzaWduYXR1cmUgY2xvc2UoW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXVRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgdGhlIG1lbnUgaGFzIGJlZW4gY2xvc2VkLlsvZW5dXG4gICAqICAgW2phXeODoeODi+ODpeODvOOBjOmWieOBmOOBn+W+jOOBq+WRvOOBs+WHuuOBleOCjOOCi+mWouaVsOOCquODluOCuOOCp+OCr+ODiOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1DbG9zZSBtZW51IGluIGNvbGxhcHNlIG1vZGUuWy9lbl1cbiAgICogICBbamFdY29sbGFwc2Xjg6Ljg7zjg4njgavjgarjgaPjgabjgYTjgotvbnMtc3BsaXR0ZXItc2lkZeimgee0oOOCkumWieOBmOOBvuOBmeOAglsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBzcGxpdHRlciBzaWRlIGVsZW1lbnQgb3IgZmFsc2UgaWYgbm90IGluIGNvbGxhcHNlIG1vZGVbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgY2xvc2Uob3B0aW9ucykge1xuICAgIHJldHVybiB0aGlzLnRvZ2dsZShvcHRpb25zLCBmYWxzZSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCB0b2dnbGVcbiAgICogQHNpZ25hdHVyZSB0b2dnbGUoW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1PcGVucyBpZiBpdCdzIGNsb3NlZC4gQ2xvc2VzIGlmIGl0J3Mgb3Blbi5bL2VuXVxuICAgKiAgIFtqYV3plovjgZHjgabjgYTjgovloLTlkIjjga/opoHntKDjgpLplonjgZjjgb7jgZnjgZ3jgZfjgabplovjgZHjgabjgYTjgovloLTlkIjjga/opoHntKDjgpLplovjgY3jgb7jgZnjgIJbL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgc3BsaXR0ZXIgc2lkZSBlbGVtZW50IG9yIGZhbHNlIGlmIG5vdCBpbiBjb2xsYXBzZSBtb2RlWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHRvZ2dsZShvcHRpb25zID0ge30sIGZvcmNlKSB7XG4gICAgY29uc3Qgc2hvdWxkT3BlbiA9IHR5cGVvZiBmb3JjZSA9PT0gJ2Jvb2xlYW4nID8gZm9yY2UgOiAhdGhpcy5pc09wZW47XG4gICAgY29uc3QgYWN0aW9uID0gc2hvdWxkT3BlbiA/ICdvcGVuJyA6ICdjbG9zZSc7XG4gICAgY29uc3QgRklOQUxfU1RBVEUgPSBzaG91bGRPcGVuID8gT1BFTl9TVEFURSA6IENMT1NFRF9TVEFURTtcblxuICAgIGlmICh0aGlzLl9tb2RlID09PSBTUExJVF9NT0RFKSB7XG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGZhbHNlKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX3N0YXRlID09PSBGSU5BTF9TVEFURSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX2xvY2suaXNMb2NrZWQoKSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KCdBbm90aGVyIHNwbGl0dGVyLXNpZGUgYWN0aW9uIGlzIGFscmVhZHkgcnVubmluZy4nKTtcbiAgICB9XG4gICAgaWYgKHNob3VsZE9wZW4gJiYgdGhpcy5faXNPdGhlclNpZGVPcGVuKCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnQW5vdGhlciBtZW51IGlzIGFscmVhZHkgb3Blbi4nKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuX2VtaXRFdmVudChgcHJlJHthY3Rpb259YCkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgQ2FuY2VsZWQgaW4gcHJlJHthY3Rpb259IGV2ZW50LmApO1xuICAgIH1cblxuICAgIGNvbnN0IHVubG9jayA9IHRoaXMuX2xvY2subG9jaygpO1xuICAgIHRoaXMuX3N0YXRlID0gQ0hBTkdJTkdfU1RBVEU7XG5cbiAgICBpZiAob3B0aW9ucy5hbmltYXRpb24pIHtcbiAgICAgIHRoaXMuX3VwZGF0ZUFuaW1hdGlvbihvcHRpb25zLmFuaW1hdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fYW5pbWF0b3JbYWN0aW9uXSgoKSA9PiB7XG4gICAgICAgIHV0aWwuaW9zUGFnZVNjcm9sbEZpeChzaG91bGRPcGVuKTtcbiAgICAgICAgdGhpcy5fc3RhdGUgPSBGSU5BTF9TVEFURTtcbiAgICAgICAgdW5sb2NrKCk7XG4gICAgICAgIHRoaXMuX2VtaXRFdmVudChgcG9zdCR7YWN0aW9ufWApO1xuICAgICAgICBvcHRpb25zLmNhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb24gJiYgb3B0aW9ucy5jYWxsYmFjayh0aGlzKTtcbiAgICAgICAgcmVzb2x2ZSh0aGlzKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBtZXRob2QgbG9hZFxuICAgKiBAc2lnbmF0dXJlIGxvYWQocGFnZSwgW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge1N0cmluZ30gcGFnZVxuICAgKiAgIFtlbl1QYWdlIFVSTC4gQ2FuIGJlIGVpdGhlciBhbiBIVE1MIGRvY3VtZW50IG9yIGEgYDx0ZW1wbGF0ZT5gLlsvZW5dXG4gICAqICAgW2phXXBhZ2Xjga5VUkzjgYvjgIFgPHRlbXBsYXRlPmDjgaflrqPoqIDjgZfjgZ/jg4bjg7Pjg5fjg6zjg7zjg4jjga5pZOWxnuaAp+OBruWApOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBwYWdlIHNwZWNpZmllZCBpbiBwYWdlVXJsIGluIHRoZSByaWdodCBzZWN0aW9uWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44GfVVJM44KS44Oh44Kk44Oz44Oa44O844K444KS6Kqt44G/6L6844G/44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dUmVzb2x2ZXMgdG8gdGhlIG5ldyBwYWdlIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cbiAgbG9hZChwYWdlLCBvcHRpb25zID0ge30pIHtcbiAgICB0aGlzLl9wYWdlID0gcGFnZTtcbiAgICBjb25zdCBjYWxsYmFjayA9IG9wdGlvbnMuY2FsbGJhY2sgfHwgKCgpID0+IHt9KTtcblxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgIGxldCBvbGRDb250ZW50ID0gdGhpcy5fY29udGVudCB8fCBudWxsO1xuXG4gICAgICB0aGlzLl9wYWdlTG9hZGVyLmxvYWQoe3BhZ2UsIHBhcmVudDogdGhpc30sIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgaWYgKG9sZENvbnRlbnQpIHtcbiAgICAgICAgICB0aGlzLl9wYWdlTG9hZGVyLnVubG9hZChvbGRDb250ZW50KTtcbiAgICAgICAgICBvbGRDb250ZW50ID0gbnVsbDtcbiAgICAgICAgfVxuXG4gICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0aGlzLl9zaG93KCkpO1xuXG4gICAgICAgIGNhbGxiYWNrKHBhZ2VFbGVtZW50KTtcbiAgICAgICAgcmVzb2x2ZShwYWdlRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIF9zaG93KCkge1xuICAgIGlmICh0aGlzLl9jb250ZW50KSB7XG4gICAgICB0aGlzLl9jb250ZW50Ll9zaG93KCk7XG4gICAgfVxuICB9XG5cbiAgX2hpZGUoKSB7XG4gICAgaWYgKHRoaXMuX2NvbnRlbnQpIHtcbiAgICAgIHRoaXMuX2NvbnRlbnQuX2hpZGUoKTtcbiAgICB9XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICBpZiAodGhpcy5fY29udGVudCkge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci51bmxvYWQodGhpcy5fY29udGVudCk7XG4gICAgfVxuICAgIHRoaXMucmVtb3ZlKCk7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVvcGVuJywgJ3Bvc3RvcGVuJywgJ3ByZWNsb3NlJywgJ3Bvc3RjbG9zZScsICdtb2RlY2hhbmdlJ107XG4gIH1cblxuICBzdGF0aWMgZ2V0IHJld3JpdGFibGVzKCkge1xuICAgIHJldHVybiByZXdyaXRhYmxlcztcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5TcGxpdHRlclNpZGUgPSBTcGxpdHRlclNpZGVFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3BsaXR0ZXItc2lkZScsIFNwbGl0dGVyU2lkZUVsZW1lbnQpO1xuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQmFzZUNoZWNrYm94RWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1jaGVja2JveCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uL29ucy9jb250ZW50LXJlYWR5JztcbmltcG9ydCBHZXN0dXJlRGV0ZWN0b3IgZnJvbSAnLi4vb25zL2dlc3R1cmUtZGV0ZWN0b3InO1xuXG5jb25zdCBzY2hlbWUgPSB7XG4gICcnOiAnc3dpdGNoLS0qJyxcbiAgJy5zd2l0Y2hfX2lucHV0JzogJ3N3aXRjaC0tKl9faW5wdXQnLFxuICAnLnN3aXRjaF9faGFuZGxlJzogJ3N3aXRjaC0tKl9faGFuZGxlJyxcbiAgJy5zd2l0Y2hfX3RvZ2dsZSc6ICdzd2l0Y2gtLSpfX3RvZ2dsZSdcbn07XG5cbmNvbnN0IGxvY2F0aW9ucyA9IHtcbiAgaW9zOiBbMSwgMjFdLFxuICBtYXRlcmlhbDogWzAsIDE2XVxufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtc3dpdGNoXG4gKiBAY2F0ZWdvcnkgZm9ybVxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1cbiAqICAgICBTd2l0Y2ggY29tcG9uZW50LiBUaGUgc3dpdGNoIGNhbiBiZSB0b2dnbGVkIGJvdGggYnkgZHJhZ2dpbmcgYW5kIHRhcHBpbmcuXG4gKlxuICogICAgIFdpbGwgYXV0b21hdGljYWxseSBkaXNwbGF5cyBhIE1hdGVyaWFsIERlc2lnbiBzd2l0Y2ggb24gQW5kcm9pZCBkZXZpY2VzLlxuICogICBbL2VuXVxuICogICBbamFd44K544Kk44OD44OB44KS6KGo56S644GZ44KL44Kz44Oz44Od44O844ON44Oz44OI44Gn44GZ44CCWy9qYV1cbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHN3aXRjaFsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQGNvZGVwZW4gTHBYWlFRXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2Uvc3dpdGNoXG4gKiBAZ3VpZGUgdGhlbWluZy5odG1sI21vZGlmaWVycyBbZW5dTW9yZSBkZXRhaWxzIGFib3V0IHRoZSBgbW9kaWZpZXJgIGF0dHJpYnV0ZVsvZW5dW2phXW1vZGlmaWVy5bGe5oCn44Gu5L2/44GE5pa5Wy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXN3aXRjaCBjaGVja2VkPjwvb25zLXN3aXRjaD5cbiAqIDxvbnMtc3dpdGNoIGRpc2FibGVkPjwvb25zLXN3aXRjaD5cbiAqIDxvbnMtc3dpdGNoIG1vZGlmaWVyPVwibWF0ZXJpYWxcIj48L29ucy1zd2l0Y2g+XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3dpdGNoRWxlbWVudCBleHRlbmRzIEJhc2VDaGVja2JveEVsZW1lbnQge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG5cbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2soJ21vZGlmaWVyJywgbnVsbCwgdGhpcy5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5fb25DaGFuZ2UgPSB0aGlzLl9vbkNoYW5nZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX29uUmVsZWFzZSA9IHRoaXMuX29uUmVsZWFzZS5iaW5kKHRoaXMpO1xuICAgIHRoaXMuX2xhc3RUaW1lU3RhbXAgPSAwO1xuICB9XG5cbiAgZ2V0IF9zY2hlbWUoKSB7XG4gICAgcmV0dXJuIHNjaGVtZTtcbiAgfVxuXG4gIGdldCBfZGVmYXVsdENsYXNzTmFtZSgpIHtcbiAgICByZXR1cm4gJ3N3aXRjaCc7XG4gIH1cblxuICBnZXQgX3RlbXBsYXRlKCkge1xuICAgIHJldHVybiBgXG4gICAgICA8aW5wdXQgdHlwZT1cIiR7dGhpcy50eXBlfVwiIGNsYXNzPVwiJHt0aGlzLl9kZWZhdWx0Q2xhc3NOYW1lfV9faW5wdXRcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCIke3RoaXMuX2RlZmF1bHRDbGFzc05hbWV9X190b2dnbGVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cIiR7dGhpcy5fZGVmYXVsdENsYXNzTmFtZX1fX2hhbmRsZVwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCIke3RoaXMuX2RlZmF1bHRDbGFzc05hbWV9X190b3VjaFwiPjwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIGA7XG4gIH1cblxuICBnZXQgdHlwZSgpIHtcbiAgICByZXR1cm4gJ2NoZWNrYm94JztcbiAgfVxuXG4gIC8qIE93biBwcm9wcyAqL1xuXG4gIF9nZXRQb3NpdGlvbihlKSB7XG4gICAgY29uc3QgbCA9IHRoaXMuX2xvY2F0aW9ucztcbiAgICByZXR1cm4gTWF0aC5taW4obFsxXSwgTWF0aC5tYXgobFswXSwgdGhpcy5fc3RhcnRYICsgZS5nZXN0dXJlLmRlbHRhWCkpO1xuICB9XG5cbiAgX2VtaXRDaGFuZ2VFdmVudCgpIHtcbiAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ2NoYW5nZScsIHtcbiAgICAgIHZhbHVlOiB0aGlzLmNoZWNrZWQsXG4gICAgICBzd2l0Y2g6IHRoaXMsXG4gICAgICBpc0ludGVyYWN0aXZlOiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBfb25DaGFuZ2UoZXZlbnQpIHtcbiAgICBpZiAoZXZlbnQgJiYgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKSB7XG4gICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9XG5cbiAgICB0aGlzLl9lbWl0Q2hhbmdlRXZlbnQoKTtcbiAgfVxuXG4gIF9vbkNsaWNrKGV2KSB7XG4gICAgaWYgKGV2LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoYCR7dGhpcy5kZWZhdWx0RWxlbWVudENsYXNzfV9fdG91Y2hgKVxuICAgICAgfHwgKGV2LnRpbWVTdGFtcCAtIHRoaXMuX2xhc3RUaW1lU3RhbXAgPCA1MCkgLy8gUHJldmVudCBzZWNvbmQgY2xpY2sgdHJpZ2dlcmVkIGJ5IDxsYWJlbD5cbiAgICApIHtcbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxuICAgIHRoaXMuX2xhc3RUaW1lU3RhbXAgPSBldi50aW1lU3RhbXA7XG4gIH1cblxuICBfb25Ib2xkKGUpIHtcbiAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgIE1vZGlmaWVyVXRpbC5hZGRNb2RpZmllcih0aGlzLCAnYWN0aXZlJyk7XG4gICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdyZWxlYXNlJywgdGhpcy5fb25SZWxlYXNlKTtcbiAgICB9XG4gIH1cblxuICBfb25EcmFnU3RhcnQoZSkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkIHx8IFsnbGVmdCcsICdyaWdodCddLmluZGV4T2YoZS5nZXN0dXJlLmRpcmVjdGlvbikgPT09IC0xKSB7XG4gICAgICBNb2RpZmllclV0aWwucmVtb3ZlTW9kaWZpZXIodGhpcywgJ2FjdGl2ZScpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGUuY29uc3VtZWQgPSB0cnVlO1xuXG4gICAgTW9kaWZpZXJVdGlsLmFkZE1vZGlmaWVyKHRoaXMsICdhY3RpdmUnKTtcbiAgICB0aGlzLl9zdGFydFggPSB0aGlzLl9sb2NhdGlvbnNbdGhpcy5jaGVja2VkID8gMSA6IDBdOy8vIC0gZS5nZXN0dXJlLmRlbHRhWDtcblxuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncmVsZWFzZScsIHRoaXMuX29uUmVsZWFzZSk7XG4gIH1cblxuICBfb25EcmFnKGUpIHtcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIHRoaXMuX2hhbmRsZS5zdHlsZS5sZWZ0ID0gdGhpcy5fZ2V0UG9zaXRpb24oZSkgKyAncHgnO1xuICB9XG5cbiAgX29uUmVsZWFzZShlKSB7XG4gICAgY29uc3QgbCA9IHRoaXMuX2xvY2F0aW9ucztcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMuX2dldFBvc2l0aW9uKGUpO1xuICAgIGNvbnN0IHByZXZpb3VzVmFsdWUgPSB0aGlzLmNoZWNrZWQ7XG5cbiAgICB0aGlzLmNoZWNrZWQgPSBwb3NpdGlvbiA+PSAobFswXSArIGxbMV0pIC8gMjtcblxuICAgIGlmICh0aGlzLmNoZWNrZWQgIT09IHByZXZpb3VzVmFsdWUpIHtcbiAgICAgIHRoaXMuX2VtaXRDaGFuZ2VFdmVudCgpO1xuICAgIH1cblxuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignZHJhZycsIHRoaXMuX29uRHJhZyk7XG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVsZWFzZScsIHRoaXMuX29uUmVsZWFzZSk7XG5cbiAgICB0aGlzLl9oYW5kbGUuc3R5bGUubGVmdCA9ICcnO1xuICAgIE1vZGlmaWVyVXRpbC5yZW1vdmVNb2RpZmllcih0aGlzLCAnYWN0aXZlJyk7XG4gIH1cblxuICBjbGljayhldiA9IHt9KSB7XG4gICAgaWYgKCF0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLmNoZWNrZWQgPSAhdGhpcy5jaGVja2VkO1xuICAgICAgdGhpcy5fZW1pdENoYW5nZUV2ZW50KCk7XG4gICAgICB0aGlzLl9sYXN0VGltZVN0YW1wID0gZXYudGltZVN0YW1wIHx8IDA7XG4gICAgfVxuICB9XG5cbiAgZ2V0IF9oYW5kbGUoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fZGVmYXVsdENsYXNzTmFtZX1fX2hhbmRsZWApO1xuICB9XG5cbiAgZ2V0IGNoZWNrYm94KCkge1xuICAgIHJldHVybiB0aGlzLl9pbnB1dDtcbiAgfVxuXG4gIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiB7XG4gICAgICB0aGlzLl9pbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9vbkNoYW5nZSk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2RyYWdzdGFydCcsIHRoaXMuX29uRHJhZ1N0YXJ0KTtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2hvbGQnLCB0aGlzLl9vbkhvbGQpO1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcigndGFwJywgdGhpcy5jbGljayk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuX29uQ2xpY2spO1xuICAgIHRoaXMuX2dlc3R1cmVEZXRlY3RvciA9IG5ldyBHZXN0dXJlRGV0ZWN0b3IodGhpcywgeyBkcmFnTWluRGlzdGFuY2U6IDEsIGhvbGRUaW1lb3V0OiAyNTEsIHBhc3NpdmU6IHRydWUgfSk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5faW5wdXQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgdGhpcy5fb25DaGFuZ2UpO1xuICAgIH0pO1xuXG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdkcmFnc3RhcnQnLCB0aGlzLl9vbkRyYWdTdGFydCk7XG4gICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVyKCdob2xkJywgdGhpcy5fb25Ib2xkKTtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RhcCcsIHRoaXMuY2xpY2spO1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLl9vbkNsaWNrKTtcbiAgICBpZiAodGhpcy5fZ2VzdHVyZURldGVjdG9yKSB7XG4gICAgICB0aGlzLl9nZXN0dXJlRGV0ZWN0b3IuZGlzcG9zZSgpO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZWRBdHRyaWJ1dGVzKCkge1xuICAgIHJldHVybiBbLi4uc3VwZXIub2JzZXJ2ZWRBdHRyaWJ1dGVzLCAnbW9kaWZpZXInXTtcbiAgfVxuXG4gIGF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayhuYW1lLCBsYXN0LCBjdXJyZW50KSB7XG4gICAgaWYgKG5hbWUgPT09ICdtb2RpZmllcicpIHtcbiAgICAgIGNvbnN0IG1kID0gKGN1cnJlbnQgfHwgJycpLmluZGV4T2YoJ21hdGVyaWFsJykgIT09IC0xO1xuICAgICAgdGhpcy5fbG9jYXRpb25zID0gbG9jYXRpb25zW21kID8gJ21hdGVyaWFsJyA6ICdpb3MnXTtcbiAgICB9XG5cbiAgICBzdXBlci5hdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCk7XG4gIH1cblxuICAvKipcbiAgICogQGV2ZW50IGNoYW5nZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZWQgd2hlbiB0aGUgc3dpdGNoIGlzIHRvZ2dsZWQuWy9lbl1cbiAgICogICBbamFdT04vT0ZG44GM5aSJ44KP44Gj44Gf5pmC44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gZXZlbnQuc3dpdGNoXG4gICAqICAgW2VuXVN3aXRjaCBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kk44OZ44Oz44OI44GM55m654Gr44GX44GfU3dpdGNo44Kq44OW44K444Kn44Kv44OI44KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtCb29sZWFufSBldmVudC52YWx1ZVxuICAgKiAgIFtlbl1DdXJyZW50IHZhbHVlLlsvZW5dXG4gICAqICAgW2phXeePvuWcqOOBruWApOOCkui/lOOBl+OBvuOBmeOAglsvamFdXG4gICAqIEBwYXJhbSB7Qm9vbGVhbn0gZXZlbnQuaXNJbnRlcmFjdGl2ZVxuICAgKiAgIFtlbl1UcnVlIGlmIHRoZSBjaGFuZ2Ugd2FzIHRyaWdnZXJlZCBieSB0aGUgdXNlciBjbGlja2luZyBvbiB0aGUgc3dpdGNoLlsvZW5dXG4gICAqICAgW2phXeOCv+ODg+ODl+OChOOCr+ODquODg+OCr+OBquOBqeOBruODpuODvOOCtuOBruaTjeS9nOOBq+OCiOOBo+OBpuWkieOCj+OBo+OBn+WgtOWQiOOBq+OBr3RydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1UaGUgYXBwZWFyYW5jZSBvZiB0aGUgc3dpdGNoLlsvZW5dXG4gICAqICBbamFd44K544Kk44OD44OB44Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgZGlzYWJsZWRcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIHN3aXRjaCBpcyBiZSBkaXNhYmxlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgqTjg4Pjg4HjgpLnhKHlirnjga7nirbmhYvjgavjgZnjgovloLTlkIjjgavmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBjaGVja2VkXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBzd2l0Y2ggaXMgY2hlY2tlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgqTjg4Pjg4HjgYxPTuOBrueKtuaFi+OBq+OBmeOCi+OBqOOBjeOBq+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGlucHV0LWlkXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBgaWRgIGF0dHJpYnV0ZSBvZiB0aGUgaW5uZXIgYDxpbnB1dD5gIGVsZW1lbnQuIFRoaXMgaXMgdXNlZnVsIHdoZW4gdXNpbmcgYDxsYWJlbCBmb3I9XCIuLi5cIj5gIGVsZW1lbnRzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgY2hlY2tlZFxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoaXMgdmFsdWUgaXMgYHRydWVgIGlmIHRoZSBzd2l0Y2ggaXMgY2hlY2tlZC5bL2VuXVxuICAgKiAgIFtqYV3jgrnjgqTjg4Pjg4HjgYxPTuOBruWgtOWQiOOBq2B0cnVlYOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmFsdWVcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBpbnB1dC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHByb3BlcnR5IGRpc2FibGVkXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0aGUgZWxlbWVudCBpcyBkaXNhYmxlZCBvciBub3QuWy9lbl1cbiAgICogICBbamFd54Sh5Yq55YyW44GV44KM44Gm44GE44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBjaGVja2JveFxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0hUTUxFbGVtZW50fVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIHVuZGVybHlpbmcgY2hlY2tib3ggZWxlbWVudC5bL2VuXVxuICAgKiAgIFtqYV3jgrPjg7Pjg53jg7zjg43jg7Pjg4jlhoXpg6jjga5jaGVja2JveOimgee0oOOBq+OBquOCiuOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGZvY3VzXG4gICAqIEBzaWduYXR1cmUgZm9jdXMoKVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRm9jdXNlcyB0aGUgc3dpdGNoLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGJsdXJcbiAgICogQHNpZ25hdHVyZSBibHVyKClcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJlbW92ZXMgZm9jdXMgZnJvbSB0aGUgc3dpdGNoLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xufVxuXG5vbnNFbGVtZW50cy5Td2l0Y2ggPSBTd2l0Y2hFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtc3dpdGNoJywgU3dpdGNoRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBpbnRlcm5hbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi8uLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBTd2lwZXIgZnJvbSAnLi4vLi4vb25zL2ludGVybmFsL3N3aXBlcic7XG5pbXBvcnQgTW9kaWZpZXJVdGlsIGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9tb2RpZmllci11dGlsJztcbmltcG9ydCBCYXNlRWxlbWVudCBmcm9tICcuLi9iYXNlL2Jhc2UtZWxlbWVudCc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnRhYmJhcl9fY29udGVudCc6ICd0YWJiYXItLSpfX2NvbnRlbnQnLFxuICAnLnRhYmJhcl9fYm9yZGVyJzogJ3RhYmJhci0tKl9fYm9yZGVyJyxcbiAgJy50YWJiYXInOiAndGFiYmFyLS0qJ1xufTtcblxuY29uc3QgcmV3cml0YWJsZXMgPSB7XG4gIC8qKlxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IHRhYmJhckVsZW1lbnRcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHJlYWR5KHRhYmJhckVsZW1lbnQsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufTtcblxuY29uc3QgbnVsbFBhZ2UgPSBpbnRlcm5hbC5udWxsRWxlbWVudDtcbmNvbnN0IGxlcnAgPSAoeDAsIHgxLCB0KSA9PiAoMSAtIHQpICogeDAgKyB0ICogeDE7XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXRhYmJhclxuICogQGNhdGVnb3J5IHRhYmJhclxuICogQGRlc2NyaXB0aW9uXG4gKiAgIFtlbl1BIGNvbXBvbmVudCB0byBkaXNwbGF5IGEgdGFiIGJhciBvbiB0aGUgYm90dG9tIG9mIGEgcGFnZS4gVXNlZCB3aXRoIGA8b25zLXRhYj5gIHRvIG1hbmFnZSBwYWdlcyB1c2luZyB0YWJzLlsvZW5dXG4gKiAgIFtqYV3jgr/jg5bjg5Djg7zjgpLjg5rjg7zjgrjkuIvpg6jjgavooajnpLrjgZnjgovjgZ/jgoHjga7jgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgIJvbnMtdGFi44Go57WE44G/5ZCI44KP44Gb44Gm5L2/44GG44GT44Go44Gn44CB44Oa44O844K444KS566h55CG44Gn44GN44G+44GZ44CCWy9qYV1cbiAqIEBjb2RlcGVuIHBHdURMXG4gKiBAdHV0b3JpYWwgdmFuaWxsYS9SZWZlcmVuY2UvdGFiYmFyXG4gKiBAbW9kaWZpZXIgbWF0ZXJpYWxcbiAqICAgW2VuXUEgdGFiYmFyIGluIE1hdGVyaWFsIERlc2lnbi5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciBhdXRvZ3Jvd1xuICogICBbZW5dVGFicyBhdXRvbWF0aWNhbGx5IGdyb3cgZGVwZW5kaW5nIG9uIHRoZWlyIGNvbnRlbnQgaW5zdGVhZCBvZiBoYXZpbmcgYSBmaXhlZCB3aWR0aC5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBtb2RpZmllciB0b3AtYm9yZGVyXG4gKiAgIFtlbl1TaG93cyBhIHN0YXRpYyBib3JkZXItYm90dG9tIGluIHRhYnMgZm9yIGlPUyB0b3AgdGFiYmFycy5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEBndWlkZSBmdW5kYW1lbnRhbHMuaHRtbCNtYW5hZ2luZy1wYWdlc1xuICogIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogIFtqYV3opIfmlbDjga7jg5rjg7zjgrjjgpLnrqHnkIbjgZnjgotbL2phXVxuICogQHNlZWFsc28gb25zLXRhYlxuICogICBbZW5dVGhlIGA8b25zLXRhYj5gIGNvbXBvbmVudC5bL2VuXVxuICogICBbamFdb25zLXRhYuOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtcGFnZVxuICogICBbZW5dVGhlIGA8b25zLXBhZ2U+YCBjb21wb25lbnQuWy9lbl1cbiAqICAgW2phXW9ucy1wYWdl44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRhYmJhcj5cbiAqICAgPG9ucy10YWJcbiAqICAgICBwYWdlPVwiaG9tZS5odG1sXCJcbiAqICAgICBsYWJlbD1cIkhvbWVcIlxuICogICAgIGFjdGl2ZT5cbiAqICAgPC9vbnMtdGFiPlxuICogICA8b25zLXRhYlxuICogICAgIHBhZ2U9XCJzZXR0aW5ncy5odG1sXCJcbiAqICAgICBsYWJlbD1cIlNldHRpbmdzXCJcbiAqICAgICBhY3RpdmU+XG4gKiAgIDwvb25zLXRhYj5cbiAqIDwvb25zLXRhYmJhcj5cbiAqXG4gKiA8dGVtcGxhdGUgaWQ9XCJob21lLmh0bWxcIj5cbiAqICAgLi4uXG4gKiA8L3RlbXBsYXRlPlxuICpcbiAqIDx0ZW1wbGF0ZSBpZD1cInNldHRpbmdzLmh0bWxcIj5cbiAqICAgLi4uXG4gKiA8L3RlbXBsYXRlPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUYWJiYXJFbGVtZW50IGV4dGVuZHMgQmFzZUVsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcHJlY2hhbmdlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlcyBqdXN0IGJlZm9yZSB0aGUgdGFiIGlzIGNoYW5nZWQuWy9lbl1cbiAgICogICBbamFd44Ki44Kv44OG44Kj44OW44Gq44K/44OW44GM5aSJ44KP44KL5YmN44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge051bWJlcn0gZXZlbnQuaW5kZXhcbiAgICogICBbZW5dQ3VycmVudCBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgotvbnMtdGFi44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnRhYkl0ZW1cbiAgICogICBbZW5dVGFiIGl0ZW0gb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXXRhYkl0ZW3jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBldmVudC5jYW5jZWxcbiAgICogICBbZW5dQ2FsbCB0aGlzIGZ1bmN0aW9uIHRvIGNhbmNlbCB0aGUgY2hhbmdlIGV2ZW50LlsvZW5dXG4gICAqICAgW2phXeOBk+OBrumWouaVsOOCkuWRvOOBs+WHuuOBmeOBqOOAgeOCouOCr+ODhuOCo+ODluOBquOCv+ODluOBruWkieabtOOBjOOCreODo+ODs+OCu+ODq+OBleOCjOOBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAZXZlbnQgcG9zdGNoYW5nZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRmlyZXMganVzdCBhZnRlciB0aGUgdGFiIGlzIGNoYW5nZWQuWy9lbl1cbiAgICogICBbamFd44Ki44Kv44OG44Kj44OW44Gq44K/44OW44GM5aSJ44KP44Gj44Gf5b6M44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge051bWJlcn0gZXZlbnQuaW5kZXhcbiAgICogICBbZW5dQ3VycmVudCBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgotvbnMtdGFi44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnRhYkl0ZW1cbiAgICogICBbZW5dVGFiIGl0ZW0gb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXXRhYkl0ZW3jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGV2ZW50IHJlYWN0aXZlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1GaXJlcyBpZiB0aGUgYWxyZWFkeSBvcGVuIHRhYiBpcyB0YXBwZWQgYWdhaW4uWy9lbl1cbiAgICogICBbamFd44GZ44Gn44Gr44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KL44K/44OW44GM44KC44GG5LiA5bqm44K/44OD44OX44KE44Kv44Oq44OD44Kv44GV44KM44Gf5aC05ZCI44Gr55m654Gr44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50XG4gICAqICAgW2VuXUV2ZW50IG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqTjg5njg7Pjg4jjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge051bWJlcn0gZXZlbnQuaW5kZXhcbiAgICogICBbZW5dQ3VycmVudCBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3nj77lnKjjgqLjgq/jg4bjgqPjg5bjgavjgarjgaPjgabjgYTjgotvbnMtdGFi44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQHBhcmFtIHtPYmplY3R9IGV2ZW50LnRhYkl0ZW1cbiAgICogICBbZW5dVGFiIGl0ZW0gb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXXRhYkl0ZW3jgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBhbmltYXRpb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgbm9uZVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSWYgdGhpcyBhdHRyaWJ1dGUgaXMgc2V0IHRvIGBcIm5vbmVcImAgdGhlIHRyYW5zaXRpb25zIHdpbGwgbm90IGJlIGFuaW1hdGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvbi1vcHRpb25zXG4gICAqIEB0eXBlIHtFeHByZXNzaW9ufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgdGltaW5nIGFuZCBkZWxheSB3aXRoIGFuIG9iamVjdCBsaXRlcmFsLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgdGltaW5nLCBkZWxheeOCkuOCquODluOCuOOCp+OCr+ODiOODquODhuODqeODq+OBp+aMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAxLCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBwb3NpdGlvblxuICAgKiBAaW5pdG9ubHlcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlZmF1bHQgYm90dG9tXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UYWJiYXIncyBwb3NpdGlvbi4gQXZhaWxhYmxlIHZhbHVlcyBhcmUgYFwiYm90dG9tXCJgIGFuZCBgXCJ0b3BcImAuIFVzZSBgXCJhdXRvXCJgIHRvIGNob29zZSBwb3NpdGlvbiBkZXBlbmRpbmcgb24gcGxhdGZvcm0gKGJvdHRvbSBmb3IgaU9TIGZsYXQgZGVzaWduLCB0b3AgZm9yIE1hdGVyaWFsIERlc2lnbikuWy9lbl1cbiAgICogICBbamFd44K/44OW44OQ44O844Gu5L2N572u44KS5oyH5a6a44GX44G+44GZ44CCXCJib3R0b21cIuOCguOBl+OBj+OBr1widG9wXCLjgpLpgbjmip7jgafjgY3jgb7jgZnjgILjg4fjg5Xjgqnjg6vjg4jjga9cImJvdHRvbVwi44Gn44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgc3dpcGVhYmxlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1JZiB0aGlzIGF0dHJpYnV0ZSBpcyBzZXQgdGhlIHRhYiBiYXIgY2FuIGJlIHNjcm9sbGVkIGJ5IGRyYWcgb3Igc3dpcGUuWy9lbl1cbiAgICogICBbamFd44GT44Gu5bGe5oCn44GM44GC44KL5pmC44CB44K/44OW44OQ44O844KS44K544Ov44Kk44OX44KE44OJ44Op44OD44Kw44Gn56e75YuV44Gn44GN44KL44KI44GG44Gr44Gq44KK44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgaWdub3JlLWVkZ2Utd2lkdGhcbiAgICogQHR5cGUge051bWJlcn1cbiAgICogQGRlZmF1bHQgMjBcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXURpc3RhbmNlIGluIHBpeGVscyBmcm9tIGJvdGggZWRnZXMuIFN3aXBpbmcgb24gdGhlc2UgYXJlYXMgd2lsbCBwcmlvcml0aXplIHBhcmVudCBjb21wb25lbnRzIHN1Y2ggYXMgYG9ucy1zcGxpdHRlcmAgb3IgYG9ucy1uYXZpZ2F0b3JgLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGhpZGUtdGFic1xuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dV2hldGhlciB0byBoaWRlIHRoZSB0YWJzLlsvZW5dXG4gICAqICAgW2phXeOCv+ODluOCkumdnuihqOekuuOBq+OBmeOCi+WgtOWQiOOBq+aMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIHRhYi1ib3JkZXJcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUlmIHRoaXMgYXR0cmlidXRlIGlzIHNldCB0aGUgdGFicyBzaG93IGEgZHluYW1pYyBib3R0b20gYm9yZGVyLiBPbmx5IHdvcmtzIGZvciBpT1MgZmxhdCBkZXNpZ24gc2luY2UgdGhlIGJvcmRlciBpcyBhbHdheXMgdmlzaWJsZSBpbiBNYXRlcmlhbCBEZXNpZ24uWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbW9kaWZpZXJcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBhcHBlYXJhbmNlIG9mIHRoZSB0YWJiYXIuWy9lbl1cbiAgICogICBbamFd44K/44OW44OQ44O844Gu6KGo54++44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9sb2FkSW5hY3RpdmUgPSB1dGlsLmRlZmVyKCk7IC8vIEltcHJvdmVzICMyMzI0XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBpZiAoIXRoaXMuX3N3aXBlcikge1xuICAgICAgdGhpcy5fc3dpcGVyID0gbmV3IFN3aXBlcih7XG4gICAgICAgIGdldEVsZW1lbnQ6ICgpID0+IHRoaXMuX2NvbnRlbnRFbGVtZW50LFxuICAgICAgICBnZXRJbml0aWFsSW5kZXg6ICgpID0+IHRoaXMuZ2V0QXR0cmlidXRlKCdhY3RpdmVJbmRleCcpIHx8IHRoaXMuZ2V0QXR0cmlidXRlKCdhY3RpdmUtaW5kZXgnKSxcbiAgICAgICAgZ2V0QXV0b1Njcm9sbFJhdGlvOiB0aGlzLl9nZXRBdXRvU2Nyb2xsUmF0aW8uYmluZCh0aGlzKSxcbiAgICAgICAgZ2V0QnViYmxlV2lkdGg6ICgpID0+IHBhcnNlSW50KHRoaXMuZ2V0QXR0cmlidXRlKCdpZ25vcmUtZWRnZS13aWR0aCcpIHx8IDI1LCAxMCksXG4gICAgICAgIGlzQXV0b1Njcm9sbGFibGU6ICgpID0+IHRydWUsXG4gICAgICAgIHByZUNoYW5nZUhvb2s6IHRoaXMuX29uUHJlQ2hhbmdlLmJpbmQodGhpcyksXG4gICAgICAgIHBvc3RDaGFuZ2VIb29rOiB0aGlzLl9vblBvc3RDaGFuZ2UuYmluZCh0aGlzKSxcbiAgICAgICAgcmVmcmVzaEhvb2s6IHRoaXMuX29uUmVmcmVzaC5iaW5kKHRoaXMpLFxuICAgICAgICBzY3JvbGxIb29rOiB0aGlzLl9vblNjcm9sbC5iaW5kKHRoaXMpXG4gICAgICB9KTtcblxuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgICAgdGhpcy5fdGFiYmFyQm9yZGVyID0gdXRpbC5maW5kQ2hpbGQodGhpcy5fdGFiYmFyRWxlbWVudCwgJy50YWJiYXJfX2JvcmRlcicpO1xuICAgICAgICB0aGlzLl9zd2lwZXIuaW5pdCh7IHN3aXBlYWJsZTogdGhpcy5oYXNBdHRyaWJ1dGUoJ3N3aXBlYWJsZScpIH0pO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIHRoaXMuX3VwZGF0ZVBvc2l0aW9uKCk7XG5cbiAgICAgIGlmICghdXRpbC5maW5kUGFyZW50KHRoaXMsICdvbnMtcGFnZScsIHAgPT4gcCA9PT0gZG9jdW1lbnQuYm9keSkpIHtcbiAgICAgICAgdGhpcy5fc2hvdygpOyAvLyBUaGlzIHRhYmJhciBpcyB0aGUgdG9wIGNvbXBvbmVudFxuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZGlzY29ubmVjdGVkQ2FsbGJhY2soKSB7XG4gICAgaWYgKHRoaXMuX3N3aXBlciAmJiB0aGlzLl9zd2lwZXIuaW5pdGlhbGl6ZWQpIHtcbiAgICAgIHRoaXMuX3N3aXBlci5kaXNwb3NlKCk7XG4gICAgICB0aGlzLl9zd2lwZXIgPSBudWxsO1xuICAgICAgdGhpcy5fdGFiYmFyQm9yZGVyID0gbnVsbDtcbiAgICAgIHRoaXMuX3RhYnNSZWN0ID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBfbm9ybWFsaXplRXZlbnQoZXZlbnQpIHtcbiAgICByZXR1cm4geyAuLi5ldmVudCwgaW5kZXg6IGV2ZW50LmFjdGl2ZUluZGV4LCB0YWJJdGVtOiB0aGlzLnRhYnNbZXZlbnQuYWN0aXZlSW5kZXhdIH07XG4gIH1cblxuICBfb25Qb3N0Q2hhbmdlKGV2ZW50KSB7XG4gICAgZXZlbnQgPSB0aGlzLl9ub3JtYWxpemVFdmVudChldmVudCk7XG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwb3N0Y2hhbmdlJywgZXZlbnQpO1xuICAgIGNvbnN0IHBhZ2UgPSBldmVudC50YWJJdGVtLnBhZ2VFbGVtZW50O1xuICAgIHBhZ2UgJiYgcGFnZS5fc2hvdygpO1xuICB9XG5cbiAgX29uUHJlQ2hhbmdlKGV2ZW50KSB7XG4gICAgZXZlbnQgPSB0aGlzLl9ub3JtYWxpemVFdmVudChldmVudCk7XG4gICAgZXZlbnQuY2FuY2VsID0gKCkgPT4gZXZlbnQuY2FuY2VsZWQgPSB0cnVlO1xuXG4gICAgdXRpbC50cmlnZ2VyRWxlbWVudEV2ZW50KHRoaXMsICdwcmVjaGFuZ2UnLCBldmVudCk7XG5cbiAgICBpZiAoIWV2ZW50LmNhbmNlbGVkKSB7XG4gICAgICBjb25zdCB7IGFjdGl2ZUluZGV4LCBsYXN0QWN0aXZlSW5kZXggfSA9IGV2ZW50O1xuICAgICAgY29uc3QgdGFicyA9IHRoaXMudGFicztcblxuICAgICAgdGFic1thY3RpdmVJbmRleF0uc2V0QWN0aXZlKHRydWUpO1xuICAgICAgaWYgKGxhc3RBY3RpdmVJbmRleCA+PSAwKSB7XG4gICAgICAgIGNvbnN0IHByZXZUYWIgPSB0YWJzW2xhc3RBY3RpdmVJbmRleF07XG4gICAgICAgIHByZXZUYWIuc2V0QWN0aXZlKGZhbHNlKTtcbiAgICAgICAgcHJldlRhYi5wYWdlRWxlbWVudCAmJiBwcmV2VGFiLnBhZ2VFbGVtZW50Ll9oaWRlKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGV2ZW50LmNhbmNlbGVkXG4gIH1cblxuICBfb25TY3JvbGwoaW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmICh0aGlzLl90YWJiYXJCb3JkZXIpIHtcbiAgICAgIHRoaXMuX3RhYmJhckJvcmRlci5zdHlsZS50cmFuc2l0aW9uID0gYGFsbCAke29wdGlvbnMuZHVyYXRpb24gfHwgMH1zICR7b3B0aW9ucy50aW1pbmcgfHwgJyd9YDtcblxuICAgICAgaWYgKHRoaXMuX2F1dG9ncm93ICYmIHRoaXMuX3RhYnNSZWN0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29uc3QgYSA9IE1hdGguZmxvb3IoaW5kZXgpLCBiID0gTWF0aC5jZWlsKGluZGV4KSwgciA9IGluZGV4ICUgMTtcbiAgICAgICAgdGhpcy5fdGFiYmFyQm9yZGVyLnN0eWxlLndpZHRoID0gbGVycCh0aGlzLl90YWJzUmVjdFthXS53aWR0aCwgdGhpcy5fdGFic1JlY3RbYl0ud2lkdGgsIHIpICsgJ3B4JztcbiAgICAgICAgdGhpcy5fdGFiYmFyQm9yZGVyLnN0eWxlLnRyYW5zZm9ybSA9IGB0cmFuc2xhdGUzZCgke2xlcnAodGhpcy5fdGFic1JlY3RbYV0ubGVmdCwgdGhpcy5fdGFic1JlY3RbYl0ubGVmdCwgcil9cHgsIDAsIDApYDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuX3RhYmJhckJvcmRlci5zdHlsZS50cmFuc2Zvcm0gPSBgdHJhbnNsYXRlM2QoJHtpbmRleCAqIDEwMH0lLCAwLCAwKWA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5fb25Td2lwZSAmJiB0aGlzLl9vblN3aXBlKGluZGV4LCBvcHRpb25zKTtcbiAgfVxuXG4gIF9vblJlZnJlc2goKSB7XG4gICAgdGhpcy5fYXV0b2dyb3cgPSB1dGlsLmhhc01vZGlmaWVyKHRoaXMsICdhdXRvZ3JvdycpO1xuICAgIHRoaXMuX3RhYnNSZWN0ID0gdGhpcy50YWJzLm1hcCh0YWIgPT4gdGFiLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpKTtcbiAgICBpZiAodGhpcy5fdGFiYmFyQm9yZGVyKSB7XG4gICAgICB0aGlzLl90YWJiYXJCb3JkZXIuc3R5bGUuZGlzcGxheSA9IHRoaXMuaGFzQXR0cmlidXRlKCd0YWItYm9yZGVyJykgfHwgdXRpbC5oYXNNb2RpZmllcih0aGlzLCAnbWF0ZXJpYWwnKSA/ICdibG9jaycgOiAnbm9uZSc7XG4gICAgICBjb25zdCBpbmRleCA9IHRoaXMuZ2V0QWN0aXZlVGFiSW5kZXgoKTtcbiAgICAgIGlmICh0aGlzLl90YWJzUmVjdC5sZW5ndGggPiAwICYmIGluZGV4ID49IDApIHtcbiAgICAgICAgdGhpcy5fdGFiYmFyQm9yZGVyLnN0eWxlLndpZHRoID0gdGhpcy5fdGFic1JlY3RbaW5kZXhdLndpZHRoICsgJ3B4JztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBfZ2V0QXV0b1Njcm9sbFJhdGlvKG1hdGNoZXMsIHZlbG9jaXR5LCBzaXplKSB7XG4gICAgY29uc3QgcmF0aW8gPSAuNjsgLy8gQmFzZSByYXRpb1xuICAgIGNvbnN0IG1vZGlmaWVyID0gc2l6ZSAvIDMwMCAqIChtYXRjaGVzID8gLTEgOiAxKTsgLy8gQmFzZWQgb24gc2NyZWVuIHNpemVcbiAgICByZXR1cm4gTWF0aC5taW4oMSwgTWF0aC5tYXgoMCwgcmF0aW8gKyB2ZWxvY2l0eSAqIG1vZGlmaWVyKSk7XG4gIH1cblxuICBnZXQgX3RhYmJhckVsZW1lbnQoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZENoaWxkKHRoaXMsICcudGFiYmFyJyk7XG4gIH1cblxuICBnZXQgX2NvbnRlbnRFbGVtZW50KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnRhYmJhcl9fY29udGVudCcpO1xuICB9XG5cbiAgZ2V0IF90YXJnZXRFbGVtZW50KCkge1xuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLl9jb250ZW50RWxlbWVudDtcbiAgICByZXR1cm4gY29udGVudCAmJiBjb250ZW50LmNoaWxkcmVuWzBdIHx8IG51bGw7XG4gIH1cblxuICBfY29tcGlsZSgpIHtcbiAgICBhdXRvU3R5bGUucHJlcGFyZSh0aGlzKTtcblxuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLl9jb250ZW50RWxlbWVudCB8fCB1dGlsLmNyZWF0ZSgnLnRhYmJhcl9fY29udGVudCcpO1xuICAgIGNvbnRlbnQuY2xhc3NMaXN0LmFkZCgnb25zLXRhYmJhcl9fY29udGVudCcpO1xuICAgIGNvbnN0IHRhYmJhciA9IHRoaXMuX3RhYmJhckVsZW1lbnQgfHwgdXRpbC5jcmVhdGUoJy50YWJiYXInKTtcbiAgICB0YWJiYXIuY2xhc3NMaXN0LmFkZCgnb25zLXRhYmJhcl9fZm9vdGVyJyk7XG5cbiAgICBpZiAoIXRhYmJhci5wYXJlbnROb2RlKSB7XG4gICAgICB3aGlsZSAodGhpcy5maXJzdENoaWxkKSB7XG4gICAgICAgIHRhYmJhci5hcHBlbmRDaGlsZCh0aGlzLmZpcnN0Q2hpbGQpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IGFjdGl2ZUluZGV4ID0gTnVtYmVyKHRoaXMuZ2V0QXR0cmlidXRlKCdhY3RpdmVJbmRleCcpKTsgLy8gMCBieSBkZWZhdWx0XG4gICAgaWYgKHRhYmJhci5jaGlsZHJlbi5sZW5ndGggPiBhY3RpdmVJbmRleCAmJiAhdXRpbC5maW5kQ2hpbGQodGFiYmFyLCAnW2FjdGl2ZV0nKSkge1xuICAgICAgdGFiYmFyLmNoaWxkcmVuW2FjdGl2ZUluZGV4XS5zZXRBdHRyaWJ1dGUoJ2FjdGl2ZScsICcnKTtcbiAgICB9XG5cbiAgICB0aGlzLl90YWJiYXJCb3JkZXIgPSB1dGlsLmZpbmRDaGlsZCh0YWJiYXIsICcudGFiYmFyX19ib3JkZXInKSB8fCB1dGlsLmNyZWF0ZSgnLnRhYmJhcl9fYm9yZGVyJyk7XG4gICAgdGFiYmFyLmFwcGVuZENoaWxkKHRoaXMuX3RhYmJhckJvcmRlcik7XG4gICAgdGFiYmFyLmNsYXNzTGlzdC5hZGQoJ29ucy1zd2lwZXItdGFiYmFyJyk7IC8vIEhpZGVzIG1hdGVyaWFsIGJvcmRlclxuXG4gICAgIWNvbnRlbnQuY2hpbGRyZW5bMF0gJiYgY29udGVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSk7XG4gICAgIWNvbnRlbnQuY2hpbGRyZW5bMV0gJiYgY29udGVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKSk7XG4gICAgY29udGVudC5hcHBlbmRDaGlsZCA9IGNvbnRlbnQuYXBwZW5kQ2hpbGQuYmluZChjb250ZW50LmNoaWxkcmVuWzBdKTtcbiAgICBjb250ZW50Lmluc2VydEJlZm9yZSA9IGNvbnRlbnQuaW5zZXJ0QmVmb3JlLmJpbmQoY29udGVudC5jaGlsZHJlblswXSk7XG5cbiAgICB0aGlzLmFwcGVuZENoaWxkKGNvbnRlbnQpO1xuICAgIHRoaXMuYXBwZW5kQ2hpbGQodGFiYmFyKTsgLy8gVHJpZ2dlcnMgb25zLXRhYiBjb25uZWN0ZWRDYWxsYmFja1xuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCBzY2hlbWUpO1xuICB9XG5cbiAgX3VwZGF0ZVBvc2l0aW9uKHBvc2l0aW9uID0gdGhpcy5nZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJykpIHtcbiAgICBjb25zdCB0b3AgPSB0aGlzLl90b3AgPSBwb3NpdGlvbiA9PT0gJ3RvcCcgfHwgKHBvc2l0aW9uID09PSAnYXV0bycgJiYgdXRpbC5oYXNNb2RpZmllcih0aGlzLCAnbWF0ZXJpYWwnKSk7XG4gICAgY29uc3QgYWN0aW9uID0gdG9wID8gdXRpbC5hZGRNb2RpZmllciA6IHV0aWwucmVtb3ZlTW9kaWZpZXI7XG5cbiAgICBhY3Rpb24odGhpcywgJ3RvcCcpO1xuXG4gICAgY29uc3QgcGFnZSA9IHV0aWwuZmluZFBhcmVudCh0aGlzLCAnb25zLXBhZ2UnKTtcbiAgICBpZiAocGFnZSkge1xuICAgICAgY29udGVudFJlYWR5KHBhZ2UsICgpID0+IHtcbiAgICAgICAgbGV0IHAgPSAwO1xuICAgICAgICBpZiAocGFnZS5jaGlsZHJlblswXSAmJiB1dGlsLm1hdGNoKHBhZ2UuY2hpbGRyZW5bMF0sICdvbnMtdG9vbGJhcicpKSB7XG4gICAgICAgICAgYWN0aW9uKHBhZ2UuY2hpbGRyZW5bMF0sICdub3NoYWRvdycpO1xuICAgICAgICAgIHAgPSAxOyAvLyBWaXN1YWwgZml4IGZvciBzb21lIGRldmljZXNcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGNvbnRlbnQgPSBwYWdlLl9nZXRDb250ZW50RWxlbWVudCgpO1xuICAgICAgICBjb25zdCBjcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHBhZ2UuX2dldENvbnRlbnRFbGVtZW50KCksIG51bGwpXG5cbiAgICAgICAgdGhpcy5zdHlsZS50b3AgPSB0b3AgPyBwYXJzZUludChjcy5nZXRQcm9wZXJ0eVZhbHVlKCdwYWRkaW5nLXRvcCcpLCAxMCkgLSBwICsgJ3B4JyA6ICcnO1xuXG4gICAgICAgIC8vIFJlZnJlc2ggY29udGVudCB0b3AgLSBGaXggZm9yIGlPUyA4XG4gICAgICAgIGNvbnRlbnQuc3R5bGUudG9wID0gY3MudG9wO1xuICAgICAgICBjb250ZW50LnN0eWxlLnRvcCA9ICcnO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaW50ZXJuYWwuYXV0b1N0YXR1c0JhckZpbGwoKCkgPT4ge1xuICAgICAgY29uc3QgZmlsbGVkID0gdXRpbC5maW5kUGFyZW50KHRoaXMsIGUgPT4gZS5oYXNBdHRyaWJ1dGUoJ3N0YXR1cy1iYXItZmlsbCcpKTtcbiAgICAgIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdzdGF0dXMtYmFyLWZpbGwnLCB0b3AgJiYgIWZpbGxlZCk7XG4gICAgfSk7XG4gIH1cblxuICBnZXQgdG9wUGFnZSgpIHtcbiAgICBjb25zdCB0YWJzID0gdGhpcy50YWJzLFxuICAgICAgaW5kZXggPSB0aGlzLmdldEFjdGl2ZVRhYkluZGV4KCk7XG4gICAgcmV0dXJuIHRhYnNbaW5kZXhdXG4gICAgICA/IHRhYnNbaW5kZXhdLnBhZ2VFbGVtZW50IHx8IHRoaXMucGFnZXNbMF0gfHwgbnVsbFxuICAgICAgOiBudWxsO1xuICB9XG5cbiAgZ2V0IHBhZ2VzKCkge1xuICAgIHJldHVybiB1dGlsLmFycmF5RnJvbSh0aGlzLl90YXJnZXRFbGVtZW50LmNoaWxkcmVuKTtcbiAgfVxuXG4gIGdldCB0YWJzKCkge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwodGhpcy5fdGFiYmFyRWxlbWVudC5jaGlsZHJlbiwgZSA9PiBlLnRhZ05hbWUgPT09ICdPTlMtVEFCJyk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzZXRBY3RpdmVUYWJcbiAgICogQHNpZ25hdHVyZSBzZXRBY3RpdmVUYWIoaW5kZXgsIFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtOdW1iZXJ9IGluZGV4XG4gICAqICAgW2VuXVRhYiBpbmRleC5bL2VuXVxuICAgKiAgIFtqYV3jgr/jg5bjga7jgqTjg7Pjg4fjg4Pjgq/jgrnjgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gW29wdGlvbnMuY2FsbGJhY2tdXG4gICAqICAgW2VuXUZ1bmN0aW9uIHRoYXQgcnVucyB3aGVuIHRoZSBuZXcgcGFnZSBoYXMgbG9hZGVkLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUlmIHRoaXMgb3B0aW9uIGlzIFwibm9uZVwiLCB0aGUgdHJhbnNpdGlvbiB3b24ndCBzbGlkZS5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVNob3cgc3BlY2lmaWVkIHRhYiBwYWdlLiBBbmltYXRpb25zIGFuZCB0aGVpciBvcHRpb25zIGNhbiBiZSBzcGVjaWZpZWQgYnkgdGhlIHNlY29uZCBwYXJhbWV0ZXIuWy9lbl1cbiAgICogICBbamFd5oyH5a6a44GX44Gf44Kk44Oz44OH44OD44Kv44K544Gu44K/44OW44KS6KGo56S644GX44G+44GZ44CC44Ki44OL44Oh44O844K344On44Oz44Gq44Gp44Gu44Kq44OX44K344On44Oz44KS5oyH5a6a44Gn44GN44G+44GZ44CCWy9qYV1cbiAgICogQHJldHVybiB7UHJvbWlzZX1cbiAgICogICBbZW5dQSBwcm9taXNlIHRoYXQgcmVzb2x2ZXMgdG8gdGhlIG5ldyBwYWdlIGVsZW1lbnQuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICovXG4gIHNldEFjdGl2ZVRhYihuZXh0SW5kZXgsIG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHByZXZJbmRleCA9IHRoaXMuZ2V0QWN0aXZlVGFiSW5kZXgoKTtcbiAgICBjb25zdCBwcmV2VGFiID0gdGhpcy50YWJzW3ByZXZJbmRleF0sXG4gICAgICBuZXh0VGFiID0gdGhpcy50YWJzW25leHRJbmRleF07XG5cbiAgICBpZiAoIW5leHRUYWIpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnU3BlY2lmaWVkIGluZGV4IGRvZXMgbm90IG1hdGNoIGFueSB0YWIuJyk7XG4gICAgfVxuXG4gICAgaWYgKG5leHRJbmRleCA9PT0gcHJldkluZGV4KSB7XG4gICAgICB1dGlsLnRyaWdnZXJFbGVtZW50RXZlbnQodGhpcywgJ3JlYWN0aXZlJywgeyBpbmRleDogbmV4dEluZGV4LCBhY3RpdmVJbmRleDogbmV4dEluZGV4LCB0YWJJdGVtOiBuZXh0VGFiIH0pO1xuICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0VGFiLnBhZ2VFbGVtZW50KTtcbiAgICB9XG5cbiAgICAvLyBGSVhNRTogbmV4dFRhYi5sb2FkZWQgaXMgYnJva2VuIGluIFpvbmUuanMgcHJvbWlzZXMgKEFuZ3VsYXIyKVxuICAgIGNvbnN0IG5leHRQYWdlID0gbmV4dFRhYi5wYWdlRWxlbWVudDtcbiAgICByZXR1cm4gKG5leHRQYWdlID8gUHJvbWlzZS5yZXNvbHZlKG5leHRQYWdlKSA6IG5leHRUYWIubG9hZGVkKVxuICAgICAgLnRoZW4obmV4dFBhZ2UgPT4gdGhpcy5fc3dpcGVyLnNldEFjdGl2ZUluZGV4KG5leHRJbmRleCwge1xuICAgICAgICByZWplY3Q6IHRydWUsXG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGFuaW1hdGlvbjogcHJldlRhYiAmJiBuZXh0UGFnZSA/IG9wdGlvbnMuYW5pbWF0aW9uIHx8IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKSA6ICdub25lJyxcbiAgICAgICAgYW5pbWF0aW9uT3B0aW9uczogdXRpbC5leHRlbmQoXG4gICAgICAgICAgeyBkdXJhdGlvbjogLjMsIHRpbWluZzogJ2N1YmljLWJlemllciguNCwgLjcsIC41LCAxKScgfSxcbiAgICAgICAgICB0aGlzLmhhc0F0dHJpYnV0ZSgnYW5pbWF0aW9uLW9wdGlvbnMnKSA/IHV0aWwuYW5pbWF0aW9uT3B0aW9uc1BhcnNlKHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24tb3B0aW9ucycpKSA6IHt9LFxuICAgICAgICAgIG9wdGlvbnMuYW5pbWF0aW9uT3B0aW9ucyB8fCB7fVxuICAgICAgICApXG4gICAgICB9KS50aGVuKCgpID0+IHtcbiAgICAgICAgb3B0aW9ucy5jYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uICYmIG9wdGlvbnMuY2FsbGJhY2sobmV4dFBhZ2UpO1xuICAgICAgICByZXR1cm4gbmV4dFBhZ2U7XG4gICAgICB9KSk7XG4gIH1cblxuICAvKipcbiAgICogQG1ldGhvZCBzZXRUYWJiYXJWaXNpYmlsaXR5XG4gICAqIEBzaWduYXR1cmUgc2V0VGFiYmFyVmlzaWJpbGl0eSh2aXNpYmxlKVxuICAgKiBAcGFyYW0ge0Jvb2xlYW59IHZpc2libGVcbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVVzZWQgdG8gaGlkZSBvciBzaG93IHRoZSB0YWIgYmFyLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBzZXRUYWJiYXJWaXNpYmlsaXR5KHZpc2libGUpIHtcbiAgICBjb250ZW50UmVhZHkodGhpcywgKCkgPT4ge1xuICAgICAgdGhpcy5fY29udGVudEVsZW1lbnQuc3R5bGVbdGhpcy5fdG9wID8gJ3RvcCcgOiAnYm90dG9tJ10gPSB2aXNpYmxlID8gJycgOiAnMHB4JztcbiAgICAgIHRoaXMuX3RhYmJhckVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IHZpc2libGUgPyAnJyA6ICdub25lJztcbiAgICAgIHZpc2libGUgJiYgdGhpcy5fb25SZWZyZXNoKCk7XG4gICAgfSk7XG4gIH1cblxuICBzaG93KCkge1xuICAgIHRoaXMuc2V0VGFiYmFyVmlzaWJpbGl0eSh0cnVlKTtcbiAgfVxuXG4gIGhpZGUoKSB7XG4gICAgdGhpcy5zZXRUYWJiYXJWaXNpYmlsaXR5KGZhbHNlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgdmlzaWJsZVxuICAgKiBAcmVhZG9ubHlcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSB0YWJiYXIgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd44K/44OW44OQ44O844GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG4gIGdldCB2aXNpYmxlKCkge1xuICAgIHJldHVybiB0aGlzLl90YWJiYXJFbGVtZW50LnN0eWxlLmRpc3BsYXkgIT09ICdub25lJztcbiAgfVxuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgc3dpcGVhYmxlXG4gICAqIEB0eXBlIHtCb29sZWFufVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dRW5hYmxlIHN3aXBlIGludGVyYWN0aW9uLlsvZW5dXG4gICAqICAgW2phXXN3aXBlYWJsZeOBp+OBguOCjOOBsHRydWXjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0IHN3aXBlYWJsZSgpIHtcbiAgICByZXR1cm4gdGhpcy5oYXNBdHRyaWJ1dGUoJ3N3aXBlYWJsZScpO1xuICB9XG5cbiAgc2V0IHN3aXBlYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB1dGlsLnRvZ2dsZUF0dHJpYnV0ZSh0aGlzLCAnc3dpcGVhYmxlJywgdmFsdWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvblN3aXBlXG4gICAqIEB0eXBlIHtGdW5jdGlvbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUhvb2sgY2FsbGVkIHdoZW5ldmVyIHRoZSB1c2VyIHNsaWRlcyB0aGUgdGFiYmFyLiBJdCBnZXRzIGEgZGVjaW1hbCBpbmRleCBhbmQgYW4gYW5pbWF0aW9uT3B0aW9ucyBvYmplY3QgYXMgYXJndW1lbnRzLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuICBnZXQgb25Td2lwZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fb25Td2lwZTtcbiAgfVxuXG4gIHNldCBvblN3aXBlKHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlICYmICEodmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbikpIHtcbiAgICAgIHV0aWwudGhyb3coYFwib25Td2lwZVwiIG11c3QgYmUgYSBmdW5jdGlvbmApXG4gICAgfVxuICAgIHRoaXMuX29uU3dpcGUgPSB2YWx1ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGdldEFjdGl2ZVRhYkluZGV4XG4gICAqIEBzaWduYXR1cmUgZ2V0QWN0aXZlVGFiSW5kZXgoKVxuICAgKiBAcmV0dXJuIHtOdW1iZXJ9XG4gICAqICAgW2VuXVRoZSBpbmRleCBvZiB0aGUgY3VycmVudGx5IGFjdGl2ZSB0YWIuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KL44K/44OW44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CCWy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVJldHVybnMgdGFiIGluZGV4IG9uIGN1cnJlbnQgYWN0aXZlIHRhYi4gSWYgYWN0aXZlIHRhYiBpcyBub3QgZm91bmQsIHJldHVybnMgLTEuWy9lbl1cbiAgICogICBbamFd54++5Zyo44Ki44Kv44OG44Kj44OW44Gr44Gq44Gj44Gm44GE44KL44K/44OW44Gu44Kk44Oz44OH44OD44Kv44K544KS6L+U44GX44G+44GZ44CC54++5Zyo44Ki44Kv44OG44Kj44OW44Gq44K/44OW44GM44Gq44GE5aC05ZCI44Gr44GvLTHjgpLov5TjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cbiAgZ2V0QWN0aXZlVGFiSW5kZXgodGFicyA9IHRoaXMudGFicykge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFicy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHRhYnNbaV0gJiYgdGFic1tpXS50YWdOYW1lID09PSAnT05TLVRBQicgJiYgdGFic1tpXS5pc0FjdGl2ZSgpKSB7XG4gICAgICAgIHJldHVybiBpO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gLTE7XG4gIH1cblxuICBfc2hvdygpIHtcbiAgICB0aGlzLl9zd2lwZXIuc2hvdygpO1xuXG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgIGNvbnN0IHRhYnMgPSB0aGlzLnRhYnM7XG4gICAgICBjb25zdCBhY3RpdmVJbmRleCA9IHRoaXMuZ2V0QWN0aXZlVGFiSW5kZXgodGFicyk7XG4gICAgICB0aGlzLl9sb2FkSW5hY3RpdmUucmVzb2x2ZSgpO1xuICAgICAgaWYgKHRhYnMubGVuZ3RoID4gMCAmJiBhY3RpdmVJbmRleCA+PSAwKSB7XG4gICAgICAgIHRhYnNbYWN0aXZlSW5kZXhdLmxvYWRlZC50aGVuKGVsID0+IGVsICYmIHNldEltbWVkaWF0ZSgoKSA9PiBlbC5fc2hvdygpKSk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBfaGlkZSgpIHtcbiAgICB0aGlzLl9zd2lwZXIuaGlkZSgpO1xuICAgIGNvbnN0IHRvcFBhZ2UgPSB0aGlzLnRvcFBhZ2U7XG4gICAgdG9wUGFnZSAmJiB0b3BQYWdlLl9oaWRlKCk7XG4gIH1cblxuICBfZGVzdHJveSgpIHtcbiAgICB0aGlzLnRhYnMuZm9yRWFjaCh0YWIgPT4gdGFiLnJlbW92ZSgpKTtcbiAgICB0aGlzLnJlbW92ZSgpO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAncG9zaXRpb24nLCAnc3dpcGVhYmxlJywgJ3RhYi1ib3JkZXInLCAnaGlkZS10YWJzJ107XG4gIH1cblxuICBhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2sobmFtZSwgbGFzdCwgY3VycmVudCkge1xuICAgIGlmIChuYW1lID09PSAnbW9kaWZpZXInKSB7XG4gICAgICBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKTtcbiAgICAgIGNvbnN0IGlzVG9wID0gbSA9PiAvKF58XFxzKyl0b3AoJHxcXHMrKS9pLnRlc3QobSk7XG4gICAgICBpc1RvcChsYXN0KSAhPT0gaXNUb3AoY3VycmVudCkgJiYgdGhpcy5fdXBkYXRlUG9zaXRpb24oKTtcbiAgICB9IGVsc2UgaWYgKG5hbWUgPT09ICdwb3NpdGlvbicpIHtcbiAgICAgIHV0aWwuaXNBdHRhY2hlZCh0aGlzKSAmJiB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICAgIH0gZWxzZSBpZiAobmFtZSA9PT0gJ3N3aXBlYWJsZScpIHtcbiAgICAgIHRoaXMuX3N3aXBlciAmJiB0aGlzLl9zd2lwZXIudXBkYXRlU3dpcGVhYmxlKHRoaXMuaGFzQXR0cmlidXRlKCdzd2lwZWFibGUnKSk7XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSAnaGlkZS10YWJzJykge1xuICAgICAgdGhpcy5zZXRUYWJiYXJWaXNpYmlsaXR5KCF0aGlzLmhhc0F0dHJpYnV0ZSgnaGlkZS10YWJzJykgfHwgY3VycmVudCA9PT0gJ2ZhbHNlJyk7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldCByZXdyaXRhYmxlcygpIHtcbiAgICByZXR1cm4gcmV3cml0YWJsZXM7XG4gIH1cblxuICBzdGF0aWMgZ2V0IGV2ZW50cygpIHtcbiAgICByZXR1cm4gWydwcmVjaGFuZ2UnLCAncG9zdGNoYW5nZScsICdyZWFjdGl2ZSddO1xuICB9XG59XG5cbm9uc0VsZW1lbnRzLlRhYmJhciA9IFRhYmJhckVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10YWJiYXInLCBUYWJiYXJFbGVtZW50KTtcbiIsIi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCBvbnNFbGVtZW50cyBmcm9tICcuLi9vbnMvZWxlbWVudHMnO1xuaW1wb3J0IHV0aWwgZnJvbSAnLi4vb25zL3V0aWwnO1xuaW1wb3J0IGF1dG9TdHlsZSBmcm9tICcuLi9vbnMvYXV0b3N0eWxlJztcbmltcG9ydCBNb2RpZmllclV0aWwgZnJvbSAnLi4vb25zL2ludGVybmFsL21vZGlmaWVyLXV0aWwnO1xuaW1wb3J0IEJhc2VFbGVtZW50IGZyb20gJy4vYmFzZS9iYXNlLWVsZW1lbnQnO1xuaW1wb3J0IFRhYmJhckVsZW1lbnQgZnJvbSAnLi9vbnMtdGFiYmFyJztcbmltcG9ydCBjb250ZW50UmVhZHkgZnJvbSAnLi4vb25zL2NvbnRlbnQtcmVhZHknO1xuaW1wb3J0IHsgUGFnZUxvYWRlciwgZGVmYXVsdFBhZ2VMb2FkZXIgfSBmcm9tICcuLi9vbnMvcGFnZS1sb2FkZXInO1xuXG5jb25zdCBkZWZhdWx0Q2xhc3NOYW1lID0gJ3RhYmJhcl9faXRlbSc7XG5cbmNvbnN0IHNjaGVtZSA9IHtcbiAgJyc6ICd0YWJiYXItLSpfX2l0ZW0nLFxuICAnLnRhYmJhcl9fYnV0dG9uJzogJ3RhYmJhci0tKl9fYnV0dG9uJ1xufTtcblxuLyoqXG4gKiBAZWxlbWVudCBvbnMtdGFiXG4gKiBAY2F0ZWdvcnkgdGFiYmFyXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVJlcHJlc2VudHMgYSB0YWIgaW5zaWRlIHRhYiBiYXIuIEVhY2ggYDxvbnMtdGFiPmAgcmVwcmVzZW50cyBhIHBhZ2UuWy9lbl1cbiAqICAgW2phXVxuICogICAgIOOCv+ODluODkOODvOOBq+mFjee9ruOBleOCjOOCi+WQhOOCouOCpOODhuODoOOBruOCs+ODs+ODneODvOODjeODs+ODiOOBp+OBmeOAguOBneOCjOOBnuOCjOOBrm9ucy10YWLjga/jg5rjg7zjgrjjgpLooajjgZfjgb7jgZnjgIJcbiAqICAgICBvbnMtdGFi6KaB57Sg44Gu5Lit44Gr44Gv44CB44K/44OW44Gr6KGo56S644GV44KM44KL44Kz44Oz44OG44Oz44OE44KS55u05o6l6KiY6L+w44GZ44KL44GT44Go44GM5Ye65p2l44G+44GZ44CCXG4gKiAgIFsvamFdXG4gKiBAY29kZXBlbiBwR3VETFxuICogQHR1dG9yaWFsIHZhbmlsbGEvUmVmZXJlbmNlL3RhYmJhclxuICogQGd1aWRlIGZ1bmRhbWVudGFscy5odG1sI21hbmFnaW5nLXBhZ2VzXG4gKiAgIFtlbl1NYW5hZ2luZyBtdWx0aXBsZSBwYWdlcy5bL2VuXVxuICogICBbamFd6KSH5pWw44Gu44Oa44O844K444KS566h55CG44GZ44KLWy9qYV1dXG4gKiBAZ3VpZGUgYXBwc2l6ZS5odG1sI3JlbW92aW5nLWljb24tcGFja3MgW2VuXVJlbW92aW5nIGljb24gcGFja3MuWy9lbl1bamFdWy9qYV1cbiAqIEBndWlkZSBmYXEuaHRtbCNob3ctY2FuLWktdXNlLWN1c3RvbS1pY29uLXBhY2tzIFtlbl1BZGRpbmcgY3VzdG9tIGljb24gcGFja3MuWy9lbl1bamFdWy9qYV1cbiAqIEBzZWVhbHNvIG9ucy10YWJiYXJcbiAqICAgW2VuXW9ucy10YWJiYXIgY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy10YWJiYXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLXBhZ2VcbiAqICAgW2VuXW9ucy1wYWdlIGNvbXBvbmVudFsvZW5dXG4gKiAgIFtqYV1vbnMtcGFnZeOCs+ODs+ODneODvOODjeODs+ODiFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtaWNvblxuICogICBbZW5db25zLWljb24gY29tcG9uZW50Wy9lbl1cbiAqICAgW2phXW9ucy1pY29u44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRhYmJhcj5cbiAqICAgPG9ucy10YWJcbiAqICAgICBwYWdlPVwiaG9tZS5odG1sXCJcbiAqICAgICBsYWJlbD1cIkhvbWVcIlxuICogICAgIGFjdGl2ZT5cbiAqICAgPC9vbnMtdGFiPlxuICogICA8b25zLXRhYlxuICogICAgIHBhZ2U9XCJzZXR0aW5ncy5odG1sXCJcbiAqICAgICBsYWJlbD1cIlNldHRpbmdzXCJcbiAqICAgICBhY3RpdmU+XG4gKiAgIDwvb25zLXRhYj5cbiAqIDwvb25zLXRhYmJhcj5cbiAqXG4gKiA8dGVtcGxhdGUgaWQ9XCJob21lLmh0bWxcIj5cbiAqICAgLi4uXG4gKiA8L3RlbXBsYXRlPlxuICpcbiAqIDx0ZW1wbGF0ZSBpZD1cInNldHRpbmdzLmh0bWxcIj5cbiAqICAgLi4uXG4gKiA8L3RlbXBsYXRlPlxuXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRhYkVsZW1lbnQgZXh0ZW5kcyBCYXNlRWxlbWVudCB7XG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgcGFnZVxuICAgKiBAaW5pdG9ubHlcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBwYWdlIHRoYXQgaXMgZGlzcGxheWVkIHdoZW4gdGhlIHRhYiBpcyB0YXBwZWQuWy9lbl1cbiAgICogICBbamFdb25zLXRhYuOBjOWPgueFp+OBmeOCi+ODmuODvOOCuOOBuOOBrlVSTOOCkuaMh+WumuOBl+OBvuOBmeOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGljb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVxuICAgKiAgICAgVGhlIGljb24gbmFtZSBmb3IgdGhlIHRhYi4gQ2FuIHNwZWNpZnkgdGhlIHNhbWUgaWNvbiBuYW1lIGFzIGA8b25zLWljb24+YC4gQ2hlY2sgW1NlZSBhbHNvXSgjc2VlYWxzbykgc2VjdGlvbiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAgICogICBbL2VuXVxuICAgKiAgIFtqYV1cbiAgICogICAgIOOCouOCpOOCs+ODs+WQjeOCkuaMh+WumuOBl+OBvuOBmeOAgm9ucy1pY29u44Go5ZCM44GY44Ki44Kk44Kz44Oz5ZCN44KS5oyH5a6a44Gn44GN44G+44GZ44CCXG4gICAqICAgICDlgIvliKXjgavjgqLjgqTjgrPjg7PjgpLjgqvjgrnjgr/jg57jgqTjgrrjgZnjgovloLTlkIjjga/jgIFiYWNrZ3JvdW5kLWltYWdl44Gq44Gp44GuQ1NT44K544K/44Kk44Or44KS55So44GE44Gm5oyH5a6a44Gn44GN44G+44GZ44CCXG4gICAqICAgWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYWN0aXZlLWljb25cbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBuYW1lIG9mIHRoZSBpY29uIHdoZW4gdGhlIHRhYiBpcyBhY3RpdmUuWy9lbl1cbiAgICogICBbamFd44Ki44Kv44OG44Kj44OW44Gu6Zqb44Gu44Ki44Kk44Kz44Oz5ZCN44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgbGFiZWxcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRoZSBsYWJlbCBvZiB0aGUgdGFiIGl0ZW0uWy9lbl1cbiAgICogICBbamFd44Ki44Kk44Kz44Oz5LiL44Gr6KGo56S644GV44KM44KL44Op44OZ44Or44KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYmFkZ2VcbiAgICogQHR5cGUge1N0cmluZ31cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXURpc3BsYXkgYSBub3RpZmljYXRpb24gYmFkZ2Ugb24gdG9wIG9mIHRoZSB0YWIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44K444Gr6KGo56S644GZ44KL5YaF5a6544KS5oyH5a6a44GX44G+44GZ44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYWN0aXZlXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1UaGlzIGF0dHJpYnV0ZSBzaG91bGQgYmUgc2V0IHRvIHRoZSB0YWIgdGhhdCBpcyBhY3RpdmUgYnkgZGVmYXVsdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgaWYgKFsnbGFiZWwnLCAnaWNvbicsICdiYWRnZSddLnNvbWUodGhpcy5oYXNBdHRyaWJ1dGUuYmluZCh0aGlzKSkpIHtcbiAgICAgIHRoaXMuX2NvbXBpbGUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gICAgfVxuXG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IGRlZmF1bHRQYWdlTG9hZGVyO1xuICAgIHRoaXMuX29uQ2xpY2sgPSB0aGlzLl9vbkNsaWNrLmJpbmQodGhpcyk7XG4gIH1cblxuICBzZXQgcGFnZUxvYWRlcihsb2FkZXIpIHtcbiAgICBpZiAoIShsb2FkZXIgaW5zdGFuY2VvZiBQYWdlTG9hZGVyKSkge1xuICAgICAgdXRpbC50aHJvd1BhZ2VMb2FkZXIoKTtcbiAgICB9XG4gICAgdGhpcy5fcGFnZUxvYWRlciA9IGxvYWRlcjtcbiAgfVxuXG4gIGdldCBwYWdlTG9hZGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9wYWdlTG9hZGVyO1xuICB9XG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG4gICAgdGhpcy5jbGFzc0xpc3QuYWRkKGRlZmF1bHRDbGFzc05hbWUpO1xuXG4gICAgaWYgKHRoaXMuX2J1dHRvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGJ1dHRvbiA9IHV0aWwuY3JlYXRlKCdidXR0b24udGFiYmFyX19idXR0b24nKTtcbiAgICB3aGlsZSAodGhpcy5jaGlsZE5vZGVzWzBdKSB7XG4gICAgICBidXR0b24uYXBwZW5kQ2hpbGQodGhpcy5jaGlsZE5vZGVzWzBdKTtcbiAgICB9XG5cbiAgICBjb25zdCBpbnB1dCA9IHV0aWwuY3JlYXRlKCdpbnB1dCcsIHsgZGlzcGxheTogJ25vbmUnIH0pO1xuICAgIGlucHV0LnR5cGUgPSAncmFkaW8nO1xuXG4gICAgdGhpcy5hcHBlbmRDaGlsZChpbnB1dCk7XG4gICAgdGhpcy5hcHBlbmRDaGlsZChidXR0b24pO1xuXG4gICAgdGhpcy5fdXBkYXRlQnV0dG9uQ29udGVudCgpO1xuICAgIE1vZGlmaWVyVXRpbC5pbml0TW9kaWZpZXIodGhpcywgc2NoZW1lKTtcbiAgICB0aGlzLl91cGRhdGVSaXBwbGUoKTtcbiAgfVxuXG4gIF91cGRhdGVSaXBwbGUoKSB7XG4gICAgdGhpcy5fYnV0dG9uICYmIHV0aWwudXBkYXRlUmlwcGxlKHRoaXMuX2J1dHRvbiwgdGhpcy5oYXNBdHRyaWJ1dGUoJ3JpcHBsZScpKTtcbiAgfVxuXG4gIF91cGRhdGVCdXR0b25Db250ZW50KCkge1xuICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMuX2J1dHRvbjtcblxuICAgIGxldCBpY29uV3JhcHBlciA9IHRoaXMuX2ljb247XG4gICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKCdpY29uJykpIHtcbiAgICAgIGljb25XcmFwcGVyID0gaWNvbldyYXBwZXIgfHwgdXRpbC5jcmVhdGVFbGVtZW50KCc8ZGl2IGNsYXNzPVwidGFiYmFyX19pY29uXCI+PG9ucy1pY29uPjwvb25zLWljb24+PC9kaXY+Jyk7XG4gICAgICBjb25zdCBpY29uID0gaWNvbldyYXBwZXIuY2hpbGRyZW5bMF07XG4gICAgICBjb25zdCBmaXggPSAobGFzdCA9PiAoKSA9PiBpY29uLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjaygnaWNvbicsIGxhc3QsIHRoaXMuZ2V0QXR0cmlidXRlKCdpY29uJykpKShpY29uLmdldEF0dHJpYnV0ZSgnaWNvbicpKTtcbiAgICAgIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaWNvbicpICYmIHRoaXMuaGFzQXR0cmlidXRlKCdhY3RpdmUtaWNvbicpKSB7XG4gICAgICAgIGljb24uc2V0QXR0cmlidXRlKCdpY29uJywgdGhpcy5nZXRBdHRyaWJ1dGUodGhpcy5pc0FjdGl2ZSgpID8gJ2FjdGl2ZS1pY29uJyA6ICdpY29uJykpO1xuICAgICAgfSBlbHNlIGlmICh0aGlzLmhhc0F0dHJpYnV0ZSgnaWNvbicpKSB7XG4gICAgICAgIGljb24uc2V0QXR0cmlidXRlKCdpY29uJywgdGhpcy5nZXRBdHRyaWJ1dGUoJ2ljb24nKSk7XG4gICAgICB9XG4gICAgICBpY29uV3JhcHBlci5wYXJlbnRFbGVtZW50ICE9PSBidXR0b24gJiYgYnV0dG9uLmluc2VydEJlZm9yZShpY29uV3JhcHBlciwgYnV0dG9uLmZpcnN0Q2hpbGQpO1xuXG4gICAgICAvLyBkaXJ0eSBmaXggZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9PbnNlblVJL09uc2VuVUkvaXNzdWVzLzE2NTRcbiAgICAgIGljb24uYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrIGluc3RhbmNlb2YgRnVuY3Rpb25cbiAgICAgICAgPyBmaXgoKVxuICAgICAgICA6IHNldEltbWVkaWF0ZSgoKSA9PiBpY29uLmF0dHJpYnV0ZUNoYW5nZWRDYWxsYmFjayBpbnN0YW5jZW9mIEZ1bmN0aW9uICYmIGZpeCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWNvbldyYXBwZXIgJiYgaWNvbldyYXBwZXIucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgWydsYWJlbCcsICdiYWRnZSddLmZvckVhY2goKGF0dHIsIGluZGV4KSA9PiB7XG4gICAgICBsZXQgcHJvcCA9IHRoaXMucXVlcnlTZWxlY3RvcihgLnRhYmJhcl9fJHthdHRyfWApO1xuICAgICAgaWYgKHRoaXMuaGFzQXR0cmlidXRlKGF0dHIpKSB7XG4gICAgICAgIHByb3AgPSBwcm9wIHx8IHV0aWwuY3JlYXRlKGAudGFiYmFyX18ke2F0dHJ9YCArIChhdHRyID09PSAnYmFkZ2UnID8gJyBub3RpZmljYXRpb24nIDogJycpKTtcbiAgICAgICAgcHJvcC50ZXh0Q29udGVudCA9IHRoaXMuZ2V0QXR0cmlidXRlKGF0dHIpO1xuICAgICAgICBwcm9wLnBhcmVudEVsZW1lbnQgIT09IGJ1dHRvbiAmJiBidXR0b24uYXBwZW5kQ2hpbGQocHJvcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwcm9wICYmIHByb3AucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBnZXQgX2lucHV0KCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnaW5wdXQnKTtcbiAgfVxuXG4gIGdldCBfYnV0dG9uKCkge1xuICAgIHJldHVybiB1dGlsLmZpbmRDaGlsZCh0aGlzLCAnLnRhYmJhcl9fYnV0dG9uJyk7XG4gIH1cblxuICBnZXQgX2ljb24oKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcnlTZWxlY3RvcignLnRhYmJhcl9faWNvbicpO1xuICB9XG5cbiAgZ2V0IF90YWJiYXIoKSB7XG4gICAgcmV0dXJuIHV0aWwuZmluZFBhcmVudCh0aGlzLCAnb25zLXRhYmJhcicpO1xuICB9XG5cbiAgZ2V0IGluZGV4KCkge1xuICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHRoaXMucGFyZW50RWxlbWVudC5jaGlsZHJlbiwgdGhpcyk7XG4gIH1cblxuICBfb25DbGljaygpIHtcbiAgICBpZiAodGhpcy5vbkNsaWNrIGluc3RhbmNlb2YgRnVuY3Rpb24pIHtcbiAgICAgIHRoaXMub25DbGljaygpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl90YWJiYXIuc2V0QWN0aXZlVGFiKHRoaXMuaW5kZXgsIHsgcmVqZWN0OiBmYWxzZSB9KTtcbiAgICB9XG4gIH1cblxuICBzZXRBY3RpdmUoYWN0aXZlID0gdHJ1ZSkge1xuICAgIHRoaXMuX2lucHV0LmNoZWNrZWQgPSBhY3RpdmU7XG4gICAgdGhpcy5jbGFzc0xpc3QudG9nZ2xlKCdhY3RpdmUnLCBhY3RpdmUpO1xuICAgIHV0aWwudG9nZ2xlQXR0cmlidXRlKHRoaXMsICdhY3RpdmUnLCBhY3RpdmUpXG5cbiAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2ljb24nKSAmJiB0aGlzLmhhc0F0dHJpYnV0ZSgnYWN0aXZlLWljb24nKSkge1xuICAgICAgdGhpcy5faWNvbi5jaGlsZHJlblswXS5zZXRBdHRyaWJ1dGUoJ2ljb24nLCB0aGlzLmdldEF0dHJpYnV0ZShhY3RpdmUgPyAnYWN0aXZlLWljb24nIDogJ2ljb24nKSk7XG4gICAgfVxuICB9XG5cbiAgX2xvYWRQYWdlRWxlbWVudChwYXJlbnQsIHBhZ2UpIHtcbiAgICB0aGlzLl9oYXNMb2FkZWQgPSB0cnVlO1xuXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgdGhpcy5fcGFnZUxvYWRlci5sb2FkKHsgcGFyZW50LCBwYWdlIH0sIHBhZ2VFbGVtZW50ID0+IHtcbiAgICAgICAgcGFyZW50LnJlcGxhY2VDaGlsZChwYWdlRWxlbWVudCwgcGFyZW50LmNoaWxkcmVuW3RoaXMuaW5kZXhdKTsgLy8gRW5zdXJlIHBvc2l0aW9uXG4gICAgICAgIHRoaXMuX2xvYWRlZFBhZ2UgPSBwYWdlRWxlbWVudDtcbiAgICAgICAgcmVzb2x2ZShwYWdlRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldCBwYWdlRWxlbWVudCgpIHtcbiAgICAvLyBJdCBoYXMgYmVlbiBsb2FkZWQgYnkgb25zLXRhYlxuICAgIGlmICh0aGlzLl9sb2FkZWRQYWdlKSB7XG4gICAgICByZXR1cm4gdGhpcy5fbG9hZGVkUGFnZTtcbiAgICB9XG4gICAgLy8gTWFudWFsbHkgYXR0YWNoZWQgdG8gRE9NLCAxIHBlciB0YWJcbiAgICBjb25zdCB0YWJiYXIgPSB0aGlzLl90YWJiYXI7XG4gICAgaWYgKHRhYmJhci5wYWdlcy5sZW5ndGggPT09IHRhYmJhci50YWJzLmxlbmd0aCkge1xuICAgICAgcmV0dXJuIHRhYmJhci5wYWdlc1t0aGlzLmluZGV4XTtcbiAgICB9XG4gICAgLy8gTG9hZGVkIGluIGFub3RoZXIgd2F5XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICAvKipcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG4gIGlzQWN0aXZlKCkge1xuICAgIHJldHVybiB0aGlzLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJyk7XG4gIH1cblxuICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25DbGljaywgZmFsc2UpO1xuICAgIGlmICh0aGlzLl9sb2FkZWRQYWdlKSB7XG4gICAgICB0aGlzLl9oYXNMb2FkZWQgPSBmYWxzZTtcbiAgICAgIHRoaXMubG9hZGVkID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5fb25DbGljaywgZmFsc2UpO1xuXG4gICAgaWYgKCF1dGlsLmlzQXR0YWNoZWQodGhpcykgfHwgdGhpcy5sb2FkZWQpIHtcbiAgICAgIHJldHVybjsgLy8gb25zLXRhYmJhciBjb21waWxhdGlvbiBtYXkgdHJpZ2dlciB0aGlzXG4gICAgfVxuXG4gICAgY29uc3QgZGVmZXJyZWQgPSB1dGlsLmRlZmVyKCk7XG4gICAgdGhpcy5sb2FkZWQgPSBkZWZlcnJlZC5wcm9taXNlO1xuXG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHtcbiAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5pbmRleDtcbiAgICAgIGNvbnN0IHRhYmJhciA9IHRoaXMuX3RhYmJhcjtcbiAgICAgIGlmICghdGFiYmFyKSB7XG4gICAgICAgIHV0aWwudGhyb3coJ1RhYiBlbGVtZW50cyBtdXN0IGJlIGNoaWxkcmVuIG9mIFRhYmJhcicpO1xuICAgICAgfVxuXG4gICAgICBpZiAodGFiYmFyLmhhc0F0dHJpYnV0ZSgnbW9kaWZpZXInKSkge1xuICAgICAgICB1dGlsLmFkZE1vZGlmaWVyKHRoaXMsIHRhYmJhci5nZXRBdHRyaWJ1dGUoJ21vZGlmaWVyJykpO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMuX2hhc0xvYWRlZCkge1xuICAgICAgICBpZiAodGhpcy5oYXNBdHRyaWJ1dGUoJ2FjdGl2ZScpKSB7XG4gICAgICAgICAgdGhpcy5zZXRBY3RpdmUodHJ1ZSk7XG4gICAgICAgICAgdGFiYmFyLnNldEF0dHJpYnV0ZSgnYWN0aXZlSW5kZXgnLCBpbmRleCk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaW5kZXggPT09IHRhYmJhci50YWJzLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgICB0YWJiYXIuX29uUmVmcmVzaCgpO1xuICAgICAgICAgIHNldEltbWVkaWF0ZSgoKSA9PiB0YWJiYXIuX29uUmVmcmVzaCgpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIFRhYmJhckVsZW1lbnQucmV3cml0YWJsZXMucmVhZHkodGFiYmFyLCAoKSA9PiB7XG4gICAgICAgICAgY29uc3QgcGFnZVRhcmdldCA9IHRoaXMucGFnZSB8fCB0aGlzLmdldEF0dHJpYnV0ZSgncGFnZScpO1xuICAgICAgICAgIGlmICghdGhpcy5wYWdlRWxlbWVudCAmJiBwYWdlVGFyZ2V0KSB7XG4gICAgICAgICAgICBjb25zdCBwYXJlbnRUYXJnZXQgPSB0YWJiYXIuX3RhcmdldEVsZW1lbnQ7XG4gICAgICAgICAgICBjb25zdCBkdW1teVBhZ2UgPSB1dGlsLmNyZWF0ZSgnZGl2JywgeyBoZWlnaHQ6ICcxMDAlJywgd2lkdGg6ICcxMDAlJywgdmlzaWJpbGl0eTogJ2hpZGRlbicgfSk7XG4gICAgICAgICAgICBwYXJlbnRUYXJnZXQuaW5zZXJ0QmVmb3JlKGR1bW15UGFnZSwgcGFyZW50VGFyZ2V0LmNoaWxkcmVuW2luZGV4XSk7IC8vIEVuc3VyZSBwb3NpdGlvblxuXG4gICAgICAgICAgICBjb25zdCBsb2FkID0gKCkgPT4gdGhpcy5fbG9hZFBhZ2VFbGVtZW50KHBhcmVudFRhcmdldCwgcGFnZVRhcmdldCkudGhlbihkZWZlcnJlZC5yZXNvbHZlKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzQWN0aXZlKCkgPyBsb2FkKCkgOiB0YWJiYXIuX2xvYWRJbmFjdGl2ZS5wcm9taXNlLnRoZW4obG9hZCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnJlc29sdmUodGhpcy5wYWdlRWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGdldCBvYnNlcnZlZEF0dHJpYnV0ZXMoKSB7XG4gICAgcmV0dXJuIFsnbW9kaWZpZXInLCAncmlwcGxlJywgJ2ljb24nLCAnbGFiZWwnLCAncGFnZScsICdiYWRnZScsICdjbGFzcyddO1xuICB9XG5cbiAgYXR0cmlidXRlQ2hhbmdlZENhbGxiYWNrKG5hbWUsIGxhc3QsIGN1cnJlbnQpIHtcbiAgICBzd2l0Y2ggKG5hbWUpIHtcbiAgICAgIGNhc2UgJ2NsYXNzJzpcbiAgICAgICAgdXRpbC5yZXN0b3JlQ2xhc3ModGhpcywgZGVmYXVsdENsYXNzTmFtZSwgc2NoZW1lKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb2RpZmllcic6XG4gICAgICAgIGNvbnRlbnRSZWFkeSh0aGlzLCAoKSA9PiBNb2RpZmllclV0aWwub25Nb2RpZmllckNoYW5nZWQobGFzdCwgY3VycmVudCwgdGhpcywgc2NoZW1lKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmlwcGxlJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZVJpcHBsZSgpKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdpY29uJzpcbiAgICAgIGNhc2UgJ2xhYmVsJzpcbiAgICAgIGNhc2UgJ2JhZGdlJzpcbiAgICAgICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX3VwZGF0ZUJ1dHRvbkNvbnRlbnQoKSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncGFnZSc6XG4gICAgICAgIHRoaXMucGFnZSA9IGN1cnJlbnQgfHwgJyc7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxufVxuXG5vbnNFbGVtZW50cy5UYWIgPSBUYWJFbGVtZW50O1xuY3VzdG9tRWxlbWVudHMuZGVmaW5lKCdvbnMtdGFiJywgVGFiRWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgQmFzZUFuaW1hdG9yIGZyb20gJy4uLy4uL29ucy9iYXNlLWFuaW1hdG9yJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9hc3RBbmltYXRvciBleHRlbmRzIEJhc2VBbmltYXRvciB7XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnRpbWluZ1xuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kdXJhdGlvblxuICAgKiBAcGFyYW0ge051bWJlcn0gb3B0aW9ucy5kZWxheVxuICAgKi9cbiAgY29uc3RydWN0b3Ioe3RpbWluZyA9ICdsaW5lYXInLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yfSA9IHt9KSB7XG4gICAgc3VwZXIoeyB0aW1pbmcsIGRlbGF5LCBkdXJhdGlvbiB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBtb2RhbFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyhtb2RhbCwgY2FsbGJhY2spIHtcbiAgICBjYWxsYmFjaygpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IG1vZGFsXG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKG1vZGFsLCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG4gIH1cbn1cbiIsIlxuLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IGFuaW1pdCBmcm9tICcuLi8uLi9vbnMvYW5pbWl0JztcbmltcG9ydCBUb2FzdEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuXG4vKipcbiAqIGlPUyBzdHlsZSBhbmltYXRvciBmb3IgZGlhbG9nLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWRlVG9hc3RBbmltYXRvciBleHRlbmRzIFRvYXN0QW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHt0aW1pbmcgPSAnbGluZWFyJywgZGVsYXkgPSAwLCBkdXJhdGlvbiA9IDAuM30gPSB7fSkge1xuICAgIHN1cGVyKHsgdGltaW5nLCBkZWxheSwgZHVyYXRpb24gfSk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdG9hc3RcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3codG9hc3QsIGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayA/IGNhbGxiYWNrIDogZnVuY3Rpb24oKSB7fTtcblxuICAgIGFuaW1pdCh0b2FzdCwgdGhpcy5kZWYpXG4gICAgICAuZGVmYXVsdCh7IG9wYWNpdHk6IDAgfSwgeyBvcGFjaXR5OiAxIH0pXG4gICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIGRvbmUoKTtcbiAgICAgIH0pXG4gICAgICAucGxheSgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7SFRNTEVsZW1lbnR9IHRvYXN0XG4gICAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrXG4gICAqL1xuICBoaWRlKHRvYXN0LCBjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgPyBjYWxsYmFjayA6IGZ1bmN0aW9uKCkge307XG5cbiAgICBhbmltaXQodG9hc3QsIHRoaXMuZGVmKVxuICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAxIH0sIHsgb3BhY2l0eTogMCB9KVxuICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICBkb25lKCk7XG4gICAgICB9KVxuICAgICAgLnBsYXkoKTtcbiAgfVxufVxuIiwiXG4vKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYW5pbWl0IGZyb20gJy4uLy4uL29ucy9hbmltaXQnO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uLy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgaVBob25lWFBhdGNoIGZyb20gJy4uLy4uL29ucy9pcGhvbmV4LXBhdGNoJztcbmltcG9ydCBUb2FzdEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuXG4vKipcbiAqIEFzY2VuZCBUb2FzdCBBbmltYXRvci5cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXNjZW5kVG9hc3RBbmltYXRvciBleHRlbmRzIFRvYXN0QW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHsgdGltaW5nID0gJ2Vhc2UnLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4yNSB9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuXG4gICAgdGhpcy5tZXNzYWdlRGVsYXkgPSB0aGlzLmR1cmF0aW9uICogMC40ICsgdGhpcy5kZWxheTsgLy8gRGVsYXkgbWVzc2FnZSBvcGFjaXR5IGNoYW5nZVxuICAgIGlmIChwbGF0Zm9ybS5pc0FuZHJvaWQoKSkge1xuICAgICAgdGhpcy5hc2NlbnNpb24gPSA0ODsgLy8gVG9hc3RzIGFyZSBhbHdheXMgMSBsaW5lXG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChpUGhvbmVYUGF0Y2guaXNJUGhvbmVYUG9ydHJhaXRQYXRjaEFjdGl2ZSgpKSB7XG4gICAgICAgIHRoaXMuYXNjZW5zaW9uID0gOTg7IC8vIDY0ICsgMzRcbiAgICAgIH0gZWxzZSBpZiAoaVBob25lWFBhdGNoLmlzSVBob25lWExhbmRzY2FwZVBhdGNoQWN0aXZlKCkpIHtcbiAgICAgICAgdGhpcy5hc2NlbnNpb24gPSA4NTsgLy8gNjQgKyAyMVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5hc2NlbnNpb24gPSA2NDtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdG9hc3RcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3codG9hc3QsIGNhbGxiYWNrKSB7XG4gICAgdG9hc3QgPSB0b2FzdC5fdG9hc3Q7XG4gICAgdXRpbC5nbG9iYWxzLmZhYk9mZnNldCA9IHRoaXMuYXNjZW5zaW9uO1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgIGFuaW1pdCh0b2FzdCwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHt0aGlzLmFzY2Vuc2lvbn1weCwgMClgIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSksXG5cbiAgICAgIGFuaW1pdCh0aGlzLl9nZXRGYWJzKCkpXG4gICAgICAgIC53YWl0KHRoaXMuZGVsYXkpXG4gICAgICAgIC5xdWV1ZSh7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsIC0ke3RoaXMuYXNjZW5zaW9ufXB4LCAwKSBzY2FsZSgxKWAgfSwgdGhpcy5kZWYpLFxuXG4gICAgICBhbmltaXQodXRpbC5hcnJheUZyb20odG9hc3QuY2hpbGRyZW4pLCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoeyBvcGFjaXR5OiAwIH0sIHsgb3BhY2l0eTogMSB9KVxuICAgICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0b2FzdFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZSh0b2FzdCwgY2FsbGJhY2spIHtcbiAgICB0b2FzdCA9IHRvYXN0Ll90b2FzdDtcbiAgICB1dGlsLmdsb2JhbHMuZmFiT2Zmc2V0ID0gMDtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG4gICAgICBhbmltaXQodG9hc3QsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyB9LFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHt0aGlzLmFzY2Vuc2lvbn1weCwgMClgIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pLFxuXG4gICAgICBhbmltaXQodGhpcy5fZ2V0RmFicygpLCB0aGlzLmRlZilcbiAgICAgICAgLndhaXQodGhpcy5kZWxheSlcbiAgICAgICAgLnF1ZXVlKHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgMCwgMCkgc2NhbGUoMSlgIH0sIHRoaXMuZGVmKSxcblxuICAgICAgYW5pbWl0KHV0aWwuYXJyYXlGcm9tKHRvYXN0LmNoaWxkcmVuKSwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSlcbiAgICApO1xuICB9XG5cbiAgX2dldEZhYnMoKSB7XG4gICAgcmV0dXJuIHV0aWwuYXJyYXlGcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ29ucy1mYWJbcG9zaXRpb25+PWJvdHRvbV0sIG9ucy1zcGVlZC1kaWFsW3Bvc2l0aW9ufj1ib3R0b21dJykpLmZpbHRlcihmYWIgPT4gZmFiLnZpc2libGUpO1xuICB9XG59XG4iLCJcbi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgaVBob25lWFBhdGNoIGZyb20gJy4uLy4uL29ucy9pcGhvbmV4LXBhdGNoJztcbmltcG9ydCBUb2FzdEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuXG4vKipcbiAqIExpZnQtZmFkZSBUb2FzdCBBbmltYXRvclxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaWZ0VG9hc3RBbmltYXRvciBleHRlbmRzIFRvYXN0QW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHsgdGltaW5nID0gJ2Vhc2UnLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4zNSB9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICAgIHRoaXMuYm9keUhlaWdodCA9IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0OyAvLyBhdm9pZCBGb3JjZWQgU3luY2hyb25vdXMgTGF5b3V0XG4gICAgaWYgKGlQaG9uZVhQYXRjaC5pc0lQaG9uZVhQb3J0cmFpdFBhdGNoQWN0aXZlKCkpIHtcbiAgICAgIHRoaXMubGlmdEFtb3VudCA9ICdjYWxjKDEwMCUgKyAzNHB4KSc7XG4gICAgfSBlbHNlIGlmIChpUGhvbmVYUGF0Y2guaXNJUGhvbmVYTGFuZHNjYXBlUGF0Y2hBY3RpdmUoKSkge1xuICAgICAgdGhpcy5saWZ0QW1vdW50ID0gJ2NhbGMoMTAwJSArIDIxcHgpJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5saWZ0QW1vdW50ID0gJzEwMCUnO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0b2FzdFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgc2hvdyh0b2FzdCwgY2FsbGJhY2spIHtcbiAgICB0b2FzdCA9IHRvYXN0Ll90b2FzdDtcblxuICAgIGFuaW1pdC5ydW5BbGwoXG4gICAgICBhbmltaXQodG9hc3QsIHRoaXMuZGVmKVxuICAgICAgICAuZGVmYXVsdChcbiAgICAgICAgICB7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsICR7dGhpcy5saWZ0QW1vdW50fSwgMClgLCBvcGFjaXR5OiAwIH0sXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsIG9wYWNpdHk6IDEgfVxuICAgICAgICApXG4gICAgICAgIC5xdWV1ZShkb25lID0+IHtcbiAgICAgICAgICBjYWxsYmFjayAmJiBjYWxsYmFjaygpO1xuICAgICAgICAgIGRvbmUoKTtcbiAgICAgICAgfSlcbiAgICAgICk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdG9hc3RcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIGhpZGUodG9hc3QsIGNhbGxiYWNrKSB7XG4gICAgdG9hc3QgPSB0b2FzdC5fdG9hc3Q7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRvYXN0LCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsIG9wYWNpdHk6IDEgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsICR7dGhpcy5saWZ0QW1vdW50fSwgMClgLCBvcGFjaXR5OiAwIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soKTtcbiAgICAgICAgICBkb25lKCk7XG4gICAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIF91cGRhdGVQb3NpdGlvbih0b2FzdCkge1xuICAgIGlmIChwYXJzZUludCh0b2FzdC5zdHlsZS50b3AsIDEwKSA9PT0gMCkge1xuICAgICAgdG9hc3Quc3R5bGUudG9wID0gdG9hc3Quc3R5bGUuYm90dG9tID0gJyc7XG4gICAgfVxuICB9XG59XG4iLCJcbi8qXG5Db3B5cmlnaHQgMjAxMy0yMDE1IEFTSUFMIENPUlBPUkFUSU9OXG5cbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG55b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG5Zb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcblxuICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG5cblVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbmRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbldJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxubGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG5cbiovXG5cbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL29ucy91dGlsJztcbmltcG9ydCBhbmltaXQgZnJvbSAnLi4vLi4vb25zL2FuaW1pdCc7XG5pbXBvcnQgaVBob25lWFBhdGNoIGZyb20gJy4uLy4uL29ucy9pcGhvbmV4LXBhdGNoJztcbmltcG9ydCBUb2FzdEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuXG4vKipcbiAqIEZhbGwtZmFkZSBUb2FzdCBBbmltYXRvclxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGYWxsVG9hc3RBbmltYXRvciBleHRlbmRzIFRvYXN0QW5pbWF0b3Ige1xuXG4gIGNvbnN0cnVjdG9yKHsgdGltaW5nID0gJ2Vhc2UnLCBkZWxheSA9IDAsIGR1cmF0aW9uID0gMC4zNSB9ID0ge30pIHtcbiAgICBzdXBlcih7IHRpbWluZywgZGVsYXksIGR1cmF0aW9uIH0pO1xuICAgIGlmIChpUGhvbmVYUGF0Y2guaXNJUGhvbmVYUG9ydHJhaXRQYXRjaEFjdGl2ZSgpKSB7XG4gICAgICB0aGlzLmZhbGxBbW91bnQgPSAnY2FsYygtMTAwJSAtIDQ0cHgpJztcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5mYWxsQW1vdW50ID0gJy0xMDAlJztcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdG9hc3RcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gY2FsbGJhY2tcbiAgICovXG4gIHNob3codG9hc3QsIGNhbGxiYWNrKSB7XG4gICAgdG9hc3QgPSB0b2FzdC5fdG9hc3Q7XG4gICAgdGhpcy5fdXBkYXRlUG9zaXRpb24odG9hc3QpO1xuXG4gICAgYW5pbWl0LnJ1bkFsbChcbiAgICAgIGFuaW1pdCh0b2FzdCwgdGhpcy5kZWYpXG4gICAgICAgIC5kZWZhdWx0KFxuICAgICAgICAgIHsgdHJhbnNmb3JtOiBgdHJhbnNsYXRlM2QoMCwgJHt0aGlzLmZhbGxBbW91bnR9LCAwKWAsIG9wYWNpdHk6IDAgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJywgb3BhY2l0eTogMSB9XG4gICAgICAgIClcbiAgICAgICAgLnF1ZXVlKGRvbmUgPT4ge1xuICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSB0b2FzdFxuICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFja1xuICAgKi9cbiAgaGlkZSh0b2FzdCwgY2FsbGJhY2spIHtcbiAgICB0b2FzdCA9IHRvYXN0Ll90b2FzdDtcbiAgICB0aGlzLl91cGRhdGVQb3NpdGlvbih0b2FzdCk7XG5cbiAgICBhbmltaXQucnVuQWxsKFxuICAgICAgYW5pbWl0KHRvYXN0LCB0aGlzLmRlZilcbiAgICAgICAgLmRlZmF1bHQoXG4gICAgICAgICAgeyB0cmFuc2Zvcm06ICd0cmFuc2xhdGUzZCgwLCAwLCAwKScsIG9wYWNpdHk6IDEgfSxcbiAgICAgICAgICB7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZTNkKDAsICR7dGhpcy5mYWxsQW1vdW50fSwgMClgLCBvcGFjaXR5OiAwIH1cbiAgICAgICAgKVxuICAgICAgICAucXVldWUoZG9uZSA9PiB7XG4gICAgICAgICAgdGhpcy5fdXBkYXRlUG9zaXRpb24odG9hc3QsIHRydWUpO1xuICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKCk7XG4gICAgICAgICAgZG9uZSgpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICBfdXBkYXRlUG9zaXRpb24odG9hc3QsIGNsZWFuVXApIHtcbiAgICBsZXQgY29ycmVjdFRvcDtcbiAgICBpZiAoaVBob25lWFBhdGNoLmlzSVBob25lWFBvcnRyYWl0UGF0Y2hBY3RpdmUoKSkge1xuICAgICAgY29ycmVjdFRvcCA9ICc0NHB4JztcbiAgICB9IGVsc2Uge1xuICAgICAgY29ycmVjdFRvcCA9ICcwJztcbiAgICB9XG5cbiAgICBpZiAodG9hc3Quc3R5bGUudG9wICE9PSBjb3JyZWN0VG9wKSB7XG4gICAgICB0b2FzdC5zdHlsZS50b3AgPSBjb3JyZWN0VG9wO1xuICAgICAgdG9hc3Quc3R5bGUuYm90dG9tID0gJ2luaXRpYWwnO1xuICAgIH1cbiAgfVxufVxuIiwiLypcbkNvcHlyaWdodCAyMDEzLTIwMTUgQVNJQUwgQ09SUE9SQVRJT05cblxuTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbnlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbllvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuXG4gICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcblxuVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG5TZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG5saW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cblxuKi9cblxuaW1wb3J0IG9uc0VsZW1lbnRzIGZyb20gJy4uLy4uL29ucy9lbGVtZW50cyc7XG5pbXBvcnQgdXRpbCBmcm9tICcuLi8uLi9vbnMvdXRpbCc7XG5pbXBvcnQgYXV0b1N0eWxlIGZyb20gJy4uLy4uL29ucy9hdXRvc3R5bGUnO1xuaW1wb3J0IE1vZGlmaWVyVXRpbCBmcm9tICcuLi8uLi9vbnMvaW50ZXJuYWwvbW9kaWZpZXItdXRpbCc7XG5pbXBvcnQgQW5pbWF0b3JGYWN0b3J5IGZyb20gJy4uLy4uL29ucy9pbnRlcm5hbC9hbmltYXRvci1mYWN0b3J5JztcbmltcG9ydCBUb2FzdEFuaW1hdG9yIGZyb20gJy4vYW5pbWF0b3InO1xuaW1wb3J0IEZhZGVUb2FzdEFuaW1hdG9yIGZyb20gJy4vZmFkZS1hbmltYXRvcic7XG5pbXBvcnQgQXNjZW5kVG9hc3RBbmltYXRvciBmcm9tICcuL2FzY2VuZC1hbmltYXRvcic7XG5pbXBvcnQgTGlmdFRvYXN0QW5pbWF0b3IgZnJvbSAnLi9saWZ0LWFuaW1hdG9yJztcbmltcG9ydCBGYWxsVG9hc3RBbmltYXRvciBmcm9tICcuL2ZhbGwtYW5pbWF0b3InO1xuaW1wb3J0IHBsYXRmb3JtIGZyb20gJy4uLy4uL29ucy9wbGF0Zm9ybSc7XG5pbXBvcnQgQmFzZURpYWxvZ0VsZW1lbnQgZnJvbSAnLi4vYmFzZS9iYXNlLWRpYWxvZyc7XG5pbXBvcnQgY29udGVudFJlYWR5IGZyb20gJy4uLy4uL29ucy9jb250ZW50LXJlYWR5JztcblxuY29uc3Qgc2NoZW1lID0ge1xuICAnLnRvYXN0JzogJ3RvYXN0LS0qJyxcbiAgJy50b2FzdF9fbWVzc2FnZSc6ICd0b2FzdC0tKl9fbWVzc2FnZScsXG4gICcudG9hc3RfX2J1dHRvbic6ICd0b2FzdC0tKl9fYnV0dG9uJ1xufTtcblxuY29uc3QgZGVmYXVsdENsYXNzTmFtZSA9ICd0b2FzdCc7XG5cbmNvbnN0IF9hbmltYXRvckRpY3QgPSB7XG4gICdkZWZhdWx0JzogcGxhdGZvcm0uaXNBbmRyb2lkKCkgPyBBc2NlbmRUb2FzdEFuaW1hdG9yIDogTGlmdFRvYXN0QW5pbWF0b3IsXG4gICdmYWRlJzogRmFkZVRvYXN0QW5pbWF0b3IsXG4gICdhc2NlbmQnOiBBc2NlbmRUb2FzdEFuaW1hdG9yLFxuICAnbGlmdCc6IExpZnRUb2FzdEFuaW1hdG9yLFxuICAnZmFsbCc6IEZhbGxUb2FzdEFuaW1hdG9yLFxuICAnbm9uZSc6IFRvYXN0QW5pbWF0b3Jcbn07XG5cbi8qKlxuICogQGVsZW1lbnQgb25zLXRvYXN0XG4gKiBAY2F0ZWdvcnkgZGlhbG9nXG4gKiBAZGVzY3JpcHRpb25cbiAqICAgW2VuXVxuICogICAgIFRoZSBUb2FzdCBvciBTbmFja2JhciBjb21wb25lbnQgaXMgdXNlZnVsIGZvciBkaXNwbGF5aW5nIGRpc21pc3NhYmxlIGluZm9ybWF0aW9uIG9yIHNpbXBsZSBhY3Rpb25zIGF0IChub3JtYWxseSkgdGhlIGJvdHRvbSBvZiB0aGUgcGFnZS5cbiAqXG4gKiAgICAgVGhpcyBjb21wb25lbnQgZG9lcyBub3QgYmxvY2sgdXNlciBpbnB1dCwgYWxsb3dpbmcgdGhlIGFwcCB0byBjb250aW51ZSBpdHMgZmxvdy4gRm9yIHNpbXBsZSB0b2FzdHMsIGNvbnNpZGVyIGBvbnMubm90aWZpY2F0aW9uLnRvYXN0YCBpbnN0ZWFkLlxuICogICBbL2VuXVxuICogICBbamFdWy9qYV1cbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS90b2FzdFxuICogQHNlZWFsc28gb25zLWFsZXJ0LWRpYWxvZ1xuICogICBbZW5dVGhlIGA8b25zLWFsZXJ0LWRpYWxvZz5gIGNvbXBvbmVudCBpcyBwcmVmZXJyZWQgZm9yIGRpc3BsYXlpbmcgdW5kaXNtaXNzYWJsZSBpbmZvcm1hdGlvbi5bL2VuXVxuICogICBbamFdWy9qYV1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9hc3RFbGVtZW50IGV4dGVuZHMgQmFzZURpYWxvZ0VsZW1lbnQge1xuXG4gIC8qKlxuICAgKiBAYXR0cmlidXRlIGFuaW1hdGlvblxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVmYXVsdCBkZWZhdWx0XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVRoZSBhbmltYXRpb24gdXNlZCB3aGVuIHNob3dpbmcgYW5kIGhpZGluZyB0aGUgdG9hc3QuIENhbiBiZSBlaXRoZXIgYFwiZGVmYXVsdFwiYCwgYFwiYXNjZW5kXCJgIChBbmRyb2lkKSwgYFwibGlmdFwiYCAoaU9TKSwgYFwiZmFsbFwiYCwgYFwiZmFkZVwiYCBvciBgXCJub25lXCJgLlsvZW5dXG4gICAqICBbamFdWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBhdHRyaWJ1dGUgYW5pbWF0aW9uLW9wdGlvbnNcbiAgICogQHR5cGUge0V4cHJlc3Npb259XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCB0aW1pbmcgYW5kIGRlbGF5IHdpdGggYW4gb2JqZWN0IGxpdGVyYWwuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMSwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCB0aW1pbmcsIGRlbGF544KS44Kq44OW44K444Kn44Kv44OI44Oq44OG44Op44Or44Gn5oyH5a6a44GX44G+44GZ44CCZS5nLiA8Y29kZT57ZHVyYXRpb246IDAuMiwgZGVsYXk6IDEsIHRpbWluZzogJ2Vhc2UtaW4nfTwvY29kZT5bL2phXVxuICAgKi9cblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5fZGVmYXVsdERCQiA9IG51bGw7XG4gICAgY29udGVudFJlYWR5KHRoaXMsICgpID0+IHRoaXMuX2NvbXBpbGUoKSk7XG4gIH1cblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4gc2NoZW1lO1xuICB9XG5cbiAgZ2V0IF90b2FzdCgpIHtcbiAgICByZXR1cm4gdXRpbC5maW5kQ2hpbGQodGhpcywgYC4ke2RlZmF1bHRDbGFzc05hbWV9YCk7XG4gIH1cblxuICBfdXBkYXRlQW5pbWF0b3JGYWN0b3J5KCkge1xuICAgIC8vIFJlc2V0IHBvc2l0aW9uIHN0eWxlXG4gICAgdGhpcy5fdG9hc3QgJiYgKHRoaXMuX3RvYXN0LnN0eWxlLnRvcCA9IHRoaXMuX3RvYXN0LnN0eWxlLmJvdHRvbSA9ICcnKTtcblxuICAgIHJldHVybiBuZXcgQW5pbWF0b3JGYWN0b3J5KHtcbiAgICAgIGFuaW1hdG9yczogX2FuaW1hdG9yRGljdCxcbiAgICAgIGJhc2VDbGFzczogVG9hc3RBbmltYXRvcixcbiAgICAgIGJhc2VDbGFzc05hbWU6ICdUb2FzdEFuaW1hdG9yJyxcbiAgICAgIGRlZmF1bHRBbmltYXRpb246IHRoaXMuZ2V0QXR0cmlidXRlKCdhbmltYXRpb24nKVxuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSBvbkRldmljZUJhY2tCdXR0b25cbiAgICogQHR5cGUge09iamVjdH1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXUJhY2stYnV0dG9uIGhhbmRsZXIuWy9lbl1cbiAgICogICBbamFd44OQ44OD44Kv44Oc44K/44Oz44OP44Oz44OJ44Op44CCWy9qYV1cbiAgICovXG5cbiAgX2NvbXBpbGUoKSB7XG4gICAgYXV0b1N0eWxlLnByZXBhcmUodGhpcyk7XG5cbiAgICB0aGlzLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgdGhpcy5zdHlsZS56SW5kZXggPSAxMDAwMDsgLy8gTG93ZXIgdGhhbiBkaWFsb2dzXG5cbiAgICBjb25zdCBtZXNzYWdlQ2xhc3NOYW1lID0gJ3RvYXN0X19tZXNzYWdlJztcbiAgICBjb25zdCBidXR0b25DbGFzc05hbWUgPSAndG9hc3RfX2J1dHRvbic7XG5cbiAgICBsZXQgdG9hc3QgPSB1dGlsLmZpbmRDaGlsZCh0aGlzLCBgLiR7ZGVmYXVsdENsYXNzTmFtZX1gKTtcbiAgICBpZiAoIXRvYXN0KSB7XG4gICAgICB0b2FzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgdG9hc3QuY2xhc3NMaXN0LmFkZChkZWZhdWx0Q2xhc3NOYW1lKTtcbiAgICAgIHdoaWxlICh0aGlzLmNoaWxkTm9kZXNbMF0pIHtcbiAgICAgICAgdG9hc3QuYXBwZW5kQ2hpbGQodGhpcy5jaGlsZE5vZGVzWzBdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsZXQgYnV0dG9uID0gdXRpbC5maW5kQ2hpbGQodG9hc3QsIGAuJHtidXR0b25DbGFzc05hbWV9YCk7XG4gICAgaWYgKCFidXR0b24pIHtcbiAgICAgIGJ1dHRvbiA9IHV0aWwuZmluZENoaWxkKHRvYXN0LCBlID0+IHV0aWwubWF0Y2goZSwgJy5idXR0b24nKSB8fCB1dGlsLm1hdGNoKGUsICdidXR0b24nKSk7XG4gICAgICBpZiAoYnV0dG9uKSB7XG4gICAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKCdidXR0b24nKTtcbiAgICAgICAgYnV0dG9uLmNsYXNzTGlzdC5hZGQoYnV0dG9uQ2xhc3NOYW1lKTtcbiAgICAgICAgdG9hc3QuYXBwZW5kQ2hpbGQoYnV0dG9uKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXV0aWwuZmluZENoaWxkKHRvYXN0LCBgLiR7bWVzc2FnZUNsYXNzTmFtZX1gKSkge1xuICAgICAgbGV0IG1lc3NhZ2UgPSB1dGlsLmZpbmRDaGlsZCh0b2FzdCwgJy5tZXNzYWdlJyk7XG4gICAgICBpZiAoIW1lc3NhZ2UpIHtcbiAgICAgICAgbWVzc2FnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBmb3IgKGxldCBpID0gdG9hc3QuY2hpbGROb2Rlcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgIGlmICh0b2FzdC5jaGlsZE5vZGVzW2ldICE9PSBidXR0b24pIHtcbiAgICAgICAgICAgIG1lc3NhZ2UuaW5zZXJ0QmVmb3JlKHRvYXN0LmNoaWxkTm9kZXNbaV0sIG1lc3NhZ2UuZmlyc3RDaGlsZCk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBtZXNzYWdlLmNsYXNzTGlzdC5hZGQobWVzc2FnZUNsYXNzTmFtZSk7XG5cbiAgICAgIHRvYXN0Lmluc2VydEJlZm9yZShtZXNzYWdlLCB0b2FzdC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBpZiAodG9hc3QucGFyZW50Tm9kZSAhPT0gdGhpcykge1xuICAgICAgdGhpcy5hcHBlbmRDaGlsZCh0b2FzdCk7XG4gICAgfVxuXG4gICAgTW9kaWZpZXJVdGlsLmluaXRNb2RpZmllcih0aGlzLCB0aGlzLl9zY2hlbWUpO1xuICB9XG5cbiAgLyoqXG4gICAqIEBwcm9wZXJ0eSB2aXNpYmxlXG4gICAqIEByZWFkb25seVxuICAgKiBAdHlwZSB7Qm9vbGVhbn1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVdoZXRoZXIgdGhlIGVsZW1lbnQgaXMgdmlzaWJsZSBvciBub3QuWy9lbl1cbiAgICogICBbamFd6KaB57Sg44GM6KaL44GI44KL5aC05ZCI44GrYHRydWVg44CCWy9qYV1cbiAgICovXG5cbiAgLyoqXG4gICAqIEBtZXRob2Qgc2hvd1xuICAgKiBAc2lnbmF0dXJlIHNob3coW29wdGlvbnNdKVxuICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdXG4gICAqICAgW2VuXVBhcmFtZXRlciBvYmplY3QuWy9lbl1cbiAgICogICBbamFd44Kq44OX44K344On44Oz44KS5oyH5a6a44GZ44KL44Kq44OW44K444Kn44Kv44OI44CCWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbl1cbiAgICogICBbZW5dQW5pbWF0aW9uIG5hbWUuIEF2YWlsYWJsZSBhbmltYXRpb25zIGFyZSBgXCJkZWZhdWx0XCJgLCBgXCJhc2NlbmRcImAgKEFuZHJvaWQpLCBgXCJsaWZ0XCJgIChpT1MpLCBgXCJmYWxsXCJgLCBgXCJmYWRlXCJgIG9yIGBcIm5vbmVcImAuWy9lbl1cbiAgICogICBbamFdWy9qYV1cbiAgICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmFuaW1hdGlvbk9wdGlvbnNdXG4gICAqICAgW2VuXVNwZWNpZnkgdGhlIGFuaW1hdGlvbidzIGR1cmF0aW9uLCBkZWxheSBhbmQgdGltaW5nLiBFLmcuIGB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9YC5bL2VuXVxuICAgKiAgIFtqYV3jgqLjg4vjg6Hjg7zjgrfjg6fjg7PmmYLjga5kdXJhdGlvbiwgZGVsYXksIHRpbWluZ+OCkuaMh+WumuOBl+OBvuOBmeOAgmUuZy4ge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfVsvamFdXG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1TaG93IHRoZSBlbGVtZW50LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEByZXR1cm4ge1Byb21pc2V9XG4gICAqICAgW2VuXVJlc29sdmVzIHRvIHRoZSBkaXNwbGF5ZWQgZWxlbWVudFsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIHRvZ2dsZVxuICAgKiBAc2lnbmF0dXJlIHRvZ2dsZShbb3B0aW9uc10pXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc11cbiAgICogICBbZW5dUGFyYW1ldGVyIG9iamVjdC5bL2VuXVxuICAgKiAgIFtqYV3jgqrjg5fjgrfjg6fjg7PjgpLmjIflrprjgZnjgovjgqrjg5bjgrjjgqfjgq/jg4jjgIJbL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uXVxuICAgKiAgIFtlbl1BbmltYXRpb24gbmFtZS4gQXZhaWxhYmxlIGFuaW1hdGlvbnMgYXJlIGBcImRlZmF1bHRcImAsIGBcImFzY2VuZFwiYCAoQW5kcm9pZCksIGBcImxpZnRcImAgKGlPUyksIGBcImZhbGxcImAsIGBcImZhZGVcImAgb3IgYFwibm9uZVwiYC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcGFyYW0ge1N0cmluZ30gW29wdGlvbnMuYW5pbWF0aW9uT3B0aW9uc11cbiAgICogICBbZW5dU3BlY2lmeSB0aGUgYW5pbWF0aW9uJ3MgZHVyYXRpb24sIGRlbGF5IGFuZCB0aW1pbmcuIEUuZy4gYHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31gLlsvZW5dXG4gICAqICAgW2phXeOCouODi+ODoeODvOOCt+ODp+ODs+aZguOBrmR1cmF0aW9uLCBkZWxheSwgdGltaW5n44KS5oyH5a6a44GX44G+44GZ44CCZS5nLiB7ZHVyYXRpb246IDAuMiwgZGVsYXk6IDAuNCwgdGltaW5nOiAnZWFzZS1pbid9Wy9qYV1cbiAgICogQGRlc2NyaXB0aW9uXG4gICAqICAgW2VuXVRvZ2dsZSB0b2FzdCB2aXNpYmlsaXR5LlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGhpZGVcbiAgICogQHNpZ25hdHVyZSBoaWRlKFtvcHRpb25zXSlcbiAgICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICAgKiAgIFtlbl1QYXJhbWV0ZXIgb2JqZWN0LlsvZW5dXG4gICAqICAgW2phXeOCquODl+OCt+ODp+ODs+OCkuaMh+WumuOBmeOCi+OCquODluOCuOOCp+OCr+ODiOOAglsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25dXG4gICAqICAgW2VuXUFuaW1hdGlvbiBuYW1lLiBBdmFpbGFibGUgYW5pbWF0aW9ucyBhcmUgYFwiZGVmYXVsdFwiYCwgYFwiYXNjZW5kXCJgIChBbmRyb2lkKSwgYFwibGlmdFwiYCAoaU9TKSwgYFwiZmFsbFwiYCwgYFwiZmFkZVwiYCBvciBgXCJub25lXCJgLlsvZW5dXG4gICAqICAgW2phXVsvamFdXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5hbmltYXRpb25PcHRpb25zXVxuICAgKiAgIFtlbl1TcGVjaWZ5IHRoZSBhbmltYXRpb24ncyBkdXJhdGlvbiwgZGVsYXkgYW5kIHRpbWluZy4gRS5nLiBge2R1cmF0aW9uOiAwLjIsIGRlbGF5OiAwLjQsIHRpbWluZzogJ2Vhc2UtaW4nfWAuWy9lbl1cbiAgICogICBbamFd44Ki44OL44Oh44O844K344On44Oz5pmC44GuZHVyYXRpb24sIGRlbGF5LCB0aW1pbmfjgpLmjIflrprjgZfjgb7jgZnjgIJlLmcuIHtkdXJhdGlvbjogMC4yLCBkZWxheTogMC40LCB0aW1pbmc6ICdlYXNlLWluJ31bL2phXVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dSGlkZSB0b2FzdC5bL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKiBAcmV0dXJuIHtQcm9taXNlfVxuICAgKiAgIFtlbl1SZXNvbHZlcyB0byB0aGUgaGlkZGVuIGVsZW1lbnRbL2VuXVxuICAgKiAgIFtqYV1bL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQHBhcmFtIHtTdHJpbmd9IG5hbWVcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gQW5pbWF0b3JcbiAgICovXG4gIHN0YXRpYyByZWdpc3RlckFuaW1hdG9yKG5hbWUsIEFuaW1hdG9yKSB7XG4gICAgaWYgKCEoQW5pbWF0b3IucHJvdG90eXBlIGluc3RhbmNlb2YgVG9hc3RBbmltYXRvcikpIHtcbiAgICAgIHV0aWwudGhyb3coJ1wiQW5pbWF0b3JcIiBwYXJhbSBtdXN0IGluaGVyaXQgT25zVG9hc3RFbGVtZW50LlRvYXN0QW5pbWF0b3InKTtcbiAgICB9XG4gICAgX2FuaW1hdG9yRGljdFtuYW1lXSA9IEFuaW1hdG9yO1xuICB9XG5cbiAgc3RhdGljIGdldCBhbmltYXRvcnMoKSB7XG4gICAgcmV0dXJuIF9hbmltYXRvckRpY3Q7XG4gIH1cblxuICBzdGF0aWMgZ2V0IFRvYXN0QW5pbWF0b3IoKSB7XG4gICAgcmV0dXJuIFRvYXN0QW5pbWF0b3I7XG4gIH1cbn1cblxub25zRWxlbWVudHMuVG9hc3QgPSBUb2FzdEVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10b2FzdCcsIFRvYXN0RWxlbWVudCk7XG4iLCIvKlxuQ29weXJpZ2h0IDIwMTMtMjAxNSBBU0lBTCBDT1JQT1JBVElPTlxuXG5MaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xueW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG5cbiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuXG5Vbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG5kaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG5XSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cblNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbmxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuXG4qL1xuXG5pbXBvcnQgb25zRWxlbWVudHMgZnJvbSAnLi4vb25zL2VsZW1lbnRzJztcbmltcG9ydCBCYXNlQnV0dG9uRWxlbWVudCBmcm9tICcuL2Jhc2UvYmFzZS1idXR0b24nO1xuXG4vKipcbiAqIEBlbGVtZW50IG9ucy10b29sYmFyLWJ1dHRvblxuICogQGNhdGVnb3J5IHBhZ2VcbiAqIEBtb2RpZmllciBtYXRlcmlhbFxuICogICBbZW5dTWF0ZXJpYWwgRGVzaWduIHRvb2xiYXIgYnV0dG9uLlsvZW5dXG4gKiAgIFtqYV1bL2phXVxuICogQG1vZGlmaWVyIG91dGxpbmVcbiAqICAgW2VuXUEgYnV0dG9uIHdpdGggYW4gb3V0bGluZS5bL2VuXVxuICogICBbamFd44Ki44Km44OI44Op44Kk44Oz44KS44KC44Gj44Gf44Oc44K/44Oz44KS6KGo56S644GX44G+44GZ44CCWy9qYV1cbiAqIEBkZXNjcmlwdGlvblxuICogICBbZW5dQnV0dG9uIGNvbXBvbmVudCBmb3Igb25zLXRvb2xiYXIgYW5kIG9ucy1ib3R0b20tdG9vbGJhci5bL2VuXVxuICogICBbamFdb25zLXRvb2xiYXLjgYLjgovjgYTjga9vbnMtYm90dG9tLXRvb2xiYXLjgavoqK3nva7jgafjgY3jgovjg5zjgr/jg7PnlKjjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgafjgZnjgIJbL2phXVxuICogQGNvZGVwZW4gYUhtR0xcbiAqIEB0dXRvcmlhbCB2YW5pbGxhL1JlZmVyZW5jZS9wYWdlXG4gKiBAZ3VpZGUgY29tcGlsYXRpb24uaHRtbCN0b29sYmFyLWNvbXBpbGF0aW9uXG4gKiAgIFtlbl1BZGRpbmcgYSB0b29sYmFyWy9lbl1cbiAqICAgW2phXeODhOODvOODq+ODkOODvOOBrui/veWKoFsvamFdXG4gKiBAc2VlYWxzbyBvbnMtdG9vbGJhclxuICogICBbZW5dVGhlIGA8b25zLXRvb2xiYXI+YCBjb21wb25lbnQgZGlzcGxheXMgYSBuYXZpZ2F0aW9uIGJhciBhdCB0aGUgdG9wIG9mIGEgcGFnZS5bL2VuXVxuICogICBbamFdb25zLXRvb2xiYXLjgrPjg7Pjg53jg7zjg43jg7Pjg4hbL2phXVxuICogQHNlZWFsc28gb25zLWJhY2stYnV0dG9uXG4gKiAgIFtlbl1UaGUgYDxvbnMtYmFjay1idXR0b24+YCBkaXNwbGF5cyBhIGJhY2sgYnV0dG9uIGluIHRoZSBuYXZpZ2F0aW9uIGJhci5bL2VuXVxuICogICBbamFdb25zLWJhY2stYnV0dG9u44Kz44Oz44Od44O844ON44Oz44OIWy9qYV1cbiAqIEBleGFtcGxlXG4gKiA8b25zLXRvb2xiYXI+XG4gKiAgIDxkaXYgY2xhc3M9XCJsZWZ0XCI+XG4gKiAgICAgPG9ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgICAgIEJ1dHRvblxuICogICAgIDwvb25zLXRvb2xiYXItYnV0dG9uPlxuICogICA8L2Rpdj5cbiAqICAgPGRpdiBjbGFzcz1cImNlbnRlclwiPlxuICogICAgIFRpdGxlXG4gKiAgIDwvZGl2PlxuICogICA8ZGl2IGNsYXNzPVwicmlnaHRcIj5cbiAqICAgICA8b25zLXRvb2xiYXItYnV0dG9uPlxuICogICAgICAgPG9ucy1pY29uIGljb249XCJpb24tbmF2aWNvblwiIHNpemU9XCIyOHB4XCI+PC9vbnMtaWNvbj5cbiAqICAgICA8L29ucy10b29sYmFyLWJ1dHRvbj5cbiAqICAgPC9kaXY+XG4gKiA8L29ucy10b29sYmFyPlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUb29sYmFyQnV0dG9uRWxlbWVudCBleHRlbmRzIEJhc2VCdXR0b25FbGVtZW50IHtcblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBtb2RpZmllclxuICAgKiBAdHlwZSB7U3RyaW5nfVxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dVGhlIGFwcGVhcmFuY2Ugb2YgdGhlIGJ1dHRvbi5bL2VuXVxuICAgKiAgIFtqYV3jg5zjgr/jg7Pjga7ooajnj77jgpLmjIflrprjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBpY29uXG4gICAqIEB0eXBlIHtTdHJpbmd9XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgW2VuXUNyZWF0ZXMgYW4gYG9ucy1pY29uYCBjb21wb25lbnQgd2l0aCB0aGlzIHN0cmluZy5bL2VuXVxuICAgKiAgW2phXWBvbnMtaWNvbmDjgrPjg7Pjg53jg7zjg43jg7Pjg4jjgpLmgqrmgKfjgZfjgb7jgZnjgIJbL2phXVxuICAgKi9cblxuICAvKipcbiAgICogQGF0dHJpYnV0ZSBkaXNhYmxlZFxuICAgKiBAZGVzY3JpcHRpb25cbiAgICogICBbZW5dU3BlY2lmeSBpZiBidXR0b24gc2hvdWxkIGJlIGRpc2FibGVkLlsvZW5dXG4gICAqICAgW2phXeODnOOCv+ODs+OCkueEoeWKueWMluOBmeOCi+WgtOWQiOOBr+aMh+WumuOBl+OBpuOBj+OBoOOBleOBhOOAglsvamFdXG4gICAqL1xuXG4gIC8qKlxuICAgKiBAcHJvcGVydHkgZGlzYWJsZWRcbiAgICogQHR5cGUge0Jvb2xlYW59XG4gICAqIEBkZXNjcmlwdGlvblxuICAgKiAgIFtlbl1XaGV0aGVyIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkIG9yIG5vdC5bL2VuXVxuICAgKiAgIFtqYV3nhKHlirnljJbjgZXjgozjgabjgYTjgovloLTlkIjjgatgdHJ1ZWDjgIJbL2phXVxuICAgKi9cblxuICBnZXQgX3NjaGVtZSgpIHtcbiAgICByZXR1cm4geyAnJzogJ3Rvb2xiYXItYnV0dG9uLS0qJyB9O1xuICB9XG5cbiAgZ2V0IF9kZWZhdWx0Q2xhc3NOYW1lKCkge1xuICAgIHJldHVybiAndG9vbGJhci1idXR0b24nO1xuICB9XG5cbiAgZ2V0IF9yaXBwbGVPcHQoKSB7XG4gICAgcmV0dXJuIFt0aGlzLCB1bmRlZmluZWQsIHsgY2VudGVyOiAnJywgJ3NpemUnOiAnY29udGFpbicsICdiYWNrZ3JvdW5kJzogJ3RyYW5zcGFyZW50JyB9XTtcbiAgfVxufVxuXG5vbnNFbGVtZW50cy5Ub29sYmFyQnV0dG9uID0gVG9vbGJhckJ1dHRvbkVsZW1lbnQ7XG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ29ucy10b29sYmFyLWJ1dHRvbicsIFRvb2xiYXJCdXR0b25FbGVtZW50KTtcbiIsImltcG9ydCBzZXR1cCBmcm9tICcuL3NldHVwJzsgLy8gQWRkIHBvbHlmaWxsc1xuaW1wb3J0IG9ucyBmcm9tICcuL29ucyc7IC8vIEFkZCBvbnMgaW50ZXJuYWxzXG5cbi8vIEFkZCBhbmQgcmVnaXN0ZXIgQ3VzdG9tIEVsZW1lbnRzXG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXRlbXBsYXRlJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtaWYnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1hY3Rpb24tc2hlZXQnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1hY3Rpb24tc2hlZXQtYnV0dG9uJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtYWxlcnQtZGlhbG9nJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtYWxlcnQtZGlhbG9nLWJ1dHRvbic7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWJhY2stYnV0dG9uJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtYm90dG9tLXRvb2xiYXInO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1idXR0b24nO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1jYXJkJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtY2Fyb3VzZWwtaXRlbSc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWNhcm91c2VsJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtY29sJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtZGlhbG9nJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtZmFiJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtZ2VzdHVyZS1kZXRlY3Rvcic7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWljb24nO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1sYXp5LXJlcGVhdCc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWxpc3QtaGVhZGVyJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtbGlzdC10aXRsZSc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWxpc3QtaXRlbSc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWxpc3QnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1pbnB1dCc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLWNoZWNrYm94JztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtcmFkaW8nO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zZWFyY2gtaW5wdXQnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1tb2RhbCc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLW5hdmlnYXRvcic7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXBhZ2UnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1wb3BvdmVyJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtcHJvZ3Jlc3MtYmFyJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtcHJvZ3Jlc3MtY2lyY3VsYXInO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1wdWxsLWhvb2snO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1yYW5nZSc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXJpcHBsZSc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXJvdyc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXNlZ21lbnQnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zZWxlY3QnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zcGVlZC1kaWFsLWl0ZW0nO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zcGVlZC1kaWFsJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtc3BsaXR0ZXItY29udGVudCc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXNwbGl0dGVyLW1hc2snO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zcGxpdHRlci1zaWRlJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtc3BsaXR0ZXInO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy1zd2l0Y2gnO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy10YWInO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy10YWJiYXInO1xuaW1wb3J0ICcuL2VsZW1lbnRzL29ucy10b2FzdCc7XG5pbXBvcnQgJy4vZWxlbWVudHMvb25zLXRvb2xiYXItYnV0dG9uJztcbmltcG9ydCAnLi9lbGVtZW50cy9vbnMtdG9vbGJhcic7XG5cbnNldHVwKG9ucyk7IC8vIFNldHVwIGluaXRpYWwgbGlzdGVuZXJzXG53aW5kb3cuX3N1cGVyU2VjcmV0T25zID0gb25zO1xuXG5leHBvcnQgZGVmYXVsdCBvbnM7XG4iXSwibmFtZXMiOlsiTmF0aXZlSFRNTEVsZW1lbnQiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIlBsYXRmb3JtIiwiX3NlbGVjdGVkUGxhdGZvcm0iLCJfaWdub3JlUGxhdGZvcm1TZWxlY3QiLCJwbGF0Zm9ybSIsInRyaW0iLCJ0b0xvd2VyQ2FzZSIsImZuIiwicmVzdWx0IiwiZG9jdW1lbnQiLCJyZWFkeVN0YXRlIiwiRXJyb3IiLCJjb3Jkb3ZhIiwicGhvbmVnYXAiLCJQaG9uZUdhcCIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJpc0lQaG9uZSIsInNjcmVlbiIsIndpZHRoIiwiaGVpZ2h0IiwiaXNJUGFkT1MiLCJmb3JjZUFjdHVhbFBsYXRmb3JtIiwiX2dldFNlbGVjdGVkUGxhdGZvcm0iLCJkZXZpY2UiLCJwYXJzZUludCIsInZlcnNpb24iLCJzcGxpdCIsInZlciIsIm1hdGNoIiwicmVwbGFjZSIsIm1heFRvdWNoUG9pbnRzIiwidWEiLCJpc0lPUyIsImluZGV4T2YiLCJzdGFuZGFsb25lIiwibHRlOSIsIndlYmtpdCIsIm1lc3NhZ2VIYW5kbGVycyIsImluZGV4ZWREQiIsIm9wZXJhIiwiSW5zdGFsbFRyaWdnZXIiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJwIiwic2FmYXJpIiwicHVzaE5vdGlmaWNhdGlvbiIsImNocm9tZSIsImRvY3VtZW50TW9kZSIsImlzQW5kcm9pZCIsImlzV1AiLCJpc0lQYWQiLCJpc0lQb2QiLCJjdXN0b21FbGVtZW50cyIsImZvcmNlUG9seWZpbGwiLCJnbG9iYWwiLCJtb2R1bGUiLCJNYXRoIiwic2VsZiIsIkZ1bmN0aW9uIiwiX19nIiwiY29yZSIsIl9fZSIsIml0IiwiaXNPYmplY3QiLCJUeXBlRXJyb3IiLCJleGVjIiwiZSIsInJlcXVpcmUkJDAiLCJkZWZpbmVQcm9wZXJ0eSIsImdldCIsImEiLCJpcyIsImNyZWF0ZUVsZW1lbnQiLCJyZXF1aXJlJCQxIiwicmVxdWlyZSQkMiIsIlMiLCJ2YWwiLCJ2YWx1ZU9mIiwiZFAiLCJPIiwiUCIsIkF0dHJpYnV0ZXMiLCJ0b1ByaW1pdGl2ZSIsIklFOF9ET01fREVGSU5FIiwidmFsdWUiLCJiaXRtYXAiLCJvYmplY3QiLCJrZXkiLCJmIiwiY3JlYXRlRGVzYyIsImhhc093blByb3BlcnR5IiwiaWQiLCJweCIsInJhbmRvbSIsImNvbmNhdCIsInVuZGVmaW5lZCIsIlNIQVJFRCIsInN0b3JlIiwicHVzaCIsIlNSQyIsIlRPX1NUUklORyIsIlRQTCIsIiR0b1N0cmluZyIsImluc3BlY3RTb3VyY2UiLCJzYWZlIiwiaXNGdW5jdGlvbiIsImhhcyIsImhpZGUiLCJqb2luIiwiU3RyaW5nIiwidGhhdCIsImxlbmd0aCIsImIiLCJjIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJQUk9UT1RZUEUiLCIkZXhwb3J0IiwidHlwZSIsIm5hbWUiLCJzb3VyY2UiLCJJU19GT1JDRUQiLCJGIiwiSVNfR0xPQkFMIiwiRyIsIklTX1NUQVRJQyIsIklTX1BST1RPIiwiSVNfQklORCIsIkIiLCJ0YXJnZXQiLCJleHBvcnRzIiwiZXhwUHJvdG8iLCJvd24iLCJvdXQiLCJleHAiLCJjdHgiLCJyZWRlZmluZSIsIlUiLCJXIiwiUiIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwic2xpY2UiLCJjb2YiLCJJT2JqZWN0IiwiZGVmaW5lZCIsImdPUEQiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ0b0lPYmplY3QiLCJwSUUiLCJjaGVjayIsInByb3RvIiwic2V0UHJvdG90eXBlT2YiLCJidWdneSIsInNldCIsIkFycmF5IiwiX19wcm90b19fIiwiU3ltYm9sIiwiVVNFX1NZTUJPTCIsIiRleHBvcnRzIiwidWlkIiwiVEFHIiwiQVJHIiwidHJ5R2V0IiwiVCIsImNhbGxlZSIsImNsYXNzb2YiLCJjZWlsIiwiZmxvb3IiLCJpc05hTiIsInBvcyIsInMiLCJpIiwidG9JbnRlZ2VyIiwibCIsImNoYXJDb2RlQXQiLCJjaGFyQXQiLCJtaW4iLCJtYXgiLCJpbmRleCIsIklTX0lOQ0xVREVTIiwiJHRoaXMiLCJlbCIsImZyb21JbmRleCIsInRvTGVuZ3RoIiwidG9BYnNvbHV0ZUluZGV4Iiwic2hhcmVkIiwiYXJyYXlJbmRleE9mIiwiSUVfUFJPVE8iLCJuYW1lcyIsImtleXMiLCIka2V5cyIsImVudW1CdWdLZXlzIiwiZGVmaW5lUHJvcGVydGllcyIsIlByb3BlcnRpZXMiLCJnZXRLZXlzIiwiZG9jdW1lbnRFbGVtZW50IiwiRW1wdHkiLCJjcmVhdGVEaWN0IiwiaWZyYW1lIiwibHQiLCJndCIsImlmcmFtZURvY3VtZW50Iiwic3R5bGUiLCJkaXNwbGF5IiwiYXBwZW5kQ2hpbGQiLCJzcmMiLCJjb250ZW50V2luZG93Iiwib3BlbiIsIndyaXRlIiwiY2xvc2UiLCJjcmVhdGUiLCJhbk9iamVjdCIsImRQcyIsImRlZiIsInRhZyIsInN0YXQiLCJjb25maWd1cmFibGUiLCJJdGVyYXRvclByb3RvdHlwZSIsIkNvbnN0cnVjdG9yIiwiTkFNRSIsIm5leHQiLCJkZXNjcmlwdG9yIiwiT2JqZWN0UHJvdG8iLCJnZXRQcm90b3R5cGVPZiIsInRvT2JqZWN0IiwiY29uc3RydWN0b3IiLCJJVEVSQVRPUiIsIkJVR0dZIiwiRkZfSVRFUkFUT1IiLCJLRVlTIiwiVkFMVUVTIiwicmV0dXJuVGhpcyIsIkJhc2UiLCJERUZBVUxUIiwiSVNfU0VUIiwiRk9SQ0VEIiwiZ2V0TWV0aG9kIiwia2luZCIsInZhbHVlcyIsImVudHJpZXMiLCJERUZfVkFMVUVTIiwiVkFMVUVTX0JVRyIsIiRuYXRpdmUiLCIkZGVmYXVsdCIsIiRlbnRyaWVzIiwiJGFueU5hdGl2ZSIsIm1ldGhvZHMiLCJMSUJSQVJZIiwiJGF0IiwiaXRlcmF0ZWQiLCJfdCIsIl9pIiwicG9pbnQiLCJkb25lIiwiVU5TQ09QQUJMRVMiLCJBcnJheVByb3RvIiwiX2siLCJzdGVwIiwiSXRlcmF0b3JzIiwiQXJndW1lbnRzIiwiYWRkVG9VbnNjb3BhYmxlcyIsIndrcyIsIlRPX1NUUklOR19UQUciLCJBcnJheVZhbHVlcyIsIkRPTUl0ZXJhYmxlcyIsImNvbGxlY3Rpb25zIiwiZXhwbGljaXQiLCJDb2xsZWN0aW9uIiwiJGl0ZXJhdG9ycyIsImZvcmJpZGRlbkZpZWxkIiwiaXRlcmF0b3IiLCJyZXQiLCJnZXRJdGVyYXRvck1ldGhvZCIsIkJSRUFLIiwiUkVUVVJOIiwiaXRlcmFibGUiLCJpdGVyRm4iLCJnZXRJdGVyRm4iLCJpc0FycmF5SXRlciIsIlNQRUNJRVMiLCJLRVkiLCJDIiwiREVTQ1JJUFRPUlMiLCJNRVRBIiwic2V0RGVzYyIsImlzRXh0ZW5zaWJsZSIsIkZSRUVaRSIsInByZXZlbnRFeHRlbnNpb25zIiwic2V0TWV0YSIsImZhc3RLZXkiLCJnZXRXZWFrIiwidyIsIm9uRnJlZXplIiwibWV0YSIsIk5FRUQiLCJUWVBFIiwiU0laRSIsImdldEVudHJ5IiwiZW50cnkiLCJfZiIsIm4iLCJrIiwid3JhcHBlciIsIklTX01BUCIsIkFEREVSIiwiX2wiLCJmb3JPZiIsImNsZWFyIiwidmFsaWRhdGUiLCJkYXRhIiwiciIsInByZXYiLCJmb3JFYWNoIiwiY2FsbGJhY2tmbiIsInYiLCJTQUZFX0NMT1NJTkciLCJyaXRlciIsInNraXBDbG9zaW5nIiwiYXJyIiwiaXRlciIsImNvbW1vbiIsIklTX1dFQUsiLCJmaXhNZXRob2QiLCJhZGQiLCJmYWlscyIsImdldENvbnN0cnVjdG9yIiwiaW5zdGFuY2UiLCJIQVNOVF9DSEFJTklORyIsIlRIUk9XU19PTl9QUklNSVRJVkVTIiwiQUNDRVBUX0lURVJBQkxFUyIsIiRpdGVyRGV0ZWN0IiwiQlVHR1lfWkVSTyIsIiRpbnN0YW5jZSIsImluaGVyaXRJZlJlcXVpcmVkIiwic2V0U3Ryb25nIiwiU0VUIiwiU2V0Iiwic3Ryb25nIiwidG9KU09OIiwiZnJvbSIsIkNPTExFQ1RJT04iLCJvZiIsIkEiLCJtYXBGbiIsIm1hcHBpbmciLCJjYiIsImFGdW5jdGlvbiIsIm5leHRJdGVtIiwicmVxdWlyZSQkNyIsIk1BUCIsIk1hcCIsImlzQXJyYXkiLCJhcmciLCJvcmlnaW5hbCIsInNwZWNpZXNDb25zdHJ1Y3RvciIsIiRjcmVhdGUiLCJJU19GSUxURVIiLCJJU19TT01FIiwiSVNfRVZFUlkiLCJJU19GSU5EX0lOREVYIiwiTk9fSE9MRVMiLCJhc2MiLCJyZXMiLCJnZXRPd25Qcm9wZXJ0eVN5bWJvbHMiLCIkYXNzaWduIiwiYXNzaWduIiwiSyIsImFMZW4iLCJnZXRTeW1ib2xzIiwiZ09QUyIsImlzRW51bSIsImoiLCJhcnJheUZpbmQiLCJjcmVhdGVBcnJheU1ldGhvZCIsImFycmF5RmluZEluZGV4IiwidW5jYXVnaHRGcm96ZW5TdG9yZSIsIlVuY2F1Z2h0RnJvemVuU3RvcmUiLCJmaW5kVW5jYXVnaHRGcm96ZW4iLCJzcGxpY2UiLCIkaGFzIiwiZWFjaCIsIk5BVElWRV9XRUFLX01BUCIsIklTX0lFMTEiLCJBY3RpdmVYT2JqZWN0IiwiV0VBS19NQVAiLCJ3ZWFrIiwidWZzdG9yZSIsIkludGVybmFsTWFwIiwiV2Vha01hcCIsIiRXZWFrTWFwIiwibWV0aG9kIiwicmVxdWlyZSQkNSIsIiRkZWZpbmVQcm9wZXJ0eSIsImFycmF5TGlrZSIsIm1hcGZuIiwicmVzZXJ2ZWRUYWdMaXN0IiwiaXNWYWxpZEN1c3RvbUVsZW1lbnROYW1lIiwibG9jYWxOYW1lIiwicmVzZXJ2ZWQiLCJ2YWxpZEZvcm0iLCJpc0Nvbm5lY3RlZCIsIm5vZGUiLCJuYXRpdmVWYWx1ZSIsImN1cnJlbnQiLCJfX0NFX2lzSW1wb3J0RG9jdW1lbnQiLCJEb2N1bWVudCIsInBhcmVudE5vZGUiLCJTaGFkb3dSb290IiwiaG9zdCIsIm5leHRTaWJsaW5nT3JBbmNlc3RvclNpYmxpbmciLCJyb290Iiwic3RhcnQiLCJuZXh0U2libGluZyIsIm5leHROb2RlIiwiZmlyc3RDaGlsZCIsIndhbGtEZWVwRGVzY2VuZGFudEVsZW1lbnRzIiwiY2FsbGJhY2siLCJ2aXNpdGVkSW1wb3J0cyIsIm5vZGVUeXBlIiwiTm9kZSIsIkVMRU1FTlRfTk9ERSIsImVsZW1lbnQiLCJnZXRBdHRyaWJ1dGUiLCJpbXBvcnROb2RlIiwiaW1wb3J0IiwiY2hpbGQiLCJzaGFkb3dSb290IiwiX19DRV9zaGFkb3dSb290Iiwic2V0UHJvcGVydHlVbmNoZWNrZWQiLCJkZXN0aW5hdGlvbiIsIkN1c3RvbUVsZW1lbnRTdGF0ZSIsIkN1c3RvbUVsZW1lbnRJbnRlcm5hbHMiLCJfbG9jYWxOYW1lVG9EZWZpbml0aW9uIiwiX2NvbnN0cnVjdG9yVG9EZWZpbml0aW9uIiwiX3BhdGNoZXMiLCJfaGFzUGF0Y2hlcyIsImRlZmluaXRpb24iLCJsaXN0ZW5lciIsInBhdGNoIiwiX19DRV9wYXRjaGVkIiwiZWxlbWVudHMiLCJfX0NFX3N0YXRlIiwiQ0VTdGF0ZSIsImN1c3RvbSIsIlV0aWxpdGllcyIsImNvbm5lY3RlZENhbGxiYWNrIiwidXBncmFkZUVsZW1lbnQiLCJkaXNjb25uZWN0ZWRDYWxsYmFjayIsImdhdGhlckVsZW1lbnRzIiwiX19DRV9oYXNSZWdpc3RyeSIsImFkZEV2ZW50TGlzdGVuZXIiLCJfX0NFX2RvY3VtZW50TG9hZEhhbmRsZWQiLCJkZWxldGUiLCJwYXRjaEFuZFVwZ3JhZGVUcmVlIiwiY3VycmVudFN0YXRlIiwibG9jYWxOYW1lVG9EZWZpbml0aW9uIiwiY29uc3RydWN0aW9uU3RhY2siLCJwb3AiLCJmYWlsZWQiLCJfX0NFX2RlZmluaXRpb24iLCJhdHRyaWJ1dGVDaGFuZ2VkQ2FsbGJhY2siLCJvYnNlcnZlZEF0dHJpYnV0ZXMiLCJfX0NFX2lzQ29ubmVjdGVkQ2FsbGJhY2tDYWxsZWQiLCJvbGRWYWx1ZSIsIm5ld1ZhbHVlIiwibmFtZXNwYWNlIiwiRG9jdW1lbnRDb25zdHJ1Y3Rpb25PYnNlcnZlciIsImludGVybmFscyIsImRvYyIsIl9pbnRlcm5hbHMiLCJfZG9jdW1lbnQiLCJfb2JzZXJ2ZXIiLCJNdXRhdGlvbk9ic2VydmVyIiwiX2hhbmRsZU11dGF0aW9ucyIsImJpbmQiLCJvYnNlcnZlIiwiZGlzY29ubmVjdCIsIm11dGF0aW9ucyIsImFkZGVkTm9kZXMiLCJEZWZlcnJlZCIsIl92YWx1ZSIsIl9yZXNvbHZlIiwiX3Byb21pc2UiLCJQcm9taXNlIiwicmVzb2x2ZSIsIkN1c3RvbUVsZW1lbnRSZWdpc3RyeSIsIl9lbGVtZW50RGVmaW5pdGlvbklzUnVubmluZyIsIl93aGVuRGVmaW5lZERlZmVycmVkIiwiX2ZsdXNoQ2FsbGJhY2siLCJfZmx1c2hQZW5kaW5nIiwiX3VuZmx1c2hlZExvY2FsTmFtZXMiLCJfZG9jdW1lbnRDb25zdHJ1Y3Rpb25PYnNlcnZlciIsIlN5bnRheEVycm9yIiwiYWRvcHRlZENhbGxiYWNrIiwiZ2V0Q2FsbGJhY2siLCJjYWxsYmFja1ZhbHVlIiwic2V0RGVmaW5pdGlvbiIsIl9mbHVzaCIsInNoaWZ0IiwiZGVmZXJyZWQiLCJyZWplY3QiLCJwcmlvciIsInRvUHJvbWlzZSIsIm91dGVyIiwiaW5uZXIiLCJmbHVzaCIsImRlZmluZSIsIndoZW5EZWZpbmVkIiwicG9seWZpbGxXcmFwRmx1c2hDYWxsYmFjayIsImNyZWF0ZUVsZW1lbnROUyIsImNsb25lTm9kZSIsImluc2VydEJlZm9yZSIsInJlbW92ZUNoaWxkIiwicmVwbGFjZUNoaWxkIiwiRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInJlbW92ZUF0dHJpYnV0ZSIsImdldEF0dHJpYnV0ZU5TIiwic2V0QXR0cmlidXRlTlMiLCJyZW1vdmVBdHRyaWJ1dGVOUyIsIkFscmVhZHlDb25zdHJ1Y3RlZE1hcmtlciIsImNvbnN0cnVjdG9yVG9EZWZpbml0aW9uIiwiTmF0aXZlIiwiRG9jdW1lbnRfY3JlYXRlRWxlbWVudCIsImxhc3RJbmRleCIsImJ1aWx0SW4iLCJub2RlcyIsImNvbm5lY3RlZEJlZm9yZSIsImZpbHRlciIsInByZXBlbmQiLCJkaXNjb25uZWN0VHJlZSIsImNvbm5lY3RUcmVlIiwiYXBwZW5kIiwiZGVlcCIsImNsb25lIiwiRG9jdW1lbnRfaW1wb3J0Tm9kZSIsInBhdGNoVHJlZSIsIk5TX0hUTUwiLCJEb2N1bWVudF9jcmVhdGVFbGVtZW50TlMiLCJEb2N1bWVudF9wcmVwZW5kIiwiRG9jdW1lbnRfYXBwZW5kIiwicmVmTm9kZSIsIkRvY3VtZW50RnJhZ21lbnQiLCJpbnNlcnRlZE5vZGVzIiwiY2hpbGROb2RlcyIsIm5hdGl2ZVJlc3VsdCIsIk5vZGVfaW5zZXJ0QmVmb3JlIiwibm9kZVdhc0Nvbm5lY3RlZCIsIk5vZGVfYXBwZW5kQ2hpbGQiLCJOb2RlX2Nsb25lTm9kZSIsIm93bmVyRG9jdW1lbnQiLCJOb2RlX3JlbW92ZUNoaWxkIiwibm9kZVRvSW5zZXJ0Iiwibm9kZVRvUmVtb3ZlIiwiTm9kZV9yZXBsYWNlQ2hpbGQiLCJub2RlVG9JbnNlcnRXYXNDb25uZWN0ZWQiLCJ0aGlzSXNDb25uZWN0ZWQiLCJwYXRjaF90ZXh0Q29udGVudCIsImJhc2VEZXNjcmlwdG9yIiwiZW51bWVyYWJsZSIsImFzc2lnbmVkVmFsdWUiLCJURVhUX05PREUiLCJyZW1vdmVkTm9kZXMiLCJjaGlsZE5vZGVzTGVuZ3RoIiwiTm9kZV90ZXh0Q29udGVudCIsImFkZFBhdGNoIiwicGFydHMiLCJ0ZXh0Q29udGVudCIsImNyZWF0ZVRleHROb2RlIiwiYmVmb3JlIiwiYWZ0ZXIiLCJ3YXNDb25uZWN0ZWQiLCJyZXBsYWNlV2l0aCIsInJlbW92ZSIsIkVsZW1lbnRfYXR0YWNoU2hhZG93IiwiaW5pdCIsIndhcm4iLCJwYXRjaF9pbm5lckhUTUwiLCJodG1sU3RyaW5nIiwicmVtb3ZlZEVsZW1lbnRzIiwiRWxlbWVudF9pbm5lckhUTUwiLCJIVE1MRWxlbWVudF9pbm5lckhUTUwiLCJyYXdEaXYiLCJpbm5lckhUTUwiLCJjb250ZW50IiwiRWxlbWVudF9zZXRBdHRyaWJ1dGUiLCJFbGVtZW50X2dldEF0dHJpYnV0ZSIsIkVsZW1lbnRfc2V0QXR0cmlidXRlTlMiLCJFbGVtZW50X2dldEF0dHJpYnV0ZU5TIiwiRWxlbWVudF9yZW1vdmVBdHRyaWJ1dGUiLCJFbGVtZW50X3JlbW92ZUF0dHJpYnV0ZU5TIiwicGF0Y2hfaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiYmFzZU1ldGhvZCIsIndoZXJlIiwiaW5zZXJ0ZWRFbGVtZW50IiwiSFRNTEVsZW1lbnRfaW5zZXJ0QWRqYWNlbnRFbGVtZW50IiwiRWxlbWVudF9pbnNlcnRBZGphY2VudEVsZW1lbnQiLCJFbGVtZW50X3ByZXBlbmQiLCJFbGVtZW50X2FwcGVuZCIsIkVsZW1lbnRfYmVmb3JlIiwiRWxlbWVudF9hZnRlciIsIkVsZW1lbnRfcmVwbGFjZVdpdGgiLCJFbGVtZW50X3JlbW92ZSIsInByaW9yQ3VzdG9tRWxlbWVudHMiLCJKc011dGF0aW9uT2JzZXJ2ZXIiLCJyZWdpc3RyYXRpb25zVGFibGUiLCJzZXRJbW1lZGlhdGUiLCJzZXRUaW1lb3V0Iiwic2V0SW1tZWRpYXRlUXVldWUiLCJzZW50aW5lbCIsInF1ZXVlIiwiZnVuYyIsInBvc3RNZXNzYWdlIiwiaXNTY2hlZHVsZWQiLCJzY2hlZHVsZWRPYnNlcnZlcnMiLCJzY2hlZHVsZUNhbGxiYWNrIiwib2JzZXJ2ZXIiLCJkaXNwYXRjaENhbGxiYWNrcyIsIndyYXBJZk5lZWRlZCIsIlNoYWRvd0RPTVBvbHlmaWxsIiwib2JzZXJ2ZXJzIiwic29ydCIsIm8xIiwibzIiLCJ1aWRfIiwiYW55Tm9uRW1wdHkiLCJ0YWtlUmVjb3JkcyIsImNhbGxiYWNrXyIsInJlbW92ZVRyYW5zaWVudE9ic2VydmVyc0ZvciIsIm5vZGVzXyIsInJlZ2lzdHJhdGlvbnMiLCJyZWdpc3RyYXRpb24iLCJyZW1vdmVUcmFuc2llbnRPYnNlcnZlcnMiLCJmb3JFYWNoQW5jZXN0b3JBbmRPYnNlcnZlckVucXVldWVSZWNvcmQiLCJvcHRpb25zIiwic3VidHJlZSIsInJlY29yZCIsImVucXVldWUiLCJ1aWRDb3VudGVyIiwicmVjb3Jkc18iLCJjaGlsZExpc3QiLCJhdHRyaWJ1dGVzIiwiY2hhcmFjdGVyRGF0YSIsImF0dHJpYnV0ZU9sZFZhbHVlIiwiYXR0cmlidXRlRmlsdGVyIiwiY2hhcmFjdGVyRGF0YU9sZFZhbHVlIiwicmVtb3ZlTGlzdGVuZXJzIiwiUmVnaXN0cmF0aW9uIiwiYWRkTGlzdGVuZXJzIiwiY29weU9mUmVjb3JkcyIsIk11dGF0aW9uUmVjb3JkIiwicHJldmlvdXNTaWJsaW5nIiwiYXR0cmlidXRlTmFtZSIsImF0dHJpYnV0ZU5hbWVzcGFjZSIsImNvcHlNdXRhdGlvblJlY29yZCIsImN1cnJlbnRSZWNvcmQiLCJyZWNvcmRXaXRoT2xkVmFsdWUiLCJnZXRSZWNvcmQiLCJnZXRSZWNvcmRXaXRoT2xkVmFsdWUiLCJjbGVhclJlY29yZHMiLCJyZWNvcmRSZXByZXNlbnRzQ3VycmVudE11dGF0aW9uIiwic2VsZWN0UmVjb3JkIiwibGFzdFJlY29yZCIsIm5ld1JlY29yZCIsInRyYW5zaWVudE9ic2VydmVkTm9kZXMiLCJyZWNvcmRzIiwicmVjb3JkVG9SZXBsYWNlTGFzdCIsImFkZExpc3RlbmVyc18iLCJyZW1vdmVMaXN0ZW5lcnNfIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsImF0dHJOYW1lIiwicmVsYXRlZE5vZGUiLCJuYW1lc3BhY2VVUkkiLCJhdHRyQ2hhbmdlIiwiTXV0YXRpb25FdmVudCIsIkFERElUSU9OIiwicHJldlZhbHVlIiwiYWRkVHJhbnNpZW50T2JzZXJ2ZXIiLCJjaGFuZ2VkTm9kZSIsIl9pc1BvbHlmaWxsZWQiLCJuZXh0SGFuZGxlIiwidGFza3NCeUhhbmRsZSIsImN1cnJlbnRseVJ1bm5pbmdBVGFzayIsImFkZEZyb21TZXRJbW1lZGlhdGVBcmd1bWVudHMiLCJhcmdzIiwicGFydGlhbGx5QXBwbGllZCIsImhhbmRsZXIiLCJydW5JZlByZXNlbnQiLCJoYW5kbGUiLCJ0YXNrIiwiY2xlYXJJbW1lZGlhdGUiLCJpbnN0YWxsTmV4dFRpY2tJbXBsZW1lbnRhdGlvbiIsIm5leHRUaWNrIiwiY2FuVXNlUG9zdE1lc3NhZ2UiLCJpbXBvcnRTY3JpcHRzIiwicG9zdE1lc3NhZ2VJc0FzeW5jaHJvbm91cyIsIm9sZE9uTWVzc2FnZSIsIm9ubWVzc2FnZSIsImluc3RhbGxQb3N0TWVzc2FnZUltcGxlbWVudGF0aW9uIiwibWVzc2FnZVByZWZpeCIsIm9uR2xvYmFsTWVzc2FnZSIsImV2ZW50IiwiYXR0YWNoRXZlbnQiLCJpbnN0YWxsTWVzc2FnZUNoYW5uZWxJbXBsZW1lbnRhdGlvbiIsImNoYW5uZWwiLCJNZXNzYWdlQ2hhbm5lbCIsInBvcnQxIiwicG9ydDIiLCJpbnN0YWxsUmVhZHlTdGF0ZUNoYW5nZUltcGxlbWVudGF0aW9uIiwiaHRtbCIsInNjcmlwdCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsImluc3RhbGxTZXRUaW1lb3V0SW1wbGVtZW50YXRpb24iLCJhdHRhY2hUbyIsInByb2Nlc3MiLCJERUZBVUxUX1ZJRVdQT1JUIiwiVmlld3BvcnQiLCJ2aWV3cG9ydEVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiaGVhZCIsImVuc3VyZVZpZXdwb3J0RWxlbWVudCIsImhhc0F0dHJpYnV0ZSIsIk1pY3JvRXZlbnQiLCJmY3QiLCJfZXZlbnRzIiwib2ZmIiwib24iLCJfZmN0IiwibWl4aW4iLCJkZXN0T2JqZWN0IiwicHJvcHMiLCJwcmVmaXgiLCJzdHlsZXMiLCJnZXRDb21wdXRlZFN0eWxlIiwiT0xpbmsiLCJ1dGlsIiwiaHlwaGVuYXRlIiwic3R5bGVyIiwiY2xlYXJsaXN0IiwicmVkdWNlIiwic29tZSIsImF1dG9TdHlsZUVuYWJsZWQiLCJtb2RpZmllcnNNYXAiLCJwbGF0Zm9ybXMiLCJhbmRyb2lkIiwiZWxlbWVudE5hbWUiLCJ0YWdOYW1lIiwiaGFzTW9kaWZpZXIiLCJvbGRNb2RpZmllciIsIm5ld01vZGlmaWVyIiwibWFwIiwidW5zaGlmdCIsImlvcyIsInJlbW92ZU1vZGlmaWVyIiwiYWRkTW9kaWZpZXIiLCJ1bmxvY2tlZCIsImdldFBsYXRmb3JtIiwiZm9yY2UiLCJtb2JpbGVPUyIsIm9uc1BsYXRmb3JtIiwiZ2V0TW9iaWxlT1MiLCJwcmVwYXJlIiwibWFwTW9kaWZpZXIiLCJtb2RpZmllciIsIm0iLCJyZXN0b3JlTW9kaWZpZXIiLCJNb2RpZmllclV0aWwiLCJsYXN0IiwibWFrZURpY3QiLCJyZW1vdmVkIiwidG9rZW4iLCJhZGRlZCIsImRpY3QiLCJkaWZmIiwiY2xhc3NMaXN0IiwidGVtcGxhdGUiLCJrbGFzcyIsInNjaGVtZSIsInRhcmdldEVsZW1lbnRzIiwic2VsZWN0b3IiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZmluZFBhcmVudCIsInRhcmdldEVsZW1lbnQiLCJwYXJlbnQiLCJhcHBseURpZmZUb0NsYXNzTGlzdCIsImFwcGx5RGlmZlRvRWxlbWVudCIsIm1vZGlmaWVyVG9rZW4iLCJ0b2tlbnMiLCJzdGFydHNXaXRoIiwic3Vic3RyIiwiZW5kc1dpdGgiLCJ1bndyYXAiLCJpc09iamVjdFN0cmluZyIsImlzQXJyYXlTdHJpbmciLCJpc1F1b3RlZFN0cmluZyIsImVycm9yIiwic3RyaW5nIiwib3JpZ2luYWxTdHJpbmciLCJwcm9jZXNzVG9rZW4iLCJwYXJzZU9iamVjdCIsInBhcnNlQXJyYXkiLCJuZXh0VG9rZW4iLCJsaW1pdCIsIm5lc3RlZE9iamVjdCIsImlzVmFsaWRLZXkiLCJyZWFkaW5nS2V5IiwicHJldmlvdXNUb2tlbiIsImFycmF5IiwicGFyc2UiLCJlcnJvclByZWZpeCIsImdsb2JhbHMiLCJfcnVuT25BY3R1YWxQbGF0Zm9ybSIsImFjdHVhbE1vYmlsZU9TIiwiaXNXS1dlYlZpZXciLCJvcHRzIiwic3VwcG9ydHNQYXNzaXZlIiwib3B0IiwiaXNHRCIsImNhcHR1cmUiLCJwcmVwYXJlUXVlcnkiLCJxdWVyeSIsIm1hdGNoZXMiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImZpbmRDaGlsZCIsInVudGlsIiwiaXNBdHRhY2hlZCIsImJvZHkiLCJjb250YWlucyIsImhhc0FueUNvbXBvbmVudEFzUGFyZW50Iiwibm9kZU5hbWUiLCJnZXRBbGxDaGlsZE5vZGVzIiwiY2hpbGRyZW4iLCJjaGlsZEVsIiwiaXNQYWdlQ29udHJvbCIsInByb3BhZ2F0ZUFjdGlvbiIsImFjdGlvbiIsImNhbWVsaXplIiwidG9VcHBlckNhc2UiLCJjbGFzc05hbWUiLCJ0aHJvdyIsImNyZWF0ZUZyYWdtZW50IiwiZXh0ZW5kIiwiZHN0IiwiYXJyYXlGcm9tIiwicGFyc2VKU09OT2JqZWN0U2FmZWx5IiwianNvblN0cmluZyIsImZhaWxTYWZlIiwiSlNPTiIsImZpbmRGcm9tUGF0aCIsInBhdGgiLCJnZXRUb3BQYWdlIiwiY29udGFpbmVyIiwidG9wUGFnZSIsImZpbmRUb29sYmFyUGFnZSIsInBhZ2UiLCJfY2FuQW5pbWF0ZVRvb2xiYXIiLCJfY29udGVudEVsZW1lbnQiLCJuZXh0UGFnZSIsInRyaWdnZXJFbGVtZW50RXZlbnQiLCJldmVudE5hbWUiLCJkZXRhaWwiLCJDdXN0b21FdmVudCIsImRpc3BhdGNoRXZlbnQiLCJtb2RpZmllck5hbWUiLCJSZWdFeHAiLCJhdXRvU3R5bGUiLCJmb3JjZUF1dG9TdHlsZSIsIm5ld01vZGlmaWVycyIsInRvZ2dsZU1vZGlmaWVyIiwidG9nZ2xlIiwicmVzdG9yZUNsYXNzIiwiZGVmYXVsdENsYXNzIiwicmVmcmVzaCIsInVwZGF0ZVBhcmVudFBvc2l0aW9uIiwiX3BhcmVudFVwZGF0ZWQiLCJwYXJlbnRFbGVtZW50IiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBvc2l0aW9uIiwidG9nZ2xlQXR0cmlidXRlIiwiYmluZExpc3RlbmVycyIsImxpc3RlbmVyTmFtZXMiLCJib3VuZE5hbWUiLCJvYmoiLCJ1cGRhdGVSaXBwbGUiLCJoYXNSaXBwbGUiLCJhdHRycyIsInJpcHBsZUVsZW1lbnQiLCJhbmltYXRpb25PcHRpb25zUGFyc2UiLCJpc0ludGVnZXIiLCJpc0Zpbml0ZSIsImRlZmVyIiwicHJvbWlzZSIsImludGVybmFsIiwiY29uZmlnIiwid2FybmluZ3NEaXNhYmxlZCIsIm1lc3NhZ2UiLCJ0aHJvd0Fic3RyYWN0IiwidGhyb3dNZW1iZXIiLCJ0aHJvd1BhZ2VMb2FkZXIiLCJ0aHJvd0FuaW1hdG9yIiwicHJldmVudCIsImNhbmNlbGFibGUiLCJwcmV2ZW50RGVmYXVsdCIsImlvc1ByZXZlbnRTY3JvbGwiLCJjbGVhbiIsImlvc1BhZ2VTY3JvbGxGaXgiLCJpc1ZhbGlkR2VzdHVyZSIsImdlc3R1cmUiLCJkaXN0YW5jZSIsImRlbHRhVGltZSIsImNoZWNrTWlzc2luZ0ltcG9ydCIsImVsZW1lbnROYW1lcyIsIm9uc0VsZW1lbnRzIiwicGFnZUF0dHJpYnV0ZUV4cHJlc3Npb24iLCJvdmVyd3JpdGUiLCJfdmFyaWFibGVzIiwicGFydCIsImluSW50ZXJwb2xhdGlvbiIsImN1cnJlbnRJbmRleCIsInN1YnN0cmluZyIsInJlIiwidmFyaWFibGUiLCJnZXRWYXJpYWJsZSIsInJ2IiwiX3JlcGxhY2VUb2tlbiIsImV4cHJlc3Npb24iLCJfcGFyc2VQYXJ0IiwiX3JlcGxhY2VUb2tlbnMiLCJfcGFyc2VFeHByZXNzaW9uIiwiZGVmaW5lVmFyaWFibGUiLCJnZXRJT1NEZXZpY2UiLCJpc1dlYlZpZXciLCJudWxsRWxlbWVudCIsImlzRW5hYmxlZEF1dG9TdGF0dXNCYXJGaWxsIiwiYXV0b1N0YXR1c0JhckZpbGwiLCJub3JtYWxpemVQYWdlSFRNTCIsIndhaXRET01Db250ZW50TG9hZGVkIiwid3JhcHBlZENhbGxiYWNrIiwib25SZWFkeSIsInNob3VsZEZpbGxTdGF0dXNCYXIiLCJpc0lPUzdhYm92ZSIsImlzSVBob25lWCIsInRlbXBsYXRlU3RvcmUiLCJfc3RvcmFnZSIsInRlbXBsYXRlSWQiLCJnZXRUZW1wbGF0ZUhUTUxBc3luYyIsImNhY2hlIiwibG9jYWwiLCJnZXRFbGVtZW50QnlJZCIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib25sb2FkIiwicmVzcG9uc2VUZXh0Iiwic3RhdHVzIiwiZnJhZ21lbnQiLCJ0ZXh0Iiwib25lcnJvciIsInNlbmQiLCJnZXRQYWdlSFRNTEFzeW5jIiwicGFnZXMiLCJldmFsdWF0ZSIsImdldFBhZ2UiLCJjYXRjaCIsIkFuaW1hdG9yRmFjdG9yeSIsIl9hbmltYXRvcnMiLCJhbmltYXRvcnMiLCJfYmFzZUNsYXNzIiwiYmFzZUNsYXNzIiwiX2Jhc2VDbGFzc05hbWUiLCJiYXNlQ2xhc3NOYW1lIiwiX2FuaW1hdGlvbiIsImRlZmF1bHRBbmltYXRpb24iLCJfYW5pbWF0aW9uT3B0aW9ucyIsImRlZmF1bHRBbmltYXRpb25PcHRpb25zIiwiZGVmYXVsdEFuaW1hdG9yIiwiYW5pbWF0b3IiLCJhbmltYXRpb24iLCJBbmltYXRvciIsImFuaW1hdGlvbk9wdHMiLCJhbmltYXRpb25PcHRpb25zIiwiYW5pbWF0aW9uc0Rpc2FibGVkIiwiZHVyYXRpb24iLCJkZWxheSIsIl9kb21Db250ZW50TG9hZGVkIiwiX3JlYWR5IiwiX29uRE9NQ29udGVudExvYWRlZCIsIkhhbmRsZXJSZXBvc2l0b3J5IiwiZGF0YXNldCIsImRldmljZUJhY2tCdXR0b25IYW5kbGVySWQiLCJfZ2VuSWQiLCJfc3RvcmUiLCJEZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciIsIl9pc0VuYWJsZWQiLCJfYm91bmRDYWxsYmFjayIsIl9jYWxsYmFjayIsImFkZEJhY2tCdXR0b25MaXN0ZW5lciIsInJlbW92ZUJhY2tCdXR0b25MaXN0ZW5lciIsImNyZWF0ZUV2ZW50IiwiaW5pdEV2ZW50IiwiX2Rpc3BhdGNoRGV2aWNlQmFja0J1dHRvbkV2ZW50IiwiX2VsZW1lbnQiLCJlbmFibGUiLCJ0cmVlIiwiX2NhcHR1cmVUcmVlIiwiX2ZpbmRIYW5kbGVyTGVhZkVsZW1lbnQiLCJjcmVhdGVUcmVlIiwiYXJyYXlPZiIsImNoaWxkRWxlbWVudCIsIl9pc1Nob3duIiwic3ViVHJlZSIsImZpbmQiLCJjaGlsZE5vZGUiLCJsZWZ0IiwicmlnaHQiLCJsZWZ0WiIsInpJbmRleCIsInJpZ2h0WiIsImRiYkRpc3BhdGNoZXIiLCJkZXZpY2VCYWNrQnV0dG9uRGlzcGF0Y2hlciIsInNldHVwIiwib25zIiwicmVnaXN0ZXIiLCJ0ZW1wbGF0ZXMiLCJfb25zTG9hZGVkIiwiX3V0aWwiLCJyZWFkeSIsImVuYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyIiwiX2RlZmF1bHREZXZpY2VCYWNrQnV0dG9uSGFuZGxlciIsIl9pbnRlcm5hbCIsImNyZWF0ZUhhbmRsZXIiLCJhcHAiLCJleGl0QXBwIiwiX2dlc3R1cmVEZXRlY3RvciIsIkdlc3R1cmVEZXRlY3RvciIsInBhc3NpdmUiLCJrZXlDb2RlIiwiZmlyZURldmljZUJhY2tCdXR0b25FdmVudCIsIl9zZXR1cExvYWRpbmdQbGFjZUhvbGRlcnMiLCJUSU1FT1VUX1JBVElPIiwiY2FwaXRhbGl6ZSIsInN0ciIsImJ1aWxkVHJhbnNpdGlvblZhbHVlIiwicGFyYW1zIiwicHJvcGVydHkiLCJ0aW1pbmciLCJwcm9wIiwib25jZU9uVHJhbnNpdGlvbkVuZCIsInN0b3BQcm9wYWdhdGlvbiIsIl90cmFuc2l0aW9uRW5kRXZlbnRzIiwidmVuZG9yUHJlZml4IiwiX2Nzc1Byb3BlcnR5RGljdCIsInoiLCJ1cHBlciIsImhhc0Nzc1Byb3BlcnR5IiwicHJlIiwiZm9yY2VMYXlvdXRBdE9uY2UiLCJiYXRjaEltbWVkaWF0ZSIsIm9mZnNldEhlaWdodCIsImNhbGxiYWNrcyIsImNvbmNyZWF0ZUNhbGxiYWNrcyIsImJhdGNoQW5pbWF0aW9uRnJhbWUiLCJyYWYiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ0cmFuc2l0aW9uUHJvcGVydHlOYW1lIiwiQW5pbWl0IiwiZGVmYXVsdHMiLCJ0cmFuc2l0aW9uUXVldWUiLCJsYXN0U3R5bGVBdHRyaWJ1dGVEaWN0Iiwic3RhcnRBbmltYXRpb24iLCJ0byIsImNzcyIsInNhdmVTdHlsZSIsIndhaXQiLCJyZXN0b3JlU3R5bGUiLCJ0cmFuc2l0aW9uIiwiVHJhbnNpdGlvbiIsImJ1aWxkIiwic2Vjb25kcyIsInRyYW5zaXRpb25OYW1lIiwidHJhbnNpdGlvblZhbHVlIiwidGltZW91dElkIiwiY2xlYXJUcmFuc2l0aW9uIiwibGVuIiwicmVzZXQiLCJfZGVxdWV1ZVRyYW5zaXRpb24iLCJfY3VycmVudFRyYW5zaXRpb24iLCJjYWxsZWQiLCJydW5BbGwiLCJwbGF5IiwiY3JlYXRlQWN0dWFsQ3NzUHJvcHMiLCJ0aW1lb3V0IiwicHJlZml4ZWQiLCJFdmVudCIsIlV0aWxzIiwiRGV0ZWN0aW9uIiwiUG9pbnRlckV2ZW50IiwiSW5zdGFuY2UiLCJET0NVTUVOVCIsIkhBU19QT0lOVEVSRVZFTlRTIiwicG9pbnRlckVuYWJsZWQiLCJtc1BvaW50ZXJFbmFibGVkIiwiSEFTX1RPVUNIRVZFTlRTIiwiSVNfTU9CSUxFIiwiTk9fTU9VU0VFVkVOVFMiLCJDQUxDVUxBVEVfSU5URVJWQUwiLCJFVkVOVF9UWVBFUyIsIkRJUkVDVElPTl9ET1dOIiwiRElSRUNUSU9OX0xFRlQiLCJESVJFQ1RJT05fVVAiLCJESVJFQ1RJT05fUklHSFQiLCJQT0lOVEVSX01PVVNFIiwiUE9JTlRFUl9UT1VDSCIsIlBPSU5URVJfUEVOIiwiRVZFTlRfU1RBUlQiLCJFVkVOVF9NT1ZFIiwiRVZFTlRfRU5EIiwiRVZFTlRfUkVMRUFTRSIsIkVWRU5UX1RPVUNIIiwiUkVBRFkiLCJwbHVnaW5zIiwiZ2VzdHVyZXMiLCJkZXRlcm1pbmVFdmVudFR5cGVzIiwib25Ub3VjaCIsImRldGVjdCIsInV0aWxzIiwiZGVzdCIsIm1lcmdlIiwiY29udGV4dCIsImluU3RyIiwiaW5BcnJheSIsImV2ZXJ5IiwidG9BcnJheSIsImhhc1BhcmVudCIsImdldENlbnRlciIsInRvdWNoZXMiLCJwYWdlWCIsInBhZ2VZIiwiY2xpZW50WCIsImNsaWVudFkiLCJ0b3VjaCIsImdldFZlbG9jaXR5IiwiZGVsdGFYIiwiZGVsdGFZIiwiYWJzIiwiZ2V0QW5nbGUiLCJ0b3VjaDEiLCJ0b3VjaDIiLCJ4IiwieSIsImF0YW4yIiwiUEkiLCJnZXREaXJlY3Rpb24iLCJnZXREaXN0YW5jZSIsInNxcnQiLCJnZXRTY2FsZSIsImVuZCIsImdldFJvdGF0aW9uIiwiaXNWZXJ0aWNhbCIsImRpcmVjdGlvbiIsInNldFByZWZpeGVkQ3NzIiwicHJlZml4ZXMiLCJ0b0NhbWVsQ2FzZSIsInRvZ2dsZUJlaGF2aW9yIiwiZmFsc2VGbiIsInVzZXJTZWxlY3QiLCJvbnNlbGVjdHN0YXJ0IiwidXNlckRyYWciLCJvbmRyYWdzdGFydCIsImhvb2siLCJ0eXBlcyIsImV2ZW50VHlwZSIsIm9uVG91Y2hIYW5kbGVyIiwiZXYiLCJzcmNUeXBlIiwiaXNQb2ludGVyIiwiaXNNb3VzZSIsInRyaWdnZXJUeXBlIiwicHJldmVudE1vdXNlRXZlbnRzIiwiYnV0dG9uIiwic2hvdWxkRGV0ZWN0IiwiYnV0dG9ucyIsIm1hdGNoVHlwZSIsInVwZGF0ZVBvaW50ZXIiLCJkb0RldGVjdCIsInRvdWNoTGlzdCIsImdldFRvdWNoTGlzdCIsInRvdWNoTGlzdExlbmd0aCIsInRyaWdnZXJDaGFuZ2UiLCJ0cmlnZ2VyIiwiY2hhbmdlZExlbmd0aCIsImNoYW5nZWRUb3VjaGVzIiwic3RhcnRlZCIsImV2RGF0YSIsImNvbGxlY3RFdmVudERhdGEiLCJpZGVudGlmaWVycyIsImlkZW50aWZpZXIiLCJwb2ludGVyVHlwZSIsIkRhdGUiLCJub3ciLCJzcmNFdmVudCIsInByZXZlbnRNYW5pcHVsYXRpb24iLCJzdG9wRGV0ZWN0IiwidG91Y2hsaXN0IiwicG9pbnRlcnMiLCJwb2ludGVyIiwicG9pbnRlckV2ZW50IiwicG9pbnRlcklkIiwicHQiLCJNU1BPSU5URVJfVFlQRV9NT1VTRSIsIk1TUE9JTlRFUl9UWVBFX1RPVUNIIiwiTVNQT0lOVEVSX1RZUEVfUEVOIiwicmVzZXRMaXN0IiwiZGV0ZWN0aW9uIiwic3RhcnREZXRlY3QiLCJpbnN0IiwiZXZlbnREYXRhIiwic3RvcHBlZCIsImV4dGVuZEV2ZW50RGF0YSIsImluc3RPcHRpb25zIiwidHJpZ2dlckdlc3R1cmUiLCJlbmFibGVkIiwibGFzdEV2ZW50IiwicHJldmlvdXMiLCJnZXRDYWxjdWxhdGVkRGF0YSIsImNlbnRlciIsImN1ciIsInJlY2FsYyIsImNhbGNFdiIsImxhc3RDYWxjRXZlbnQiLCJjYWxjRGF0YSIsImxhc3RDYWxjRGF0YSIsInRpbWVTdGFtcCIsImZ1dHVyZUNhbGNFdmVudCIsInZlbG9jaXR5IiwiYW5nbGUiLCJ2ZWxvY2l0eVgiLCJ2ZWxvY2l0eVkiLCJpbnRlcmltQW5nbGUiLCJpbnRlcmltRGlyZWN0aW9uIiwic3RhcnRFdiIsInN0YXJ0RXZlbnQiLCJsYXN0RXYiLCJsaXN0ZW5lck9wdGlvbnMiLCJiZWhhdmlvciIsImV2ZW50U3RhcnRIYW5kbGVyIiwiZXZlbnRIYW5kbGVycyIsIm9uRXZlbnQiLCJvZmZFdmVudCIsInRyaWdnZXJFdmVudCIsInN0YXRlIiwiZGlzcG9zZSIsImVoIiwidHJpZ2dlcmVkIiwiZHJhZ0dlc3R1cmUiLCJkcmFnTWF4VG91Y2hlcyIsImRyYWdNaW5EaXN0YW5jZSIsInN0YXJ0Q2VudGVyIiwiZHJhZ0Rpc3RhbmNlQ29ycmVjdGlvbiIsImZhY3RvciIsImRyYWdMb2NrVG9BeGlzIiwiZHJhZ0xvY2tNaW5EaXN0YW5jZSIsImxhc3REaXJlY3Rpb24iLCJkcmFnQmxvY2tWZXJ0aWNhbCIsImRyYWdCbG9ja0hvcml6b250YWwiLCJEcmFnIiwiR2VzdHVyZSIsInJlbGVhc2VHZXN0dXJlIiwidGltZXIiLCJob2xkR2VzdHVyZSIsImhvbGRUaW1lb3V0IiwiaG9sZFRocmVzaG9sZCIsIkhvbGQiLCJSZWxlYXNlIiwiSW5maW5pdHkiLCJTd2lwZSIsInN3aXBlR2VzdHVyZSIsInN3aXBlTWluVG91Y2hlcyIsInN3aXBlTWF4VG91Y2hlcyIsInN3aXBlVmVsb2NpdHlYIiwic3dpcGVWZWxvY2l0eVkiLCJoYXNNb3ZlZCIsInRhcEdlc3R1cmUiLCJzaW5jZVByZXYiLCJkaWREb3VibGVUYXAiLCJ0YXBNYXhEaXN0YW5jZSIsInRhcE1heFRpbWUiLCJkb3VibGVUYXBJbnRlcnZhbCIsImRvdWJsZVRhcERpc3RhbmNlIiwidGFwQWx3YXlzIiwiVGFwIiwiVG91Y2giLCJ0b3VjaEdlc3R1cmUiLCJwcmV2ZW50TW91c2UiLCJ0cmFuc2Zvcm1HZXN0dXJlIiwic2NhbGVUaHJlc2hvbGQiLCJzY2FsZSIsInJvdGF0aW9uVGhyZXNob2xkIiwicm90YXRpb24iLCJ0cmFuc2Zvcm1NaW5TY2FsZSIsInRyYW5zZm9ybU1pblJvdGF0aW9uIiwiVHJhbnNmb3JtIiwicmVhZHlNYXAiLCJxdWV1ZU1hcCIsImlzQ29udGVudFJlYWR5Iiwic2V0Q29udGVudFJlYWR5IiwiYWRkQ2FsbGJhY2siLCJjb25zdW1lUXVldWUiLCJjb250ZW50UmVhZHkiLCJUb2FzdFF1ZXVlIiwidGhlbiIsIl9zZXRBdHRyaWJ1dGVzIiwiX25vcm1hbGl6ZUFyZ3VtZW50cyIsIm1lc3NhZ2VIVE1MIiwiYnV0dG9uTGFiZWxzIiwiYnV0dG9uTGFiZWwiLCJwYXJhbSIsIm5vdGlmaWNhdGlvbiIsIl9jcmVhdGVBbGVydERpYWxvZyIsImlucHV0U3RyaW5nIiwiaXNQcm9tcHQiLCJpbnB1dFR5cGUiLCJwbGFjZWhvbGRlciIsImRlZmF1bHRWYWx1ZSIsImxhYmVsIiwicHJpbWFyeUJ1dHRvbkluZGV4IiwiX2Rlc3Ryb3lEaWFsb2ciLCJkaWFsb2ciLCJvbkRpYWxvZ0NhbmNlbCIsImRlc3Ryb3kiLCJtYXNrQ29sb3IiLCJ0aXRsZSIsImlucHV0Iiwic3VibWl0T25FbnRlciIsIm9ua2V5cHJlc3MiLCJyZXNvbHZlVmFsdWUiLCJmb290ZXIiLCJidXR0b25FbGVtZW50Iiwib25jbGljayIsImNvbXBpbGUiLCJzaG93IiwiYXV0b2ZvY3VzIiwic3RyTGVuZ3RoIiwiZm9jdXMiLCJpbmNsdWRlcyIsInNldFNlbGVjdGlvblJhbmdlIiwiYWxlcnQiLCJjb25maXJtIiwicHJvbXB0IiwidG9hc3QiLCJvcmlnaW5hbEhpZGUiLCJmaW5pc2giLCJfdG9hc3QiLCJjaGVja09wdGlvbnMiLCJlcnIiLCJpbnN0YW5jZU9mIiwiZCIsImFjdGlvblNoZWV0IiwiY2xhc3MiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiaXRlbSIsImJ1dHRvbk9wdGlvbnMiLCJkZXN0cnVjdGl2ZSIsImljb24iLCJfaXNQb3J0cmFpdCIsImlzUG9ydHJhaXQiLCJfb25PcmllbnRhdGlvbkNoYW5nZSIsIl9vblJlc2l6ZSIsImlubmVySGVpZ2h0IiwiaW5uZXJXaWR0aCIsIl9pbnN0YWxsSXNQb3J0cmFpdEltcGxlbWVudGF0aW9uIiwiZW1pdCIsIm9yaWVudGF0aW9uIiwibkl0ZXIiLCJpbnRlcnZhbCIsInNldEludGVydmFsIiwiaCIsIl9pbml0IiwibW9kaWZpZXJzIiwic29mdHdhcmVLZXlib2FyZCIsIl92aXNpYmxlIiwib25TaG93Iiwib25IaWRlIiwiYmluZEV2ZW50cyIsIktleWJvYXJkIiwib25zaG93Iiwib25oaWRlIiwidmlzaWJsZSIsImlzVmlzaWJsZSIsIm5vUGx1Z2luRXJyb3IiLCJnZW5lcmF0ZUlkIiwiRG9vckxvY2siLCJfbG9ja0xpc3QiLCJfd2FpdExpc3QiLCJfbG9nIiwibG9nIiwidW5sb2NrIiwiX3VubG9jayIsIl90cnlUb0ZyZWVXYWl0TGlzdCIsImlzTG9ja2VkIiwibG9hZFBhZ2UiLCJwYWdlRWxlbWVudCIsInVubG9hZFBhZ2UiLCJfZGVzdHJveSIsIlBhZ2VMb2FkZXIiLCJsb2FkZXIiLCJ1bmxvYWRlciIsIl9sb2FkZXIiLCJfdW5sb2FkZXIiLCJkZWZhdWx0UGFnZUxvYWRlciIsImluc3RhbnRQYWdlTG9hZGVyIiwic2VsZWN0IiwibG9jYXRpb24iLCJzZWFyY2giLCJ3YWl0RGV2aWNlUmVhZHkiLCJyZWFkeUVycm9yIiwiaXNSZWFkeSIsIl9yZWFkeUxvY2siLCJ3YWl0VW5sb2NrIiwic2V0RGVmYXVsdERldmljZUJhY2tCdXR0b25MaXN0ZW5lciIsInNldExpc3RlbmVyIiwiZGlzYWJsZURldmljZUJhY2tCdXR0b25IYW5kbGVyIiwiZGlzYWJsZSIsImVuYWJsZUF1dG9TdGF0dXNCYXJGaWxsIiwiZGlzYWJsZUF1dG9TdGF0dXNCYXJGaWxsIiwibW9ja1N0YXR1c0JhciIsIm1vY2siLCJkaXNhYmxlQW5pbWF0aW9ucyIsImVuYWJsZUFuaW1hdGlvbnMiLCJfZGlzYWJsZVdhcm5pbmdzIiwiX2VuYWJsZVdhcm5pbmdzIiwiZGlzYWJsZUF1dG9TdHlsaW5nIiwiZW5hYmxlQXV0b1N0eWxpbmciLCJkaXNhYmxlSWNvbkF1dG9QcmVmaXgiLCJJY29uIiwic2V0QXV0b1ByZWZpeCIsImZvcmNlUGxhdGZvcm1TdHlsaW5nIiwibmV3UGxhdGZvcm0iLCJfcGxhdGZvcm1VcGRhdGUiLCJfdXBkYXRlUG9zaXRpb24iLCJwcmVsb2FkIiwiYWxsIiwibGluayIsImNyZWF0ZVBvcG92ZXIiLCJjcmVhdGVEaWFsb2ciLCJjcmVhdGVBbGVydERpYWxvZyIsIm9wZW5BY3Rpb25TaGVldCIsInJlc29sdmVMb2FkaW5nUGxhY2Vob2xkZXIiLCJfcmVzb2x2ZUxvYWRpbmdQbGFjZWhvbGRlciIsInVubG9ja0RldmljZVJlYWR5IiwibG9jayIsImdldENTIiwiY3VycmVudFNjcmlwdCIsInNjcmlwdHMiLCJnZXRTY3JpcHRQYWdlIiwiZ2V0RWxlbWVudENsYXNzIiwiQmFzZUVsZW1lbnQiLCJUZW1wbGF0ZUVsZW1lbnQiLCJvdXRlckhUTUwiLCJidWJibGVzIiwiVGVtcGxhdGUiLCJJZkVsZW1lbnQiLCJfaXNBbGxvd2VkUGxhdGZvcm0iLCJjb25kaXRpb25hbE9yaWVudGF0aW9uIiwiY3VycmVudE9yaWVudGF0aW9uIiwiSWYiLCJCYXNlQW5pbWF0b3IiLCJwcm9wZXJ0aWVzIiwiZXh0ZW5kZWRBbmltYXRvciIsIm5ld0FuaW1hdG9yIiwiaVBob25lWFBhdGNoIiwiaXNJUGhvbmVYUG9ydHJhaXRQYXRjaEFjdGl2ZSIsImlzSVBob25lWExhbmRzY2FwZVBhdGNoQWN0aXZlIiwiZ2V0U2FmZUFyZWFMZW5ndGhzIiwic2FmZUFyZWFMZW5ndGhzIiwiZ2V0U2FmZUFyZWFET01SZWN0Iiwic2FmZUFyZWFSZWN0IiwiQWN0aW9uU2hlZXRBbmltYXRvciIsIk1EQWN0aW9uU2hlZXRBbmltYXRvciIsIm1hc2tUaW1pbmciLCJtYXNrRHVyYXRpb24iLCJhbmltaXQiLCJfbWFzayIsIm9wYWNpdHkiLCJfc2hlZXQiLCJkZWZhdWx0IiwidHJhbnNmb3JtIiwiSU9TQWN0aW9uU2hlZXRBbmltYXRvciIsImxpZnRBbW91bnQiLCJjbGllbnRIZWlnaHQiLCJCYXNlRGlhbG9nRWxlbWVudCIsInNob3VsZFNob3ciLCJfZG9vckxvY2siLCJfY2FuY2VsIiwiX3NlbGZDYW1lbE5hbWUiLCJfZGVmYXVsdERCQiIsImNhbGxQYXJlbnRIYW5kbGVyIiwiX2FuaW1hdG9yRmFjdG9yeSIsIl91cGRhdGVBbmltYXRvckZhY3RvcnkiLCJfcnVubmluZyIsIl9zZXRWaXNpYmxlIiwicGFyc2VBbmltYXRpb25PcHRpb25zU3RyaW5nIiwiY2FuY2VsZWQiLCJfdG9nZ2xlU3R5bGUiLCJiYWNrZ3JvdW5kQ29sb3IiLCJvbkRldmljZUJhY2tCdXR0b24iLCJfYmFja0J1dHRvbkhhbmRsZXIiLCJvbk1vZGlmaWVyQ2hhbmdlZCIsIl9zY2hlbWUiLCJfdXBkYXRlTWFzayIsIl9hbmltYXRvckRpY3QiLCJBY3Rpb25TaGVldEVsZW1lbnQiLCJfY29tcGlsZSIsInNoZWV0IiwiX3RpdGxlIiwibWFzayIsImluaXRNb2RpZmllciIsIl91cGRhdGVUaXRsZSIsIkFjdGlvblNoZWV0IiwiQmFzZUJ1dHRvbkVsZW1lbnQiLCJfZGVmYXVsdENsYXNzTmFtZSIsIl9pY29uIiwiX3VwZGF0ZVJpcHBsZSIsIl9yaXBwbGVPcHQiLCJfdXBkYXRlSWNvbiIsIkFjdGlvblNoZWV0QnV0dG9uRWxlbWVudCIsIkFjdGlvblNoZWV0QnV0dG9uIiwiQWxlcnREaWFsb2dBbmltYXRvciIsIkFuZHJvaWRBbGVydERpYWxvZ0FuaW1hdG9yIiwiX2RpYWxvZyIsIklPU0FsZXJ0RGlhbG9nQW5pbWF0b3IiLCJBbGVydERpYWxvZ0VsZW1lbnQiLCJBbGVydERpYWxvZyIsIkFsZXJ0RGlhbG9nQnV0dG9uRWxlbWVudCIsIkFsZXJ0RGlhbG9nQnV0dG9uIiwiZGVmYXVsdENsYXNzTmFtZSIsIkJhY2tCdXR0b25FbGVtZW50IiwiX29wdGlvbnMiLCJfYm91bmRPbkNsaWNrIiwiX29uQ2xpY2siLCJtZEJhY2tCdXR0b25JY29uIiwiaW9zQmFja0J1dHRvbkljb24iLCJvbkNsaWNrIiwicG9wUGFnZSIsIkJhY2tCdXR0b24iLCJCb3R0b21Ub29sYmFyRWxlbWVudCIsIkJvdHRvbVRvb2xiYXIiLCJCdXR0b25FbGVtZW50IiwiQnV0dG9uIiwiQ2FyZEVsZW1lbnQiLCJDYXJkIiwiQ2Fyb3VzZWxJdGVtRWxlbWVudCIsIkNhcm91c2VsSXRlbSIsImRpcmVjdGlvbk1hcCIsIlN3aXBlciIsIkZBTFNFIiwiZ2V0RWxlbWVudCIsInNjcm9sbEhvb2siLCJpdGVtU2l6ZSIsImdldEF1dG9TY3JvbGxSYXRpbyIsInJhdGlvIiwic2hvdWxkQmxvY2siLCJvbkRyYWdTdGFydCIsIm9uRHJhZyIsIm9uRHJhZ0VuZCIsIm9uUmVzaXplIiwiX3Nob3VsZEZpeFNjcm9sbCIsInN3aXBlYWJsZSIsImF1dG9SZWZyZXNoIiwiaW5pdGlhbGl6ZWQiLCJibG9ja2VyIiwiX211dGF0aW9uT2JzZXJ2ZXIiLCJ1cGRhdGVTd2lwZWFibGUiLCJ1cGRhdGVBdXRvUmVmcmVzaCIsIl9zY3JvbGwiLCJfb2Zmc2V0IiwiX2xhc3RBY3RpdmVJbmRleCIsIl91cGRhdGVMYXlvdXQiLCJfc2V0dXBJbml0aWFsSW5kZXgiLCJzZXR1cFJlc2l6ZSIsIml0ZW1OdW1TaXplIiwiX3Jlc2V0Iiwic2V0QWN0aXZlSW5kZXgiLCJyb3VuZCIsInRhcmdldFNpemUiLCJOdW1iZXIiLCJnZXRJbml0aWFsSW5kZXgiLCJpdGVtQ291bnQiLCJfc2Nyb2xsVG8iLCJfc2V0U3dpcGluZyIsInNjcm9sbCIsIm1heFNjcm9sbCIsIl9jaGFuZ2VUbyIsImNvdW50Iiwic2l6ZSIsInNob3VsZFVwZGF0ZSIsInNob3VsZFdhdGNoIiwibmV3U2l6ZSIsImJsb2NrIiwicG9pbnRlckV2ZW50cyIsImlzRmlyc3QiLCJpc092ZXJTY3JvbGxhYmxlIiwiaXNMYXN0IiwiX2lnbm9yZURyYWciLCJjb25zdW1lZCIsImNvbnN1bWUiLCJfY2FuQ29uc3VtZUdlc3R1cmUiLCJzdGFydFgiLCJkaXN0RnJvbUVkZ2UiLCJnZXRCdWJibGVXaWR0aCIsIl9zdGFydGVkIiwidG9nZ2xlQmxvY2tlciIsIl9jb250aW51ZWQiLCJfZ2V0RGVsdGEiLCJ0aHJvdHRsZSIsIm5vcm1hbGl6ZWRTY3JvbGwiLCJfbm9ybWFsaXplU2Nyb2xsIiwiX3N0YXJ0TW9tZW50dW1TY3JvbGwiLCJfa2lsbE92ZXJTY3JvbGwiLCJfZ2V0VmVsb2NpdHkiLCJtYXRjaGVzRGlyZWN0aW9uIiwiZE0iLCJkaXIiLCJuZXh0U2Nyb2xsIiwiX2dldEF1dG9TY3JvbGwiLCJzd2lwZSIsImtpbGxPdmVyU2Nyb2xsIiwib3ZlclNjcm9sbEhvb2siLCJhY3RpdmVJbmRleCIsImdldEFjdGl2ZUluZGV4IiwibGFzdEFjdGl2ZUluZGV4IiwiY2hhbmdlIiwicHJlQ2hhbmdlSG9vayIsInBvc3RDaGFuZ2VIb29rIiwidG9GaXhlZCIsIl9nZXRUcmFuc2Zvcm0iLCJvZmZzZXQiLCJpc0F1dG9TY3JvbGxhYmxlIiwibGFzdFNjcm9sbCIsInNjcm9sbFJhdGlvIiwiX3RhcmdldFNpemUiLCJfaXRlbU51bVNpemUiLCJyZWZyZXNoSG9vayIsImF4aXMiLCJ0M2QiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJpc0NlbnRlcmVkIiwiX2NhbGN1bGF0ZUl0ZW1TaXplIiwiQ2Fyb3VzZWxFbGVtZW50IiwiX3N3aXBlciIsImF1dG9TY3JvbGxSYXRpbyIsInZlcnRpY2FsIiwib3ZlcnNjcm9sbGFibGUiLCJjZW50ZXJlZCIsImF1dG9TY3JvbGwiLCJfb25PdmVyU2Nyb2xsIiwiX29uQ2hhbmdlIiwiX29uUmVmcmVzaCIsIl9vblN3aXBlIiwidXBkYXRlSXRlbVNpemUiLCJ3YWl0Rm9yQWN0aW9uIiwiY2Fyb3VzZWwiLCJpdGVtU2l6ZUF0dHIiLCJwYXJzZUZsb2F0IiwiQ2Fyb3VzZWwiLCJDb2xFbGVtZW50IiwiX3VwZGF0ZVdpZHRoIiwiQ29sIiwiRGlhbG9nQW5pbWF0b3IiLCJBbmRyb2lkRGlhbG9nQW5pbWF0b3IiLCJJT1NEaWFsb2dBbmltYXRvciIsImJvZHlIZWlnaHQiLCJTbGlkZURpYWxvZ0FuaW1hdG9yIiwiRGlhbG9nRWxlbWVudCIsIkRpYWxvZyIsIkZhYkVsZW1lbnQiLCJfaGlkZSIsIl9zaG93IiwiX21hbnVhbGx5SGlkZGVuIiwiX3RvZ2dsZSIsImlzQm90dG9tIiwidHJhbnNsYXRlIiwiZmFiT2Zmc2V0IiwiRmFiIiwiR2VzdHVyZURldGVjdG9yRWxlbWVudCIsImF1dG9QcmVmaXgiLCJJY29uRWxlbWVudCIsIl9jbGVhbkNsYXNzQXR0cmlidXRlIiwiX3VwZGF0ZSIsIl9idWlsZENsYXNzQW5kU3R5bGUiLCJfcGFyc2VBdHRyIiwiYXR0ciIsIm1kIiwibGFzdEljb24iLCJsYXN0TW9kaWZpZXIiLCJfcHJlZml4SWNvbiIsImN1c3RvbVByZWZpeFJFIiwiaWNvbk5hbWUiLCJyZW1vdmVQcm9wZXJ0eSIsImZvbnRTaXplIiwiTGF6eVJlcGVhdERlbGVnYXRlIiwidXNlckRlbGVnYXRlIiwidGVtcGxhdGVFbGVtZW50IiwiX3VzZXJEZWxlZ2F0ZSIsIl90ZW1wbGF0ZUVsZW1lbnQiLCJfcmVuZGVyIiwibG9hZEl0ZW1FbGVtZW50IiwiY3JlYXRlSXRlbUNvbnRlbnQiLCJjb3VudEl0ZW1zIiwidXBkYXRlSXRlbUNvbnRlbnQiLCJjYWxjdWxhdGVJdGVtSGVpZ2h0IiwiZGVzdHJveUl0ZW0iLCJpdGVtSGVpZ2h0IiwiTGF6eVJlcGVhdFByb3ZpZGVyIiwid3JhcHBlckVsZW1lbnQiLCJkZWxlZ2F0ZSIsIl93cmFwcGVyRWxlbWVudCIsIl9kZWxlZ2F0ZSIsIl9pbnNlcnRJbmRleCIsIl9wYWdlQ29udGVudCIsIl9maW5kUGFnZUNvbnRlbnRFbGVtZW50IiwibGFzdFNjcm9sbFRvcCIsInNjcm9sbFRvcCIsInBhZGRpbmciLCJfdG9wUG9zaXRpb25zIiwiX3JlbmRlcmVkSXRlbXMiLCJfdW5rbm93bkl0ZW1IZWlnaHQiLCJfYWRkRXZlbnRMaXN0ZW5lcnMiLCJwYWdlQ29udGVudCIsIl9pdGVtSGVpZ2h0IiwidmlzaWJpbGl0eSIsInN0YXRpY0l0ZW1IZWlnaHQiLCJfZ2V0SXRlbUhlaWdodCIsImZvcmNlUmVuZGVyIiwiZm9yY2VTY3JvbGxEb3duIiwiZmlyc3RJdGVtSW5kZXgiLCJfZmlyc3RJdGVtUmVuZGVyZWQiLCJfY2FsY3VsYXRlUmVuZGVyZWRIZWlnaHQiLCJmb3JjZUZpcnN0SW5kZXgiLCJfcmVtb3ZlQWxsRWxlbWVudHMiLCJmb3JjZUxhc3RJbmRleCIsIl9jaGVja0l0ZW1IZWlnaHQiLCJpc1Njcm9sbFVwIiwia2VlcCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsIl9jb3VudEl0ZW1zIiwiX2NhbGN1bGF0ZVN0YXJ0SW5kZXgiLCJoYXNSZW5kZXJGdW5jdGlvbiIsIl9yZW5kZXJFbGVtZW50IiwiX3JlbW92ZUVsZW1lbnQiLCJ1cGRhdGVJdGVtIiwibGFzdEl0ZW1JbmRleCIsIl9sYXN0SXRlbVJlbmRlcmVkIiwiX3JlY2FsY3VsYXRlVG9wUG9zaXRpb25zIiwibWlkZGxlIiwiaW1tZWRpYXRlIiwiY2FsbE5vdyIsIl9kZWJvdW5jZSIsIl9ib3VuZE9uQ2hhbmdlIiwiX2JvdW5kRG91YmxlRmlyZU9uVG91Y2hlbmQiLCJfcGFyZW50RWxlbWVudCIsIl9yZW1vdmVFdmVudExpc3RlbmVycyIsInBhZGRpbmdUb3AiLCJMYXp5UmVwZWF0RWxlbWVudCIsIl9sYXp5UmVwZWF0UHJvdmlkZXIiLCJMYXp5UmVwZWF0IiwiTGlzdEhlYWRlckVsZW1lbnQiLCJMaXN0SGVhZGVyIiwiTGlzdFRpdGxlRWxlbWVudCIsIkxpc3RUaXRsZSIsIkxpc3RJdGVtQW5pbWF0b3IiLCJsaXN0SXRlbSIsIlNsaWRlTGlzdEl0ZW1BbmltYXRvciIsIl9hbmltYXRlRXhwYW5zaW9uIiwic2hvdWxkT3BlbiIsIm9sZEhlaWdodCIsImV4cGFuZGFibGVDb250ZW50Iiwib2xkRGlzcGxheSIsImNvbXB1dGVkU3R5bGUiLCJleHBhbnNpb25PcGVuVHJhbnNpdGlvbiIsInBhZGRpbmdCb3R0b20iLCJpY29uT3BlblRyYW5zaXRpb24iLCJyZXZlcnNlIiwiZXhwYW5kQ2hldnJvbiIsIkxpc3RJdGVtRWxlbWVudCIsInRvZ2dsZUV4cGFuc2lvbiIsIl9zaG91bGRJZ25vcmVUYXAiLCJzaG93RXhwYW5zaW9uIiwiaGlkZUV4cGFuc2lvbiIsInRvcENvbnRlbnQiLCJjZW50ZXJDb250ZW50IiwiX3RvcCIsImNoZXZyb24iLCJfZXhwYW5kaW5nIiwiZXhwYW5kZWQiLCJfc2V0dXBMaXN0ZW5lcnMiLCJfb3JpZ2luYWxCYWNrZ3JvdW5kQ29sb3IiLCJ0YXBwZWQiLCJfb25Ub3VjaCIsIl9vblJlbGVhc2UiLCJfb25EcmFnIiwidG91Y2hTdHlsZSIsImJveFNoYWRvdyIsIkxpc3RJdGVtIiwiTGlzdEVsZW1lbnQiLCJMaXN0IiwiSU5QVVRfQVRUUklCVVRFUyIsIkJhc2VJbnB1dEVsZW1lbnQiLCJfYm91bmREZWxlZ2F0ZUV2ZW50IiwiX2RlbGVnYXRlRXZlbnQiLCJfdGVtcGxhdGUiLCJfc2V0SW5wdXRJZCIsIl91cGRhdGVCb3VuZEF0dHJpYnV0ZXMiLCJfaW5wdXQiLCJibHVyIiwidG9JU09TdHJpbmciLCJJbnB1dEVsZW1lbnQiLCJfYm91bmRPbklucHV0IiwiX2JvdW5kT25Gb2N1c2luIiwiX3VwZGF0ZUxhYmVsIiwiX3VwZGF0ZUxhYmVsQ2xhc3MiLCJfaGVscGVyIiwiaW5uZXJUZXh0IiwiSW5wdXQiLCJCYXNlQ2hlY2tib3hFbGVtZW50IiwiY2hlY2tlZCIsIkNoZWNrYm94RWxlbWVudCIsIkNoZWNrYm94IiwiUmFkaW9FbGVtZW50IiwiUmFkaW8iLCJTZWFyY2hJbnB1dEVsZW1lbnQiLCJTZWFyY2hJbnB1dCIsIk1vZGFsQW5pbWF0b3IiLCJtb2RhbCIsIkZhZGVNb2RhbEFuaW1hdG9yIiwiTGlmdE1vZGFsQW5pbWF0b3IiLCJNb2RhbEVsZW1lbnQiLCJNb2RhbCIsIndpZHRoVG9QeCIsIm9mZnNldFdpZHRoIiwiU3dpcGVSZXZlYWwiLCJlbGVtZW50SGFuZGxlciIsImdldFRocmVzaG9sZCIsImdldFNpZGUiLCJoYW5kbGVHZXN0dXJlIiwiZ2VzdHVyZURldGVjdG9yIiwiaWdub3JlU3dpcGUiLCJfd2lkdGgiLCJfc3RhcnREaXN0YW5jZSIsIl9kaXN0YW5jZSIsImlzSW5pdGlhbFN0YXRlIiwiZGVsdGEiLCJzd2lwZU1pZCIsImlzU3dpcGVNYXgiLCJzd2lwZU1heCIsInN3aXBlTWluIiwiTmF2aWdhdG9yQW5pbWF0b3IiLCJlbnRlclBhZ2UiLCJsZWF2ZVBhZ2UiLCJJT1NTd2lwZU5hdmlnYXRvckFuaW1hdG9yIiwiZHVyYXRpb25SZXN0b3JlIiwiZHVyYXRpb25Td2lwZSIsInRpbWluZ1N3aXBlIiwicmVzdCIsIm9wdFN3aXBlIiwib3B0UmVzdG9yZSIsInN3aXBlU2hhZG93IiwiaXNEcmFnU3RhcnQiLCJ1bmJsb2NrIiwiYmFja2dyb3VuZE1hc2siLCJkZWNvbXAiLCJfZGVjb21wb3NlIiwiZW50ZXIiLCJsZWF2ZSIsIl9jYWxjdWxhdGVEZWx0YSIsInNob3VsZEFuaW1hdGVUb29sYmFyIiwiX3Nob3VsZEFuaW1hdGVUb29sYmFyIiwidG9vbGJhciIsIl9zYXZlU3R5bGUiLCJvdmVyZmxvd0VsZW1lbnQiLCJtYXhXaWR0aCIsImlzU3dpcGluZyIsIl9kcmFnU3RhcnRTZXR1cCIsInN3aXBlUmF0aW8iLCJib3R0b21Ub29sYmFyIiwiYmFja2dyb3VuZCIsInRvb2xiYXJDZW50ZXIiLCJiYWNrQnV0dG9uTGFiZWwiLCJvdGhlciIsIl9zYXZlZFN0eWxlIiwic2F2ZSIsInJlc3RvcmUiLCJfcmVzdG9yZVN0eWxlIiwidHJhbnNsYXRlM2QiLCJJT1NTbGlkZU5hdmlnYXRvckFuaW1hdG9yIiwiX2dldFRvb2xiYXJFbGVtZW50IiwiX2dldFRvb2xiYXJMZWZ0SXRlbXNFbGVtZW50IiwiX2dldFRvb2xiYXJSaWdodEl0ZW1zRWxlbWVudCIsImV4Y2x1ZGVCYWNrQnV0dG9uIiwiX2dldFRvb2xiYXJDZW50ZXJJdGVtc0VsZW1lbnQiLCJfZ2V0VG9vbGJhckJhY2tCdXR0b25JY29uRWxlbWVudCIsIl9nZXRUb29sYmFyQmFja0J1dHRvbkxhYmVsRWxlbWVudCIsIl9nZXRDb250ZW50RWxlbWVudCIsIl9nZXRCYWNrZ3JvdW5kRWxlbWVudCIsIl9nZXRCb3R0b21Ub29sYmFyRWxlbWVudCIsInRvb2xiYXJzIiwiZW50ZXJUb29sYmFyIiwibGVhdmVUb29sYmFyIiwiaXNTdGF0aWMiLCJpc01hdGVyaWFsIiwiaXNUcmFuc3BhcmVudCIsImRlY29tcG9zaXRpb24iLCJwYWdlUmVjdCIsImxhYmVsUmVjdCIsImJhY2tCdXR0b25JY29uIiwiZW50ZXJQYWdlVGFyZ2V0IiwibGVhdmVQYWdlVGFyZ2V0IiwiZW50ZXJQYWdlRGVjb21wb3NpdGlvbiIsImxlYXZlUGFnZURlY29tcG9zaXRpb24iLCJwb3BTd2lwZSIsIklPU0xpZnROYXZpZ2F0b3JBbmltYXRvciIsIklPU0ZhZGVOYXZpZ2F0b3JBbmltYXRvciIsIk1EU2xpZGVOYXZpZ2F0b3JBbmltYXRvciIsImJsYWNrTWFza09wYWNpdHkiLCJNRExpZnROYXZpZ2F0b3JBbmltYXRvciIsIm1hc2tDbGVhciIsIk1ERmFkZU5hdmlnYXRvckFuaW1hdG9yIiwidGltaW5nUG9wIiwiTm9uZU5hdmlnYXRvckFuaW1hdG9yIiwicmV3cml0YWJsZXMiLCJuYXZpZ2F0b3JFbGVtZW50IiwidmVyaWZ5UGFnZUVsZW1lbnQiLCJOYXZpZ2F0b3JFbGVtZW50IiwiX2lzUnVubmluZyIsIl9pbml0aWFsaXplZCIsIl9wYWdlTG9hZGVyIiwiX3BhZ2VNYXAiLCJfcGFnZSIsIl9vbkRldmljZUJhY2tCdXR0b24iLCJzd2lwZUFuaW1hdG9yIiwiX3N3aXBlIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsImFyZWEiLCJpc0JCIiwicHVzaGVkT3B0aW9ucyIsImFuaW1hdG9yRmFjdG9yeSIsImxvYWRlZCIsIl9nZXRQYWdlVGFyZ2V0IiwicHVzaFBhZ2UiLCJfdXBkYXRlTGFzdFBhZ2VCYWNrQnV0dG9uIiwidXBkYXRlIiwiX3ByZXBhcmVQYWdlQW5kT3B0aW9ucyIsInRpbWVzIiwiX3JlbW92ZVBhZ2VzIiwicG9wVXBkYXRlIiwidW5sb2FkIiwiX3BvcFBhZ2UiLCJfZW1pdFByZVBvcEV2ZW50IiwidXBkYXRlQmFja0J1dHRvbiIsInBhZ2VIVE1MIiwiX3B1c2hQYWdlIiwibG9hZCIsIl9lbWl0UHJlUHVzaEV2ZW50IiwicGFnZUxlbmd0aCIsIl9yZXBsYWNlUGFnZSIsInJlc29sdmVkVmFsdWUiLCJfbm9ybWFsaXplSW5kZXgiLCJpbnNlcnRQYWdlIiwibmV3UGFnZSIsIl9sYXN0SW5kZXhPZlBhZ2UiLCJwYWdlTmFtZSIsImlzQ2FuY2VsZWQiLCJfZW1pdFByZUV2ZW50IiwidGVtcGxhdGVIVE1MIiwicGFnZUxvYWRlciIsImxhc3RFbGVtZW50Q2hpbGQiLCJOYXZpZ2F0b3IiLCJUb29sYmFyRWxlbWVudCIsInNpYmxpbmdCYWNrZ3JvdW5kIiwic2libGluZ0NvbnRlbnQiLCJzZXRWaXNpYmlsaXR5IiwiX2Vuc3VyZVRvb2xiYXJJdGVtRWxlbWVudHMiLCJfZW5zdXJlVG9vbGJhckVsZW1lbnQiLCJUb29sYmFyIiwiUGFnZUVsZW1lbnQiLCJfZGVyaXZlSG9va3MiLCJfYmFja2dyb3VuZEVsZW1lbnQiLCJfZWxlbWVudFNob3VsZEJlTW92ZWQiLCJfdHJ5VG9GaWxsU3RhdHVzQmFyIiwiZml4ZWRFbGVtZW50cyIsIm9uSW5pdCIsImJhY2tCdXR0b24iLCJvdmVyTGltaXQiLCJzY3JvbGxIZWlnaHQiLCJfaW5maW5pdGVTY3JvbGxMaW1pdCIsIl9vbkluZmluaXRlU2Nyb2xsIiwiX2xvYWRpbmdDb250ZW50Iiwib25JbmZpbml0ZVNjcm9sbCIsIm9uRGVzdHJveSIsImV2ZW50cyIsIl9ib3VuZE9uU2Nyb2xsIiwiX29uU2Nyb2xsIiwiUGFnZSIsIlBvcG92ZXJBbmltYXRvciIsInBvcG92ZXIiLCJhbmltYXRpb25zIiwiX2FuaW1hdGUiLCJmYWRlIiwiTURGYWRlUG9wb3ZlckFuaW1hdG9yIiwiX2FuaW1hdGVBbGwiLCJpbiIsIklPU0ZhZGVQb3BvdmVyQW5pbWF0b3IiLCJwb3NpdGlvbnMiLCJQb3BvdmVyRWxlbWVudCIsIl9jdXJyZW50VGFyZ2V0IiwiX3Bvc2l0aW9uUG9wb3ZlciIsIl9jbGVhclN0eWxlcyIsInJhZGl1cyIsIl9yYWRpdXMiLCJjb250ZW50RWxlbWVudCIsIl9jb250ZW50IiwibWFyZ2luIiwiX21hcmdpbiIsInRhcmdldFJlY3QiLCJpc01EIiwiY292ZXIiLCJwYXJlbnREaW1lbnNpb25zIiwibWF4UG9zaXRpb25zIiwiYm90dG9tIiwidGFyZ2V0RGlzdGFuY2UiLCJ0YXJnZXRDZW50ZXJEaXN0YW5jZUZyb20iLCJfY2FsY3VsYXRlRGlyZWN0aW9ucyIsInByaW1hcnlEaXJlY3Rpb24iLCJwcmltYXJ5Iiwic2Vjb25kYXJ5RGlyZWN0aW9uIiwic2Vjb25kYXJ5IiwiX2N1cnJlbnREaXJlY3Rpb24iLCJzaXplTmFtZSIsImNvbnRlbnRTaXplIiwidGFyZ2V0QW5kQXJyb3dMZW5ndGgiLCJwcmltYXJ5T2Zmc2V0Iiwic2Vjb25kYXJ5T2Zmc2V0IiwiX3BvcG92ZXIiLCJfYXJyb3ciLCJoYXNEZWZhdWx0Q29udGFpbmVyIiwiYXJyb3ciLCJQb3BvdmVyIiwiSU5ERVQiLCJQcm9ncmVzc0JhckVsZW1lbnQiLCJfaXNDb21waWxlZCIsIl9wcmltYXJ5IiwiX3NlY29uZGFyeSIsIl91cGRhdGVEZXRlcm1pbmF0ZSIsIl91cGRhdGVWYWx1ZSIsImJhckVsZW1lbnQiLCJQcm9ncmVzc0JhciIsIlByb2dyZXNzQ2lyY3VsYXJFbGVtZW50IiwicGVyIiwic3ZnIiwiUHJvZ3Jlc3NDaXJjdWxhciIsIlNUQVRFX0lOSVRJQUwiLCJTVEFURV9QUkVBQ1RJT04iLCJTVEFURV9BQ1RJT04iLCJ0aHJvd1R5cGUiLCJQdWxsSG9va0VsZW1lbnQiLCJfb25EcmFnU3RhcnQiLCJfb25EcmFnRW5kIiwiX3NldFN0YXRlIiwibGluZUhlaWdodCIsIl9wYWdlRWxlbWVudCIsImRpc2FibGVkIiwidGFwWSIsIm1heFkiLCJkcmFnZ2FibGVBcmVhUmF0aW8iLCJfc3RhcnRTY3JvbGwiLCJfY3VycmVudFRyYW5zbGF0aW9uIiwidGgiLCJ0aHJlc2hvbGRIZWlnaHQiLCJfZmluaXNoIiwiX3RyYW5zbGF0ZVRvIiwiYW5pbWF0ZSIsIm9uQWN0aW9uIiwibm9FdmVudCIsImxhc3RTdGF0ZSIsIm1hcmdpblRvcCIsIl9vblB1bGwiLCJzY3JvbGxFbGVtZW50IiwiX2RyYWdMb2NrRGlzYWJsZWQiLCJzY3JvbGxUb2dnbGUiLCJnZFRvZ2dsZSIsIl9zZXRTdHlsZSIsIl9vbkFjdGlvbiIsIlB1bGxIb29rIiwiYWN0aXZlQ2xhc3NUb2tlbiIsIlJhbmdlRWxlbWVudCIsIl9vbk1vdXNlRG93biIsIl9vbk1vdXNlVXAiLCJfb25Ub3VjaFN0YXJ0IiwiX29uVG91Y2hFbmQiLCJfb25JbnB1dCIsIl9vbkRyYWdzdGFydCIsIl9vbkRyYWdlbmQiLCJfdXBkYXRlRGlzYWJsZWQiLCJmb2N1c1JpbmciLCJfZm9jdXNSaW5nIiwiYmFja2dyb3VuZFNpemUiLCJfcmF0aW8iLCJSYW5nZSIsIkFuaW1hdG9yQ1NTIiwiZmluYWwiLCJnZXRUaW1lIiwiaW5pdGlhbCIsInVwZGF0ZVN0eWxlcyIsImNsZWFyVGltZW91dCIsInRyYW5zaXRpb25EdXJhdGlvbiIsInN0b3BOZXh0IiwibmV3RHVyYXRpb24iLCJwYXNzZWQiLCJyZW1haW5pbmciLCJzcGVlZFVwVGltZSIsInN0b3AiLCJtaWxsaXNlY29uZHMiLCJzcGVlZCIsInRyYW5zaXRpb25Qcm9wZXJ0eSIsIl9vblN0b3BBbmltYXRpb25zIiwiX3F1ZXVlIiwiX2luZGV4Iiwic3RvcEFuaW1hdGlvbnMiLCJSaXBwbGVFbGVtZW50IiwiX29uVGFwIiwiX29uSG9sZCIsIl9hbmltYXRvciIsIl93YXZlIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsIl9iYWNrZ3JvdW5kIiwic2l6ZXMiLCJfZ2V0RWZmZWN0U2l6ZSIsIl9jZW50ZXIiLCJfbWluUiIsIl9jYWxjdWxhdGVDb29yZHMiLCJzdG9wQWxsIiwicmlwcGxlIiwiX3VwZGF0ZVBhcmVudCIsIl9yaXBwbGVBbmltYXRpb24iLCJfaG9sZGluZyIsIl9wYXJlbnROb2RlIiwicG4iLCJSaXBwbGUiLCJSb3dFbGVtZW50IiwiUm93IiwiU2VnbWVudEVsZW1lbnQiLCJfc2VnbWVudElkIiwiX3RhYmJhciIsIl9vblRhYmJhclByZUNoYW5nZSIsImdldEFjdGl2ZVRhYkluZGV4IiwiZ2V0QWN0aXZlQnV0dG9uSW5kZXgiLCJfc2V0Q2hlY2tlZCIsImZpcnN0RWxlbWVudENoaWxkIiwic2V0QWN0aXZlVGFiIiwiX3Bvc3RDaGFuZ2UiLCJTZWdtZW50IiwiU2VsZWN0RWxlbWVudCIsIl9kZXJpdmVHZXR0ZXJzIiwiX3NlbGVjdCIsInNlbCIsIm9wdGlvbiIsIlNlbGVjdCIsIlNwZWVkRGlhbEl0ZW1FbGVtZW50IiwiU3BlZWREaWFsSXRlbSIsIlNwZWVkRGlhbEVsZW1lbnQiLCJfaXRlbVNob3duIiwiX3VwZGF0ZURpcmVjdGlvbiIsInRvZ2dsZUl0ZW1zIiwiaW5saW5lIiwiX2ZhYiIsIml0ZW1zIiwiX2dldFRyYW5zbGF0ZSIsImhpZGVJdGVtcyIsInRvdGFsRGVsYXkiLCJpc09wZW4iLCJzaG93SXRlbXMiLCJTcGVlZERpYWwiLCJTcGxpdHRlckNvbnRlbnRFbGVtZW50Iiwib2xkQ29udGVudCIsIlNwbGl0dGVyQ29udGVudCIsIlNwbGl0dGVyTWFza0VsZW1lbnQiLCJfc2lkZXMiLCJzaWRlIiwibW9kZSIsIlNwbGl0dGVyTWFzayIsIlNwbGl0dGVyQW5pbWF0b3IiLCJzaWRlRWxlbWVudCIsInNwbGl0dGVyIiwiX3NpZGUiLCJfb3Bwb3NpdGVTaWRlIiwiY2xlYXJNYXNrIiwiT3ZlcmxheVNwbGl0dGVyQW5pbWF0b3IiLCJtaW51cyIsIlB1c2hTcGxpdHRlckFuaW1hdG9yIiwic2xpZGluZ0VsZW1lbnRzIiwiX3NsaWRpbmdFbGVtZW50cyIsIl9nZXRTbGlkaW5nRWxlbWVudHMiLCJSZXZlYWxTcGxpdHRlckFuaW1hdG9yIiwiX3NldFN0eWxlcyIsIl91bnNldFN0eWxlcyIsIl9nZW5lcmF0ZUJlaGluZFBhZ2VTdHlsZSIsImJlaGluZERpc3RhbmNlIiwiYmVoaW5kVHJhbnNmb3JtIiwiX2dldE1heFdpZHRoIiwibWVudVN0eWxlIiwiU3BsaXR0ZXJFbGVtZW50IiwiX2xheW91dCIsIl9nZXRTaWRlIiwiX29uTW9kZUNoYW5nZSIsIlNwbGl0dGVyIiwiU1BMSVRfTU9ERSIsIkNPTExBUFNFX01PREUiLCJDTE9TRURfU1RBVEUiLCJPUEVOX1NUQVRFIiwiQ0hBTkdJTkdfU1RBVEUiLCJzcGxpdHRlclNpZGVFbGVtZW50IiwiQ29sbGFwc2VEZXRlY3Rpb24iLCJjaGFuZ2VUYXJnZXQiLCJfdGFyZ2V0IiwiX29yaWVudGF0aW9uIiwiYWN0aXZhdGUiLCJfdXBkYXRlTW9kZSIsIl9tYXRjaCIsIl9xdWVyeVJlc3VsdCIsIm1hdGNoTWVkaWEiLCJhZGRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiU3BsaXR0ZXJTaWRlRWxlbWVudCIsIl9zdGF0ZSIsIl9sb2NrIiwiX2NvbGxhcHNlRGV0ZWN0aW9uIiwiX2FuaW1hdGlvbk9wdCIsImNsb3NlZCIsInZhbGlkRHJhZyIsIl9tb2RlIiwiX2lzT3RoZXJTaWRlT3BlbiIsImRlYWN0aXZhdGUiLCJ1cGRhdGVPcHRpb25zIiwiRklOQUxfU1RBVEUiLCJfZW1pdEV2ZW50IiwiX3VwZGF0ZUFuaW1hdGlvbiIsIlNwbGl0dGVyU2lkZSIsImxvY2F0aW9ucyIsIlN3aXRjaEVsZW1lbnQiLCJfbGFzdFRpbWVTdGFtcCIsIl9sb2NhdGlvbnMiLCJfc3RhcnRYIiwiX2VtaXRDaGFuZ2VFdmVudCIsImRlZmF1bHRFbGVtZW50Q2xhc3MiLCJfaGFuZGxlIiwiX2dldFBvc2l0aW9uIiwicHJldmlvdXNWYWx1ZSIsImNsaWNrIiwiU3dpdGNoIiwidGFiYmFyRWxlbWVudCIsImxlcnAiLCJ4MCIsIngxIiwidCIsIlRhYmJhckVsZW1lbnQiLCJfbG9hZEluYWN0aXZlIiwiX2dldEF1dG9TY3JvbGxSYXRpbyIsIl9vblByZUNoYW5nZSIsIl9vblBvc3RDaGFuZ2UiLCJfdGFiYmFyQm9yZGVyIiwiX3RhYmJhckVsZW1lbnQiLCJfdGFic1JlY3QiLCJ0YWJJdGVtIiwidGFicyIsIl9ub3JtYWxpemVFdmVudCIsImNhbmNlbCIsInNldEFjdGl2ZSIsInByZXZUYWIiLCJfYXV0b2dyb3ciLCJ0YWIiLCJ0YWJiYXIiLCJjcyIsImZpbGxlZCIsIm5leHRJbmRleCIsInByZXZJbmRleCIsIm5leHRUYWIiLCJzZXRUYWJiYXJWaXNpYmlsaXR5IiwiaXNBY3RpdmUiLCJpc1RvcCIsIl90YXJnZXRFbGVtZW50IiwiVGFiYmFyIiwiVGFiRWxlbWVudCIsIl9idXR0b24iLCJfdXBkYXRlQnV0dG9uQ29udGVudCIsImljb25XcmFwcGVyIiwiZml4IiwiYWN0aXZlIiwiX2hhc0xvYWRlZCIsIl9sb2FkZWRQYWdlIiwicGFnZVRhcmdldCIsInBhcmVudFRhcmdldCIsImR1bW15UGFnZSIsIl9sb2FkUGFnZUVsZW1lbnQiLCJUYWIiLCJUb2FzdEFuaW1hdG9yIiwiRmFkZVRvYXN0QW5pbWF0b3IiLCJBc2NlbmRUb2FzdEFuaW1hdG9yIiwibWVzc2FnZURlbGF5IiwiYXNjZW5zaW9uIiwiX2dldEZhYnMiLCJmYWIiLCJMaWZ0VG9hc3RBbmltYXRvciIsIkZhbGxUb2FzdEFuaW1hdG9yIiwiZmFsbEFtb3VudCIsImNsZWFuVXAiLCJjb3JyZWN0VG9wIiwiVG9hc3RFbGVtZW50IiwibWVzc2FnZUNsYXNzTmFtZSIsImJ1dHRvbkNsYXNzTmFtZSIsIlRvYXN0IiwiVG9vbGJhckJ1dHRvbkVsZW1lbnQiLCJUb29sYmFyQnV0dG9uIiwiX3N1cGVyU2VjcmV0T25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSxJQUFNQSxvQkFBb0JDLE9BQU9DLFdBQWpDOzs7Ozs7Ozs7O0lBU01DOzs7Ozs7c0JBTVU7OztTQUNQQyxpQkFBTCxHQUF5QixJQUF6QjtTQUNLQyxxQkFBTCxHQUE2QixLQUE3Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7MkJBYUtDLFVBQVU7VUFDWCxPQUFPQSxRQUFQLEtBQW9CLFFBQXhCLEVBQWtDO2FBQzNCRixpQkFBTCxHQUF5QkUsU0FBU0MsSUFBVCxHQUFnQkMsV0FBaEIsRUFBekI7Ozs7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\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/onsenui/js/onsenui.js\n// module id = rFcc\n// module chunks = 0"],"sourceRoot":""}